%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: MacOS Roman
%%Title: Under construction landing page h2 up-02.eps
%%Creator: Adobe Illustrator(R) 23.0
%%For: Ayib
%%CreationDate: 5/11/19
%%BoundingBox: 0 0 500 500
%%HiResBoundingBox: 0 0 500 500
%%CropBox: 0 0 500 500
%%LanguageLevel: 2
%%DocumentData: Clean7Bit
%ADOBeginClientInjection: DocumentHeader "AI11EPS"
%%AI8_CreatorVersion: 23.0.2
%AI9_PrintingDataBegin
%ADO_BuildNumber: Adobe Illustrator(R) 23.0.2 x567 R agm 4.7767 ct 5.4352
%ADO_ContainsXMP: MainFirst
%ADOEndClientInjection: DocumentHeader "AI11EPS"
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentFonts: 
%%DocumentNeededFonts: 
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentProcessColors:  Cyan Magenta Yellow Black
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EndComments
                                                                                                                                                                                                                              
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save globalStore
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 64 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch globalStore
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch globalStore
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr globalStore
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch globalStore
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr globalStore
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch globalStore
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch globalStore
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or globalStore
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq {pop /AGMCORE_currentbg load}{/Procedure get_res}ifelse
	dup currentblackgeneration eq {pop}{setblackgeneration}ifelse
	dup null eq {pop /AGMCORE_currentucr load}{/Procedure get_res}ifelse
	dup currentundercolorremoval eq {pop}{setundercolorremoval}ifelse
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0
%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.
%%Version: 2.31 0
10 dict begin
/Adobe_CoolType_Passthru currentdict def
/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known def
Adobe_CoolType_Core_Defined
	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}
if
userdict/Adobe_CoolType_Core 70 dict dup begin put
/Adobe_CoolType_Version 2.31 def
/Level2?
	systemdict/languagelevel known dup
		{pop systemdict/languagelevel get 2 ge}
	if def
Level2? not
	{
	/currentglobal false def
	/setglobal/pop load def
	/gcheck{pop false}bind def
	/currentpacking false def
	/setpacking/pop load def
	/SharedFontDirectory 0 dict def
	}
if
currentpacking
true setpacking
currentglobal false setglobal
userdict/Adobe_CoolType_Data 2 copy known not
	{2 copy 10 dict put}
if
get
	 begin
	/@opStackCountByLevel 32 dict def
	/@opStackLevel 0 def
	/@dictStackCountByLevel 32 dict def
	/@dictStackLevel 0 def
	 end
setglobal
currentglobal true setglobal
userdict/Adobe_CoolType_GVMFonts known not
	{userdict/Adobe_CoolType_GVMFonts 10 dict put}
if
setglobal
currentglobal false setglobal
userdict/Adobe_CoolType_LVMFonts known not
	{userdict/Adobe_CoolType_LVMFonts 10 dict put}
if
setglobal
/ct_VMDictPut
	{
	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse
	3 1 roll put
	}bind def
/ct_VMDictUndef
	{
	dup Adobe_CoolType_GVMFonts exch known
		{Adobe_CoolType_GVMFonts exch undef}
		{
			dup Adobe_CoolType_LVMFonts exch known
			{Adobe_CoolType_LVMFonts exch undef}
			{pop}
			ifelse
		}ifelse
	}bind def
/ct_str1 1 string def
/ct_xshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_yshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0 exch
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_xyshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			{_ct_na _ct_i 1 add get}stopped 
			{pop pop pop}
			{
				_ct_x _ct_y moveto
				rmoveto
			}
			ifelse
		}
		ifelse
		/_ct_i _ct_i 2 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def
/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def
/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind def
currentglobal true setglobal
/ct_T3Defs
{
/BuildChar
{
	1 index/Encoding get exch get
	1 index/BuildGlyph get exec
}bind def
/BuildGlyph
{
	exch begin
	GlyphProcs exch get exec
	end
}bind def
}bind def
setglobal
/@_SaveStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@vmState currentglobal def false setglobal
		@opStackCountByLevel
		@opStackLevel
		2 copy known not
			{
			2 copy
			3 dict dup/args
			7 index
			5 add array put
			put get
			}
			{
			get dup/args get dup length 3 index lt
				{
				dup length 5 add array exch
				1 index exch 0 exch putinterval
				1 index exch/args exch put
				}
				{pop}
			ifelse
			}
		ifelse
			begin
			count 1 sub
			1 index lt
				{pop count}
			if
			dup/argCount exch def
			dup 0 gt
				{
				args exch 0 exch getinterval 
			astore pop
				}
				{pop}
			ifelse
			count
			/restCount exch def
			end
		/@opStackLevel @opStackLevel 1 add def
		countdictstack 1 sub
		@dictStackCountByLevel exch @dictStackLevel exch put
		/@dictStackLevel @dictStackLevel 1 add def
		@vmState setglobal
		end
	}bind def
/@_RestoreStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		@opStackCountByLevel @opStackLevel get
			begin
			count restCount sub dup 0 gt
				{{pop}repeat}
				{pop}
			ifelse
			args 0 argCount getinterval{}forall
			end
		/@dictStackLevel @dictStackLevel 1 sub def
		@dictStackCountByLevel @dictStackLevel get
		end
	countdictstack exch sub dup 0 gt
		{{end}repeat}
		{pop}
	ifelse
	}bind def
/@_PopStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		/@dictStackLevel @dictStackLevel 1 sub def
		end
	}bind def
/@Raise
	{
	exch cvx exch errordict exch get exec
	stop
	}bind def
/@ReRaise
	{
	cvx $error/errorname get errordict exch get exec
	stop
	}bind def
/@Stopped
	{
	0 @#Stopped
	}bind def
/@#Stopped
	{
	@_SaveStackLevels
	stopped
		{@_RestoreStackLevels true}
		{@_PopStackLevels false}
	ifelse
	}bind def
/@Arg
	{
	Adobe_CoolType_Data
		begin
		@opStackCountByLevel @opStackLevel 1 sub get
		begin
		args exch
		argCount 1 sub exch sub get
		end
		end
	}bind def
currentglobal true setglobal
/CTHasResourceForAllBug
	Level2?
		{
		1 dict dup
				/@shouldNotDisappearDictValue true def
				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put
				begin
				count @_SaveStackLevels
					{(*){pop stop}128 string/Category resourceforall}
				stopped pop
				@_RestoreStackLevels
				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll
					{
						 /@shouldNotDisappearDictValue known
								{
										 {
												end
												currentdict 1 index eq
													{pop exit}
												if
										 }
									 loop
								}
						 if
					}
					{
						 pop
						 end
					}
				ifelse
		}
		{false}
	ifelse
	def
true setglobal
/CTHasResourceStatusBug
	Level2?
		{
		mark
			{/steveamerige/Category resourcestatus}
		stopped
			{cleartomark true}
			{cleartomark currentglobal not}
		ifelse
		}
		{false}
	ifelse
	def
setglobal
/CTResourceStatus
		{
		mark 3 1 roll
		/Category findresource
			begin
			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
				{cleartomark false}
				{{3 2 roll pop true}{cleartomark false}ifelse}
			ifelse
			end
		}bind def
/CTWorkAroundBugs
	{
	Level2?
		{
		/cid_PreLoad/ProcSet resourcestatus
			{
			pop pop
			currentglobal
			mark
				{
				(*)
					{
					dup/CMap CTHasResourceStatusBug
						{CTResourceStatus}
						{resourcestatus}
					ifelse
						{
						pop dup 0 eq exch 1 eq or
							{
							dup/CMap findresource gcheck setglobal
							/CMap undefineresource
							}
							{
							pop CTHasResourceForAllBug
								{exit}
								{stop}
							ifelse
							}
						ifelse
						}
						{pop}
					ifelse
					}
				128 string/CMap resourceforall
				}
			stopped
				{cleartomark}
			stopped pop
			setglobal
			}
		if
		}
	if
	}bind def
/ds
	{
	Adobe_CoolType_Core
		begin
		CTWorkAroundBugs
		/mo/moveto load def
		/nf/newencodedfont load def
		/msf{makefont setfont}bind def
		/uf{dup undefinefont ct_VMDictUndef}bind def
		/ur/undefineresource load def
		/chp/charpath load def
		/awsh/awidthshow load def
		/wsh/widthshow load def
		/ash/ashow load def
		/@xshow/xshow load def
		/@yshow/yshow load def
		/@xyshow/xyshow load def
		/@cshow/cshow load def
		/sh/show load def
		/rp/repeat load def
		/.n/.notdef def
		end
		currentglobal false setglobal
	 userdict/Adobe_CoolType_Data 2 copy known not
		 {2 copy 10 dict put}
		if
		get
		begin
		/AddWidths? false def
		/CC 0 def
		/charcode 2 string def
		/@opStackCountByLevel 32 dict def
		/@opStackLevel 0 def
		/@dictStackCountByLevel 32 dict def
		/@dictStackLevel 0 def
		/InVMFontsByCMap 10 dict def
		/InVMDeepCopiedFonts 10 dict def
		end
		setglobal
	}bind def
/dt
	{
	currentdict Adobe_CoolType_Core eq
		{end}
	if
	}bind def
/ps
	{
	Adobe_CoolType_Core begin
	Adobe_CoolType_GVMFonts begin
	Adobe_CoolType_LVMFonts begin
	SharedFontDirectory begin
	}bind def
/pt
	{
	end
	end
	end
	end
	}bind def
/unload
	{
	systemdict/languagelevel known
		{
		systemdict/languagelevel get 2 ge
			{
			userdict/Adobe_CoolType_Core 2 copy known
				{undef}
				{pop pop}
			ifelse
			}
		if
		}
	if
	}bind def
/ndf
	{
	1 index where
		{pop pop pop}
		{dup xcheck{bind}if def}
	ifelse
	}def
/findfont systemdict
	begin
	userdict
		begin
		/globaldict where{/globaldict get begin}if
			dup where pop exch get
		/globaldict where{pop end}if
		end
	end
Adobe_CoolType_Core_Defined
	{/systemfindfont exch def}
	{
	/findfont 1 index def
	/systemfindfont exch def
	}
ifelse
/undefinefont
	{pop}ndf
/copyfont
	{
	currentglobal 3 1 roll
	1 index gcheck setglobal
	dup null eq{0}{dup length}ifelse
	2 index length add 1 add dict
		begin
		exch
			{
			1 index/FID eq
				{pop pop}
				{def}
			ifelse
			}
		forall
		dup null eq
			{pop}
			{{def}forall}
		ifelse
		currentdict
		end
	exch setglobal
	}bind def
/copyarray
	{
	currentglobal exch
	dup gcheck setglobal
	dup length array copy
	exch setglobal
	}bind def
/newencodedfont
	{
	currentglobal
		{
		SharedFontDirectory 3 index known
			{SharedFontDirectory 3 index get/FontReferenced known}
			{false}
		ifelse
		}
		{
		FontDirectory 3 index known
			{FontDirectory 3 index get/FontReferenced known}
			{
			SharedFontDirectory 3 index known
				{SharedFontDirectory 3 index get/FontReferenced known}
				{false}
			ifelse
			}
		ifelse
		}
	ifelse
	dup
		{
		3 index findfont/FontReferenced get
		2 index dup type/nametype eq
			{findfont}
		if ne
			{pop false}
		if
		}
	if
	dup
		{
		1 index dup type/nametype eq
			{findfont}
		 if
		dup/CharStrings known
			{
			/CharStrings get length
			4 index findfont/CharStrings get length
			ne
				{
				pop false
				}
			if 
			}
			{pop}
			ifelse
		}
	if
		{
		pop
		1 index findfont
		/Encoding get exch
		0 1 255
			{2 copy get 3 index 3 1 roll put}
		for
		pop pop pop
		}
		{
		currentglobal
	 4 1 roll
		dup type/nametype eq
		 {findfont}
	 if
	 dup gcheck setglobal
		dup dup maxlength 2 add dict
			begin
			exch
				{
				1 index/FID ne
				2 index/Encoding ne and
					{def}
					{pop pop}
				ifelse
				}
			forall
			/FontReferenced exch def
			/Encoding exch dup length array copy def
			/FontName 1 index dup type/stringtype eq{cvn}if def dup
			currentdict
			end
		definefont ct_VMDictPut
		setglobal
		}
	ifelse
	}bind def
/SetSubstituteStrategy
	{
	$SubstituteFont
		begin
		dup type/dicttype ne
			{0 dict}
		if
		currentdict/$Strategies known
			{
			exch $Strategies exch 
			2 copy known
				{
				get
				2 copy maxlength exch maxlength add dict
					begin
					{def}forall
					{def}forall
					currentdict
					dup/$Init known
						{dup/$Init get exec}
					if
					end
				/$Strategy exch def
				}
				{pop pop pop}
			ifelse
			}
			{pop pop}
		ifelse
		end
	}bind def
/scff
	{
	$SubstituteFont
		begin
		dup type/stringtype eq
			{dup length exch}
			{null}
		ifelse
		/$sname exch def
		/$slen exch def
		/$inVMIndex
			$sname null eq
				{
				1 index $str cvs
				dup length $slen sub $slen getinterval cvn
				}
				{$sname}
			ifelse def
		end
		{findfont}
	@Stopped
		{
		dup length 8 add string exch
		1 index 0(BadFont:)putinterval
		1 index exch 8 exch dup length string cvs putinterval cvn
			{findfont}
		@Stopped
			{pop/Courier findfont}
		if
		}
	if
	$SubstituteFont
		begin
		/$sname null def
		/$slen 0 def
		/$inVMIndex null def
		end
	}bind def
/isWidthsOnlyFont
	{
	dup/WidthsOnly known
		{pop pop true}
		{
		dup/FDepVector known
			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}
			{
			dup/FDArray known
				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}
				{pop}
			ifelse
			}
		ifelse
		}
	ifelse
	}bind def
/ct_StyleDicts 4 dict dup begin
		 /Adobe-Japan1 4 dict dup begin
					 Level2?
								{
								/Serif
								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMin-W3}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMin-W3/CIDFont resourcestatus
								{pop pop/HeiseiMin-W3}
								{/Ryumin-Light}
								ifelse
							}
							{/Ryumin-Light}
							ifelse
								}
								ifelse
								def
								/SansSerif
								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiKakuGo-W5/CIDFont resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{/GothicBBB-Medium}
								ifelse
							}
							{/GothicBBB-Medium}
							ifelse
								}
								ifelse
								def
								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMaruGo-W4/CIDFont resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
									/Jun101-Light-RKSJ-H/Font resourcestatus
									{pop pop/Jun101-Light}
									{SansSerif}
									ifelse
								}
								ifelse
							}
							{
								/Jun101-Light-RKSJ-H/Font resourcestatus
								{pop pop/Jun101-Light}
								{SansSerif}
								ifelse
							}
							ifelse
								}
								ifelse
								/RoundSansSerif exch def
								/Default Serif def
								}
								{
								/Serif/Ryumin-Light def
								/SansSerif/GothicBBB-Medium def
								{
								(fonts/Jun101-Light-83pv-RKSJ-H)status
								}stopped
								{pop}{
										 {pop pop pop pop/Jun101-Light}
										 {SansSerif}
										 ifelse
										 /RoundSansSerif exch def
								}ifelse
								/Default Serif def
								}
					 ifelse
		 end
		 def
		 /Adobe-Korea1 4 dict dup begin
					/Serif/HYSMyeongJo-Medium def
					/SansSerif/HYGoThic-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-GB1 4 dict dup begin
					/Serif/STSong-Light def
					/SansSerif/STHeiti-Regular def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-CNS1 4 dict dup begin
					/Serif/MKai-Medium def
					/SansSerif/MHei-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
end
def
Level2?{currentglobal true setglobal}if
/ct_BoldRomanWidthProc 
	{
	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth
	0 0
	}bind def
/ct_Type0WidthProc 
	{
	 dup stringwidth 0 0 moveto 
	 2 index true charpath pathbbox
	 0 -1 
	 7 index 2 div .88 
	 setcachedevice2
	 pop
	0 0
	}bind def
/ct_Type0WMode1WidthProc 
	{
	 dup stringwidth 
	 pop 2 div neg -0.88
	2 copy
	moveto 
	0 -1
	 5 -1 roll true charpath pathbbox
	 setcachedevice
	}bind def
/cHexEncoding
[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
/ct_BoldBaseFont 
	 11 dict begin
		/FontType 3 def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/Encoding cHexEncoding def 
		/_setwidthProc/ct_BoldRomanWidthProc load def
		/_bcstr1 1 string def
		/BuildChar
		{
			exch begin
				_basefont setfont
				_bcstr1 dup 0 4 -1 roll put
				dup 
				_setwidthProc
				3 copy 
				moveto				
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
systemdict/composefont known
{
/ct_DefineIdentity-H
{
	/Identity-H/CMap resourcestatus
	{
		pop pop
	}
	{
		/CIDInit/ProcSet findresource begin
		 12 dict begin
		 begincmap
		 /CIDSystemInfo 3 dict dup begin
			 /Registry(Adobe)def
			 /Ordering(Identity)def
			 /Supplement 0 def
		 end def
		 /CMapName/Identity-H def
		 /CMapVersion 1.000 def
		 /CMapType 1 def
		 1 begincodespacerange
		 <0000><FFFF>
		 endcodespacerange
		 1 begincidrange
		 <0000><FFFF>0
		 endcidrange
		 endcmap
		 CMapName currentdict/CMap defineresource pop
		 end
		 end
	 }
	 ifelse
}
def
/ct_BoldBaseCIDFont 
	 11 dict begin
		/CIDFontType 1 def
		/CIDFontName/ct_BoldBaseCIDFont def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/_setwidthProc/ct_Type0WidthProc load def
		/_bcstr2 2 string def
		/BuildGlyph
		{
			exch begin		 
				_basefont setfont
				_bcstr2 1 2 index 256 mod put
				_bcstr2 0 3 -1 roll 256 idiv put
				_bcstr2 dup _setwidthProc		 
				3 copy 
				moveto
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
}if
Level2?{setglobal}if
/ct_CopyFont{
	{
		1 index/FID ne 2 index/UniqueID ne and
		{def}{pop pop}ifelse
	}forall
}bind def
/ct_Type0CopyFont 
{
	exch
	dup length dict
	begin
	ct_CopyFont
	[
	exch
	FDepVector 
	{
		 dup/FontType get 0 eq
		{	
		1 index ct_Type0CopyFont 
		/_ctType0 exch definefont
		}
		{
		/_ctBaseFont exch
		2 index exec
		}
		 ifelse 
		 exch
	}
	forall 
	pop
	]				
	/FDepVector exch def
	currentdict
	end
}bind def
/ct_MakeBoldFont
{
	 dup/ct_SyntheticBold known
	{
		dup length 3 add dict begin 
		ct_CopyFont 
		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 
		/ct_SyntheticBold true def
		currentdict 
		end 
		definefont
	}
	{
		dup dup length 3 add dict
		begin
			ct_CopyFont
			/PaintType 2 def
			/StrokeWidth .03 0 FontMatrix idtransform pop def
			/dummybold currentdict
		end
		definefont
		dup/FontType get dup 9 ge exch 11 le and 
		{
			ct_BoldBaseCIDFont
			dup length 3 add dict copy begin
			dup/CIDSystemInfo get/CIDSystemInfo exch def
			ct_DefineIdentity-H
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefont exch def
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefonto exch def
			currentdict
			end
			/CIDFont defineresource
		}
		{
			ct_BoldBaseFont
			dup length 3 add dict copy begin
			/_basefont exch def
			/_basefonto exch def
			currentdict
			end
			definefont
		}
		ifelse
	}
	ifelse
}bind def
/ct_MakeBold{
	1 index 
	1 index
	findfont
	currentglobal 5 1 roll
	dup gcheck setglobal
		dup
		 /FontType get 0 eq
			{
				dup/WMode known{dup/WMode get 1 eq}{false}ifelse
				version length 4 ge
				and
					{version 0 4 getinterval cvi 2015 ge}
					{true}
				ifelse 
					{/ct_Type0WidthProc}
					{/ct_Type0WMode1WidthProc}
				ifelse
				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put
						{ct_MakeBoldFont}ct_Type0CopyFont definefont
			}
			{
				dup/_fauxfont known not 1 index/SubstMaster known not and
				{
					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put
					 ct_MakeBoldFont 
				}
				{
				2 index 2 index eq
					{exch pop	}
					{
						dup length dict begin
						ct_CopyFont
						currentdict
						end
						definefont 
					}
				ifelse
				}
			ifelse
			}
		 ifelse
		 pop pop pop
		 setglobal
}bind def
/?str1 256 string def
/?set
	{
	$SubstituteFont
		begin
		/$substituteFound false def
		/$fontname 1 index def
		/$doSmartSub false def
		end
	dup
	 findfont
	$SubstituteFont
		begin
		$substituteFound
			{false}
			{
			dup/FontName known
				{
				dup/FontName get $fontname eq
				1 index/DistillerFauxFont known not and
				/currentdistillerparams where
					{pop false 2 index isWidthsOnlyFont not and}
				if
				}
				{false}
			ifelse
			}
		ifelse
		exch pop
		/$doSmartSub true def
		end
		{
		5 1 roll pop pop pop pop
		findfont
		}
		{
		1 index
		findfont
		dup/FontType get 3 eq
		{
			6 1 roll pop pop pop pop pop false
		}
		{pop true}
		ifelse
		{
		$SubstituteFont
		begin
		pop pop
		/$styleArray 1 index def
		/$regOrdering 2 index def
		pop pop
		0 1 $styleArray length 1 sub
		{
			$styleArray exch get
			ct_StyleDicts $regOrdering
			2 copy known
			{
				get
				exch 2 copy known not
				{pop/Default}
				if
				get
				dup type/nametype eq
				{
				?str1 cvs length dup 1 add exch
				?str1 exch(-)putinterval
				exch dup length exch ?str1 exch 3 index exch putinterval
				add ?str1 exch 0 exch getinterval cvn
				}
				{
				pop pop/Unknown
				}
				ifelse
			}
			{
				pop pop pop pop/Unknown
			}
			ifelse
		}
		for
		end
		findfont 
		}if
		}
	ifelse
	currentglobal false setglobal 3 1 roll
	null copyfont definefont pop
	setglobal
	}bind def
setpacking
userdict/$SubstituteFont 25 dict put
1 dict
	begin
	/SubstituteFont
		dup $error exch 2 copy known
			{get}
			{pop pop{pop/Courier}bind}
		ifelse def
	/currentdistillerparams where dup
		{
		pop pop
		currentdistillerparams/CannotEmbedFontPolicy 2 copy known
			{get/Error eq}
			{pop pop false}
		ifelse
		}
	if not
		{
		countdictstack array dictstack 0 get
			begin
			userdict
				begin
				$SubstituteFont
					begin
					/$str 128 string def
					/$fontpat 128 string def
					/$slen 0 def
					/$sname null def
					/$match false def
					/$fontname null def
					/$substituteFound false def
					/$inVMIndex null def
					/$doSmartSub true def
					/$depth 0 def
					/$fontname null def
					/$italicangle 26.5 def
					/$dstack null def
					/$Strategies 10 dict dup
						begin
						/$Type3Underprint
							{
							currentglobal exch false setglobal
							11 dict
								begin
								/UseFont exch
									$WMode 0 ne
										{
										dup length dict copy
										dup/WMode $WMode put
										/UseFont exch definefont
										}
									if def
								/FontName $fontname dup type/stringtype eq{cvn}if def
								/FontType 3 def
								/FontMatrix[.001 0 0 .001 0 0]def
								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def
								/FontBBox[0 0 0 0]def
								/CCInfo 7 dict dup
									begin
									/cc null def
									/x 0 def
									/y 0 def
									end def
								/BuildChar
									{
									exch
										begin
										CCInfo
											begin
											1 string dup 0 3 index put exch pop
											/cc exch def
											UseFont 1000 scalefont setfont
											cc stringwidth/y exch def/x exch def
											x y setcharwidth
											$SubstituteFont/$Strategy get/$Underprint get exec
											0 0 moveto cc show
											x y moveto
											end
										end
									}bind def
								currentdict
								end
							exch setglobal
							}bind def
						/$GetaTint
							2 dict dup
								begin
								/$BuildFont
									{
									dup/WMode known
										{dup/WMode get}
										{0}
									ifelse
									/$WMode exch def
									$fontname exch
									dup/FontName known
										{
										dup/FontName get
										dup type/stringtype eq{cvn}if
										}
										{/unnamedfont}
									ifelse
									exch
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
									1 index/FontName get known
										{
										pop
										Adobe_CoolType_Data/InVMDeepCopiedFonts get
										1 index get
										null copyfont
										}
										{$deepcopyfont}
									ifelse
									exch 1 index exch/FontBasedOn exch put
									dup/FontName $fontname dup type/stringtype eq{cvn}if put
									definefont
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
										begin
										dup/FontBasedOn get 1 index def
										end
									}bind def
								/$Underprint
									{
									gsave
									x abs y abs gt
										{/y 1000 def}
										{/x -1000 def 500 120 translate}
									ifelse
									Level2?
										{
										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]
										setcolorspace
										}
										{0 setgray}
									ifelse
									10 setlinewidth
									x .8 mul
									[7 3]
										{
										y mul 8 div 120 sub x 10 div exch moveto
										0 y 4 div neg rlineto
										dup 0 rlineto
										0 y 4 div rlineto
										closepath
										gsave
										Level2?
											{.2 setcolor}
											{.8 setgray}
										ifelse
										fill grestore
										stroke
										}
									forall
									pop
									grestore
									}bind def
								end def
						/$Oblique
							1 dict dup
								begin
								/$BuildFont
									{
									currentglobal exch dup gcheck setglobal
									null copyfont
										begin
										/FontBasedOn
										currentdict/FontName known
											{
											FontName
											dup type/stringtype eq{cvn}if
											}
											{/unnamedfont}
										ifelse
										def
										/FontName $fontname dup type/stringtype eq{cvn}if def
										/currentdistillerparams where
											{pop}
											{
											/FontInfo currentdict/FontInfo known
												{FontInfo null copyfont}
												{2 dict}
											ifelse
											dup
												begin
												/ItalicAngle $italicangle def
												/FontMatrix FontMatrix
												[1 0 ItalicAngle dup sin exch cos div 1 0 0]
												matrix concatmatrix readonly
												end
											4 2 roll def
											def
											}
										ifelse
										FontName currentdict
										end
									definefont
									exch setglobal
									}bind def
								end def
						/$None
							1 dict dup
								begin
								/$BuildFont{}bind def
								end def
						end def
					/$Oblique SetSubstituteStrategy
					/$findfontByEnum
						{
						dup type/stringtype eq{cvn}if
						dup/$fontname exch def
						$sname null eq
							{$str cvs dup length $slen sub $slen getinterval}
							{pop $sname}
						ifelse
						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval
						/$match false def
						$SubstituteFont/$dstack countdictstack array dictstack put
						mark
							{
							$fontpat 0 $slen 7 add getinterval
								{/$match exch def exit}
							$str filenameforall
							}
						stopped
							{
							cleardictstack
							currentdict
							true
							$SubstituteFont/$dstack get
								{
								exch
									{
									1 index eq
										{pop false}
										{true}
									ifelse
									}
									{begin false}
								ifelse
								}
							forall
							pop
							}
						if
						cleartomark
						/$slen 0 def
						$match false ne
							{$match(fonts/)anchorsearch pop pop cvn}
							{/Courier}
						ifelse
						}bind def
					/$ROS 1 dict dup
						begin
						/Adobe 4 dict dup
							begin
							/Japan1 [/Ryumin-Light/HeiseiMin-W3
										 /GothicBBB-Medium/HeiseiKakuGo-W5
										 /HeiseiMaruGo-W4/Jun101-Light]def
							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def
							/GB1	 [/STSong-Light/STHeiti-Regular]def
							/CNS1	[/MKai-Medium/MHei-Medium]def
							end def
						end def
					/$cmapname null def
					/$deepcopyfont
						{
						dup/FontType get 0 eq
							{
							1 dict dup/FontName/copied put copyfont
								begin
								/FDepVector FDepVector copyarray
								0 1 2 index length 1 sub
									{
									2 copy get $deepcopyfont
									dup/FontName/copied put
									/copied exch definefont
									3 copy put pop pop
									}
								for
								def
								currentdict
								end
							}
							{$Strategies/$Type3Underprint get exec}
						ifelse
						}bind def
					/$buildfontname
						{
						dup/CIDFont findresource/CIDSystemInfo get
							begin
							Registry length Ordering length Supplement 8 string cvs
							3 copy length 2 add add add string
							dup 5 1 roll dup 0 Registry putinterval
							dup 4 index(-)putinterval
							dup 4 index 1 add Ordering putinterval
							4 2 roll add 1 add 2 copy(-)putinterval
							end
						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch
						anchorsearch
							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}
							{pop pop pop pop pop}
						ifelse
						length
						$str 1 index(-)putinterval 1 add
						$str 1 index $cmapname $fontpat cvs putinterval
						$cmapname length add
						$str exch 0 exch getinterval cvn
						}bind def
					/$findfontByROS
						{
						/$fontname exch def
						$ROS Registry 2 copy known
							{
							get Ordering 2 copy known
								{get}
								{pop pop[]}
							ifelse
							}
							{pop pop[]}
						ifelse
						false exch
							{
							dup/CIDFont resourcestatus
								{
								pop pop
								save
								1 index/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get}
									{false}
								ifelse
								exch pop
								exch restore
									{pop}
									{exch pop true exit}
								ifelse
								}
								{pop}
							ifelse
							}
						forall
							{$str cvs $buildfontname}
							{
							false(*)
								{
								save exch
								dup/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get not}
									{true}
								ifelse
								exch/CIDSystemInfo get
								dup/Registry get Registry eq
								exch/Ordering get Ordering eq and and
									{exch restore exch pop true exit}
									{pop restore}
								ifelse
								}
							$str/CIDFont resourceforall
								{$buildfontname}
								{$fontname $findfontByEnum}
							ifelse
							}
						ifelse
						}bind def
					end
				end
				currentdict/$error known currentdict/languagelevel known and dup
					{pop $error/SubstituteFont known}
				if
				dup
					{$error}
					{Adobe_CoolType_Core}
				ifelse
				begin
					{
					/SubstituteFont
					/CMap/Category resourcestatus
						{
						pop pop
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{
								$sname null eq
									{dup $str cvs dup length $slen sub $slen getinterval cvn}
									{$sname}
								ifelse
								Adobe_CoolType_Data/InVMFontsByCMap get
								1 index 2 copy known
									{
									get
									false exch
										{
										pop
										currentglobal
											{
											GlobalFontDirectory 1 index known
												{exch pop true exit}
												{pop}
											ifelse
											}
											{
											FontDirectory 1 index known
												{exch pop true exit}
												{
												GlobalFontDirectory 1 index known
													{exch pop true exit}
													{pop}
												ifelse
												}
											ifelse
											}
										ifelse
										}
									forall
									}
									{pop pop false}
								ifelse
									{
									exch pop exch pop
									}
									{
									dup/CMap resourcestatus
										{
										pop pop
										dup/$cmapname exch def
										/CMap findresource/CIDSystemInfo get{def}forall
										$findfontByROS
										}
										{
										128 string cvs
										dup(-)search
											{
											3 1 roll search
												{
												3 1 roll pop
													{dup cvi}
												stopped
													{pop pop pop pop pop $findfontByEnum}
													{
													4 2 roll pop pop
													exch length
													exch
													2 index length
													2 index
													sub
													exch 1 sub -1 0
														{
														$str cvs dup length
														4 index
														0
														4 index
														4 3 roll add
														getinterval
														exch 1 index exch 3 index exch
														putinterval
														dup/CMap resourcestatus
															{
															pop pop
															4 1 roll pop pop pop
															dup/$cmapname exch def
															/CMap findresource/CIDSystemInfo get{def}forall
															$findfontByROS
															true exit
															}
															{pop}
														ifelse
														}
													for
													dup type/booleantype eq
														{pop}
														{pop pop pop $findfontByEnum}
													ifelse
													}
												ifelse
												}
												{pop pop pop $findfontByEnum}
											ifelse
											}
											{pop pop $findfontByEnum}
										ifelse
										}
									ifelse
									}
								ifelse
								}
								{//SubstituteFont exec}
							ifelse
							/$slen 0 def
							end
						}
						}
						{
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{$findfontByEnum}
								{//SubstituteFont exec}
							ifelse
							end
						}
						}
					ifelse
					bind readonly def
					Adobe_CoolType_Core/scfindfont/systemfindfont load put
					}
					{
					/scfindfont
						{
						$SubstituteFont
							begin
							dup systemfindfont
							dup/FontName known
								{dup/FontName get dup 3 index ne}
								{/noname true}
							ifelse
							dup
								{
								/$origfontnamefound 2 index def
								/$origfontname 4 index def/$substituteFound true def
								}
							if
							exch pop
								{
								$slen 0 gt
								$sname null ne
								3 index length $slen gt or and
									{
									pop dup $findfontByEnum findfont
									dup maxlength 1 add dict
										begin
											{1 index/FID eq{pop pop}{def}ifelse}
										forall
										currentdict
										end
									definefont
									dup/FontName known{dup/FontName get}{null}ifelse
									$origfontnamefound ne
										{
										$origfontname $str cvs print
										( substitution revised, using )print
										dup/FontName known
											{dup/FontName get}{(unspecified font)}
										ifelse
										$str cvs print(.\n)print
										}
									if
									}
									{exch pop}
								ifelse
								}
								{exch pop}
							ifelse
							end
						}bind def
					}
				ifelse
				end
			end
		Adobe_CoolType_Core_Defined not
			{
			Adobe_CoolType_Core/findfont
				{
				$SubstituteFont
					begin
					$depth 0 eq
						{
						/$fontname 1 index dup type/stringtype ne{$str cvs}if def
						/$substituteFound false def
						}
					if
					/$depth $depth 1 add def
					end
				scfindfont
				$SubstituteFont
					begin
					/$depth $depth 1 sub def
					$substituteFound $depth 0 eq and
						{
						$inVMIndex null ne
							{dup $inVMIndex $AddInVMFont}
						if
						$doSmartSub
							{
							currentdict/$Strategy known
								{$Strategy/$BuildFont get exec}
							if
							}
						if
						}
					if
					end
				}bind put
			}
		if
		}
	if
	end
/$AddInVMFont
	{
	exch/FontName 2 copy known
		{
		get
		1 dict dup begin exch 1 index gcheck def end exch
		Adobe_CoolType_Data/InVMFontsByCMap get exch
		$DictAdd
		}
		{pop pop pop}
	ifelse
	}bind def
/$DictAdd
	{
	2 copy known not
		{2 copy 4 index length dict put}
	if
	Level2? not
		{
		2 copy get dup maxlength exch length 4 index length add lt
		2 copy get dup length 4 index length add exch maxlength 1 index lt
			{
			2 mul dict
				begin
				2 copy get{forall}def
				2 copy currentdict put
				end
			}
			{pop}
		ifelse
		}
	if
	get
		begin
			{def}
		forall
		end
	}bind def
end
end
%%EndResource
currentglobal true setglobal
%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.
%%Version: 1.23 0
systemdict/languagelevel known dup
	{currentglobal false setglobal}
	{false}
ifelse
exch
userdict/Adobe_CoolType_Utility 2 copy known
	{2 copy get dup maxlength 27 add dict copy}
	{27 dict}
ifelse put
Adobe_CoolType_Utility
	begin
	/@eexecStartData
		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E
		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C
		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def
	/@recognizeCIDFont null def
	/ct_Level2? exch def
	/ct_Clone? 1183615869 internaldict dup
			/CCRun known not
			exch/eCCRun known not
			ct_Level2? and or def
ct_Level2?
	{globaldict begin currentglobal true setglobal}
if
	/ct_AddStdCIDMap
		ct_Level2?
			{{
				mark
				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put
					{
					((Hex)57 StartData
					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0
					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60
					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8
					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec
					}
				stopped
					{
					 cleartomark
					 Adobe_CoolType_Utility/@recognizeCIDFont get
					 countdictstack dup array dictstack
					 exch 1 sub -1 0
						 {
						 2 copy get 3 index eq
								{1 index length exch sub 1 sub{end}repeat exit}
								{pop}
						 ifelse
						 }
					 for
					 pop pop
					 Adobe_CoolType_Utility/@eexecStartData get eexec
					}
					{cleartomark}
				ifelse
			}}
			{{
				Adobe_CoolType_Utility/@eexecStartData get eexec
			}}
		ifelse bind def
userdict/cid_extensions known
dup{cid_extensions/cid_UpdateDB known and}if
	{
	 cid_extensions
	 begin
	/cid_GetCIDSystemInfo
		{
		 1 index type/stringtype eq
			{exch cvn exch}
		 if
		 cid_extensions
			 begin
			 dup load 2 index known
				{
				 2 copy
				 cid_GetStatusInfo
				 dup null ne
					{
					 1 index load
					 3 index get
					 dup null eq
						 {pop pop cid_UpdateDB}
						 {
						 exch
						 1 index/Created get eq
							 {exch pop exch pop}
							 {pop cid_UpdateDB}
						 ifelse
						 }
					 ifelse
					}
					{pop cid_UpdateDB}
				 ifelse
				}
				{cid_UpdateDB}
			 ifelse
			 end
		}bind def
	 end
	}
if
ct_Level2?
	{end setglobal}
if
	/ct_UseNativeCapability? systemdict/composefont known def
	/ct_MakeOCF 35 dict def
	/ct_Vars 25 dict def
	/ct_GlyphDirProcs 6 dict def
	/ct_BuildCharDict 15 dict dup
		begin
		/charcode 2 string def
		/dst_string 1500 string def
		/nullstring()def
		/usewidths? true def
		end def
	ct_Level2?{setglobal}{pop}ifelse
	ct_GlyphDirProcs
		begin
		/GetGlyphDirectory
			{
			systemdict/languagelevel known
				{pop/CIDFont findresource/GlyphDirectory get}
				{
				1 index/CIDFont findresource/GlyphDirectory
				get dup type/dicttype eq
					{
					dup dup maxlength exch length sub 2 index lt
						{
						dup length 2 index add dict copy 2 index
						/CIDFont findresource/GlyphDirectory 2 index put
						}
					if
					}
				if
				exch pop exch pop
				}
			ifelse
			+
			}def
		/+
			{
			systemdict/languagelevel known
				{
				currentglobal false setglobal
				3 dict begin
					/vm exch def
				}
				{1 dict begin}
			ifelse
			/$ exch def
			systemdict/languagelevel known
				{
				vm setglobal
				/gvm currentglobal def
				$ gcheck setglobal
				}
			if
			?{$ begin}if
			}def
		/?{$ type/dicttype eq}def
		/|{
			userdict/Adobe_CoolType_Data known
				{
			Adobe_CoolType_Data/AddWidths? known
				{
				 currentdict Adobe_CoolType_Data
					begin
					 begin
						AddWidths?
								{
								Adobe_CoolType_Data/CC 3 index put
								?{def}{$ 3 1 roll put}ifelse
								CC charcode exch 1 index 0 2 index 256 idiv put
								1 index exch 1 exch 256 mod put
								stringwidth 2 array astore
								currentfont/Widths get exch CC exch put
								}
								{?{def}{$ 3 1 roll put}ifelse}
							ifelse
					end
				end
				}
				{?{def}{$ 3 1 roll put}ifelse}	ifelse
				}
				{?{def}{$ 3 1 roll put}ifelse}
			ifelse
			}def
		/!
			{
			?{end}if
			systemdict/languagelevel known
				{gvm setglobal}
			if
			end
			}def
		/:{string currentfile exch readstring pop}executeonly def
		end
	ct_MakeOCF
		begin
		/ct_cHexEncoding
		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
		/ct_CID_STR_SIZE 8000 def
		/ct_mkocfStr100 100 string def
		/ct_defaultFontMtx[.001 0 0 .001 0 0]def
		/ct_1000Mtx[1000 0 0 1000 0 0]def
		/ct_raise{exch cvx exch errordict exch get exec stop}bind def
		/ct_reraise
			{cvx $error/errorname get(Error: )print dup(						 )cvs print
					errordict exch get exec stop
			}bind def
		/ct_cvnsi
			{
			1 index add 1 sub 1 exch 0 4 1 roll
				{
				2 index exch get
				exch 8 bitshift
				add
				}
			for
			exch pop
			}bind def
		/ct_GetInterval
			{
			Adobe_CoolType_Utility/ct_BuildCharDict get
				begin
				/dst_index 0 def
				dup dst_string length gt
					{dup string/dst_string exch def}
				if
				1 index ct_CID_STR_SIZE idiv
				/arrayIndex exch def
				2 index arrayIndex get
				2 index
				arrayIndex ct_CID_STR_SIZE mul
				sub
					{
					dup 3 index add 2 index length le
						{
						2 index getinterval
						dst_string dst_index 2 index putinterval
						length dst_index add/dst_index exch def
						exit
						}
						{
						1 index length 1 index sub
						dup 4 1 roll
						getinterval
						dst_string dst_index 2 index putinterval
						pop dup dst_index add/dst_index exch def
						sub
						/arrayIndex arrayIndex 1 add def
						2 index dup length arrayIndex gt
							 {arrayIndex get}
							 {
							 pop
							 exit
							 }
						ifelse
						0
						}
					ifelse
					}
				loop
				pop pop pop
				dst_string 0 dst_index getinterval
				end
			}bind def
		ct_Level2?
			{
			/ct_resourcestatus
			currentglobal mark true setglobal
				{/unknowninstancename/Category resourcestatus}
			stopped
				{cleartomark setglobal true}
				{cleartomark currentglobal not exch setglobal}
			ifelse
				{
					{
					mark 3 1 roll/Category findresource
						begin
						ct_Vars/vm currentglobal put
						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
							{cleartomark false}
							{{3 2 roll pop true}{cleartomark false}ifelse}
						ifelse
						ct_Vars/vm get setglobal
						end
					}
				}
				{{resourcestatus}}
			ifelse bind def
			/CIDFont/Category ct_resourcestatus
				{pop pop}
				{
				currentglobal true setglobal
				/Generic/Category findresource
				dup length dict copy
				dup/InstanceType/dicttype put
				/CIDFont exch/Category defineresource pop
				setglobal
				}
			ifelse
			ct_UseNativeCapability?
				{
				/CIDInit/ProcSet findresource begin
				12 dict begin
				begincmap
				/CIDSystemInfo 3 dict dup begin
				 /Registry(Adobe)def
				 /Ordering(Identity)def
				 /Supplement 0 def
				end def
				/CMapName/Identity-H def
				/CMapVersion 1.000 def
				/CMapType 1 def
				1 begincodespacerange
				<0000><FFFF>
				endcodespacerange
				1 begincidrange
				<0000><FFFF>0
				endcidrange
				endcmap
				CMapName currentdict/CMap defineresource pop
				end
				end
				}
			if
			}
			{
			/ct_Category 2 dict begin
			/CIDFont 10 dict def
			/ProcSet	2 dict def
			currentdict
			end
			def
			/defineresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					dup dup maxlength exch length eq
						{
						dup length 10 add dict copy
						ct_Category 2 index 2 index put
						}
					if
					3 index 3 index put
					pop exch pop
					}
					{pop pop/defineresource/undefined ct_raise}
				ifelse
				}bind def
			/findresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index 2 copy known
						{get 3 1 roll pop pop}
						{pop pop/findresource/undefinedresource ct_raise}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/resourcestatus
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index known
					exch pop exch pop
						{
						0 -1 true
						}
						{
						false
						}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/ct_resourcestatus/resourcestatus load def
			}
		ifelse
		/ct_CIDInit 2 dict
			begin
			/ct_cidfont_stream_init
				{
					{
					dup(Binary)eq
						{
						pop
						null
						currentfile
						ct_Level2?
							{
								{cid_BYTE_COUNT()/SubFileDecode filter}
							stopped
								{pop pop pop}
							if
							}
						if
						/readstring load
						exit
						}
					if
					dup(Hex)eq
						{
						pop
						currentfile
						ct_Level2?
							{
								{null exch/ASCIIHexDecode filter/readstring}
							stopped
								{pop exch pop(>)exch/readhexstring}
							if
							}
							{(>)exch/readhexstring}
						ifelse
						load
						exit
						}
					if
					/StartData/typecheck ct_raise
					}
				loop
				cid_BYTE_COUNT ct_CID_STR_SIZE le
					{
					2 copy cid_BYTE_COUNT string exch exec
					pop
					1 array dup
					3 -1 roll
					0 exch put
					}
					{
					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi
					dup array exch 2 sub 0 exch 1 exch
						{
						2 copy
						5 index
						ct_CID_STR_SIZE
						string
						6 index exec
						pop
						put
						pop
						}
					for
					2 index
					cid_BYTE_COUNT ct_CID_STR_SIZE mod string
					3 index exec
					pop
					1 index exch
					1 index length 1 sub
					exch put
					}
				ifelse
				cid_CIDFONT exch/GlyphData exch put
				2 index null eq
					{
					pop pop pop
					}
					{
					pop/readstring load
					1 string exch
						{
						3 copy exec
						pop
						dup length 0 eq
							{
							pop pop pop pop pop
							true exit
							}
						if
						4 index
						eq
							{
							pop pop pop pop
							false exit
							}
						if
						}
					loop
					pop
					}
				ifelse
				}bind def
			/StartData
				{
				mark
					{
					currentdict
					dup/FDArray get 0 get/FontMatrix get
					0 get 0.001 eq
						{
						dup/CDevProc known not
							{
							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known
								{get}
								{
								pop pop
								{pop pop pop pop pop 0 -1000 7 index 2 div 880}
								}
							ifelse
							def
							}
						if
						}
						{
						/CDevProc
							{
							 pop pop pop pop pop
							 0
							 1 cid_temp/cid_CIDFONT get
							/FDArray get 0 get
							/FontMatrix get 0 get div
							 7 index 2 div
							 1 index 0.88 mul
							}def
						}
					ifelse
					/cid_temp 15 dict def
					cid_temp
						begin
						/cid_CIDFONT exch def
						3 copy pop
						dup/cid_BYTE_COUNT exch def 0 gt
							{
							ct_cidfont_stream_init
							FDArray
								{
								/Private get
								dup/SubrMapOffset known
									{
									begin
									/Subrs SubrCount array def
									Subrs
									SubrMapOffset
									SubrCount
									SDBytes
									ct_Level2?
										{
										currentdict dup/SubrMapOffset undef
										dup/SubrCount undef
										/SDBytes undef
										}
									if
									end
									/cid_SD_BYTES exch def
									/cid_SUBR_COUNT exch def
									/cid_SUBR_MAP_OFFSET exch def
									/cid_SUBRS exch def
									cid_SUBR_COUNT 0 gt
										{
										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval
										0 cid_SD_BYTES ct_cvnsi
										0 1 cid_SUBR_COUNT 1 sub
											{
											exch 1 index
											1 add
											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add
											GlyphData exch cid_SD_BYTES ct_GetInterval
											0 cid_SD_BYTES ct_cvnsi
											cid_SUBRS 4 2 roll
											GlyphData exch
											4 index
											1 index
											sub
											ct_GetInterval
											dup length string copy put
											}
										for
										pop
										}
									if
									}
									{pop}
								ifelse
								}
							forall
							}
						if
						cleartomark pop pop
						end
					CIDFontName currentdict/CIDFont defineresource pop
					end end
					}
				stopped
					{cleartomark/StartData ct_reraise}
				if
				}bind def
			currentdict
			end def
		/ct_saveCIDInit
			{
			/CIDInit/ProcSet ct_resourcestatus
				{true}
				{/CIDInitC/ProcSet ct_resourcestatus}
			ifelse
				{
				pop pop
				/CIDInit/ProcSet findresource
				ct_UseNativeCapability?
					{pop null}
					{/CIDInit ct_CIDInit/ProcSet defineresource pop}
				ifelse
				}
				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}
			ifelse
			ct_Vars exch/ct_oldCIDInit exch put
			}bind def
		/ct_restoreCIDInit
			{
			ct_Vars/ct_oldCIDInit get dup null ne
				{/CIDInit exch/ProcSet defineresource pop}
				{pop}
			ifelse
			}bind def
		/ct_BuildCharSetUp
			{
			1 index
				begin
				CIDFont
					begin
					Adobe_CoolType_Utility/ct_BuildCharDict get
						begin
						/ct_dfCharCode exch def
						/ct_dfDict exch def
						CIDFirstByte ct_dfCharCode add
						dup CIDCount ge
							{pop 0}
						if
						/cid exch def
							{
							GlyphDirectory cid 2 copy known
								{get}
								{pop pop nullstring}
							ifelse
							dup length FDBytes sub 0 gt
								{
								dup
								FDBytes 0 ne
									{0 FDBytes ct_cvnsi}
									{pop 0}
								ifelse
								/fdIndex exch def
								dup length FDBytes sub FDBytes exch getinterval
								/charstring exch def
								exit
								}
								{
								pop
								cid 0 eq
									{/charstring nullstring def exit}
								if
								/cid 0 def
								}
							ifelse
							}
						loop
			}def
		/ct_SetCacheDevice
			{
			0 0 moveto
			dup stringwidth
			3 -1 roll
			true charpath
			pathbbox
			0 -1000
			7 index 2 div 880
			setcachedevice2
			0 0 moveto
			}def
		/ct_CloneSetCacheProc
			{
			1 eq
				{
				stringwidth
				pop -2 div -880
				0 -1000 setcharwidth
				moveto
				}
				{
				usewidths?
					{
					currentfont/Widths get cid
					2 copy known
						{get exch pop aload pop}
						{pop pop stringwidth}
					ifelse
					}
					{stringwidth}
				ifelse
				setcharwidth
				0 0 moveto
				}
			ifelse
			}def
		/ct_Type3ShowCharString
			{
			ct_FDDict fdIndex 2 copy known
				{get}
				{
				currentglobal 3 1 roll
				1 index gcheck setglobal
				ct_Type1FontTemplate dup maxlength dict copy
					begin
					FDArray fdIndex get
					dup/FontMatrix 2 copy known
						{get}
						{pop pop ct_defaultFontMtx}
					ifelse
					/FontMatrix exch dup length array copy def
					/Private get
					/Private exch def
					/Widths rootfont/Widths get def
					/CharStrings 1 dict dup/.notdef
						<d841272cf18f54fc13>dup length string copy put def
					currentdict
					end
				/ct_Type1Font exch definefont
				dup 5 1 roll put
				setglobal
				}
			ifelse
			dup/CharStrings get 1 index/Encoding get
			ct_dfCharCode get charstring put
			rootfont/WMode 2 copy known
				{get}
				{pop pop 0}
			ifelse
			exch
			1000 scalefont setfont
			ct_str1 0 ct_dfCharCode put
			ct_str1 exch ct_dfSetCacheProc
			ct_SyntheticBold
				{
				currentpoint
				ct_str1 show
				newpath
				moveto
				ct_str1 true charpath
				ct_StrokeWidth setlinewidth
				stroke
				}
				{ct_str1 show}
			ifelse
			}def
		/ct_Type4ShowCharString
			{
			ct_dfDict ct_dfCharCode charstring
			FDArray fdIndex get
			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not
				{ct_1000Mtx matrix concatmatrix concat}
				{pop}
			ifelse
			/Private get
			Adobe_CoolType_Utility/ct_Level2? get not
				{
				ct_dfDict/Private
				3 -1 roll
					{put}
				1183615869 internaldict/superexec get exec
				}
			if
			1183615869 internaldict
			Adobe_CoolType_Utility/ct_Level2? get
				{1 index}
				{3 index/Private get mark 6 1 roll}
			ifelse
			dup/RunInt known
				{/RunInt get}
				{pop/CCRun}
			ifelse
			get exec
			Adobe_CoolType_Utility/ct_Level2? get not
				{cleartomark}
			if
			}bind def
		/ct_BuildCharIncremental
			{
				{
				Adobe_CoolType_Utility/ct_MakeOCF get begin
				ct_BuildCharSetUp
				ct_ShowCharString
				}
			stopped
				{stop}
			if
			end
			end
			end
			end
			}bind def
		/BaseFontNameStr(BF00)def
		/ct_Type1FontTemplate 14 dict
			begin
			/FontType 1 def
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/PaintType 0 def
			currentdict
			end def
		/BaseFontTemplate 11 dict
			begin
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/BuildChar/ct_BuildCharIncremental load def
			ct_Clone?
				{
				/FontType 3 def
				/ct_ShowCharString/ct_Type3ShowCharString load def
				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def
				/ct_SyntheticBold false def
				/ct_StrokeWidth 1 def
				}
				{
				/FontType 4 def
				/Private 1 dict dup/lenIV 4 put def
				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def
				/PaintType 0 def
				/ct_ShowCharString/ct_Type4ShowCharString load def
				}
			ifelse
			/ct_str1 1 string def
			currentdict
			end def
		/BaseFontDictSize BaseFontTemplate length 5 add def
		/ct_matrixeq
			{
			true 0 1 5
				{
				dup 4 index exch get exch 3 index exch get eq and
				dup not
					{exit}
				if
				}
			for
			exch pop exch pop
			}bind def
		/ct_makeocf
			{
			15 dict
				begin
				exch/WMode exch def
				exch/FontName exch def
				/FontType 0 def
				/FMapType 2 def
			dup/FontMatrix known
				{dup/FontMatrix get/FontMatrix exch def}
				{/FontMatrix matrix def}
			ifelse
				/bfCount 1 index/CIDCount get 256 idiv 1 add
					dup 256 gt{pop 256}if def
				/Encoding
					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for
					bfCount 1 255{2 copy bfCount put pop}for
					def
				/FDepVector bfCount dup 256 lt{1 add}if array def
				BaseFontTemplate BaseFontDictSize dict copy
					begin
					/CIDFont exch def
					CIDFont/FontBBox known
						{CIDFont/FontBBox get/FontBBox exch def}
					if
					CIDFont/CDevProc known
						{CIDFont/CDevProc get/CDevProc exch def}
					if
					currentdict
					end
				BaseFontNameStr 3(0)putinterval
				0 1 bfCount dup 256 eq{1 sub}if
					{
					FDepVector exch
					2 index BaseFontDictSize dict copy
						begin
						dup/CIDFirstByte exch 256 mul def
						FontType 3 eq
							{/ct_FDDict 2 dict def}
						if
						currentdict
						end
					1 index 16
					BaseFontNameStr 2 2 getinterval cvrs pop
					BaseFontNameStr exch definefont
					put
					}
				for
				ct_Clone?
					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}
				if
				FontName
				currentdict
				end
			definefont
			ct_Clone?
				{
				gsave
				dup 1000 scalefont setfont
				ct_BuildCharDict
					begin
					/usewidths? false def
					currentfont/Widths get
						begin
						exch/CIDFont get/GlyphDirectory get
							{
							pop
							dup charcode exch 1 index 0 2 index 256 idiv put
							1 index exch 1 exch 256 mod put
							stringwidth 2 array astore def
							}
						forall
						end
					/usewidths? true def
					end
				grestore
				}
				{exch pop}
			ifelse
			}bind def
		currentglobal true setglobal
		/ct_ComposeFont
			{
			ct_UseNativeCapability?
				{				
				2 index/CMap ct_resourcestatus
					{pop pop exch pop}
					{
					/CIDInit/ProcSet findresource
						begin
						12 dict
							begin
							begincmap
							/CMapName 3 index def
							/CMapVersion 1.000 def
							/CMapType 1 def
							exch/WMode exch def
							/CIDSystemInfo 3 dict dup
								begin
								/Registry(Adobe)def
								/Ordering
								CMapName ct_mkocfStr100 cvs
								(Adobe-)search
									{
									pop pop
									(-)search
										{
										dup length string copy
										exch pop exch pop
										}
										{pop(Identity)}
									ifelse
									}
									{pop (Identity)}
								ifelse
								def
								/Supplement 0 def
								end def
							1 begincodespacerange
							<0000><FFFF>
							endcodespacerange
							1 begincidrange
							<0000><FFFF>0
							endcidrange
							endcmap
							CMapName currentdict/CMap defineresource pop
							end
						end
					}
				ifelse
				composefont
				}
				{
				3 2 roll pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
			setglobal
		/ct_MakeIdentity
			{
			ct_UseNativeCapability?
				{
				1 index/CMap ct_resourcestatus
					{pop pop}
					{
					/CIDInit/ProcSet findresource begin
					12 dict begin
					begincmap
					/CMapName 2 index def
					/CMapVersion 1.000 def
					/CMapType 1 def
					/CIDSystemInfo 3 dict dup
						begin
						/Registry(Adobe)def
						/Ordering
						CMapName ct_mkocfStr100 cvs
						(Adobe-)search
							{
							pop pop
							(-)search
								{dup length string copy exch pop exch pop}
								{pop(Identity)}
							ifelse
							}
							{pop(Identity)}
						ifelse
						def
						/Supplement 0 def
						end def
					1 begincodespacerange
					<0000><FFFF>
					endcodespacerange
					1 begincidrange
					<0000><FFFF>0
					endcidrange
					endcmap
					CMapName currentdict/CMap defineresource pop
					end
					end
					}
				ifelse
				composefont
				}
				{
				exch pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
		currentdict readonly pop
		end
	end
%%EndResource
setglobal
%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0
%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.
%%Version: 1.0 0
userdict/ct_T42Dict 15 dict put
ct_T42Dict begin
/Is2015?
{
 version
 cvi
 2015
 ge
}bind def
/AllocGlyphStorage
{
 Is2015?
 {	
	pop
 }
 {
	{string}forall
 }ifelse
}bind def
/Type42DictBegin
{
25 dict begin
 /FontName exch def
 /CharStrings 256 dict 
begin
	 /.notdef 0 def
	 currentdict 
end def
 /Encoding exch def
 /PaintType 0 def
 /FontType 42 def
 /FontMatrix[1 0 0 1 0 0]def
 4 array astore cvx/FontBBox exch def
 /sfnts
}bind def
/Type42DictEnd 
{
 currentdict dup/FontName get exch definefont end
ct_T42Dict exch
dup/FontName get exch put
}bind def
/RD{string currentfile exch readstring pop}executeonly def
/PrepFor2015
{
Is2015?
{		 
	/GlyphDirectory 
	 16
	 dict def
	 sfnts 0 get
	 dup
	 2 index
	(glyx)
	 putinterval
	 2 index 
	(locx)
	 putinterval
	 pop
	 pop
}
{
	 pop
	 pop
}ifelse			
}bind def
/AddT42Char
{
Is2015?
{
	/GlyphDirectory get 
	begin
	def
	end
	pop
	pop
}
{
	/sfnts get
	4 index
	get
	3 index
 2 index
	putinterval
	pop
	pop
	pop
	pop
}ifelse
}bind def
/T0AddT42Mtx2
{
/CIDFont findresource/Metrics2 get begin def end
}bind def
end
%%EndResource
currentglobal true setglobal
%%BeginFile: MMFauxFont.prc
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. 
%%All Rights Reserved.
userdict /ct_EuroDict 10 dict put
ct_EuroDict begin
/ct_CopyFont 
{
    { 1 index /FID ne {def} {pop pop} ifelse} forall
} def
/ct_GetGlyphOutline
{
   gsave
   initmatrix newpath
   exch findfont dup 
   length 1 add dict 
   begin 
		ct_CopyFont 
		/Encoding Encoding dup length array copy 
		dup
		4 -1 roll
		0 exch put   
		def
		currentdict
   end
   /ct_EuroFont exch definefont
   1000 scalefont setfont
   0 0 moveto
   [
       <00> stringwidth 
       <00> false charpath
       pathbbox
       [
       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall
   grestore
   counttomark 8 add
}
def
/ct_MakeGlyphProc
{
   ] cvx
   /ct_PSBuildGlyph cvx
   ] cvx
} def
/ct_PSBuildGlyph 
{ 
 	gsave 
	8 -1 roll pop 
	7 1 roll 
        6 -2 roll ct_FontMatrix transform 6 2 roll
        4 -2 roll ct_FontMatrix transform 4 2 roll
        ct_FontMatrix transform 
	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  
	dup  9 1 roll 
	{  
		currentdict /StrokeWidth 2 copy known  
		{   
			get 2 div   
			0 ct_FontMatrix dtransform pop
			5 1 roll  
			4 -1 roll 4 index sub   
			4 1 roll   
			3 -1 roll 4 index sub  
			3 1 roll   
			exch 4 index add exch  
			4 index add  
			5 -1 roll pop  
		}  
		{	 
			pop pop 
		}  
		ifelse  
	}       
    if  
	setcachedevice  
        ct_FontMatrix concat
        ct_PSPathOps begin 
		exec 
	end 
	{  
		currentdict /StrokeWidth 2 copy known  
			{ get }  
			{ pop pop 0 }  
  	    ifelse  
		setlinewidth stroke  
	}  
	{   
	    fill  
	}  
	ifelse  
    grestore
} def 
/ct_PSPathOps 4 dict dup begin 
	/m {moveto} def 
	/l {lineto} def 
	/c {curveto} def 
	/cp {closepath} def 
end 
def 
/ct_matrix1000 [1000 0 0 1000 0 0] def
/ct_AddGlyphProc  
{
   2 index findfont dup length 4 add dict 
   begin 
	ct_CopyFont 
	/CharStrings CharStrings dup length 1 add dict copy
      begin
         3 1 roll def  
         currentdict 
      end 
      def
      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def
      /ct_PSBuildGlyph /ct_PSBuildGlyph load def
      /ct_PSPathOps /ct_PSPathOps load def
      currentdict
   end
   definefont pop
}
def
systemdict /languagelevel known
{
	/ct_AddGlyphToPrinterFont {
		2 copy
		ct_GetGlyphOutline 3 add -1 roll restore 
		ct_MakeGlyphProc 
		ct_AddGlyphProc
	} def
}
{
	/ct_AddGlyphToPrinterFont {
	    pop pop restore
		Adobe_CTFauxDict /$$$FONTNAME get
		/Euro
		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get
		ct_EuroDict exch get
		ct_AddGlyphProc
	} def
} ifelse
/AdobeSansMM 
{ 
556 0 24 -19 541 703 
	{ 
	541 628 m 
	510 669 442 703 354 703 c 
	201 703 117 607 101 444 c 
	50 444 l 
	25 372 l 
	97 372 l 
	97 301 l 
	49 301 l 
	24 229 l 
	103 229 l 
	124 67 209 -19 350 -19 c 
	435 -19 501 25 509 32 c 
	509 131 l 
	492 105 417 60 343 60 c 
	267 60 204 127 197 229 c 
	406 229 l 
	430 301 l 
	191 301 l 
	191 372 l 
	455 372 l 
	479 444 l 
	194 444 l 
	201 531 245 624 348 624 c 
	433 624 484 583 509 534 c 
	cp 
	556 0 m 
	}
ct_PSBuildGlyph
} def
/AdobeSerifMM 
{ 
500 0 10 -12 484 692 
	{ 
	347 298 m 
	171 298 l 
	170 310 170 322 170 335 c 
	170 362 l 
	362 362 l 
	374 403 l 
	172 403 l 
	184 580 244 642 308 642 c 
	380 642 434 574 457 457 c 
	481 462 l 
	474 691 l 
	449 691 l 
	433 670 429 657 410 657 c 
	394 657 360 692 299 692 c 
	204 692 94 604 73 403 c 
	22 403 l 
	10 362 l 
	70 362 l 
	69 352 69 341 69 330 c 
	69 319 69 308 70 298 c 
	22 298 l 
	10 257 l 
	73 257 l 
	97 57 216 -12 295 -12 c 
	364 -12 427 25 484 123 c 
	458 142 l 
	425 101 384 37 316 37 c 
	256 37 189 84 173 257 c 
	335 257 l 
	cp 
	500 0 m 
	} 
ct_PSBuildGlyph 
} def 
end		
%%EndFile
setglobal
Adobe_CoolType_Core begin /$Oblique SetSubstituteStrategy end
%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get exec
Adobe_AGM_Image/ds gx
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 1 1
%%EndPageComments
%%BeginPageSetup
%ADOBeginClientInjection: PageSetup Start "AI11EPS"
%AI12_RMC_Transparency: Balance=75 RasterRes=300 GradRes=150 Text=0 Stroke=1 Clip=1 OP=0
%ADOEndClientInjection: PageSetup Start "AI11EPS"
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get exec
Adobe_AGM_Image/ps gx
%ADOBeginClientInjection: PageSetup End "AI11EPS"
/currentdistillerparams where
{pop currentdistillerparams /CoreDistVersion get 5000 lt} {true} ifelse
{ userdict /AI11_PDFMark5 /cleartomark load put
userdict /AI11_ReadMetadata_PDFMark5 {flushfile cleartomark } bind put}
{ userdict /AI11_PDFMark5 /pdfmark load put
userdict /AI11_ReadMetadata_PDFMark5 {/PUT pdfmark} bind put } ifelse
[/NamespacePush AI11_PDFMark5
[/_objdef {ai_metadata_stream_123} /type /stream /OBJ AI11_PDFMark5
[{ai_metadata_stream_123}
currentfile 0 (%  &&end XMP packet marker&&)
/SubFileDecode filter AI11_ReadMetadata_PDFMark5
<?xpacket begin="﻿" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 5.6-c145 79.163499, 2018/08/13-16:40:22        ">
   <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
      <rdf:Description rdf:about=""
            xmlns:dc="http://purl.org/dc/elements/1.1/"
            xmlns:xmp="http://ns.adobe.com/xap/1.0/"
            xmlns:xmpGImg="http://ns.adobe.com/xap/1.0/g/img/"
            xmlns:xmpMM="http://ns.adobe.com/xap/1.0/mm/"
            xmlns:stRef="http://ns.adobe.com/xap/1.0/sType/ResourceRef#"
            xmlns:stEvt="http://ns.adobe.com/xap/1.0/sType/ResourceEvent#"
            xmlns:illustrator="http://ns.adobe.com/illustrator/1.0/"
            xmlns:xmpTPg="http://ns.adobe.com/xap/1.0/t/pg/"
            xmlns:stDim="http://ns.adobe.com/xap/1.0/sType/Dimensions#"
            xmlns:stFnt="http://ns.adobe.com/xap/1.0/sType/Font#"
            xmlns:xmpG="http://ns.adobe.com/xap/1.0/g/"
            xmlns:pdf="http://ns.adobe.com/pdf/1.3/">
         <dc:format>application/postscript</dc:format>
         <dc:title>
            <rdf:Alt>
               <rdf:li xml:lang="x-default">Under construction landing page h2 up-02</rdf:li>
            </rdf:Alt>
         </dc:title>
         <xmp:MetadataDate>2019-05-11T00:03:36+07:00</xmp:MetadataDate>
         <xmp:ModifyDate>2019-05-11T00:03:36+07:00</xmp:ModifyDate>
         <xmp:CreateDate>2019-05-11T00:03:36+07:00</xmp:CreateDate>
         <xmp:CreatorTool>Adobe Illustrator CC 23.0 (Macintosh)</xmp:CreatorTool>
         <xmp:Thumbnails>
            <rdf:Alt>
               <rdf:li rdf:parseType="Resource">
                  <xmpGImg:width>256</xmpGImg:width>
                  <xmpGImg:height>256</xmpGImg:height>
                  <xmpGImg:format>JPEG</xmpGImg:format>
                  <xmpGImg:image>/9j/4AAQSkZJRgABAgEBLAEsAAD/7QAsUGhvdG9zaG9wIDMuMAA4QklNA+0AAAAAABABLAAAAAEA&#xA;AQEsAAAAAQAB/+4ADkFkb2JlAGTAAAAAAf/bAIQABgQEBAUEBgUFBgkGBQYJCwgGBggLDAoKCwoK&#xA;DBAMDAwMDAwQDA4PEA8ODBMTFBQTExwbGxscHx8fHx8fHx8fHwEHBwcNDA0YEBAYGhURFRofHx8f&#xA;Hx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8f/8AAEQgBAAEAAwER&#xA;AAIRAQMRAf/EAaIAAAAHAQEBAQEAAAAAAAAAAAQFAwIGAQAHCAkKCwEAAgIDAQEBAQEAAAAAAAAA&#xA;AQACAwQFBgcICQoLEAACAQMDAgQCBgcDBAIGAnMBAgMRBAAFIRIxQVEGE2EicYEUMpGhBxWxQiPB&#xA;UtHhMxZi8CRygvElQzRTkqKyY3PCNUQnk6OzNhdUZHTD0uIIJoMJChgZhJRFRqS0VtNVKBry4/PE&#xA;1OT0ZXWFlaW1xdXl9WZ2hpamtsbW5vY3R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo+Ck5SVlpeYmZ&#xA;qbnJ2en5KjpKWmp6ipqqusra6voRAAICAQIDBQUEBQYECAMDbQEAAhEDBCESMUEFURNhIgZxgZEy&#xA;obHwFMHR4SNCFVJicvEzJDRDghaSUyWiY7LCB3PSNeJEgxdUkwgJChgZJjZFGidkdFU38qOzwygp&#xA;0+PzhJSktMTU5PRldYWVpbXF1eX1RlZmdoaWprbG1ub2R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo&#xA;+DlJWWl5iZmpucnZ6fkqOkpaanqKmqq6ytrq+v/aAAwDAQACEQMRAD8A6XgQ7FXYq7FXYq7FXYqu&#xA;C4quC4quC4quC4quC4q3xxVvjirfHFXccVdxxV3HFWuOKtccVaK4qtK4qtK4qtK4qtK4qtpirsVd&#xA;irsVdirsVdirsVdirsVdirsVbAxVcFxVeFxVeFxVcFxVcFxVcFxVvjirfHFXccVb44q7jirXHFXc&#xA;cVa44q0VxVaVxVoriqwriqwriq0riqwjFWsVdirsVdirsVdirsVdirsVbAxVeFxVUVcVXhcVXBcV&#xA;XBcVXBcVXBcVXBcVb4Yq3wxV3HFXccVdwxVrhirRXFVpXFWiuKrSuKrSuKrCuKrGXFVhXFVhGKrc&#xA;VdirsVdirsVdirsVXAYqvVcVVFXFV4XFV4XFVwXFV4XFVwXFVwXFVwXFW+OKt8cKu44FdxxV3HCr&#xA;XHArRXFWiuKrSuKrCuKrSuKrCuKrSuKqbLiqxlxVTIxVbirsVdirsVdirYGKqiriqoq4qqAYqvC4&#xA;qvC4qvC4qvC4quC4quC4VbC4qu44Fb44q7hiruGKu4Yq1xxVorhVaVxVaVwKtK4qsK4qsK4qsK4q&#xA;sIxVYy4qpsuKqZGKrcVdirsVbAxVeoxVVVcVVAMVXgYqvVcVVFXFV4XFV4XCq4Liq8LgVcFxVsLi&#xA;rfHCrfHFXccVdxxVorgVaVxVaUxVaVxVYVwqtK4FWMuKqbLiqmRiqwjFVNlxVTYYqpkYq1irsVYw&#xA;8jcm+I9T3zo4xFPjWTJLiO55teo/8x+/Dwhh4ku8u9V/5j9+PCF8SXeW/Vf+Y/fjwhfEl3l3qv8A&#xA;zH78eEL4ku8u9V/5j9+PCF8SXeXetJ/OfvOPCF8SXeXetJ/OfvOPCF8SXeXetJ/OfvOPCF8SXeXe&#xA;tJ/OfvOPCF8SXeXetJ/OfvOPCF8SXeXetJ/OfvOPCF8SXeXetL/OfvOPCF8SXeXetL/O33nHhC+J&#xA;LvLvWl/nb7zjwhfEl3l3rS/zt95x4QviS7y71pf52+848IXxJd5d60v87feceEL4ku8u9aT+c/ec&#xA;eEL4ku8u9aT+c/eceEL4ku8u9aT+c/eceEL4ku8u9aT+c/eceEL4ku8u9aT+c/eceEL4ku8u9aT+&#xA;c/eceEL4ku8u9V/5j9+PCF8SXeXeq/8AMfvx4QviS7y71X/mP348IXxJd5a9V/5j9+PCF8SXeXeo&#xA;/wDMfvx4QviS7y2kjc1+I9R3wSiKZ48kuIbnmyc5zj7KuUYqxJz8bfM50keT4xl+o+9quFg6uKur&#xA;irq4q6uKurirq4q6uKurirq4q6uKurirq4q6uKurirq4q6uKurirq4q7fFXVxV1cVdXFXVxV1cVd&#xA;XFXVxV1cVbQ/GvzGCXJni+oe9lrDObfZ1yjFWHOfjb5nOkjyfGcv1H3tVwsHVxV1cVVLW2nurmK2&#xA;t15zzMEjSoFWY0AqaDBKQAss8WKWSQjEXKRoKdcLBWhtJ5lBhAkY8/3akF6RpzZuPWnHvgMgObbD&#xA;DKQ9O/PbrsLO3uUa4WpesZaJ5OSgIVBUsAx5V6L1NKb42yELBPcsrixdXFXVxV1cVdXFXVxV1cVd&#xA;XFXVxV1cVVYfRG7sCfCnTAWJV/Xh/mwUilvO19vuwp3WSCBqcWC+OxxUWhnkjQ0ZwPCppXCzjAnk&#xA;FjXKKK0Yj5U/4lTFmMRP4/Uh7q9njhaRIqdlLVqSf8kCuAlvw6eMpUT+PeqQXquoMg9MkA1P2SD3&#xA;rha8mAg7boiuLQ3XFW4z8a/MYJcmeP6h72YsM5t9mXKMVYVIf3jfM50keT41k+o+9bXCwV7G7a0v&#xA;be6X7UEiSAe6MD/DIyjYIbcGU48kZj+Eg/JlWoXWiQWV3BbTRyGwRoLQxkAyresrOR4+mvNT4VzF&#xA;hGRIJ68/g7/UZcEMcowkD4Y4Y1/F4lE/6UcQ+Kq+qaX+mtPaMqtqt8ktvO9zG4jtxX4FjVEMKdKq&#xA;7bU+ZwCEuE99d3X9LYdVh8fGRtDxAQTMGo91UOActif1oKHUJUe2WSaKfUQkyyzi5SJhG7J6Qjua&#xA;8EdeLEVOymntkzDn3e79DiwzkGNmMslSs8YBo1w1PkCN/cDXki7TUrW1mjWDUau096DMZArfvbON&#xA;Y+bjiKCYU59CV5ZCUCeY6D7z+hycOphjIEcm/Fk3v+djjVnb+L+LlYtCC9s4tHEbATSiKdL1PrcQ&#xA;Rp3Z+Mhj4O0zAFSro3am3efCTL5Vt0/Q4wzQjho+o8MhL1xriJNGqJkeVEHp8wGiXcUGn3FWh9f6&#xA;5ZyRRTkcWEfrcuQ/lFRy+eWZI2R7j+hxNFlEMcvp4vExkCXLbj+zvUvMLo91DIJ2mkeIGVWlW4Mb&#xA;cm+D1k2fahHhWnbDi5cv0fY19oEGYPFxEx39QlW524hz7/K66JVXLXAdXFXVxVosAKk0A7nFQLW+&#xA;vD/Ov3jFl4cu4u9eH+dfvGK+HLuLvXh/nX7xivhy7i714f51+8Yr4cu4u9eH+dfvGK+HLuK1rq3X&#xA;YyAnwG/6sWQwzPRr60p+zT5swA/ifwxT4J6/c71q9ZUUeAoT95P8MV4K6H8fjvWNLbg0MhkbwDfr&#xA;pRfvxZCE+6vh+C2rp2aOIHspBP39MVIPcZL1e2U1DqW/mLVP3nFgRM9Co3zBki4kEc61J22U9D4+&#xA;GAt2mFE33fpC61VXtIwQQVqATswoSMIY5pEZC2A8RoDxB6H9g/R+yfligkS/G/7VUTbhXHBj0r0P&#xA;yOLWYdRuqxn94vzGCXJcf1D3s2YZzb7K2oxVgsjfvG+Z/XnSR5PjeT6j71vLCwbBJNAKk9BitKws&#xA;r1pDGLeUyLIIWQI1RKa0jIp9o8Tt1yPEO9sGDITXCbuuXXu9/k29hfpNHC9tKs0oDRRFGDMD0KqR&#xA;U48Yq7SdPkBETGVnkKO6vcaJqkEtvA1u7XFxF6y26IxkVQ7JRkpUGqHIjLE2b2Dbk0OWJjHhPFIX&#xA;VG+ZG4+CgLG+MMkwtpTDESssgRuKlaVDGlBTkOuS4xdW1DT5KMuE0OZrkh+WSancsVdyxV3LFXcs&#xA;VdyxVD3ouHRRCoberVNOnTr774C5GnMATxIbhItVRFjRhSTkxqfEhiOp74uRxA7k2em36L5LxBN9&#xA;lY0+rk14cvwBp0OLDxY8yTxd9ft5u+rzn4HjVoVrxTlvv0qadu2K+LHmCeL3ft6u+r3DD96isVFI&#xA;yGoR/ldOuK+LAfST57fZz5OMFy3xsiesKcWDUAp2pTv3xXxYDYE8Pud6NyD6gjT1q7sW2IP7NKdM&#xA;V8SHKzw+77XehcrvGih2FJGLVrXv064r4sDzJrp+LWFHFUiReDUDqrcj9BptXvgZ8QO8ib6bV+no&#xA;tpOJRB9XAhJDcOQpvU0rTpt0xZXHh4uL1fj7VX6vOfgkjVolrwXlQ7+JpvTthavGiNwTxe79vV31&#xA;e5beRFLKKRsGpT/K6dcV8WA5E112+zmh7uSe3KSMigEkgKx2cjcjbv4YC5GCMclgE/sVrOa+a3Do&#xA;kZVixqxIO7GvQeOENOox4hOiTtX3OuotRuFC/AgHXixFfntibXDkw4ze5+CGvPrsFnHE7AKCRyVi&#xA;Sa1NDgLk6fw55DIfcu0i4vWlIQ+pQrtIxoN+3XB0TqceMGPTfoHqjDOdfTm1GKsAkP7xvmf150ke&#xA;T45k+o+9bXC1r4pAkqOdwrA0+RriWUTRBZfFreiw6i919bDrcaxFflRHJWOEeqTyqo+JfUFQtfau&#xA;YZxyMar+GvueijrMMchnxfVnjPkdo+rntz36X5Wl9lrFl+iUtJ5ylzKLxJJ2Dt6fr+gysxAJIf03&#xA;U0qd+mWSxnisctv0uHh1UPBEJH1HxN99uLgo/GiDz5ov9M6OLOOweSG5P1SGFp5luRCGinmcofS9&#xA;OXiVkUjbsNvCHhyu+W/l3D4OR+bw8Axkxl6Iizx8O0pGvTUqoj5cu4BretQXmnCFHX1PrkkrxxLI&#xA;qFRBDEj/ALwsTUo3U1798sx4yDfl+kuJrdXHJj4QRfGTtdfTAA733Hmb+aQ1y91Tq4q6uKurirq4&#xA;q6uKurirq4qt9OOtaUPiNj94xZ8Za4EdHYD6D+sHFeLyDdH/AJ/wGK2O5ri/+/D9AH8QcVsdzuFe&#xA;rsfpp+qmK8XcA70o+45f63xfrxXjK+uLFSY/v1+j9T4toHo/H9FVri0uriqX6zx9BK/a5bD2pvgk&#xA;7Ds++I+5EadxFnGF6UP31OIaNXfiG0RXC4zTKjijqGHgRXFlGRHItwJGki8FC1IrQAd8B5NkJkyF&#xA;nq9CYZzb7C5cVeeyn94/zP686SPJ8dyfUfetrhYL4Y5JpUhiUvJIwRFHUsxoBgJpMIGRAHMo86K/&#xA;rPGt3busCs91KpcpEFYIeXwVPxMAOAavbIeJ5FyvyZsgSjsPUd6j0327z0tUj8u3TG4Ms8EEdu0C&#xA;tJIzcW+sqXiZOCsSGVa9O/zwHKNvxyZx7PkeKzGIjw7m/wCLeNUDzU5dDuoIJpbmSO39GaW34OWJ&#xA;aWGhkVSqsu1f2iK9q4RkBOzCWilGJMiI1Ix+MeY2FfOr6Iy78sLHdzRQ6hA0NtbQ3M87iVQomEfb&#xA;0yTUygigO3vtkI5rHLmacnL2YIzIE41GMZE+ra+H+j57eXnsgpdEu4kncshWC2gu3oTvHcFAgG32&#xA;v3orkxkB+dfJxpaKYBO3pjGXwlw1/ugjLTy0j3c1rdX8EE0EM8k0Q9VmjeGMuVfihG1Pi4k9++2Q&#xA;lm2sByMXZoMzCc4xlGMiRvsYi6O3zq/nsh30WRlt2Vkiia1+tTXDMzIEEzQ8yAnIVYABQD/SXic/&#xA;fX2NR0ZPCRQHBxE2ariMb5Xz2rduPy7dMbgyzwQR27QK0kjNxb6ypeJk4KxIZVr07/PE5Rt+OSx7&#xA;PkeKzGIjw7m/4t41QPNLrq3mtbmW2mHGaB2jkXrRkPEjb3GWA2LDiZMZhIxlziaPwUq4WDq4q2oL&#xA;MFHUmg+nFCJ+oXH+T9+C2PGEO6sjlG6jrhZBbXFLq4q6uKurirq4qpMw+sKO+36mwNoHo/Hkq1wt&#xA;Tq4qhrstzjKtxoGLb8dttq9sBcnT1Rvy/SusmUw1UFVLNQHr1xDHUg8W/cFeuFodXFV0R/eJ8x+v&#xA;BLkzx/UPe9DbObfYnLirzqU/vX/1j+vOkjyfHcn1H3ra4WCraXUtrdQ3MJpLA6yxk9mQhh+IwSFi&#xA;mzFkMJCQ5xN/JMBrFkklwI7N1t71Cl3D61Sausi+m3D4OLoKVDe+V8B235OUNVAGVRPDMVIcXmDt&#xA;ttRHW25/MLyw3ERhAWV7UxDkfgjs42jROm9VYVP9cRioj4/ameuMoyFczCvIQBAHyKqfMiGfUrgW&#xA;7iTUXnZo/WPo0nrQSR8fjMfKqmo33weFsBfKmZ7QHFklwm8hl/F6fV3it66ct91lz5gjnguV+rFZ&#xA;7u2gtZ5PUBT/AEdouDKnAEVWGhBY7mvtiMVEb8jfzv8AWjJrhKMvT6pwjE77enhogV/R7/1NyeY0&#xA;exmh+rEXU1tBaNcCT4Qts8bIVTj1IiAPxe+3TEYt+e1k/NMteDAjh9UoRjd/zTGtq/o77t/4gtjq&#xA;Ml+bNvWu1mW+Alor/WEZJDGCh9P7ZIry39sfCNVfLl8F/PR8Q5OHeXFxb8+IEGttufmtbzBEUS3N&#xA;s31MWv1KSL1BzZBcNcIwfhQMrEfs9vfHwut73f2Ug64UI8Po4OAi964jMb1zuun3rZ/MLyw3ERhA&#xA;WV7UxDkfgjs42jROm9VYVP8AXCMVEfH7WM9cZRkK5mFeQgCAPkUFqd79e1K7veHp/WppJvTrXj6j&#xA;FqVoK0rk4R4QB3ONqc3i5JTquKRPzNoauSaVhmiBoXUEdRUYLZcJ7kZb3+nwioJ5kfEaqfu3wMDj&#xA;kVb9MWXif+F/rix8GTTatYspVjUHqPh/rivgyQEk9tzPpuAnapFcNtghLuW+tF/Ov3jG08B7netF&#xA;/Ov3jG14D3O9aL+dfvGNrwHud60X86/eMbXgPcpn6sZhKXHNRxG4xsNglLh4eip60X86/eMba+A9&#xA;zayI32WB+RrjaDEhD3ZX1Iq1r8XClPtbU67YlytPfDKvK/duqWpb0zzpy5Nyp0rXENeeuLblQVq4&#xA;Wh1cVXRH96n+sP14JcmeP6h73ozZzb7E5cVebSn96/8ArH9edJHk+PZPqPvW1wsHFgBUnYdcVpR+&#xA;uRe/3YLbPCLbXKqqsysFfdCRsQDTb6cHEE+DJb9ci9/uxtHhFWVwwBBqD0yTAim64odXFXVxV1cV&#xA;dXFUu8wzvFpUpRirMVWoNDRmAP4ZDIdnM0EBLKLYymi6q6h0sJ2RgCrCJyCD0INMxrD1HBLuLf6C&#xA;1f8A6t9x/wAiX/pjYXgl3F36C1f/AKt9x/yJf+mNheCXcXfoLV/+rfcf8iX/AKY2F4Jdxd+gtX/6&#xA;t9x/yJf+mNheCXcXfoLV/wDq33H/ACJf+mNheCXcVW18uavPdQwfUJ19V1TkYnAHIgVJIxMgyjjk&#xA;TVF9EXPlfy3dxwpfaXFIOJJd4Uc8QKKUJFR03Nc1gme96U4YHmEgu/yl8jXYUpB9VkZWZ2jkkWhH&#xA;QUYuv4ZYM8g0S0OI9KYZ5z/KzTtB0salaXFxdDlGFtAqSOwZ6MOSAcSFqd1y2Ocy22tw82ghAXZI&#xA;7mFnRrhpJmTTLwQsCbZTExYVPw8zx8PDL8ZPCOIji6uuzwPGfDB4b686U5bWfT4ILg2txbXSyEmW&#xA;RSkZG1FWoHvXGJlxE2OHp3pz48UsIiRLjN3f010rz/Huld0W5oAK1DA7V227d8zi8hgqjfl+lfYI&#xA;Xj4xVf4jQ9+vfEMdSfVvtsEz/Rb8K8xzp9mnfwrXG3E8RCywyxNSRaV6eGFmDa2I/vU/1h+vBLk2&#xA;Y/qHvektnNvsLlxV5pKf3r/6x/XnRx5PkGT6j71lckwacclK+IwKDSZ6J5p1nR7c29slvLERTjMr&#xA;N+0zVFGX+bKJ4BLm7XTdqzwiogEef9rY81a0rAokKj0RblP3hUx/FtRnO3xdBt4DHwAv8qz6Acq6&#xA;8vn+xTu/Mer3UdzHIkPC6Uo4o7EcuFSpdnav7od/1ChGABjk7SlIEED1fs7z5fjZLo14IFrWmXB1&#xA;sjZXVwodXFXVxV1cVdXFUr8yH/cU/wDrp/xIZXk5Od2d/fD4/c+kfL87w+U9FZQCTZWw3/4wrmjn&#xA;9RfTsJ/dx9wR5uL4LyMQp8j/AFyLZZUv0jP/ACr9x/rjS2iY7h2tWlIHIVoO22KbUfrs/wDxX9nl&#xA;3+7r1xRbjeziv93sA3fv269cVtSvbuQ2dwG4/YAHH/LIH8cVJSlwYjIKTRMkapTru1Kg9KA4WKjL&#xA;fQCd4BOkrrGsahl+IA9qfskeJzGlq8ccgxn6j8vm3jTTOPxK9LVyJlnEcUaFhxQ8DyUmg3rXvmS0&#xA;hldsZPSAkXiRsB7DAyeV/wDORn/KL6b/AMxv/Mp8ydLzPudX2r9A97zO8uYqK/IkLWoA61psembc&#xA;l8/0uMmxX43RFlMfR5pVORJAG2xPthDRqY1KuaI+sTf78b7zi0UFpmZ9mctTsTWmK1S6I/vU/wBY&#xA;frwS5NmP6h73pjZzj6+0uKvMZT+9f/WP686OPJ8gyfUfetrhYOrirq4q6uKurirq4q6uKurirq4q&#xA;6uKpLrzMJoqEj4T+vAXbdnD0n3qd+SfLiV/mX/k5kZ8k4R/hR/HR9O+XSo8saCW6fVLb/kyuaOf1&#xA;F9Fw/wB3H3BO8i3JPMVMrlfs1NMLBFwf7wP8mwJ6Ifx+x9j/AD/2WFDj+19j7A6fw98VVI7aK4Lx&#xA;ygFeKn4DQVwJphv5lLqmleXp7vTrp7ZRLGJCftMrErRTvvU1r4ZfpI8WSpbh1PbmWePTcWM8MrHy&#xA;8vNhnkDVvMWoaw7usd7HyU3lzOoaYAg8R6mzmvGlDXL9ZgxwHEB6+jrewu09bmPhSmZYY876XfL3&#xA;vU4dNvfrSu8Txpy5ME4/PbfNbjiQLPN6uZHTknNZf+LvuTLGDy//AJyKr/hTTK1r9cHXr/dPmTpe&#xA;ZdZ2r9A97ya63iO1for3GbV4fSc/x5orTr2JgtuAeYXluNqZINOswEHi6I+uFwEPE6rNLyIG/fAG&#xA;2Q2CKhasqf6w/XieTHH9Q9709s5x9faXFXl8p/ev/rH9edHHk+Q5PqPvWVwsHVxV1cVdXFXVxVDX&#xA;WoQW1A9S53Cr1pi5GHTTycuS61vYLkExk1HVTsRixzaeWPmsutSt7ZuDVZ+6rvT542zw6WeQWOSp&#xA;bXcNwnKM9OqnqMWvLhljNFWri1JNrv8AfRf6p/XgLtuzvpPvU79gPLyDxZQP+DrkZ8k4R/hR/HR9&#xA;NaL/AMojon/MHbf8mVzST+ovoeH+7j7giozNIREHNDtSppTItireWwi4sg+A7H54hJCtaqXsmUdT&#xA;UDAo5Kf1Of8AlT7PH+354rTjZz7/AApuAPu7/PG1pXtoJI3ZmCgEAUX2xSHmf54axplt5cutP+u2&#xA;0GsRCK/isZZCsk0JlMR4qSK/tGg3+HLsGQwNhwO0NHHUY+CRre9nmHlebz7peo+X57c2ptvMssYi&#xA;swCzNGhBaR9uSBEepIb6MnmzGfPo1aDs6GlB4L9Xf5f2vo7T47ma1WSWJORJoeTCoHfMZ2dIn6q/&#xA;++1/4NsbWnmP/ORYp5U0wdKXg2/54vmTpeZdZ2r9A97yOdw9uWH2SAd/mKdM2zxOnjUqP45qVrcr&#xA;b3Zkl3+Chp47Yhv1OIzhQ70zttUtp24CqP2DU3+WSt1mbRzgL5hCXd5FHMwPxGp2GRbsOnlONplp&#xA;11FP6ZjNeJUMD1Bwnk48sMoZAD3vV2znH1lpcVeV3U0cTyPIwVeR3PzzoxyfJDAymQB1U4riGUVj&#xA;cN8sNsZ45R5hUriwWrIrVp2ND9GKSKXVxQ6uKsZuJTNM8h/aNR8u2RejxQ4YgLrOcwXCSDpWjD2O&#xA;LHUY+OBCnI7SOzsasxqT88WyMREUETpcxjvEFfhf4WHz6fjhDjayHFjPkml5qKWzqjIW5CtRht1u&#xA;DSnILBSq/vFunVgpXiKb4HZ6bAcYIJRw0rUdT0dILC3e4lSkjIgqQqsanMTWavFhiDkkIgnqy0Ol&#xA;yZtVLgiZUOj6S0X/AJRHRP8AmDtv+TK5rJfUXu8P93H3BHWcsEQLOfjOw2OwyLYFeS6tZEKMxofY&#xA;4pt1q/C0ZuvGp+dMUBr67J/vn9nl9rt49MVtxvZBX9z0AY/F2P0YptVhuGkcqycCAD1r1xW3kPnL&#xA;SNK80fmVcWeqWzSQW9ittAUIUmeJ0m+IlT/uu7JGZUPTjuhduvn683CSQK6d/wCCpedvK2m+X9K0&#xA;3VtMkvvr9lIEsOdyzLHCkLzSxxqAtA0MDLxG1MOKXEaIHyY6mBxxuJlfv+L1DStSYwuqxFow1YjU&#xA;n4D9ntmJTsRJNYJTKnIrw3pQ4pDzD8/rR73y/pVtE6K8t6QrO3FaiGQ7t9GXYMgFy6U4OvwSycMI&#xA;j1E/oeLcj9XUduArvTNw8TjHrPvQstOfw9ABT7sLlhYCQQRsR0xUi22YsxY9TucVAoUjNHnaK/ip&#xA;0dgrD5nE8mjUYxKPuL3Js519BWrirxXX3Y3gj7CpA9yxH8M6IcnznRxHqP8ASWaMxFw69itfuIwh&#xA;h2hH0g+ab1wupQsTAXTV7k0+/Ijm3SHpRRcAEk7DrkmkBak8bmitWm/fG0mJDHVj/e8D1BpTxoci&#xA;9GDYtyIWlVRtyag+/FE5VEl0aVah7dQcWRKpZil1ETsAeRPsMWnUn92VbVZo5ZkKMGAWhI+Zwlo0&#xA;MDGJvvQWBzla3PmSTWNLtbT63BZXDRqzQPJGki+qRIzPH047jfp1zSdpZMUieLhPAOtdd+vfs9J2&#xA;HoskRxRv97LnvyG32bvpzSXuE0TTdORfUkgiihe4qShZUCkgnenfc5hxyGX0ig7jwxEDiNlOU0zj&#xA;GOchZx1NKZfGwN2uQFoLJMUdB/vA/wAmwJ6Ifh1/d/sV6/8ADf2YUOKfa/d0ogPXp74qibIUmcce&#xA;PwjatcBSHjupS+SLrzNJf6w9nNcya9cwXyTqWYWsNu1pFzrX4VlhQj55mw4xGh/NdTPwzO5V9Z+V&#xA;U3qdl+Vs2p6XbwHTorYQXj3kyRKBzVFihDbbkmUuv+rXGMsoB5pyRwGQA4a3Z95E1Fbjy7pUqTAP&#xA;JYQesAhP71F4v0/ysxsoqZ97n6eV44nyR/mDXtLsbGVL+/SH1EIWLi3qNUdAo+LfMbNGMomMuRdl&#xA;o9LmyyHhxv7vnyeJ+b/M803l9bETS3kFk8s0VzcLGsxeWqLURhUoit2ArlGjxRjWOA4Y35/pd9qd&#xA;GdHp8moyevLGJEfLi9Pl37nuYRE7FWq1KUA7fRnVvjXAAbWSD95v8NQNvDbFmGpFo1KdAK/OmKhu&#xA;JQzfrGKlW05Sb+3/ANdT9xwHkwymovdWznnvVqnFXjWsIGuuQ+0rEGvQiudF0fNNNkqUgeVqenRF&#xA;JHYihKkAe1cQw1mUSoBRa9WN/hHJl8elcQzhpDIb7BDm7uC5fmQSSdvfFyxp4AVTcl7cyABn6dOg&#xA;xRHS4x0U/Wl3+M/FsRXqMWwYojo6P+8X5j9eLMtMxLE98VpuI/vATip5Ii1mhQNzqZX2DdgK4uJq&#xA;cc5cuQQuLmOxVl+i/mBounaXFZ3EU4mtxxPBVYNU1qCWXx75y2u7EzZcxnExqX47nu+yvaPT4NPH&#xA;HISuI6Afre8+VJDc+UNDuIhzDW0Eh6A7oCcyuDh9Pc1RnxxEu/dOXuJVX4oSAdq8h1O2LK0F9Tuf&#xA;5D94w2xpFxRSLZuhWjmtB88DJDGB+XH0jyK7Dl3H7WFi2baXf9yegA+Lv44ppVhH1cSzSr6USJyY&#xA;k1oFFSdsC8nk8etTxeRtOlfTNSWW29DVXnMVIQzXa3kj8q/ZZeQqfHMsR9fMd32U6w5KwjY7Uftt&#xA;NY9ell826jP+jdUYQWUVqsQiBkRrmZ5H5ivwhgqcd98gcfp5jm3DNeQmpbDuTbyTK82nPbCG6gW2&#xA;vr639N+MbqkkzTxoy9iI3XIaiNn3gNukl6fdI/faYzeRfLs08k8uns80hLO7PyJJ6/aqMx/Di7cd&#xA;p6gRERMgDu2eEeZZNO06e+sryZIxFJLAykgt8LFdlG5OUQjIS2HJ7HUa3TZNMRllGpw3HXcd3Njk&#xA;UcvpllUHlQqdvvzqXwaWxpqaOQEM3gATUdaYqC2V5dTQIq0HjUDAWnLPhG3VbGP3gOAFEMu1FGaY&#xA;n7+OQ7sXUfiMSdmjNl4pADk9tY5z76SsU4q8MlhcyMRSlTTOhDwvE2sRpv1xTxN+livE70sV4nel&#xA;ivG70sV4nLHRh88VMnNF1NMV4lBmFTTphW3IwHXpitpkuh6m2lnVRayfo4P6ZuuJ9Pn4Vynxo8fB&#xA;/F+OvL4OR+XyeF4tei65j7udefK9kJ6WWuPxsl0zy35Wby9b6xqkDu7X4tp+MjKGjK1JoCN1G+3h&#xA;mvy5svimED/Dbt9PjwjAMkx/Hw8+iZ6/5t89+VdUk0XRNSW30e3CHT4TFA/CJlBC8nidjQ1FSxyG&#xA;lgMsBKX1dWzXamenynHE1EcuXJlPlfzBcXejrf3FwL7zLehhMypx9NUJFSFVFFFA6DfNRqsXhZJm&#xA;G+SX2B6fs7VfmMOMZDWON3t9Rs93yTBruyFuumWszekavqd8Eeg/mUtx6/5+OYxw1EY4nY/XJz46&#xA;kGZyzHqH0Ro/Dy/HuXPqelzSo8paLRrH/edSj0mkWu42+Lp9P05MwEpC9sUOXmWEc3BA1ZzZPqNH&#xA;0j8d36lyaoi+tqtwjtfv+7srP035oprQ8eNexJ/twR4gTkkP3h+mPcEyMDGOKJrEN5yo7l5xffmj&#xA;+ZkF7cQW+qiO3ikdIY2gg5KisQoPKEtUDx3zodPprxx4h6uEX76eJ1vaUhnmIS9HHKthyvbnugNR&#xA;/NL8zZrC4hn1dWhmjaORRBbglXHEgEQgjr2OXDTRG9ON/KWWW3F9gQ0vn/8AMaXS5dKkv0bT5rf6&#xA;m8PpW4/ccCnCoi5fZPUGuSGniDdMT2hMx4b25cgtsfzH/MQXN1fQaoBLePE1w7Q25LGBAidYj0A7&#xA;YnTQKf5QyRPPc+5WtvzI/MeC5umg1RI5LmZbq4Po2/xSGNYuVPRNPgiA22+nGWmia2WPaOQWb5+Q&#xA;R3/K1/zU/wCrwn/Ii2/6oZH8rHuT/KmX+d9geYX3129ku9Uu39WWe5ZrmXuZHJZ2oABuzZi+Htfm&#xA;7Yai5iPUxtlPrCNFXYClFzaB5ciyqatpOr6ZNEup2slrJNGssayqVLIdgaHK8WaOQHh6OTn0s8JA&#xA;mKsXzB+7r5c0Kh50B3b+AyxoulVY6MDigyckXxr8xikye4sc557lYpxV448R5GgrvnQvnok16OK8&#xA;bfpYV43elivG0Ij4YF4nejivG36WFeNoxHsK4F41n1SP+XCnxC39UiH7IwKJkvUIo/L/APgX9DG8&#xA;vxO1vzNtWP0PrJ/eAcevH1c5KXaEPzHHc/q/za5fc+mQ7HyfkPB4cd8H+df1fe8o9LUKnZB9+dWC&#xA;S+bkxGxtNLvUrubQ7LTI4xGLV3kkatRI8n7RFBTiNhmPDDMZJTNb/Y5mXV45YY4wCOEknzt2s6le&#xA;alHZFolS5tbdLaSQtUOsdeLUoCDvvvjgwyxmW44SbRqtZjyiOx4oxEffTPPJet6daeXY7O3lrrci&#xA;SG4JRgIok5OzBqUNEFdt/wBWanWaPLGUpwHqmee23R6rsntXTSx48eWVRxRJ4aO/M91fjzR0vm3y&#xA;r6UGmQ3xSx+3eXHpTcpD1pThXfMeXZeWhiiPR/EbG/2uZD2j0vFLNKd5OUY8MtvspU/xt5WmvhLN&#xA;c8LOyFLK2EUvxsB9o/DQdNq5P+T80p3KPoh9Isb/AGtf8vaSGLhjkvJk+uVS28vp+a63826ULC81&#xA;wz+reF1gUcH4w8wxQbrvshO2Vx0WojczG8suQsbD5/j5t8u2NFIRgJ1gh9R4Zeo/K/x7nkmpPfXG&#xA;pXU6lWSaaSRXatSGYkE++dDpoTjjiJfUIi/fTwuuzYp55yh9MpyI9xOyEbTtavWFrbQiWRiGAUV2&#xA;U8j3HhhzZhjjxSNBGkwHPMQxgykeik8GuI7I4VXUlWUx0II2IPxZOMrFjkWqYjEmJ2IU4LfVIYgi&#xA;oAASaUB6mvjk78mJlAnmqJFqfq82UVYBSaAdDXx98bKDKCu0WpcTxEfKm1a0r74N0CcL3tAR6Rqa&#xA;6bLas0PqSlizgGgLHqAfDKhiPCQ5ctbA5RMXtX2J15b0szalYWmonlZKyC5kWnqGNKcyK7VIHfKt&#xA;Vm8HEZE8h8W7s/B+a1MYxH1Ss91cyz38zP0LqdlaXNtdXl1cWzlGF2VIEbjqCtP2lGafsfVQ8QwB&#xA;keIfxeXc9T7UaLJ4McnDAcB/g7j3/ED5vPktUQ1UUrnSvAHIuMXgK4F421i+IdtxivG9kY5zz6Es&#xA;U4q8qMW5zonzTja9LFeN3pYV43elivG70sV43elgXjd6WFeN3pYrxu9LAvG00AYEEVB6jGlGSl3p&#xA;v/M33nKvy+P+aPk5P8oZv58vmVqwBRRQAPAZbTjHJbfpYrxuMRoaCp7DFeNX0bULmwu3ne15hoJo&#xA;QFcVrLGyA7+HLK5xMg5WDPCErvoR8xSA/wBMH+6B/wAEMnu03Hvd/pn++B/wQx3Rce9Hw6hcx6Lc&#xA;6ebask88UyvzFAI1cEH588gYniBb454DGYXzIPyv9aEiSZq+pGE8KGuWC3HlIdC9E/KjSNT+sXmq&#xA;2UltE0ai2Vripryo7cQvhRfvzUdqZJ7RgQDz3es9lsMCZ5MgkR9Ir5n9CS/mJo93ZeZZpblome9U&#xA;XJaCvCrEq3XvyUk/PMns6cpYqkQZDudb7Q4o49STAEQkARfyP27/ABYz6WZ7o+N3pUwLxu9LCvG7&#xA;0sV43egKhv2h0PcVyMoCQoi2cM8oG4kg+Tmi5DixLDuCSRkI4YA2APk2T1uWQoykR7y70staON3p&#xA;YrxtiKhGBeN6sxznX0tYpxV5uYa50b5Xxu9HFHG70sV43elivG4QUxXjd6WK8bvS7d8V4nGGuK8b&#xA;vRxXjd6WK8bvSxXjcIKYrxu9LFeN3pYrxOMNcV43CHFeN3pYrxu9KuK8bvQ3rivGi7HUbm1txF9X&#xA;RmqSzCQqCT7FG/Xmh13Y0tRkMzOvh+17bsf2vx6HAMUcRO9k8QFn/Sny6rL+8nuzHWFIyp3bmWJU&#xA;9gOK5kdm9mS0xPq4hLpVfpLhe0HtHj7RjH92YThe/Fex6fSEOYa5tnluNwhxXjd6WK8bvSrivG70&#xA;N64rxu9LFeN3pYrxOMNcV43CGmKRN6QxznH1RaMVYJwUDfOkfIyTbuC9iPvxRxFvgviMV4i7gviM&#xA;V4i1xTxxWy7gO5H34rxFvgviMV4i0UQd8Vsu4L2I+/FeIt8F8RivEXcF8RivEWuCeOK2XcB3I+/F&#xA;eIt8F8RivEWuC+OK2XcFpsR9+K2W+C+IxXiLuC+IxXiLXBPHFbLuA8R9+K8Rb4L4jFeItcF8Ritl&#xA;3BabEffitlvgviMV4i7gviMV4i1xTxxWy7gviPvxXiLuC+IxXiLuCeIxWy7gCNt8Ugm2eE5zb641&#xA;iqRa7o1xqMoC/DGvfxxVLF8kz/zjFVZPJTCgZ9/apGKqy+SP8r9Y/jiqIXyPD/N+JxVVTyPbd2/H&#xA;FVVPJFoP2q4qrDyTZdyMVXr5IsP5vwGKqg8lWHj+A/phVUXyZp3eh96YFVF8m6b3A+7FV48naZ4D&#xA;7sVXjyhpnhirZ8paYVI49RiqkfJmm12QU+j+mFVv+DLD+Vf8/owK1/g2w/lX/P6MVWt5MsT+ytP8&#xA;/bFVh8l2H8q4qsbyVY06KPen9mFVM+SLLx/V/TAqxvJNmOm/3Yqov5Jtj4j7sVUH8kReJ9tx/XFV&#xA;J/JC02NPpr/HFVJvJP8Alfr/AK4qoS+SXG6ufkP8ziqg3kyb+dvu/sxVNNA0ifT5Sr1ZD0anQ4qn&#xA;2KuxV2KrgcVVFbFVRWxVeDiq8Niq8Niq8Niq8Niq8NirYbCq4NgVsNiq7nirueKu54q7nirRbFVp&#xA;bFWi2FVpbAq0tiqwtiqwtiqwtiqwnFVNmxVTZsVU2OKrcVdirsVdirsVXA4qqK2Kr1bFVQNiq4Ni&#xA;q8Niq4Niq8Niq4Niq4NirfLCruWBW+WFXcsVdywK1ywq1ywKtLYqtLYqtLYqsLYqtLYqsLYqsLYq&#xA;ps2KqZOKrcVdirsVdirsVdirsVXA4qvDYqvDYqvDYqvDYquDYquDYquBJ6b4quDEmnfFW+eKthiT&#xA;Qbk9BirZJAqRsemKr4IpZ5VijFWY0Hh9OKtyW9zHIIniYSMaKtDUkGm3j9GKqJahoeoxVoFmYKoJ&#xA;ZjQAbkk4q1IHRuLqVbY8SKHcVHXFVhbFVpbFVpbFVpbFVhbFVMtiqwtiq3FXYq7FXYq7FXYq7FXY&#xA;q7FWwcVXhsVXhsVXhsVXBsVXBsVR1jfW8EMqSR8netCApqCjLxqd13NdsKoptWsTMXFuAoKleKKp&#xA;HFq9antt03xVua/sESExqj1A9RBGvwr8FVqQKk8W3xV0erWKtGfQC8FWjKilgQVJG53rxO/XfFVt&#xA;tqFp6QilSvxHdlWgDMCTy3b7NRtirdhq8dreStxItpKKFXqAuynYrvTriq+411X1EXMasI0jdFDA&#xA;E1YHehrTcjG1bXWtO4EPaKx5IQeCfZWlfxrjaqp1nSQBILYFjJy4KiggLwoa/QemKpdqeoW90IvS&#xA;QoyKFeoX4iFA5VG/alMVS8tgVaWxVaWxVYWxVYWxVYTirWKuxV2KuxV2KuxV2KuxV2KuxV2Kuriq&#xA;4Niq4Niq8Niq4Niq4NirfLFW+WKu5Yq3yxV3LFWuWKu5Yq1yxVotiq0tiq0tiq0tiqwtirROKtYq&#xA;7FXYq7FXYq7FX//Z</xmpGImg:image>
               </rdf:li>
            </rdf:Alt>
         </xmp:Thumbnails>
         <xmpMM:InstanceID>xmp.iid:f74bd775-e0e4-4bfe-9ec7-190bfc833716</xmpMM:InstanceID>
         <xmpMM:DocumentID>xmp.did:f74bd775-e0e4-4bfe-9ec7-190bfc833716</xmpMM:DocumentID>
         <xmpMM:OriginalDocumentID>uuid:5D20892493BFDB11914A8590D31508C8</xmpMM:OriginalDocumentID>
         <xmpMM:RenditionClass>proof:pdf</xmpMM:RenditionClass>
         <xmpMM:DerivedFrom rdf:parseType="Resource">
            <stRef:instanceID>uuid:e76d4eb2-58a3-8244-bc50-b868f0013d67</stRef:instanceID>
            <stRef:documentID>xmp.did:3e868c42-0689-48ed-b877-3a4ca4d2d460</stRef:documentID>
            <stRef:originalDocumentID>uuid:5D20892493BFDB11914A8590D31508C8</stRef:originalDocumentID>
            <stRef:renditionClass>proof:pdf</stRef:renditionClass>
         </xmpMM:DerivedFrom>
         <xmpMM:History>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:9055feea-6df3-418a-84b0-35eb367eec15</stEvt:instanceID>
                  <stEvt:when>2016-04-18T22:41:34+07:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC 2015 (Macintosh)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:f74bd775-e0e4-4bfe-9ec7-190bfc833716</stEvt:instanceID>
                  <stEvt:when>2019-05-11T00:03:36+07:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC 23.0 (Macintosh)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
            </rdf:Seq>
         </xmpMM:History>
         <illustrator:StartupProfile>Print</illustrator:StartupProfile>
         <xmpTPg:HasVisibleOverprint>False</xmpTPg:HasVisibleOverprint>
         <xmpTPg:HasVisibleTransparency>True</xmpTPg:HasVisibleTransparency>
         <xmpTPg:NPages>1</xmpTPg:NPages>
         <xmpTPg:MaxPageSize rdf:parseType="Resource">
            <stDim:w>500.000000</stDim:w>
            <stDim:h>500.000000</stDim:h>
            <stDim:unit>Pixels</stDim:unit>
         </xmpTPg:MaxPageSize>
         <xmpTPg:Fonts>
            <rdf:Bag>
               <rdf:li rdf:parseType="Resource">
                  <stFnt:fontName>FiraSans-Light</stFnt:fontName>
                  <stFnt:fontFamily>Fira Sans</stFnt:fontFamily>
                  <stFnt:fontFace>Light</stFnt:fontFace>
                  <stFnt:fontType>Open Type</stFnt:fontType>
                  <stFnt:versionString>Version 4.203;PS 004.203;hotconv 1.0.88;makeotf.lib2.5.64775</stFnt:versionString>
                  <stFnt:composite>False</stFnt:composite>
                  <stFnt:fontFileName>FiraSans-Light.otf</stFnt:fontFileName>
               </rdf:li>
            </rdf:Bag>
         </xmpTPg:Fonts>
         <xmpTPg:PlateNames>
            <rdf:Seq>
               <rdf:li>Cyan</rdf:li>
               <rdf:li>Magenta</rdf:li>
               <rdf:li>Yellow</rdf:li>
               <rdf:li>Black</rdf:li>
            </rdf:Seq>
         </xmpTPg:PlateNames>
         <xmpTPg:SwatchGroups>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Default Swatch Group</xmpG:groupName>
                  <xmpG:groupType>0</xmpG:groupType>
                  <xmpG:Colorants>
                     <rdf:Seq>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>White</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>255</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>Black</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB Magenta</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=251 G=176 B=59</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>251</xmpG:red>
                           <xmpG:green>176</xmpG:green>
                           <xmpG:blue>59</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=46 G=49 B=146</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>46</xmpG:red>
                           <xmpG:green>49</xmpG:green>
                           <xmpG:blue>146</xmpG:blue>
                        </rdf:li>
                     </rdf:Seq>
                  </xmpG:Colorants>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Color Group 8</xmpG:groupName>
                  <xmpG:groupType>1</xmpG:groupType>
                  <xmpG:Colorants>
                     <rdf:Seq>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=247 G=150 B=99</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>247</xmpG:red>
                           <xmpG:green>150</xmpG:green>
                           <xmpG:blue>99</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=22 G=216 B=216</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>22</xmpG:red>
                           <xmpG:green>216</xmpG:green>
                           <xmpG:blue>216</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 G=172 B=179</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>172</xmpG:green>
                           <xmpG:blue>179</xmpG:blue>
                        </rdf:li>
                     </rdf:Seq>
                  </xmpG:Colorants>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Color Group 1</xmpG:groupName>
                  <xmpG:groupType>1</xmpG:groupType>
                  <xmpG:Colorants>
                     <rdf:Seq>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=37 G=188 B=175 1</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>37</xmpG:red>
                           <xmpG:green>188</xmpG:green>
                           <xmpG:blue>175</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=15 G=114 B=146 1</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>15</xmpG:red>
                           <xmpG:green>114</xmpG:green>
                           <xmpG:blue>146</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=239 G=95 B=122 1</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>239</xmpG:red>
                           <xmpG:green>95</xmpG:green>
                           <xmpG:blue>122</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=240 G=136 B=121 1</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>240</xmpG:red>
                           <xmpG:green>136</xmpG:green>
                           <xmpG:blue>121</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=248 G=169 B=113 1</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>248</xmpG:red>
                           <xmpG:green>169</xmpG:green>
                           <xmpG:blue>113</xmpG:blue>
                        </rdf:li>
                     </rdf:Seq>
                  </xmpG:Colorants>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Kulit</xmpG:groupName>
                  <xmpG:groupType>1</xmpG:groupType>
                  <xmpG:Colorants>
                     <rdf:Seq>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=238 G=215 B=186</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>238</xmpG:red>
                           <xmpG:green>215</xmpG:green>
                           <xmpG:blue>186</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=224 G=189 B=150 1</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>224</xmpG:red>
                           <xmpG:green>189</xmpG:green>
                           <xmpG:blue>150</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=39 M=59 Y=77 K=25 1</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>132</xmpG:red>
                           <xmpG:green>94</xmpG:green>
                           <xmpG:blue>64</xmpG:blue>
                        </rdf:li>
                     </rdf:Seq>
                  </xmpG:Colorants>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Color Group 2</xmpG:groupName>
                  <xmpG:groupType>1</xmpG:groupType>
                  <xmpG:Colorants>
                     <rdf:Seq>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=58 G=77 B=87</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>58</xmpG:red>
                           <xmpG:green>77</xmpG:green>
                           <xmpG:blue>87</xmpG:blue>
                        </rdf:li>
                     </rdf:Seq>
                  </xmpG:Colorants>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Color Group 4</xmpG:groupName>
                  <xmpG:groupType>1</xmpG:groupType>
                  <xmpG:Colorants>
                     <rdf:Seq>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=191 G=193 B=191</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>191</xmpG:red>
                           <xmpG:green>193</xmpG:green>
                           <xmpG:blue>191</xmpG:blue>
                        </rdf:li>
                     </rdf:Seq>
                  </xmpG:Colorants>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Grays</xmpG:groupName>
                  <xmpG:groupType>1</xmpG:groupType>
                  <xmpG:Colorants>
                     <rdf:Seq>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=0 M=0 Y=0 K=100</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>35</xmpG:red>
                           <xmpG:green>31</xmpG:green>
                           <xmpG:blue>32</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=0 M=0 Y=0 K=90</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>65</xmpG:red>
                           <xmpG:green>64</xmpG:green>
                           <xmpG:blue>66</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=0 M=0 Y=0 K=80</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>88</xmpG:red>
                           <xmpG:green>89</xmpG:green>
                           <xmpG:blue>91</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=0 M=0 Y=0 K=70</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>109</xmpG:red>
                           <xmpG:green>110</xmpG:green>
                           <xmpG:blue>113</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=0 M=0 Y=0 K=60</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>128</xmpG:red>
                           <xmpG:green>130</xmpG:green>
                           <xmpG:blue>133</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=0 M=0 Y=0 K=50</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>147</xmpG:red>
                           <xmpG:green>149</xmpG:green>
                           <xmpG:blue>152</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=0 M=0 Y=0 K=40</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>167</xmpG:red>
                           <xmpG:green>169</xmpG:green>
                           <xmpG:blue>172</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=0 M=0 Y=0 K=30</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>188</xmpG:red>
                           <xmpG:green>190</xmpG:green>
                           <xmpG:blue>192</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=0 M=0 Y=0 K=20</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>209</xmpG:red>
                           <xmpG:green>211</xmpG:green>
                           <xmpG:blue>212</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=0 M=0 Y=0 K=10</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>230</xmpG:red>
                           <xmpG:green>231</xmpG:green>
                           <xmpG:blue>232</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=0 M=0 Y=0 K=5</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>241</xmpG:red>
                           <xmpG:green>242</xmpG:green>
                           <xmpG:blue>242</xmpG:blue>
                        </rdf:li>
                     </rdf:Seq>
                  </xmpG:Colorants>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Freepik logo</xmpG:groupName>
                  <xmpG:groupType>1</xmpG:groupType>
                  <xmpG:Colorants>
                     <rdf:Seq>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=249 G=251 B=252</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>249</xmpG:red>
                           <xmpG:green>251</xmpG:green>
                           <xmpG:blue>252</xmpG:blue>
                        </rdf:li>
                     </rdf:Seq>
                  </xmpG:Colorants>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Color Group 5</xmpG:groupName>
                  <xmpG:groupType>1</xmpG:groupType>
                  <xmpG:Colorants>
                     <rdf:Seq>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=251 G=209 B=91 1</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>251</xmpG:red>
                           <xmpG:green>209</xmpG:green>
                           <xmpG:blue>91</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=236 G=130 B=125</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>236</xmpG:red>
                           <xmpG:green>130</xmpG:green>
                           <xmpG:blue>125</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=96 G=107 B=241</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>96</xmpG:red>
                           <xmpG:green>107</xmpG:green>
                           <xmpG:blue>241</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=135 G=140 B=240</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>135</xmpG:red>
                           <xmpG:green>140</xmpG:green>
                           <xmpG:blue>240</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=177 G=178 B=243</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>177</xmpG:red>
                           <xmpG:green>178</xmpG:green>
                           <xmpG:blue>243</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=86 G=84 B=140</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>86</xmpG:red>
                           <xmpG:green>84</xmpG:green>
                           <xmpG:blue>140</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=17 G=43 B=70</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>17</xmpG:red>
                           <xmpG:green>43</xmpG:green>
                           <xmpG:blue>70</xmpG:blue>
                        </rdf:li>
                     </rdf:Seq>
                  </xmpG:Colorants>
               </rdf:li>
            </rdf:Seq>
         </xmpTPg:SwatchGroups>
         <pdf:Producer>Adobe PDF library 15.00</pdf:Producer>
      </rdf:Description>
   </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                           
<?xpacket end="w"?>
%  &&end XMP packet marker&&
[{ai_metadata_stream_123}
<</Type /Metadata /Subtype /XML>>
/PUT AI11_PDFMark5
[/Document
1 dict begin /Metadata {ai_metadata_stream_123} def
currentdict end /BDC AI11_PDFMark5
%ADOEndClientInjection: PageSetup End "AI11EPS"
%%EndPageSetup
1 -1 scale 0 -500 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 500 li
500 500 li
500 0 li
cp
clp
500 500 mo
0 500 li
0 0 li
500 0 li
500 500 li
481.643 420.689 mo
481.643 420.689 li
481.643 405.624 li
483.436 405.624 li
483.436 400.627 li
483.436 400.627 li
483.436 399.555 li
483.436 399.555 li
483.436 374.864 li
483.436 374.864 li
483.436 373.792 li
483.436 373.792 li
483.436 349.1 li
483.436 349.1 li
483.436 348.028 li
483.436 348.028 li
483.436 328.308 li
483.436 288.566 li
483.436 94.376 li
16.5645 94.376 li
16.5645 405.624 li
18.3564 405.624 li
18.3564 410.638 18.3564 415.653 18.3564 420.667 cv
18.3564 420.689 li
18.3745 420.688 li
29.3803 420.321 40.3863 419.955 51.3921 419.588 cv
60.8502 419.3 70.3081 419.012 79.7661 418.724 cv
98.6831 418.174 117.601 417.655 136.518 417.209 cv
174.351 416.322 212.193 415.595 249.989 415.539 cv
250.009 415.539 li
287.806 415.595 325.648 416.322 363.48 417.209 cv
382.398 417.655 401.315 418.174 420.232 418.724 cv
429.69 419.012 439.148 419.3 448.606 419.588 cv
459.612 419.955 470.617 420.321 481.623 420.688 cv
481.643 420.689 li
false sop
/0 
[/DeviceCMYK] /CSA add_res
level3{
gsave
clp
[283.483 0 0 283.483 250 250 ]ct
/0 
<<
/ShadingType 3 
/ColorSpace /0 /CSA get_res
/Coords [0 0 0 0 0 1 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~zzz!<<*"!W`<%!s&H'"9JW)"Tni,"Tnl-"p>&/#6Y21#R(A3#mCM5$3g_8$3ph:$O6t<$j[.>%LEIB%g
i[E&./gG&IT$J&e#6M'+GHP'FkZS'b1fU((V#X(D%5[(_ID])%dP_)\Nkc)\Wte*"s+g*>B=j*YfOm*u
5ap+;Yss+Vu't+rD:",T.U&,oRg)-6"$,-QF6/-laB1.30Q3.NTc6.j#u9/Kc;=/g)G?0-MYB0-VbD0d
A+I1F4LN1aOXP2'sjS2CL-W2^p?Z3%6K\3[uf`4"E#c4=i5f4Y8Gi4t\Yl5;+ko5qb+r~>
/BitsPerSample 8 
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 0 1 ]
/Size [64 ]
>>
]
/Bounds []
/Encode [0 1 ]
>>
>>/Gradient add_res /0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[283.483 0 0 283.483 250 250 ]ct
clp
/0 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 4 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~zzz!!**$!<N<(!WrN,!sA`0"9\i1"9er4"U5/8"pYA<#7(S@#RLeD#mgnE#mq"H$4@4L$O[@O%1NdW%L
s![%hB3_&.fEc&J5Wg&eYik',)&o'GM8s'bqK"()@]&(Ddo*(`4,.)B'M4)B'P6)]Kb:*#oq=*??.A*Z
c@E+!2RI+<VdM+X&!Q+sS<X,U=W],paia-71&e-RU8i-n$Jm.4H\q.Olnu.kE5'/M/P,/hSb//hSb/0/
#"50ekF=1G^gC1c.$G2)R6K2E!HO2`EZS3&ioY3]];_4$,Mc4?P_g4Ztqk5!D.o5<hCu~>
<~zzzzz!!**$!<N<(!WiE)!WrN,!s8W-!sA`0"9\i1"9er4"U5/8"pP89"pYA<#6tM?#RC_C#mgnE#mgqG
$47.K$O[@O$k*RS%1NaU%1NdW%Ls![%hB3_&.fBa&.fEc&J5Wg&eYfi&eYik',)#n'GM5r'bqH!()@Z$
()@Z%(Ddl)(`4)-)&X;1)B'M5)]K_8)]K_9*#oq=*??.A*Zc@E+!2RH+!2RI+<VdL+X&!P+sJ3T,9nHZ
,U=W\,pai`-71)f-n$Jl-n$Jl.4H\p.Olnt.k<,#/1`>'/M/P+/hSb//hSb/~>
<~zzzz!!**$!<E3%!<N<(!WrN,!s8W-!sA`0"9\i1"9er4"U5/8"pYA<#7(S@#RC\A#RC_C#mgqG$47.K$
O[@O$k*RS%1NdW%Ls![%hB3_&.fEc&J5Wg&eYfi&eYik',)&o'GM8s'bqK"()@]&(Ddl)(`4)-)&X;1)
B'M4)B'M5)]K_9*#oq=*??.A*Zc@E+!2RI+<VdL+<VdM+X&!Q+sJ3U,9nEY,U=W],pai`-71&d-RU;j.
4H\p.Olnt.k<,#/1`>'/M/P+/hSb/0/"t30JG170ekC;1,:U?1G^gC1c.$G2)R6K~>
0 ]
>>
0 0 0 0 0 1 [
]true true []
/DeviceCMYK
RadialShade
} /Gradient add_res /0 /Gradient get_res exec grestore
}if
np
472.644 411.371 mo
455.261 410.823 437.879 410.275 420.496 409.728 cv
401.564 409.178 382.632 408.658 363.695 408.212 cv
325.821 407.324 287.943 406.595 250.009 406.539 cv
249.989 406.539 li
212.056 406.595 174.178 407.324 136.304 408.212 cv
117.367 408.658 98.4345 409.178 79.503 409.728 cv
62.1206 410.275 44.7388 410.823 27.3565 411.371 cv
27.3565 409.456 27.3565 407.54 27.3565 405.624 cv
29.3957 405.624 li
29.3957 405.624 li
81.629 405.624 li
81.629 405.624 li
84.4808 405.624 li
84.4808 405.624 li
136.714 405.624 li
136.714 405.624 li
139.566 405.624 li
139.566 405.624 li
191.799 405.624 li
191.799 405.624 li
194.651 405.624 li
194.651 405.624 li
246.884 405.624 li
246.884 405.624 li
249.736 405.624 li
249.736 405.624 li
301.969 405.624 li
301.969 405.624 li
304.821 405.624 li
304.821 405.624 li
357.054 405.624 li
357.054 405.624 li
359.906 405.624 li
359.906 405.624 li
412.14 405.624 li
412.14 405.624 li
414.991 405.624 li
414.991 405.624 li
467.225 405.624 li
467.225 405.624 li
470.076 405.624 li
470.076 405.624 li
472.644 405.624 li
472.644 407.54 472.644 409.456 472.644 411.371 cv
level3{
gsave
clp
[283.483 0 0 283.483 250 250 ]ct
/1 
<<
/ShadingType 3 
/ColorSpace /0 /CSA get_res
/Coords [0 0 0 0 0 1 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~>tI`j?;"&o?;"&o?qa>r@80Pu@80Pu@STf%@o$#(@o$#(A5H5+APlD-APlD-Al;V0BN%q4BN%q4BiA(7
BiS18C/e::CK4L=CKFU>CfX^@D-'pCD-'pCDHL-GDcp?JDcp?JE*?NLE*HWOE*HWOEEliREa2uUEa2uU
FB`5YFBr>ZF^8J]G$SY`G$\\`G@+ndG[>"fG[P+gH!t=kH=1FnH=COoHX^[rHX^[rHt-n!I:R(#I:R(#
IV!:'IqEL+IqEL+J7i^/JS8p3JS8p3Jn]*6Jnf39Jnf39K5,?<KPPN>KPPN>Kkt`BL2:lEL2:lEL2CuH
~>
/BitsPerSample 8 
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 0 1 ]
/Size [64 ]
>>
]
/Bounds []
/Encode [0 1 ]
>>
>>/Gradient add_res /1 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[283.483 0 0 283.483 250 250 ]ct
clp
/1 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 4 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~>[:W@?!U`A?!^iE?XR8L?smAM?t!JP@:E\T@U`eU@UinX@q9+\A7T4]A7]=`AS,OeB4kjiB4tslBP;'m
BP;*oBk_<sC2.KuC2.O"CMRa&Ci!p(Ci!s*D/F0.DJj?0DJjB2Df9Q4Df9Q4Df9T6E,]f:EH,u<EH-#>
EcZ;CF)uDEFEDVIF`hhLF`hhMG'8%QGB\7TGB\7UG^+IYH$O[\H$O[]H?sm`H?smaH[C*eI!g<hI!g<i
I=6NlIXZ`pIXZ`pIt)rtJ:N0#J:N0#JUrB'JUrB'JUrB'JqAT+K7ef/K7ef/KS5#3KnY57KnY57KnY57
~>
<~84cBF8kM]J8kVfM92&#Q9MA,R9MJ5U9hnGY:/4PZ:/=Y]:Jaka:f'tb:f1(e;,U:i;GpCj;GpCj;H$Ln
<)cgr<)cgr<)cjt<`W7%<`W7%<`W7%<`W:'='&L+=BJ[-=BJ^/=]np3>$>*5>$>-7>?b<9>?b<9>?b<9
>?b<9>?kE<>[1N=>[1N>?!U`B?=$rE?=$rE?=.&I?smAM?smAM?t!JP@:<SQ@:<SR@U`eV@q0"Y@q0"Z
A7T4]AS#FaAS#FaAnGXeB4kjiB4kjiBP;'mBk_9qBk_9qBk_9qC2.KuC2.KuCMR^$CMR^$CMR^$Ci!p(
~>
<~9MJ5V:/4PZ:/4PZ:/=Y]:JXb^:Jakb;,U:i;GpCj;H$Lm;c?Un;c?Un;cH^q<)lpu<E3%!<E<.$<`W7%
<`W7%='&L+=BJ[-=BJ[-=]np3>$>*5>$>-7>?b?;>[1N=>[1N=>[1Q??!U`A?!UcC?=$uG?XI/I?XI2K
@:E\T@U`eU@U`eV@q9+\A7T4]A7T4^AS,OdAnGXeAnGXfB4tslBP;'mBP;'mBP;'nBk_9qBk_9qBk_9r
C2.KuCMR^$CMR^$Ci!p(D/F-,D/F-,D/F-,DJj?0DJj?0Df9Q4Df9Q4Df9Q4E,]c8EH,u<EH,u<EcQ2@
~>
<~zzzzzzzzzzzzzz!!**$!<E3%!<E3%!<E3%!<E3%!<E3%!<E3%!<E3%!<E6'!WiE)!WiE)!WiE)!WiH+!
s8W-!s8W-!s8Z/"9\i1"9\i1"9\i1"9\i2"U,&5"U,&5"U,&6"pP89"pP89"pP8:#6tJ>#RC\A#RC\B#
mgnE#mgnF$47+I$47+I$47+J$O[=M$k*OQ$k*OQ%1NaU%LrsY%LrsY%hB0]&.fBa&.fBa&J5Te&J5Te&
J5Te&eYfi',)#m',)#m'GM5q~>
]
>>
0 0 0 0 0 1 [
]true true []
/DeviceCMYK
RadialShade
} /Gradient add_res /1 /Gradient get_res exec grestore
}if
np
481.643 420.689 mo
481.643 420.689 li
481.623 420.688 li
470.617 420.321 459.612 419.955 448.606 419.588 cv
439.148 419.3 429.69 419.012 420.232 418.724 cv
401.315 418.174 382.398 417.655 363.48 417.209 cv
325.648 416.322 287.806 415.595 250.009 415.539 cv
249.989 415.539 li
212.193 415.595 174.351 416.322 136.518 417.209 cv
117.601 417.655 98.6831 418.174 79.7661 418.724 cv
70.3081 419.012 60.8502 419.3 51.3921 419.588 cv
40.3863 419.955 29.3803 420.321 18.3745 420.688 cv
18.3564 420.689 li
18.3564 420.667 li
18.3564 415.653 18.3564 410.638 18.3564 405.624 cv
26.5439 405.624 li
26.5439 405.624 li
27.3565 405.624 li
27.3565 407.54 27.3565 409.456 27.3565 411.371 cv
44.7388 410.823 62.1206 410.275 79.503 409.728 cv
98.4345 409.178 117.367 408.658 136.304 408.212 cv
174.178 407.324 212.056 406.595 249.989 406.539 cv
250.009 406.539 li
287.943 406.595 325.821 407.324 363.695 408.212 cv
382.632 408.658 401.564 409.178 420.496 409.728 cv
437.879 410.275 455.261 410.823 472.644 411.371 cv
472.644 409.456 472.644 407.54 472.644 405.624 cv
481.643 405.624 li
481.643 420.689 li
/0 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 0 500 ]ct
[464.64 0 0 16.32 17.76 78.56 ]ct
snap_to_device
Adobe_AGM_Image/AGMIMG_fl cf /ASCII85Decode fl /RunLengthDecode filter ddf
<<
/T 1
/W 968 
/H 34 
/M[968 0 0 -34 0 34 ]
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS [
[AGMIMG_fl 968 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 968 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 968 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 968 string /rs cvx /pop cvx] cvx
]
/O 3
>>
%%BeginBinary: 1
img
&jJTL85;r[<`rmDC2J$6G'SLep4AsPK"mYep367SoQKMBoQ9hKl>lfBp3-CWnTOeNrc8!Yj`SUep35Z6
K"loPdD,X6qM$>KIXQE`Ec>o3AmSV?;GBbQ6U=!k0/GLJ4[DJ*9Mn_i>?tQDA8([On#_2DK!!(qp0m]'
oNpB[p0Hcbp0R]'nQu)uqcr5gn6Y'[r*])([]P.`Juo#hrb_LJ->@+'@:!2A<`Dph7R97$2`*9C0/YUI
4@)8%7nQ]Z=^,<DA7oXppi$1L^T2seJueXHp1<u.oOR5soO@Q'l<sNspgjD8rF>A.qdKA0j^ZYJpga/3
rFL_aJuc2X!-/!WqJm6eC2.<j?sd2C<)6+V6pEgq3&W\i!!`N*!WiK."pb5;&,6b:&<Gt*k,@G/#Ohrc
#1EbR"QBXY"nMr8#42ZGk(;`Ik2PM''DE1I&.K!P"pG)2!Wi#q&O/KJ85;u\<EN^BC2J$6G'SN/JtTl1
^\tqFHgl@UH22^ZGPHI4GklRXG4]tCFmaAMF6[fDEV=SSFn'YPF8g4ZEpRqaG5-:BGjotRH2)U`GjfqI
HN&98^Oj5J^]&r_L*_G$I<]pWE,KH'?s-K-9hRrC5<geS1H%<X5t"4:;,^J!?!^rMokNrtJuu2X!+c%;
qd]M4r*]8-raPe5rF,S3rF5\5nRCNdq-io'pKl]^p0Hcbp0R]'nQu)uqcrJnl!EFWq-`i'j'_Cdr*fS6
pgO23ojR`+rF#P4q.'D5S?7CFrb_II->I4)?s[)@<`Dpg7RB=%3&EBD0/YUH4@)>'77^?V=^5BEA7oXo
pMU%K^T2sehQ$WirFu.Aqe5nApLjJ:r+>\7rFYt?nR_3%oOdo1oOIW+l=96krF+u!r*T50s()(<nRVN*
qdAc#b[gBVqIT\<j(@gmr+H"@p1<]*rFu1Cq.K\@l`5W<ZE*tDq/R-eCMIHl@UEDE<)?1V6pEjr3&NSg
!!`N*!WiK."pb5;&GHb:&<Gt7k55S^$2=i!#kA5a#gN\H#4;]E"oJM_#5&/k#/pel#Or)q#l"Yl#k/0"
$G5GPk2POs'F>?\$O6k>!s8T*pAbgj5=A%;:fULt@V0FnF*)SNItIEL!/7)\cG0(%npU@^rHnNljEprS
qg/3eqg7gYpj)XZpilFWds1b6pNH1Pl?262mW/5Fp3-CWnTOeNrc8!Yo6%Teqfh"Dnp'nSpil1Pn9Y"Z
qg&*aid:`SpO)sfo6p=]T"i[fs+U6&-A$brG]n1JCM@Bg=B/6o91D<85qalI2EO&f6q9pJ<`N@.?=@G\
pM9hHn#_2DriQ*2qdo>/qITV7rab_6mpc?,pLF56rF5\7q-s;1pgO)0rF#V5qdKA2r*f,)j'_amnR23"
hHfh\j]qLcrE\r"qd')(o3L?^k[*pipL3&hnRDE)r*nr"rF,V3qdTG4rF,b;p1!E!p1457qd]J6o47]/
rFbN"K!#&iphV9lB4PCV>Zk$);+a>F5<Ch]1G:C=2)m]a6UsR9;cHq*@:Nh\Ci/oe!-#]RYH.S9qePb;
p1aM@r+Z%BmqMi:pLjM>rFu1Bq.T_@ph0M9rFYh9qe#b=nR_9'nn.c1nRME+l=8scmU5s"pgjD8rF>A.
qdKA0o4,mQnRMH-!+t8'nR_W2r+>_8mq;Q4qe5k>rFl7Fqe#b;p1jA;p1aA<qJ#P9qJ6%E]rSH>s)@aR
'5q`&An5@X>?=d#84H!54utY]2Y[7W!<E6'"9eu8!=]V6'T_D6k55\c%-n<"$K2?m$MOl($Mk)'$1eGp
#Nc<:#PJAi#1EbR"QBXY"nMr?#0[>@#l+c$#O_rf$2b/(#f[8K%/gWpk2POs'F>?]$O6k>!s/N)pAbgj
5=A"::fULt@:j=pF*)SOIY.9J[_M3]s+13$pji?np42gc!.OQgp3uO[qgA?hrI*dTrd4TirHe9dn9XqV
p3?FXoQel0rce*[oQKMBhK8I3m;_uFqK2OSrc8!Yr,o5erHI.DoQ^%SqKMsan9OMLqg83crHJ<fj*^lT
pO*!gnpU4\pjN$gp4)ddomcmjmt0]:dD,^8pkC,JJUVieFDu#0AmneA;bftU6pEmh0/GII4[DJ+9i4qo
>?bECASLjSn#a[5s(_4@qe,k@s(V=Brau.Dq.KA4!,)4Ar+,e;qe,h<nRVN.!+c(<rFGV5n72H,q.'A6
rF5b9pL=)/qI050rEoV6qdK;0r*f,)iaDaom9op"hHfh\em/&WqHiu'qcs&)fj<uNnmM9%j'_@cr*fG2
qI0D3o3qW,rF#G1r+#\7s((k5!+G>+ok"/6r+#S7nmqW/r+Gh9!+u+@r+>h<ph0V@s(M4?qIob=okCk:
s)%OI->I4*?s[)@<)ZXe7moR'3&NKF0/YUH4$c5(77^9T>$k]JA8#arp2[pKpoFF3oksYFrGMXNqJH4J
rbM=Hoka#1r+kh;qe6%Drb;=GrFu+Bn7qr:q.KY>rFu7DpLsM>qIfY9rFYn;q.BP;nR_?)mq2Q1m:6-+
l=8[[p0dK!qd920qI98/qdB>3_dr1FrFPt?k%=*or+Gk<qIT\=n7V]6q.T\=rFu:Fqe#e<!,)"?qJ,\;
qJ,k@nnS&;m:u?2phftFq/$(Hr,2CMq/6.K[]BFIpi7$eDJNip@UE>@<)Q7U76s+!3&NSf!!WH*!sAc3
#ltGGp(Xsto+:X,p^[94rXS`6oF:^,q$['/r!_m!r<hKkrX/H-q$R$+oa13qp'9Xab6RkJmKV,Dm0*"b
o*+^ibQc8rlj3Cmp]p9on-St!p'AYGq[EB3q$R02n.#($oaUU*oao[9io]qK#ndaW#6k>6!WiDs!"qL\
6q:!K<E<41Anu@,FEVtZJbFik^\*9SKD0usKB\!dJa@sgJcC;rJGt&lJFn?`IJ/-ZIJeKkHi/<SI/SEk
HMr0bHgc:YH1Z@ZGOg%1Gl2dcG56:XFn9_SF8^+WE;jtPEqOG8E;"5HDWl*?E:7lKF6Rf1FmXANGMm`>
Gk64XGQ)jXH16.UHi&*fGlN'NI/SKfHiSQaIJ/-bIJeQeJ+eEcJ,OrdK)C2cK)^H%KD:&kKD'ul^Aru^
L*hP(IX-*YE,00"@9?N.:.n)F5s[.W1Gq6W5t"4;;,g\&>@(cMB_H98Xo</9C\qoHD"_W@B`;cGC\;H;
C&;Z;C&;QBB`;`CBDuNAC&2K1B)Q9>AGTs;Aaj7.AcH<@@f0d0Ab'@0@esU4AGp!;A+jC0@/OI/@f9[7
@/OI-@f0[)@ch(r?iOO1?h7S">lIt+>l@mr>k_Lq>P2,!=S>hm=T2Rp>5VY*>OPhY?12(t?gV8"?fkbc
@f0[0@f'U5@.Re,@JsU.@fBm9@f9j4@fKm+A+jL4AGp$7Aas=/Ac$-:AH-9>BDZ<<B)-*=C&_lCB)63<
BD$!9CA;N9CAr#JCA_`FCAr#DCAr&EC]A5EXT354CaNn1ARSnL=]A<s9h.T94#f)R0/#1?3'0Dn7n6*I
<*N^<@q97gDYA,DX8[&4E;jePE;a_ME;jbMDuOVPDZ"DND#\AEDYnAODZ4GKD>nAMC\ho?D!c!9C[c*:
C&_lHC&D`FC%uE5CAhlCBDcHAC&_i>B`)TBBDH-:B)H67B)H<3AbKa+B)H61A+O1/@JsR3?N+F,@.dn!
?M.Y*?M7Y)>l.e*?gqJ$?iOI$@K9j$@anodAcHB+B(0C0BD?*9Ac?<4BDlQ=B`;ZCC&M`BB)ZBABD-*;
CA)B;CAMZ7CA_l7C@uE=D>\2GD#S5KDYnAIDZ4MRD>\5FDZ4MJDuOYMDuahUDYS2MDtn;ODt^43E;+Ad
E,KH(A7JtN=&`$f77BL+4#f,VpAbBu!WrQ/"pk;=&,$_1k5H%^')`F>&H3=8&bQ_6&+U;,&,6Y6%K6k5
%eL5-%/LA.%K-_$$iLFk$iLG/$2=l+$1eJq#knS`#i>mY#5/6""ni)i"m?*K"6KaW"m#pO#0mJ=#l+c$
#P&/i$2Fr%#f[8M%/UM1$i^Y)%JC;)%JLD*&H!(3&G6Y7')W=>&cNF3')rX=k4TJq&e>BV"pG)1!Wi#q
&jJTK7nul\<a&mCCiFB9G'\Ugp4i<p!eZ,Zp4W0mpO`?rl%8ncl[o.fpji?np42db!.OTh!.X`lmsY.^
rHnBhk^<;Ts*FWip3Z:TrH[sYm<A>Ko6'kNpiGtErG_%?rb^n=pi#qFphfbAp1rl1j_hhPmW7uCr-%=K
r-7jZms=bUqfr0drH[OQr-e<en9t"ZpjN*ioRHRbomcslm=P7el[o.gre(#uon2O_p4aoHJpqugFDu&1
AmneB;bftU6pEmh0/GII4[DJ*:/P%p>[1TEAS1XPrG24DrG;LLqeQ1IokOD<rG)=IokO89qeGb;qe,qB
rFu1Brau(Bqe,P5!+l%>rac"=!+u(?rakP/rFPt=!+Pe8p1<i*r*oP5qIK))rF#S4pL=/1ra>S2q-X&*
pg3Ptq-Ni%s'"knoN1cer`B#%pf[PtqcNVppf@/kpK%&hs&A2`!*JAam90?i!*]/"kun-k=^(c+mTo6e
pg<T#r*]/*!+>b5p1"&3rF5\8qI9D3nRM9(r+,h;q.9&+rFPh<qdf\<rFbt=qe#\;rFu:Fqe#\<qe,S9
qJ,e>okOJArbD@E!buLdphKeEphTkFq.fnFp1u'jBk(RX>?P!*;,'PK5<Ch^1G:C=2)mZ`6UsX=:K1M)
?XdPZCN&oerG_XR!cW*urbqUOrbqXPr,;@LrbhLLrb_XPqelCLrb_:FqeuLPrG2=JrbVLJqebtA!,M7B
!,VLHrbLt;rFu7E!,;:E!,;1Ao4n2;qe,b=rFtn;rFu4CpLX87nn%`2pgiu+s'kk7pgO2.mp>WlpKmi'
r*K/*pKm;opfmJrr)ru$s'"Vl!*nYlk[+<qpg32j!af;?rEfM4n6t`ql"0d)oOn)9p1XJ=rFu1Cqdoh>
rFbh=r+bq>qJ,h?n7qo;m:u90qJH+FqeZ4HrbhUOpMU"Ks)%[Mphp(Jpi$.Lq/?CRDJo5grbqRNrbqUP
rbqLN'6%i*B4PLZ>$"[#84Q*75!(_]2>7(T!<N?+"U586$kDtFob.3:mh5O1r"/f>ob$j.rX\N1q%*61
rXJi:q%!$+q@*6/q$m<3lO3Xui=#Pjq[)s'rsA6&o*FObiWf/]hui]UrW<!#g]QR<f)rA^mKN"_o`ssk
oEamlp^6^#`XD_Rq@3<0rXA9*p($a)p^cs-r"&H3ob%09r"/i>r=\T4rY,)?rY+u>#nddX#R1G7!WiDs
!"qL\7nZTR<E<:2Ao)F+FEVtZJbFimK`?])L%^2pKD0uqKB\!fJa7mgJq<]IrdXWloRHmip3lsjpjVXZ
rd=Zkq0hLTqKr*coQg(Rs*+0[oQB_Hp2]hI!-.ULq/$+JqJ4o&phKJ9l=]Epk\8shmV:j!rbVXOpMKD=
nT"GG!-A$Zo6'VIrHJ!\qKW'fq0M[YkC!/Tq0`3jn9t(\s*sflrdOHgp4*0nJG4QnJaA!eJa.geK)L>t
K(aiiKE-`"K_C-IJq8ArG'%\>C1:XU<`;ad845a00J>:C4$>kr7SHZ[=^53<@Uj$DD#A)FCA_lJC\hiG
D"VQAB`)WEC\;H;C&;Z;C&;NCB`)TCBDuN?C&DW9B)cH>B)cE@AH-9<BE)Q2AH$05AG0U,A,9[3A,Ba3
@J!t-?hRn,?g:qh>l.b&=TDXt>6%k&<<-)!<9R?P<;BJl;YX/T;6a$i;uKYk<9[B_<qfVh=o_h(>O,JZ
?2S%'@/XO6@/44,@Js[5A,0U4@/sd.A+aF1A,p-9AaX+.Ac$-?B)H3<B)ZH=B)?3;BDcHEBP76TqIob=
oP+2;phBD9rbMIIr+Q(Fq.fnFphThEq.fnFp1u'jAn,7U>?P!+:/48H5<Ch_1G:C<2*3uf6Us[>:K1M)
?XdPZCiB#fr,DRRs)A!XrbqUOrbq[Qqeu7KrbhLLrb_[QqJQ=LrGD1EqelIPr+l7JrbVIIr,)(Bs(h=C
s(qOHs(h%;rb;=Eq.fV;oP45:qe,e<qIfG4s(1G)nm_<#qdKA2!+>G*!+#D*!*]A+kZRI[!*K&"oiUK\
nQ#Hda&qb4qHE5gr`fG,pK[`(q-Ei'lX0^$qdT/,r+,P3rFP_8qI]eBrb24Bq.BS<!+tq>rbD+?qJ,k@
mV;`:qeH.IokO)7qec4G!,_XMr+l=Mqeu1Gs).jRrG;7Hrb_FKrbhLMrbhONrbqRNrbqROrbqLN'5qf*
B4PLZ>$+[#8k2<95!1e_2YR1U!<N?+"U586$kDtFob.09n.PU1r=Jl>ob$j.rt"T1q@E?2rXJi:q%!$+
q$d0/p^R63lO3Xui=#Jhq[)s%rs7cmoEOI^k6(behu`!AScS?^_ufZ8j95;_r<Dfskm.%j!"/N.oE`GE
rXAT3r!WH3n.#($!=]P5%J^P*&H*.4&G6Y6')W=?&cE@4')`L>')iR<'FGE^$j[%@!s/N)!VcX-5<hV1
:/=nm>%)#YE--2FH@UYALA-B$KE$YuK_^8pK):2bJcLAfK)^GtJGt#uJbO]eJ,XokIK"`lIdMR`I-Z.V
HMVp_FT?RRFSBkPEUIf>DtIr@D>S,JC@u<7CA_f8C$oX!B)H3!A,9ZuA+F-jAG0R7B%h"lB`MoEC\DWE
D=VT@DZFbTF8'_0FS^.SH1H=RI/\Q`IJJ?kJ,"HlIe&!\JG4NnJa7peJa%daKDL2mKD'uuL%g6#L%^6J
K7SJsG'%\?C1:IP<`;ae845[,0JG=C4$5hu7S?TY>?kH?@V9EKD#8#FCA_lJC\_cFD"VQBB_uQDC\;H;
C&;Z<C&2K>C&VcEAcQNAC&M]:B)ZB=AcQB@AH$3;B)lN1AH-6<AE74t?i=71?M.S(>Q.h#>Q.n*>5VV$
=oVY(=8uCr=oDIt<q]Pj<;0>h;Ya;k;sR?L;?'Pg;>*ie;Z0GO9`Rrc9\E/<:?bUR:\mie;;kIM<;]Yh
;u0Jb<Vfbl=Sc/#=T)Iq>l@k,>OYqk?N"1/?he+/@J4.1AGTg4AaO".Abp'=B)Q9<B)cN=B)?3<BDZEC
BDcB=B_uH7C&;Z?C%Z6?C]%rGBEDpaC\VZDD#%lED#.lHC]8/DCaNk.@pr\L=]\Qt91D<64#o2T0/,4>
3^,hr84cEO<*<O:@Us.hEV=GME;aeVE;sqWDtn;NDu=SNDtn;NDYS/LD#eJLD?+MND=qfCDu4>LD>n>O
DYn5JD=hZDC\MTCD#.lHC[Gm:C&;T@C%l?=B_l?9A+X41A,]s3@K'X3@/O@+?iFI5?M7\'>khUu>l._(
=o)4l=T2Ih=RK8j<U<Zb;uK\T;ZK_E;rgpO<<-"W=nu1u=SZ"u=o)=n>l%b%>l%_+?N"=,@/XR4A)q+q
A,'X:B57H]p1XM?qJ,k@m:lW:qJ-"Gp1j/7r,)=Hs)%[Mr+c:Mqeu.F!,hdQrbV@Irb_FKrbhLM!cMso
pi-4Nq/H=Opi-CTDf9XhEYEG2ChI9f?X$W19M.fD5sIIk2)P%-"p"c."U,):!=f_8'_N+:'CZY2&cN@=
'(lk0&-*71&Gcq4%fQn=%h9*F%eL5*%/gS.%0-h&$gS/s$2Or%#4_ot"mQ6F"6K[_!VQT\!J1@+!SRVQ
!TO7Q"8Dus"Pj7L#58E&$2"Y_$NLV0%K-\4%.F_u%egG/&+L51&+pM,&c<:?&H3:>'(Q\5'DW:?'D<+H
&Io3T"pG)1!Wi#q&jJTM8kr/_=B]*ECN+<9G'\Xip4i<ps+C<)on<0opO`9pdXhOPJq<`JrdOp!pOMmc
rI4NioR-R`np:1Yq0;FRs*"Bas)\'Wrc-h7rbhRKoP=)6rFu(@rFbn;rak;(!+XnrqI8r&k[<gbmpc-%
o3oLGjCJ:%rG)%=rFl4Eq.]bAoP=/:rbh[Qr,DFLqJc1Kq/c@Sqf_RTo6LC_pj;d`msP1bnUL:`!eGlP
pODI[s+0Ed!/(3%qh"Knon<@!pk8[$p4aoHJUVlfFDu)3@U<5?;bg"W76s3n0Jk^M4@2D)8l/Ml>[:ZF
Anq$UqeQ(DqeZ%CrbV7Bs(M:ErbM.@phBV?okF;9!,27Ds(D=C!,24Crb(k8rFPk<!bPtRoOIf.qI9M7
qI'2/!+Pe4r*fG/rE]G0ra5\0pfd>pmo]Nir`K"t!*&nrrDWYooMb]dq,@5hqb[/clqmXU!)N>`!)N&X
q+UKTpIkEXm7Qe>mnEaUmRuG3s%VWOq+g9Qs%iSlp/1]cqbm8hoMkNbr`K,#s',J,pfIDroNM2rrEK))
r*BA2o3^urqIKA2ojmr3!,)%<qe#e>qe6+FB4q0Tqe5k>oP+2;phBD9rbMCGrb)@JC2<TZrbV@Fr+u7F
s(hUMp1u'jBObIW?!16.:.n&D5<Ck`1GLU@1cdcc6:a^@:f^_*?t*Y[CiB#fqf)LRs)@sWrbqRNrbqaS
q/?(JrbhIKrb_FJqec"DqelIPqeQ4KrbMRPqJ6(IoPFJAlY??3qI]eAqJ#h>!+l(?s(:q8rFZ(?raYt:
pgE,grEoP/qHEf$rET;)oND,pq,[Gqqc3\us&]2"kZ$S@r)EMkn5B0[m83FNqbQZZs&&2^_Gfl%pJh/m
rE8hqqc<Srs&],$oNV#mr`oD-r*K/(rEfJ/pL*r/rF,M3raZ(@A7P4BnnA&;qInu*nSJ/@qeH7ND/K5f
qeQ(IoPXVEs(qIJrb_FKrbhLM!cN!ppi-4Npi-4Nq/HOVE,T`9p2UgcDJWrr@UE>A;GTnW76s.#3Ai\g
!!WH*"9er5#ltJIp([04q\/K4q%<W<q\&N5it2%tq%!B5!Y5bNq%!$+p'gL"r!N!$q?Z?kr!)Ehrr_Ng
hu^Ijm/b!&mfDbTrW/ksr;u6bp]Ba_q?-WunH84_oEOjknd5'uq?um&q[Ds'pC768%M&4Bq[`0-rt"c6
ob%'6rXf&@q\&H4r"Jl=rY+u>#ndaW#R1G7!WiDs!"qL\7S6EO<`iO5Anu@+FEVtZK(arnK`?]'L%U,r
KD0uoK@>GPK)^DuJG4QgIK4fhI//-eHLlC^GkZFWG5$.REr^7WF80\QDZF\ED>e;;C]A/?B(KU5AG0O)
@f'R6AFa71A,9[5A+O1#@JjO.?LD+o>k2+l>4Ghf>P_V"@/jZr@cCktAG]g7AF!e-@qF_5!,(k<o5+,;
r,2"Bno4DEqJuLUrH.jXq/ug`GC'(3omHUarI+`sq1&?npjW9ol@K"el%8qfr.Fp!on2pjre:0$re:'#
-A-kuH?=7JDJEZf>$+]u9LqT:5;4cL2`j,g6Uj[E<*NU5?=IJ\p2'S@r+c+F!,VFGrbV:Cs(M7DrbM1A
phBS>okF>:s(M:D!,)%<pgjG;r+5e9qI9)+s'bb2!+>Y3ra5G,m9K]sqHN_rr`&qtn5]Efpf6uds&8hn
pJCQZqbHcZrD*/^r_<Abs%rAarCm8eqb6r_s%`5\r_<>aoL]*Voh4jInjhA&mRR7Kqb6QRs%N/\rD)`S
peUlcrCd/br_VWNm83d[!)rGfr`8_np/V#kr)NJms&o>'rEB#"qHEZ!nQl*"rEo\6?Xrn@oj[u4rFZ(A
rFH%CAnLpRrFc+Aqe5k>oP+2;phBD9rbM@Fs(M(?rbV@FqeZ1FrbMLLp1u'jBOtXY?!C?/9hRrC5<Ck`
1GCL>1c[]b6:a^@:f^b+?t*Y[CN&oeqJcFRs)@pVrbqRNrbqdTq/?%IrbhLLrb_FJ!,qaOoks\Gs).^L
!,_IHphKkEr+Z"Bq.]b?r+>tAqIfk@pLX,1qd]S7pL+&0qI0/)ra#S1n6Goqpf[8ns&o8"pK$ufr`9"t
p/Cugr_`_oq,@8ir_`br;XmZc;YO,i;Y<uf;>!ib;#!ib9_(pQ:A[`^:&[l[9(#FH9_qN`;#=&g;Wq'X
;WLaZ;GpIl;ZBYp;>sP\<<6#uqcE/cr`&qtq-*W!o31imr*B5,oj.Q'!+#S0q-Wu+!+5S1pgX&/rFGk:
!bGqUq.]83rG)IOCi&uarGDOMqeH1Kr,;4F!,_[O!,VFJrb_FKrbhLMrbqRNrbqRNrbqUPrc%jVp2Ugc
DJNop@U<>B;bp"X76s.#3A`Se!!WH*"9er5#ltGHp([04q@iE4q%<W<q@`H5oah*8mh#=+q@<B3r=/K0
pC$^&r!Ds#p':!ip'(9qoE4^eiW@1%qZ,OTpAp3Qj8dR.qZ,.IoE!VHg]R?TnHJRi!!iE,!"&H.oF(C%
!"Sf6r=8T3!"So;mgoI0oapd.q@`f>rXnu>o+Lp6q%EZ?p(RfG%h&aJ"U"o/!VZR,5sIe1:/=nm>$trX
E,p&DH@CJ>LA-B$KD^GsK_pDrK)(&_K(X]jJ,k,uI/eQdHM2XWGlN!^G4g"OFT6C]F8U"RDu";HD>@uI
CAi)MD?+GKCAMWEB_Z64B)?02AGp$4@e4%"@/4.,?27q)>PMFm>45Vg=SPqP<W5tp>527q=9)Ct<rQ+h
>/4AB@Ja@+?LqS(@K0m8AFsF5B)Z9?AF=%0BCom,C&)KFDJsIlCADZBD>nJAE;stZF8BqLF9$OQGklXS
HMDjeI/e`qJ+/$QK)^K$KD^>pKCsorL&$E$L%^6JKS"Z!F`MG=CL^aU=Aqsg84>g10/,7C4$5hs7S6KV
>?kK@@Uj-GD#%lFCAViID#%lGD"VNCB_cEBC\;H:B`MoGB_uE:BDl??AGp$1@f'R6@f'R2?N4C2@/aR5
?M7Y)>l.b%>lS%,<rcA!=nu+o<VKJk<ruK)<rQ%r;>O/j;ts5g;ZB\l;>X/h;#O/b:B"#h:%M-[:&.H\
9_V0Z9D1sQ9DqK\8+T4E7JB:M7/0.I6g[;06MEbG7f5^Q7f>aQ7K#UH7,pc58)d&29)hQV8H;EY9)MB^
9DhQa;".6\:@M'];GpBj;ts;\;Z0Gm;uT_t=BAT&;ufqp<;T\p=n5\n=8lFs>lS%*>l\7.?M.\+@JaO#
@f'[>@q0.aBP-mMqeGn?oP4A@qJ-%Dp1jSCphT_Br+c4HrbV:E->R=,@U35C=B&!e7RKC%3Ar`L0fCjJ
4@);)8kMo\>$bTGA8#dsp2]tJs)J'Xr,M^Sq/H=Orc%XNpi-4Mpi$1L!,_IJ!,VRNqeu7HrG)@GrFbq>
r+>h=!+l%>r+H%@qIBM8p1")5qd]P5s'Yk8rEoV3pKd]&q-<`"s&f5*!aK#:r`T2'qH*_upfIDopf.,j
o2PZepJUrcs&&SirD35cs%rMer(ZubrCd&^q+^`YpIk*MrCclWpdb$HmRI.Fr^ZrV!)!/^pe(HUrCZiT
r^H?Lo1dt5oLo3^s%WGdq+pc^r(m;iq,Hud!*B.u!*&Gg!``6%oN(H`rE92(r`B5,?![D2!*T2'!*f>*
ra#)$rF#V5qI'51s'tq8!+l">ok"2:qI]51rb;7C#AS!jD/3s'C\DZGD#J2FDZ4MIDuOYLE;jeOE;jeN
E;jeNEW0qVEV=DdE,KH)@piVJ>#S6i8ju$14?,2UpAbBu!X&Z2"pk;=&G?h2')<44')3%=&GZt3&bHY3
&+U5/$i^S.$3(>)#jhlf#4r*!"RQ<[!r<#q!qlZ=!Oi&\!0mQP!QY<;!r`;j!p]sf"RuZo"mlQj#k//q
$NCM6%fHk+&+pM+&c*.?&H3:<'(ch5'DW:?'D<+H&eGHX"pG,3!Wi#q&j\fP8kr/^=B]$CCN4B:G'\Uh
p4i<ps+C6'on<6qmXkCgomljfrI4Hgr-SKlr-7mYp3-FXp2p=Ur,M"@r,;@Jp1sA:phBb@qJ,kA!GQ6>
BCTU3Abfm1A,]s6?N"1.>l@n!>528"=T;Fl>Q7q%=o__#=SGkj<UWoe;tj2a;"mc[:?Y[W<;BJh<W6%f
=RB8d>2icM?2\+%?M@n"AGg$:B)cB<B(KX:BPD2>C@Z0<D>nGLDY\5JE:\&LF8g:VG3=)KGkZUYIIr'b
Jbt&nK(aijK`$Q"K_L3!L*hV*IX6-YE,KH%?s6Z2:/"2I5=$qU2)mZ[5sn+7:fLV'?=%)NC%cB<C]8)G
D#\>HC]8/CCB%uDC&ViIB_?$6B)QBAB)-!7A,Ka3@K0^5?1qV(?2It+?2n..>lIt.>P2,!>5;:u=TM].
qH!DlrD`JhrDNSjs&&MhrD<Sn;tNre;Y*`c:\[]a:B"&b:&[of9DD*S7fZ*T7fGjS7K>jR6iTRS9(kdO
7fGjR7/TLP6h*SC6N0@O5la4F5QF"B5PIA74nq2@4RbZ25l!_?7.N_E7JK7N7e]CG7JfRK8+]F68aK(M
:%V0\;#F,e;#j;j:&[uk;c?Tc;$'Zo;Z'D^;smWX<W6%q=SZ%u=oDS$>5DJ(>Q.n&?M[t"?i+:2@/"1.
@f'^1BDuW@BE2fHC%uB7CAr&FC\_fFCAhrID#J2LD>\2rAn,:U>[(</:.duC5<Ckb2)$[A2E3fb6:XX?
:KCY,?t*Y[Ci8repi$:SE,b_prbqRNrbqgUpM^(NqJQ:K!,hRKrb_IIltZH1q.9M:p14/4p1"&1r*KJ1
?M.Y*?27h)>le/7qH`o"!*TG->$1N%!*B,$rE9/%pK@Gu!E`Cp=8u:l;ufqs<r#_g;uT\k:]4#d:Aml\
9)hNa9D_?\9E%Q`8,l6U9`.Wb9)_K]9E7]_8c;9U8,GaR7f#RJ7KQ(K7JT@O7JT:M6h`nF5Q!_G5k%5:
7e0"I8+K:O8aT.F9E.ca:%q?T9E.ZK:%1sR;?0Sc<;]bo<<#np;ufqi<ruE)=Su@m=oMP!=SZ.s=o;P(
?2@h%?2n:1?M\(+?N=O6@eaL1B's70B(p';C]8)JCA2TEC\_iJD#S>IE;a_NE;jeOE;jeNEW'kQEW0qU
EYEG2ChR<f?<g`7:eF>K5sIFj1cG(."p"c."U5/;!=TP5'_N+7'Cuk2&blq9&+pG*%K6e-$h4H%#OM`n
"o&5W"6os^!V6Be!RUqR!.k3&!;ccC!R1]5"7?<k"o&;_#O;ci%epS-&H*4;'(ln5'DW:;'D`CL'+PEW
"pG,3!Wi#q&j\fP8kr/^=B]$CC2n99G'\RgqhG$&pOr?pon)sirdaZkrI4Khpj<'gpj2[[qfVgXq/l4L
rc.RLp2'eGoP=8;pM'V?q.KD5qdfP8ph'A6qI02-pg3o(rEK)$r`K&#q,mDmrDiJhq,@5i!*K2#p/V)l
o2P?\mS3.D!))fRn4<=Jpe1KV!)3)[g.h37n5&j[qc3\nrDNDhpf.5rqHNMp!*nqumU5fuq-s>5p1=>9
B)QBAB_Q65CA2N@C\hl;D>\>JE;X_JF8C"UF8^7[Gk$%ZHLuR_I//9jJGF`\K)^JrK_L3!L*hP(IX6-Y
E,TN&?s6Z2:/"8I6:*=Y2)m]\5sn+7:fLV'?=%)OC&;`GD?"GIC\VWGCM[b]B`Mf@B`;ZDB_Z3=B)lN;
AGBX7@esU7@eX=)?2n1,>4Ytt>lIt&=TDV'=8Gns<r5kp;tj8j;u'>j;ZK\k:B45c;#jMn;#a;`;?0Pm
;>O)c9`Rib9`7T]9DqHX8,PpW7fGpW7fGgQ7K5aO7/K=N6hitI5l3hJ5<\s/mR$h=qa(3Hog&RBmlUY6
4$2smml1;-nMp;*pc842ofMV'mQCM3oKMb-o0W@=!^/b4q`t3Iq*FdFlUUbBqb-iZq+UZZr_*,_p.PH_
pJM#e;Z0Jl;tj2d;uTbq<WH.c<:a,^=8uD#>QA"$>6%k(>k_P'?iX[0@JjR7A+=".A,0a3BCT^3CB&)E
CA_lHD#J2LD>e8tBkCja?X-f:<)-%T6U*Xm3&<6B2E!NW5XIt58l&Ji?smGSBPMG^ErL%XEVOJQEVXPT
DJX1cD?+VMDZ4MPC\V`FC&i&FCA)BBC&2KBB_Q0:A,Kd2@e4%-?iFC+?i=4*>Q@t)>Q%h+>5D>&=]\]#
=T2>$=8H#!<qfPn;uBVf<<-)!<;KVl;#jMm:]4,b:]4&e9_h<[8Gc$V8cMEZ8,l-Y7e]=Q77KcC70#gU
70#sY8Fo=E7K,dK7IED?54Li;54CZ73qk`548;#74o7A754:bo5O^u77f,^W6:LlB!(QcQ!(QcQr_!&^
nOrpXmSEaWo2#?`qbd/fr_rkupJh5n<W-"u<rZ:t=Sc2"=T2A%=n5e`>lS%+?2J"/?Mn1&@JXI1@Js^8
AcQE9BDlECAnUaMrG).Ephg"GoPXJCs).jUqJlFPqJlLRrGiHhDes)s@U<>E<)?1Z76s.#r\sQO"p"c.
"U5/;!=KJ6'`Sj8&c`O<&GH_7%e:&/%.4K'$MXr%#l=i""oebn"SW#T!lb6@!.k3&!.k4"!8%>*!qcWe
"7HBb"oSZ)#Oi!!$1S?&$i(8)%epV6&GHe.')E:<'F>?]$jd+A"9S]+pAbgl5t+C@:K:M#@qKIqF*)SO
J:m]QqLn]to7Hjj!.a`l!.OcmqL&-ds*FZipiZUYrH&!\qK)XUolU"Kqeu:Jr+uFMmVDi;o4e5<p1O/4
ral"<qI9>1!aoDGqdTA0pgEl's'5G*pfdJrpfRDos&Jhnr)<Gfs%`&Xr_38cohG6Voh5?Yoh+mJoge::
!(HQKpd>'Plpq(Jl:]u-hbE9/r(m8ioMbchrE8u!qHEc#r*9)(!+,/&s'bJ-nRMN.rakb7qe,k?nnJ,=
r+tk>rbh@Hp2KSEm</>Oom-I]om?[crdOouqgnBkqLeWts+UB*-A-kuH?F=LDeilk=]eTt8k)0768'uL
3'9>i6UjdH<*EL3?=RV^pMBeDo4e8>rFu:Eqe,tBrb2:Cqd]b>AnLsOqIB2-rE]>+qd'5,qHNr&!+,V0
qHX&&oiLrir)Wl#q,Huc!*/npqGR>lr)*>es%rPhr_NPhr_<AerCm,`"A;E^9htU[qb@)`r(R&]r(@#]
q+(0Ks$ciT!_,RGqF(HQ6U^c;q*P-Jr'CBHq)nF8q)nX:rB0m=oK<.8pGqItr\sU2oeuM#!&aF+pbU>X
!'07)pH/+3krn#g!'Tp>s$H`Or^6`UqFCHQs%)iRrCQrZr(-KS!D?/d9_D0Z:%_<\:B"&b;>j>j:\mog
;#4)b;uBVe<W?/#=oMP'=792j=T2M'>l.h(?L;%r@/F=1@I@S)AH$'@AnYjlqe5tArb:t=rbMLK!c2^j
r+m]oAn,:W>Zt90:.doC5<Ch_1GCL@2E3fa5t=O>;c[".@:Eb[D/oDmrbqLLqJZ:Ls)7dP!,_^NrbVIK
!,M1@qIoqC!,2@DrF>b9s'kq8s'kh5ra>D.s'GS0o3M8u!*T/&oi_E!=B><#qH3bur)`bts&T"r!*&qt
s&Attr_i\nr)!Sp:JXner)<Jis&/bjrD<8bs%`Per_<5]s%E/[qFL`\8k8eMs$lcPr'LHMqa1<Jr'('C
p-8L@q*+I9!^/_2pceaAofVn/ofDb+p,_h*r\s^5s#]R-s#fU2!'T1&pHRn+rBT[6r'CBQo0r[Hs$clY
qFLHTqb6o_qFprcr)*,_!E)eo;tX&_;u9Ml<;onn<;fks=Sc)!=o)7s=8uFl>lS%.>5he!?2@n.?N+7$
@eO=,A,Ks9B`;ZDB)H?9B`MiGC&i)LC\r#KDuOYNDtIuMDfB[nEY*5/ChR<f?sQu9:eF;J5s.1,2u!@X
!<E6)"9eu9!=f_<'`Jd>')E4<&GZh:%eU;1%.t#)$NCG3#l"W""nr-"#5/5u"7QEM!n@>I!;Z`c!.k3&
!.k3o!5/F2!pKdI"8E&_#5e`!#lG#%$N:G5%06nJp^d?8q@W?4!#,2C#n[XU#mLP9!s/Mt!"qR`78$BO
<ENF6Anl=,FEVtZJbaiqJ+e?dI/nZgHhr'eGlN!^G5-4YFT-=YF8^+JE:IoFDtn5JD>S/FC\;EDBkCuV
Abos7A,9[5@K0a-?Mdt'=o__&?iXO0?3":0>lIt&=o_\$=TDS!;Ys;j:\[][:&.KY9DV6\8GG^L7f#gR
9)_HV8G5RH7eT:D7/B:H60:Dq60:K55j(H36hj(<7fGjT7e9=K:%h?W:B+,V;"IT`;ZKeq=nl2!>Q%h&
?Mn42=nc>'@e!t%AH$-:Abp$;BDlT:C\hlFD>A)IDr5O5EW'tYFT-=]FSU(YG5HL\GPudaH2`*iHh`$\
IeJ9gJ0oo"IX60ZEH#])?s-N/:.e#F6:*=Y2)m]]6:44;:fCP%?!_#RB)-'@BP;#OAbop?A7T7`AFX.-
?34J@@/+%.?iF@(>l7h)=S,bn>4bqs=8c.o<rZ8#<Vohs<;]\k<;KPn;>sAj;#O/g:]=)e:ARW`9`7]c
9DhBX8,>[W77KsErCZu\rCQoWp-o$Pr'g`U6q-l8!'^<Ds#p->rB:*A!'9p;q)JF7q`"O7n2C>*qDmh#
of)S&p,)h.p,)\'s"aC's"M>DnhL/#mP=MlqD8+-mPb)&rA=L6p,i%4mQ:J5q*".0pHS[E!^]4>nj`LH
r^m#\rCR2d7Rg'Fq+^ub:/:UZq+pi^qG@&bp/(fgpJh)ir`&_pr`&u!=8>np<W?.m=Sl:o=oMP%>Q7t%
>l\72@.dn*?Mn72@K9j3AG0U6BDZ<@B)ZK@B-q>)@q/hM>$+a"8jl!14?,8U0JGCC3'KSn7S69N<`rg=
@Us+dDu"5OCMRb[C\VWGBkD&RC&2NAB*)XUA,'U5A,Km;@fKp:@/+1&?i+.$?3+D=rEf8)s',J-qca#(
r*05*qcN_u!`r?#r`/eoqc!Gkr_rbns%iVh!)E;br(I)bqapr`8l&7];#*le:&Rfg9MJ7V8cVEY8cVHX
6i]RO6iTII5lEnF56*tE55@>A4Sq8B4$!:$r&XU4!'0m?ofVq0p,W15p,Vh+!&sU2r&=X8q)870mPXl!
gc"^\s"rmsr\sm:pc._&r]'j;r]fd6mQ^h<5sbB8nj<:DpI+sI!(HNPs%WMerD*/arD3Pk8kSkS"&Din
;Xm]W<;T\l<;fku=oMP">5__*>P_P%>QA"(?2S%/?h@\%?1hP)?i"42@fBd9@eO=)Ab]p;B_Q98C]8)E
D#S5ID%go-ChI9f?s[&;:eF8I5Wh(f2`LL3#6=i,"9\l4#lkG0%fQq2%/1/'$Mk)*#O_ln"o&5X"7u]S
!p]m+!.k3&!.k3U!7CoI!TO70"8W/t"o/Aj#Q+l-$3(>,$hb##%JpVA&Io3U"pG,3!Wi#q&4&TN8kr/^
=B]0GBlS-7GC'%4!.=Nfs*FQfqfr*aqfr-bolg=TmW8AImVqr>rbV"<rbDCFqIf_<ral"<pga52s'bb3
qHj)*s'5G*!*]/#qcNhus&Jblr_rMhs&/_jpeUlao1f-VrCcrYq+19NpdY-Ls$ZiRrB^6ErBUEKp-J^E
r'0sBoKW"4k<8#kpH/@=lTXf$mm6J.lTt/.m6UV:!(?TNr'pTRrClQPr_E,^rDMNOpJh/mrDro"qH<_u
s'#8'!*oM/s'>G,rF#Y8pgj;6p1F)4rFkJ3oPaVGol9D@s)\0[ol^:Xom$4V!.+Qkr-\<g,Ct;iG'%\B
C1UdU<`;ad84>j30/#1A4?Z"u7SZcY>$P?=A,'R7A,^$3@fBd;?sm=??N+=/?N4C3@/+(->kM=t=TVc1
=S5ho=o_\(=o2;"<r5kq<W,no;Z9Vp<<#np;?'Gl;#X>k:]4)i:ARc_9`Ic`9`I`_9DV3[8+K.L7/K@N
7/oUI62X(G62s1F55IG?4Sq;;4T7A<3VGH12YT0+2Z#<02#fB11ANa)1&s-&0`X!-0_d@(1,(EJ0E3a(
0((=l0DR6j/-%9s/,_-e0)dHp0(1Ol1AW^(0_[6n1%[9h1Ais.2#B*/2>/s,48V&=4S(`64SM#<5Q!b7
5la7<62s:M7/fRO7/oaS8,5XS8,>gT9)q]b9`Io`;#*oc;#O;g;$'Tl;u9Pj;tO&^=8H(p=T2M!=nQ"l
>QS2<?hdt*@/==1@f0a:A,g'=Abfj]An>IY>?P-/:J+#A5s..c1GCL@2E3ib5t4I=;H?k,?XdV[pM0\@
qJ#tCrau.Bs(;4Brakt>s(21>pgjA3ojR]+!aoDEoj@T%!+,G+r`]2'r`T2'qcj&&s&K)"r)`o#s&T+u
r`/kqqG[Dnr)<Vnr(m>hqG7#`s%`GcrCZ`Tr^ZuXp-nmHp-njFqEb-Jr]p?EoKW:;q)nX<r&ja8!''R1
s#:'<2`L[nq)&%.!&X=*!&OR1pb`+/1c4qaoeZV&kqW5mq(_Cp!&4C,q_A(-!&Nsu!&FO0oJ5kmq_Rt'
pGV\%oJH;#pGVq.!B)q73W;#43W2/=5QF%?55mhI6MEeE7-d8A6gR5C7RfoI8,#XR8H2<Z9`[p_r([#`
!)EJgs&8\lr)N_trDrkspf@Grr`/r$qHWYsoNh?$pgO/0pgWo)ra>M3raYt=qIf_<qIfe>!,21Cs(V:D
&oVPuA7JtP=B/0i84>d,4?5>Zp](O"!<NB,"U>A.$hk#.$2Y"q#P\N&"mZ<Q"7QBf!o!a[!.k3&!.k3)
!<*#S!U9aS"5j=]"n`*"#5&5q#QP2"$O@4N#mLP8!s/Mt!"V@]77p?O<*3=5Anc7)FEdD(rH\-^lu_o?
ol0\ErbhFHr+u+Cs(_FGrFu+Aqe,h=rFPn;oOI]*qdB,(rE0&"qc3MmqG[5g!)WShqbHud!)r\kqb[8f
q+g`[pe:NWs$crUo0`FApH\@:o0*.;r':'Dr]fm:o03.:ofVh-j>uomkW@rhs#KO/pH.M#rBC*Amm-P3
rBpEKlpLkC8+91?9^b[V;bcFRs&JYk!*9)$r`]2's'Yh7p1!c+rFGb9qe#\;qe6"DrFuCJBk[H[qJ5tE
phg"Js)7[Opi64OqJuXWl?)rKqKi*cpj+*3H?XIMDJNfl=]SEq91VK<68'uJ2`s5j77L$K;d*F3?2e@,
@K9j2@/F7-?2%S*?!LY0>5;>$>5q_(=o2;"<rH+r<W#l!<)lrm<:Noe;>j;g;>j;f;#=&f9`Rle9`%Qa
9D_B_:&7Ka8P)GN6iKLP6MWnI6Mj(F55RM?49._E62<bF55IG<4T@S@4S_);3<2&=3<(f62"`[%1A<U$
1&EU(1%[+!0`3a+1&N]l0`*Nu0)mNr0)mNr/`\G[.etOe/(ZB?/,:[q/`JD_/cIBk1]&s)2"<Bl1]]Bi
r]'I/rAjL3rAsO4!^Sq7p-SR@nO!(?r^6WRr($c\qFgZ[rD!8eqG@)cs%iPh!)iYjr_reqqbmMn;ta/j
<Vohp<W-"u<rZ1r=oV_">5he'>Pqb%>P;>&?N":.@K9j0@Nf8l?!CH4<)6.T69dRm2D[$@2E!QY6:"%3
8lA\k?sdATrb)">ral.CpL`c$!a]5@pgEo)s'>Y2pg*l)rEK,'r)s/+=]tT)r`K)$rE&hrs&]/$r)EVp
r)<Yopf%/kqbdAkqbI2epJ:`[r^ZoVs$urT!CK<K70#^Q62NnI6i'7I7/oUP6iKCI5lX%F56*kB55dYD
4p3l+3&ihh2ZPi82YT')2>]931A!@&1&Nm-2>fB"2#B*)1]fEg1\EKo0]Xnb0)mU%0D7-R0`Nco0D@1$
1ZpOl1]fEg1]B0/2"EL#2Z#B*2s`L)3BR4(o0*"9oKN4=o03:F5=P<6!(6QNqa:BQq+1?Pqapi_r(R,d
r_i\nqGR/gr_i\oqGmGo!*/ksr`9"us&]/%!a&N(rE/r#!*T2&!*oJ-rEK8,s'GP/s'GD,ra5M1!+>b7
q.',-!,)7BqIfkAratq=&Sbrj@p`MF<DlF[6pNmt3B&nl!!`N*!X&W0#7:)1r<W-&lim%bkl]ZAq>oLT
UB#lGJcLB&JcP]KdK04H!W`?'k5t;Yl3."gmKNLnq?d*+p^%05#mUV9!s/Mt!"_F^77p?O<*3=5Ao2O-
FE_s&FoZ[YF9$CUFS0YGE;=GOD>nA;C\DKEBkV#MA,]s3@K0a/?3"1+=Sl8$=Su4s<W5tl;uKVn;#=&b
:A[c^9E7``9)M3[:A[ca8+f@O7IrqI6h3P@6Mj(>5P%&44T.A;3V>Q63pep'2t]0/2X30b2"WTf37p4B
3WM8@3r:r/4TI\95Q3qG5jUf76h<_77JoXJ8,c$\9he=U:@h9];t<oe<VBJh=S,bn=9)b$@J"%'A,^0@
C$'4,D#\ALDuXbUE:n5GF8g4RFS0eMFrksRFDu,5AmnhC;GKnV77'<o0/GOL4[DM+:/G"q>5hh$?3":1
?MIh&>l@n/?!U_1>5hb$=T_i3>?Ul*r`/qupf.5mpJgfa!*&hkqb@&`rD!/^s%N>bqb$oYqaUWUr^?cS
s$Q]Ps$HQJrBgKLr]g6CrB9^6!'C'<p,E(84o@G?2u5H21]fNl2YK!,1\*:$1Aij'0`X!)0`*Nm0)@-l
/bq$t/H@<].eP4g.JtU_.-`2P-FbQ(.cMrY/cI9t/bUgr0`!Hs0_mNh1B00%2#]<21\<R(2#fK.2uGW:
4?Ydp4Sq;A6LR5=6Ma+H6NBRI7f,[U9`%H_9D_H[9`%T]:&[rf<;ohp;Y!fd<W#hl<r5nr=8l@u=9)P(
>khP#>l@k,?2e1*?2e4)?6N]^?!13-;+j;F5<Lqa1GCL@2E<oe5t+@;;H@"0?t*_[p1+/5p0n#1p0n)0
?=3J8ra,A,!aT&9qd'2+r`]5(rEK8(pKI8n!EW:l;uKSj;ZBPj:A[fe9)D0T9)M3Z7f>jV7K#UJ7K,XP
62s:J5l3bG55RPE55[P@3rqT1r'1-@!''g8rAk!>3&gIh!B3"/2Z,N22#oH.2#B0%1B'$,1B''-0_m?s
1As!/0E*Zm0)@0m0)[?d/)r,V._dV00]F_c0`Ea&0)dX%1B'!.1]'&u2!d."3<(r/3;bf/3;tu=3VPT7
3W;)A5<_:*5l!bD62s=C7K,gU8GYjQ8cVHT9)D-Z:\mud;>O5g;YO,h<W6(u>PVJ!>5h\&>PVJ&>lA"-
?2n:-@/s^7?he(/@/aX6A,Tm0A+jFEBkCg]?!:3*8k2975<Lqb2u!@X!<E6)"9f#8ncnIbnc\C`f`L[E
rW%NMJcLB&JcLB&gApC;f`LmMoE=smp''U`"pkM<!s8T*pAbXg5t+CA:K:G!@V0IsEW("YF89qWEWC1N
EW'kPDuFSOD>\5AC\MQ@B`)N?B)ZB<AH-!5?2In,>PVIt=nu1q<VTPh;uT\m;#!i_:B!lZ8G>US7f#RP
8H)*Z8,#LL7JT@G6h3PB6N9@F56*h?481f.3;GH62)RDb3rV2>3;GMn1]0#n0^17f0'G+,1\N[(2>oT2
3W:o22YB'+3rV5?48:r44o[hG6LmG?6hEeG7J0+O7n-#J7KQ"L7HmA=8cVQ^:&dud:AIi^<;onl<rH.m
>4c%q>l@q/?=WV<rakn;!,;CHmq_o=pMKqJpM]YCq/cOUoQ2*tFE)26AmnkD;bp(X77'<o0/GOL4[DJ*
:/G"q>5DOu>QA"+>l._'=9)J#=TDP$<W,tr<W#nt<;onq<;f_l;uKVl;ZK\n:]+#h;>sAf;#a2c8bkmG
7K>mR6i'.L61mPB5P[JC5P[J=4T7;?3VPN52u,<22Yo<02uko:2>/s.2>o?,2#K0!1B''.0EEm]p+ZFt
qCVFlqC;Fms![[l![oHKpFGY]odBV`od'J^!%$nTkp$!J\0g;br?hOos"!jrr[@Oj!%@^nr$qOnq^q^s
o.L%tr%ROoo/$P*1Gq#_2?Gfq2?#E62)mJ_3;PZ23;Pc83s%N,5Pm_H6M<_>6N0CP70#jS7eB1B8,Z!\
92A=U;#*lg:f:3h;u9Gm<;BPn<;oqn<<?6&<r,et='&Pu>5he&>6%q%>l7kI>?Fp*;+jAH5s.4e1GCL@
2E<oe5t=F;;H@"0@/XR6@JOC3?iXX5?i+7/@JsR4?2S%-?2Rt*>5qh+=o;J%>PhJ%=T2G#<WH5"=Su2"
<;ono<<#bk:&@]c9^kXS8bu'U7K>sG7JoIP5l!_B5lNkG3rM/;49%A;3rh;;3;ko=3rV583W;#:3VbZ4
2uGZ+2Z>W92)b.b!&=I+qCqXsqCVb$r\+:(q()Rt.k^QLq(Ve#q(;7gmje5al6kgCq^&a%n1"&\r@It&
s"F."r[[ap!&".%r%@h!q_7q'rA"%%s#'^5ni$G+!&jI/"$&A$3qbQ83]T;$3W_9&3;5N248M#649.PA
5Q!hI5l*nL6hWtJ7f#[T8,c'[8G#ON:&@W\:Amlf:K-mbr`/kt"'/E%=8c;!>6%k&=oMY)>52>(>?tP2
?N+7(@/aO/@K'[,@Lm'\@9m&9;G'GJ69[Ll2`LL3"9AN)"9e]-nceLcnH7eQirSQJJcLB&JcLB&JcN[g
kQ0K@r<)itlNH_]"U>26!s/Mt!"2(Y6qU6S<E<:4Ao79^q/H(Hs).jRr+u(BqeH.Fqe5q@qI]Y:rac%=
m9oTnrE];$r`/Phqc!>hr)!;er_3AdpIk3PqFLQTpI>0OpdFgCs$?TPr^?cSnj<IC5!JO#n3$S0p,`(1
rAWptl88Dqs"j='o.]bhr\!mrjXg$RoIfqkr@dmumP+5ej"p9`q_In&kr&H!mPt))s#]m9mlg;-"$o1<
62a.L5lsJB62F%E7dWbG9(bgS9DD3\:%_HQ<;KVk<rZJ)>6%t$?LD4uA,Ts<Ac6<EBk_>PC\qoJD>%l@
Dtn;JE>s">Deirn>#nQt9LqT=68'uJ2`s>k6q0sK='GK+r`]2%"Bnu5>?Uf("BJQ)='5H&!*9"sr`/qq
q,78mr)<Pkr_ibmqG7)es%iA_pIb<UpIY?Pqa1-Hs$?QJq`t3Hp-/I=s#p?B!'C$;o/QS)rAX[5q_S=2
1\`g#1]K6/2#oQ(1BK<e0Cgaq/bC[o/c[Kn/,Ujs.K(X_./G:V-i54i,kWJT,Q/h\+TNY;+S6cJ+o*8P
,2a^D-KlfT-2/ea-2/ea-LWA^-iPR].KV+P/bLap/cRHr0)[Hu0EX'd0erV\r\=O41c"nbqDA10oJl\-
ml:8+qE+^<r'1$Dq`t0IpH\dHo0WIKr^ZcUqb-]VpIkW_:J^g`s%iJirDNSnr`/kqqc3\sr)EVqs&f/"
rE0,)!*]2$!a&W0rEL:I>#eNu91D<84?GMY0JGCC3'BSt7n60K<a/u/?iFI1?iOF3>k_M*>?b8/>5VV(
=oMY&=TVZ+<W#nr=8l5"<rZ8!<W5r!;c?Ke:\R]Y:]4#e8,c'Y7efFM7f,US7/KFN6Ms.K5QF"E4oRY6
4T.>>3Vti<3'$anp,E"0rAXd9rAaF."?8@u1c4h[s"j.!!&4=*p+Q=r!&+:&n1+JhqCLq^q^_[rodTJ[
r?h7dr[.=ajWjUGq]bYYq'>PYmO.TTj!t!XpF?%hr[Raoq^h1dr[n+&nLj_n!\Z5]oeHD$o.p8%pbW(2
1c7/h2uY]:3&W\k3<)&;3rV/348M#/4T7PE4o[bC56!n@7JfRH7J]LM8H2E`9E7fZ:]4,f;"mcb;uT\n
<<#tq<rcD%>Q%b)=o;M$=o_h&?2n1(>le29q-O23?srq?%UrgP>#nNn7n#a.4#o5Yp](?r!<W0%qulBh
k5scHciAXtJcLB&JcLB&UB'rfliQq`iWK#["9eo1!Wi#q$UI'H8l&Dd=B]0GD>\DNE;=GNDYn;LD"qfC
C&VfFA+a=0@JF7*?N+4,>PMCs=TV]+<q]Ah:\IQ`:%h9P9)qTV8G#CO7IikH6hs%F5Q<qH4TIeF5Q*hE
54q):4S(Q(2Z#H!2>T/u1]9*'/c.*n/E85L.JkOj-Mf1c./,(c-0Qi+.deng/Enbc1Arp'1%d=!2#fH#
2>fE-2Z,N+3;bo74TI\@5Oh&86Ms.K6h3YF7K5pQ8FfCI9DqQV:&7W^:B45i;Z9Mj<q]Yq>5DJ&>lJ%,
?M\(-@JaF4@/aU4@K9j9@fBm8C&MfAC]8/KD>S5IDu+GNE>ib2AmnkD;bp(X77'<o0/GOL5X@b,:/Y(q
>5hY(=oMS)=T2J$=8uD&<rH,"<W,r"<)Z`o<<#kp;u]bp;uTMj:A@N]:&%E]9D_<X8+B(H6io_D7/&nD
4oIM>49%GA47bK(3:f'*2#fB*2#B'/1Aim$0E*X*1&E["0D-st0E*U!.fCdr./>=h.JkL_./P@f-h\n`
,lK%X+Sd)T+6jpI*W$iI*;^]O*VUQD)ZUu/*qC<E*pb$E+7^QR-2&SV-2T(i-LE5Z-hf(f.f:ap.f:do
0DR4#0DI7"0D.'q0`3^#1\im-1]00.2uku73;P]23W(u93rV8?4Sq2?4Sh5;55[hF6iBIK7fGpR8H;B^
9`@fb:&Rcb:B!uc9E7fd:B!ua;uBVp;uK\p<rH+t<WQ<(s&]/%r`K/'!*T;'**QNG<)?:Y6pWps3&<6B
2E!NX6:OI;8lAYo?srtBs'Pb2!+,J,s'5S0rEK;,rE98,>[752s',G's&f8$r_reopf%,go2#<\r_EGd
r_;fQs$ufM!(6`OrBU3Fs$-HGqEOg>qE=mAq`FX:qDnF6s#Ka3r\ss<2`CRks#0a3s"jX/!&aX1rAFL/
oeQP$r\=1#r@\.'o.9bjnLOJfo.'G`r@.Idq'5\\qBFT9q]PbXqB>SUpE08R!$]l8nfmcNmNhfWpa,JV
r[IdnmOA#_s"*Ofr%7Xor%7h"q(DS!q(_q+pb_q-oel\,rAXX4r\sC-s#L!>q`=d=q)nL8pcSU>rBC*D
qEOjC!'pEI!(6]Rr^-NQqF^]Xs%<2`s%WJfr_<;d!)WPgr)*;dr_`Sl!)`_nr_r_rs&oA(r`]>,rEK8)
rEK2*!*oA+ra,S0!+5_6%U`[N>#nKm7n#a.4#o5Yp](?r!<W0%mfVhVm/as%JcLB&JcLB&JcLi3quHct
qZ-ZuklU5Squd''!Wi#q$q*KR9M\Vf=Bf6HCMWc]okEf(raYV1r*fS/rEB,%q,m;js&A\ipJC``peUla
p.YN\oh4sMs%)rU!(HfRr'UHLqEjp@pHJU?pcS73!'C*>pc/(.o/?P+rAF1'r\O4&pFuP!ln8;inL3uW
kU,I=q]t/G!$_(^pE]b`pETV^j!F[Oq'u+fqC:t`r@%Urk:Z]dq_%q)p+uS&o/6M+p,;h.r&XL1q)\O8
rB(!>qE4^>ofi19rBUEMpd=sIr'gNSq+C9Pqb6i\qbHu`mSNXUr`&ntpK@/mrEK2-ra>e9p1*AurFu%A
qeI!dCM%!Y<`;dg84>j31G^mK4?u2"7SZkV<;okt;ta,_;#a;h:B!ue:A@N\:&[W\7K,aX6psK?6iKLK
6N9@F5Pm_?4p!r34nq,>4oRS?3r;#83<2,<2ukr92ubf42ZP`/1]B0#0_I*u0)7'k/`\DX.K(Xm./kUi
-iPFk,kWJ^,PrY_,4ZoQ+RC*!)t4aB)WDV7)"ejB)YG!H)XeR7)ZUrU*qp]M*:b-K*;1N=+oNSb-2&\`
,lf=a./kUo.Jt[f.KD!h.fCmt.fCsu/,Cds/cIBq0DR=#0*3g_1A!C$2>fH12ZPi13W2&=48M#14S1i7
5kdM@62F"K7efFK7f5sZ9`Rl_:&[r`:A%Eb;GpHg;ts<0=&`'m7RTO)3]JoL0K;$R5=.h08ki2`>$Cc)
r`0##q,mVpn5TBcr_iMir)*GfrCd&\!(m#Zr^QrZq+1NSp-edDpHepH5sbB7r]gHIr]g6E!'^<CqE4g?
q`Od>s#g-=!BW=>3;b`72YoB.1]fNl1\`a-1,:T[1@R!m0)7*q/,Cgq/c@3n.fLst.eP7h-i5=j-M\ta
-2T%h,i^$2+8?oH+8[)B*;UZJ*qp]J*;poH+8$]S+7CBL,4HcS+T<Vd,l/kU-2T(g-3,Lg.f:ds.e>1i
/cRBs/,V$u0E<d!0)[L&0E3['0`Ea'1'03d1]B0&1\im+2?Gfs3;PT32uku;3;bl74TIV;4TIVA54h,-
6Mj(G7/]OQ7K5mP9))'Y9)VK^:]=5a;s[K`;uKep=oMP#=q"\?<DQ4W77'7$3B&nl!<3)s!r;uL!OMiY
!.k3&!.k3&!/CRP!TO4K!WiH*!VZR#6UO@::K1:q>@RA>s(21?rF>b7rF,V3s'G\1rET;*!*]>(rE0)*
r*/ts!*&VioMY?YqG7)c!_uKaqFg]XpIP6QpI>-N!(?HHoKiLAo02\,o/cq5r]'m7rA=@-oJ6>!r%Rds
!&!sspFPV[s!dUhod95Umj6""k9BsNod0AYrZ_:ba<U@'qC)1eq]u4jq'kMWqC;7koe#tnr%[dumkau#
pbht/!'9[4rB0d:qEF^=!'g*Ar'L0Io1&@Boh,9ZpeLc`r_VoYp/Cujr)N/hp0mu1pgX;7m:I/MAn"qE
;bp+Y77'<r1,V$R5X7\+:/Y!h;#O8k:]=2h:&I`h9he8R9`7T]8H;9[8,5US7/]RS8c2*C62<bC54Lc9
4T.A;3Vtc33;ti72>]<12#]922#T611\EO'1%I!g0)7'p/c%!r.fLjm-h&GV,PWJ^+o<DV+T!2[+7^KM
*<.&P*;gcP)X/49)<2Y3)XJ=()#tNH)u(?J)!i(()>"g@)#kNN*:t3G)uq#J*r?uR+8?uV+8R,P,Pi__
-2]%\-N>Cl-Mf.f.f([k/c@7!/b1Oc0D[F$0`Ns*2>T0-2ZG]32>]?/3;bc:4Sh/>4Sq;;54q/562s:J
62a:G8,c-\9DVB]:ARZe:JXkcp/(fdqGA&.;GK\L5s.1f1GCLB3'0;j7Rg!E;H6`r<rH"t<W5tr;uBMr
;,L4h:]4,i:]=)e:Amob9)V?]:&I]\8+]7L63'FM7/o^T6MNqE5la1K5la.A4o.8>4T.A=3W2#<3<2&9
2u5N32ZGZ32ZGZ21\rs(1&j$+1AW^$0`Wp,0)dBt.fCmd.JtRg-N5@m-MA_`,Pr_d,4ZoS,6&h^+T3G\
+8R,E*r$i4*UFj7*;UZJ*r$cP*:+^%*;:NS*VpoT+8[)\+<_om+o<M[,5<D\-2Jn_-giGP.fV%!/G^mp
/c[U&0`Ws(0`<d*1\rm&2#9!.2>]<.2>fE53Vk`33r1l548V)855[PD5Pd\G5lEtM6UO3=7K,aK7/fOJ
7K5aT7Jo[S:%_3Z9E.od;?'Gl;YO,_;uftq<!ul0;G'GJ69mUm2`LL3q#U!dOoU(6JcLB&JcLB&JcP6>
i;iu]!<Mrq#t%'M92AMd=Bf82@JjO3?M@b%>Q7k!=S5_m<Vf\f;tj,f:\mib9`Ri]8-;CR8kA>>qF1HR
r'C<KrB^3Cr''m=q`OF2qE"F3q`"O5q)8:2qCqk%r%IXor[mUjl72<QqC(MRod/oM[j:hq!$_4br?h:c
rZfK/nKdrZqBl.e![]6Cp*K>XpaH+ip*o,Rq(M\!r@e(#pb27nrAFC0q)812p,`+5r]L$>pHAI=o034@
qa16Ir^HKLo1&dOoh,6WpIkT_:\RZc;Y3lf<;fem<V9Dc=9)M'>5DRu@/"(DAmnnG;bp+Y77'<r1,V$R
5X7\+9`@cb9DhE[9DD*T7fPmU7JK7L7.inH62EkG623YG5X%C.4o7A?48h;;3;k`82u,H*2u5?22>f6/
0`<['0`Ed+0D-st/c.*q/b1Ff.JkUp.JY=k./"nS+TNYa+7gWS*rI,Q+9*A[*:Y$L*9\@<)X&.8)<Vq/
)W2J0)#tNL)uU]M)=87")>G*D)#G6J*;1<Q)B'Uo)<Vt9*;1EN*;CTK+9*J[+oih_+TNV_+S[/Z+o!;\
./>7d.K([b/,h*r0)@1!0(psp0E<d'0`<d,2#oN12#K9-2u5N22u,H/3WD2@4S_,@5!\m-r'C6GrB^*C
r^?NKr^?fTr^HcWr_*8`qF^`\pe)>r;b]_K5s.1f1GCLB3'0;j7Rg!E;uTYm;Z'Ai:B4)Y:&dib8bbpW
8,,XS7fQ!T7eK1O5sdp76iKFO5lF"I56*nD48h8B4ZiL#m5b5,r&4O5rAOL/s#'^2qD/(,q_J"%q(_[u
qCh^ts"*st!%[ReoHaJar[%.\rZptWs!.IdnKI`OqB,APqB4uCp`J-/i#__7q&]JWp`JlDfc9`-q]5MU
qB,YW"<\g1+!:M)qB#8NocWrOr$(nZp*0M[q'Q%dr?hRkr?V.br@%Fgr@@[qq(2Isp+Q=ur\F=)qD8++
rA4:-qD811q`"I3r]'a8r&OR6q`+X<q`Xg=s$$<E"[>485!VI16NTS?7.`qG7f>jV7efOR8,,^U8H;B^
9DVHZ;#X8c;@??$;,'YO69mUm2`LL3!!2orJcLB&JcLB&JcLB&JcO'r!!2fo#=CjK92AMd=T2P*>PD=o
=TDRt<r,hc<:s#g:/4OZ9E7`X9)hHX8,l'W7K#XP7.`k?62j+E55[S84T7G:3r_292ubl72tAg+2"rg(
1&<Hq/DM`G.JkUd.JP=R-MSnL-+5'!,P<DY-2o.5,OHcQ./G7j-2](i.J>(]-MAke./57i.eY:f.GQEG
/-@IU/26lSs"aI-nML&!!''s;r]9d8o/ut7pce^Br^#^7pdG'Lr^QZQ!(d&\pe1HW!)<Des%iJer_iJh
s&A\l!*8bpp0%/or`]tD>?Fg"9hIi@68C;R3'9Gk6iBOP7f>dT7ef@Q77BW<63'@F623_E4nUr53VbZ3
2Zbru2u5E32#T<)2#T6,1A`ft0DdC$0E*U)0)@-u/c7-s.fUso.fUpo-i,7e-3,Fi-N5:g,P3,W*qUQP
*V1?M)uq#N*W$iJ*W@&A)u:K9)tt6:)X/1#(]YBF)Yb3D(YK]()>>!B)YtHL)uLTU*#TXW)u1KK*W6rX
)tt?L*W-oO*rR/Y*V1BO*qg`O,QB(e-M\t`-i,4k.K(aj/,h-o0)dNt0)mU)0`Ej(1A`m(1AWg&2#T<2
2#9'22`E_p2uGZ/3<;0'r]^9Dr&k!FpHS=:!^]:Cpd>$Ls$Z`Pr^HlVq*t?R&PPY]5s.1e2)$^D3'0;j
7Rg#L:&mub9)VEU8chRR8,,XS7f>jQ7JK@O623eH5kmPF5!1t*4Sq8C4$,M"49%A63;ti72u>Q72Z#B1
2Z>T11B9901A`a*1&<[)0`3U%0`Ng&/cRI#/c%!n/G:Rk.J+k`,kN;Y,P*)V,4ZoS,4cuQ+T*>P+8R,C
*qpc+*U+XB*WR5R+S[&P*Rl)'*qp]O+Sm/[*rI,^+Whg$*qg]I+S[,Y,5*/V+oEPU+oNYW,5ie_,6K2:
,:E47q^VClq'u4k!%Rq"r\++&r\4%#r\4:+qDA4.s"s^5qDe@2qDe@2oJlh2q`=mA3]]A$4o@MB4o.DC
5lO"H62EnJ7.j"D7fl.K8,,^U8bPaV9DM3Z9F4Wl8ju'34ZGAZn,S%?JcLB&JcLB&JcLB&bl@_Ep](Lc
6Uj^E<)icup/^idp/:rhqG@,ds%`Gcr_*>g:AIW_9_qE[8+]:D7J]FP7/]@I55IG@4SLo;3qPE.2ZPi7
2uGQ.2#fB/1Aim,0_$gp0(ggo/G1RL.eG1c.eP7`.-2fR-/p5^,QK(^-MSnd,LIb",l/qe-N>Lk-3,Lg
-2AnZ./kXk.JkUg./bU@.f:jg/b1Lo0DR=%1Aip)1\im*2?,W32ZGc048:r:4nLr<5Q4(K6iKCO6hWt@
7f>jR8,uB`:A@TW:\@Qa;YO2j<qobs=nc,!>7Ob6:JOMN6:*F_1cRT_5k%2A6M3Y>56*nF4odbB4T%8>
3rqH*r]L*>qDnL6r&+I3pGDk,pbVb's"jC&!&".#r@\($q()=lqC)Coq^MRoq^;:is!RXhs!IUhr$24b
q',JTr?1nXocX/RoH3uOo,diM!$(VOrZ:tWoc<rMjr=+7k8X.5n/C"!ne_?Coc!`Gr>X$"p)*B>qAf>N
q\fGTkSs48qAoJR!$:hRr>keUocF,Sr#PJQruV+Zp`KGW!$:tYnK@ZO!$_7_!$h=dq]l.fqBu1fs!RXl
s![dqqCM[uq^h@lq(M_'s"aR0r%e((r\aF,r\j^4r&+U93'?stofW%5pce[CpHnaEr^?fTqF19N%RWNE
4#]#N0K;$Q5!h_.r(?ZQ!_#RJpdb$H!(?]N!(6]O!^K"8r':6F!CB*O5Q!eF5Q3hE55[JB3WD,63rV,6
3VYT42>]001A`m+1&`m'0`Wm(0)@6t/H@F#/c7.!.f([q.eY=k./P@k-M]%f-2f+b-1rM\,kN;Y,P*)V
,4QiS,5!,P+TEPP+8I&B*qpbu*V^]Q*WR5R+T*>[*mPc!*qLEK+T*>W+9E]-*r$fP+7LEL+oEMa+nd&W
+oEPU+oESY,6&hb,PWJ],60"c-2o1f,l&e`,lf:g-ibXk.JkRp/,Can/H7<u/H7@#1&<U#1B0*-1AWj)
1]K?13;tl92ZGc43W;#43rV/<48_2B4$,\%62j.E6N0:K6i'.L7K,gR7fGsU9)_B^9);3[9)_Ni8ju'4
4ZGAZn,S%?JcLB&JcLB&JcLB&_Z0j+5t4LC<;T\h;ufkm;Z0Gi:]!o\9`Ri[8cVE\8,>[V77BWA8,PgV
7J9.J62O"J62NnH5Q*\E47kT12u5N*2=iX#1AW`r0DI0r0E*Tr/c@6m/DDZJ.JG=d.J"tK-N>CJ-,1]*
,P<DY-2o.?,NC'G./tXl./P=k.J>(c-L`G_./bUi.eY:j.Es=F/1`A)/FtIk0)$pt0(pst0DmO'1&<Zs
1]K<03;PT/3;ko148qA:5PRPD56+(J7/B@F7f>gW8,>dL9)_NX:&Ica;"[`[<W,r-=]8*k8ju'51,:[G
4@&[-q*=mCr''s?s#g0?!'L9Dq)\I6q)8:3r\jg7qD8=21Gh$LrAFL0!];ekpbVk(q_8"(qD&%(r@Iap
oIBG\qBl%cqBYn`qBPe[nf[uUpEBGWq&f5Or>tPPr>kGMruD"Xp)X&Pr#GGOq&JN9q&8B7p)3NAb8L?u
ll4Ckr##8Imi)$BqA]DPrYkhXl5T@8r>kbTrZ:bQruM"Wo,dfMoH3uOpE'M\+<M[Hq]GGQrZCqYqB>\Z
r#u%aqBbt`qBl4gr$_Cks!djps!m^mq^qdur@e%%pFlP#p+u\*r&"7.r&+F2r]'[3r]'m;q`=X;r&apA
qEFg@r]g3EqEbWZ5s.4f2)$^B2EF#g7f,^T7JTCQ7K,^Q7K#UQ62s:K62j+E5QF"I4S_,?4T7AA48Lu@
3B9&[3rM/<3qYK22Z#H42>T*/2>o911&<R#0`!Bt0)@*p/Ft@_.JY=e-i>:i,lf:g-iPFi,l&bY,Q/nZ
,5ibW+oEPS+oEPY+nHiC+8I&A*qg\p*W$iW*;(EK*n),%*q(-G+TEPZ+T<Ga+W_^"*rI,I+T3J\,5rbZ
+TEV_,4cuU,P32X,PNAb,9nK\,l8nd,lK"d-N5=f,QK1f-i,1f./,1^.fV$s0)@0r0E3['0D[F#0`Ej+
2>]6*2?>Zl!Alb43;kl:3;bi63W(u;4T7G;4oRSC5Pm_D5Q!hI6iKFI7K,^N8,c!V8-_aU6:!ao2`L4+
JcLB&JcLB&JcLB&JcN[g"[PFD92AO^;tj2h:\d``9_h?S9(tmV7/TFK6M`qD55@A?4T7G>3rM5>4T@P@
3;PQ12tJlt1\rm'1&<[&1&iru0D[<s0E3Zq/cRBm/DDZL.J51d.I\bI-3,CF-,h,0,P<DY-2o.D,Mj^C
-ib^m./P=k.J>(e-LN;]./tai.eY:F.KD$j.KD%!/H@?p/c%*p/cRHs0E3^&0E<j(1&s!%0`<cu1\rs+
2?5W22u>N23:&d,4o@VD4o[_B6N0:K6i'1J8,u0V8G5[T9DD3V:&Roe;Y3lr<)67[77'<r1,LsQ5kmVF
5PRGA4o%/<3rh;:3;to42uYf52Z,B21A3F$0DI0t/c@7"/H@=!.fCsq0)I'n.J,"a-2Jtc,QK+d-2Jk_
-2Sqe+o3DR+TN_]+o<DW+7p]S*qLKP*V(9L*;CQN*rI#R*VUQ8)u1E5)tb*G)Ts$!)=/<p)>>!J)!W%9
*:t0M*UOg9*<.&V*;glJ*:k6O*W@)N*rmA]*VCKS+T<G_*rR2O+93MX+T!>Y,5WM`,Pi\d,5NJ^,Q/qb
,l/ke-2o1j-i>Cn./G=g.JtUo/Fb@l0E*U%0D[<t0_I4#1]0-22>oH43;>H13;Y`848_/=3WM>>55[Y@
5n$"@4#SlK0K(gM5!ha670#aN7K,UK5lNqI5P[MB4SV)=48M)>3;tl:3;PT42#]B11]TB31Ais,1B&s-
0DmO&1\rj'0)@-r/c$sn/+Y7Q.K:gm-M]%g-2f+i-Mf+i-2St_-1iG\,kE5Y,P!#U,4QiS,5EDR+T<MM
+8I&?*q^Vu*W$iW*;(EK*nVJ**pOdC+93S]+T!5^+W_^"*r[8I+TEV^,5`VX+T*GT+oESV+oinf,P<5\
,Q8th,lK%d,l].d-3,@f,l]4g-i,1e./>:l-Mf.i-iGLc.f1^r.f:gt/,Cjp/Gq.#1@[+!0E<g+1Aj'.
1B03-2uY`13;tl749.JA4T7G;4o[YD55RSD55@GD6iKFA70Z4J5s..d2t-g!!.k3&!.k3&!.k3&!5ed>
5s[t5:]=,d9`Rlb:&I]X9E%QY8,u0S7K>mP7/fIP5P@;74T@M<3rV,;2Z>W83rCu:2ZPc82Z#H)2=r`s
1\rm(0`X$*1Ars,0_-mo0)%$h/H@?k/DDZN.Intd.IAPI-N#4A-/^'"^]#J:,M4:A./YOj./P=k.J>(R
./kXe.ekFl.GZKQ/Ft=k/H%.#/G:[k0)7*u0(ppu0D[C!1&s-(0`Ej!1\ij-2Z5H(2#9*,2Y9!$3r_;?
4od\B4T@SC5PdSE62!_E7JfRT8G,UK9)qZZ9`Rrb:C0]c77'<r1,LsQr]C!<!]rM,r]9j8of2b*"#`(r
2Yf001\`g+0*3g\0D-sn/Gq$q.fLjp.K1[p.f:ap.fCgn-i,7f-Mo1e-2Jtd,l].d-2Sne,l&bb,Q8k_
,4cuX,5EDX+Sd,O+T*;Q+8d/O*rd;Z*;U]N*r?rT*V:?5)u(?3)tY$+)V2%I)>"dF)X&+9*<$oU*;^ZT
*Uas3*;U`J*:b0M*<7,O+9!;]*V:ER*rR/\*r[8D+T3JZ,5NJZ,lf4e+oNYb-2Jn`-N,4n,paod.K(Ui
-2T(d-Mo7g./k[f.f:gq/cmOS/H.:%/bq(!0E<d%1]B6/1]9042`E_k2u,H43;kl53rV5A48M&G3ArZI
0K(gM5!o67q`k3H5<o-4r'10Dpce@5!]i>%q)SL9pc/72!]2\hpb_t)q(ht)r\+.&r\".#r[e+(r%J%$
r@IgtqCDCnq^VFmo.'A]!%RXjr[@Uiq'Z1gr?_Ijq'Yt`q'GYXr$:nYr$1bUr$(YSq]bq]o-!oQllZ!F
iu[h7i#VBhjf@5XoH**7ruh4_qB5YW![/U+p`AWAq]bk[p`TS[rZ^nVr?LnXrZhIgoHF8\r?VFhr[%Cd
!$q@eq'>qdr?qCfqC)1h!%Rgnr?qRno.'Vf!\,ZNr@7Xoq^V4hqC_b#r\!q!r\+:+rA4R11,Ah`s"jI.
r\OU5p,Mt1rAt'A3]m+"r]L!?r]L6Gq*=pD!($HJ"@#"/2`L4+JcLB&JcNUef&l?"JcLB&JcN[g"%#=C
9D_?X8GbpV7fGjO7/]LL63'=L5PdSD4o7PD4S:f.3qYK32to952`EYn2Z#H)2=r`s1\rm)1&j'*1B'$,
0_-mp0)%"!0(CLn/at=F.f:a2^Oj4P^[])8./bUP.f:ji.fV'u/H@?s/b^mp/c76q0*!^%0`*X*1\NO&
1A!Bs1]TH51\<O"2>]<03;kf82Y9!%3r_;@4o[YA497T-pHeR@r^$EKqaU9LognjM#Ymu\6:*@[2)tIl
qDe@0r\XU3oeQS'q_/%)0E*[*0DI."1&N^'/H.6o/+b=d.K1gq./PIn.f:am-i,7f-Mo1e-2Jte,lT(c
-2]"f,l&bc,Q/e],5!,Y,5NJX+S[&N+T3AQ+8d/Q*rR/X*;gh=Xb*[LXn<\)*rI&N+8d2P+9*D\*s!E)
nK@iTp)s>XqBG_Y!$h@es!7Lcq]l+eqBYqbq]u4gr[.[pr[.Ifq^;4e!%@^nr$_Lkr[Idoq^M1fr%%au
r%.h"!A,l!0E*^$0_dF&2#]E12?#K52u#<13;>E<4#]#N0K1pM55RM848q;63;ti:3;PQ62Z>Q52>T-2
1,:`b2Z5E10_dC%0D[C%0`E^"0E*R%0)I=%/c70s/c%!o/Ggpn/+Y7`.K:mk.K([j-Mf(i-2f.h-Mf(i
-M\q^-1iG\,kE5X,P!#U,5`VAX+IC(X4"'F+T3G`,4ZoT,P32X,kN;\,lK"i,UN73!%.Ohs!@Ofr$MCj
qBl"d!%7Xms!mppq^;CmoIB\fr[In!r[Rapq^VFn!%[ptr%@q"r[\%%r\"($r\!t"r\+:+r\OI-r\4F0
1AWp.2>B-02Z#K53rV/749%A:4T7G;4Tn&63&`ec!.k3&!7V"Pk(;`Jjo>C5!.k3g!<5C_7e]@H6io_C
623eE5PdP94Sh/;4S:f.3qYK32to942`CRlq`"+(oJH.qqD/"(rA4:*s"XF*nLskok.cM_K"loPR(rPN
q_%Xss"O7&r%e7-p+Z(op+uh/1GeY[pbht-q`+R6r\jC.m5k/+rB'g;rB9s?ofr=>!(-TOp-n[E"\M3L
5qk"i2"rm$1B93'0`Ng)/cI@$0).!s/c@3t/H.6o/+b=d.K1gr./G@m.f1[l-i,7f-Mo1e-2Jtf,lK"b
-2f(e,l/he,Q&_\,5*1gXb*[,Xb*[rXnEn;+o3DY+o`eb-2o1g+o3G[,l/ka-2f1m.4-D<-2T(d-N>Ll
.JkOm-iPRm./YOe.fCmm.f([n/H.:#/c76o0E*[&0*!^+1]B6,1]B9*1^,fq0/#7Cq`=.)!]N%rpc&1/
s#'X/r\=1'r\4:*r%e7*pbDb$q_7t&r\!t!r[n+%qC_h#q^hUrqCDCnq^VFmo.'G_r@7Rkr$_@fqBl7j
r[!<"JuaL(Jue[Ir$;.ds!RXiq'c7jr$hUpr@%Lio.'Ser@.k".Ot9Fq^VFns""!uq_%k"r[e(%r\"+%
r\!t"r@dq"r\+4)r%e7+rA4@.r\O=,r\XL1!&sg8q)SF6p,W:=3&W\a!.k3R!7g4`k(;`Ik,ILs!.k3g
!:E/O6Ms.B5P@;>4o%5:48V/547kT,3;tl22ukl62Z#H*24M@4^Oj4P^Oj5E^Ap(^2"rm+2YoE52uY`-
3:o6348M#:3rD)94T%AA55dV?4o@M:5P[SF7/fRO7/K@O7fPdB1Arp)0E*[!0DdC!/c[L!/H.7"/,Lms
/bLXd.ekIl.fUpf.JkLh./P@VXb*[,Xb*[,Xb*\QXT0^E-2T(d-N5Fl.JbIm-iPRl./bUe.fCmn.etUn
/H.:"/cI@&/H.9u/cRHs0*![)0_mBs1]&s-2#f?!2Z5T42Z>Q.2?,K-2#]611\ig*0`<a'1B'!&1&`j(
0`3X(0).+!/cRI!0D[6s/c%!p/@qm6X+IC(X+ICSWrOXG/,Lgm/H.0u/G_"!/cI=#0)dL%0E*Tu0`E^*
1&3O&0DmR'1B'$+1]B321B'$)1]K<21\`j,2#0$03;tl13<)&>2Xg]u!;QVPk(;`Ik(;`Ik2#0s!5eg+
6M3Y<5P75>4nq/:48M)844h6!^Oj4P^Oj4P^PT`%3rV2;48V/;4oRYE4S_/=54q/>623\761?T-1&*F%
0_I*s0)@3q/H.7#/,Cgr/c7,sXb*[,Xb*[,Xb*[cXnjOB/,h+!0)I6t0)7(!0(gms0_d=#0_@$t1@R7%
2>B*02#&s-1\`g"1B'!,1&<[)0`3[!X+IC(X+IC(X+IC(X6H\]0`Ea&1&`s-1&Ed+2#]6*1B9921\`j,
2#]E12?#H&2Xg^[!64/Qk(;`Ik(;`Ik*kGs!5eg*6Ma!;^Oj4P^Oj4P^Oj4P^WXCf5O^u-0`Eg*0C#Zk
Xb*[,Xb*[,Xb*[,Xo#6u0E*Zs0E*`q2uY]52S,r@X+IC(X+IC(X+ICRX8FjS2"3Em!;QVPk(;`Ik(;`I
k(;`Ik1o+_!.Y~>

%%EndBinary
grestore
np
16.5645 405.624 mo
16.5645 405.624 li
16.5645 94.376 li
483.436 94.376 li
483.436 288.566 li
469.771 288.566 li
469.771 264.093 li
460.965 264.093 li
460.965 248.647 li
455.833 248.647 li
455.833 280.588 li
450.548 280.588 li
450.548 304.742 li
446.265 304.742 li
446.265 280.27 li
441.126 280.27 li
441.126 274.853 li
431.769 274.853 li
431.769 260.529 li
422.964 260.529 li
422.964 245.084 li
417.832 245.084 li
417.832 283.81 li
415.451 283.81 li
415.451 246.4 li
405.294 246.4 li
405.294 226.27 li
405.294 222.038 401.851 218.595 397.619 218.595 cv
222.503 218.595 li
218.272 218.595 214.829 222.038 214.829 226.27 cv
214.829 276.74 li
214.274 276.74 li
214.274 306.631 li
206.199 306.631 li
206.199 250.536 li
194.436 250.536 li
194.436 290.454 li
194.074 290.454 li
194.074 290.132 li
190.444 290.132 li
190.444 290.454 li
178.681 290.454 li
178.681 308.665 li
168.193 308.665 li
168.193 323.236 li
167.855 323 167.49 322.799 167.101 322.641 cv
166.417 322.362 165.698 322.228 164.982 322.228 cv
164.004 322.228 163.032 322.479 162.164 322.958 cv
162.164 317.416 li
161.886 317.416 li
161.886 288.543 li
152.259 288.543 li
152.259 309.455 li
150.757 309.455 li
150.757 315.261 li
150.352 314.918 149.902 314.63 149.414 314.408 cv
148.641 314.056 147.804 313.885 146.958 313.885 cv
145.469 313.885 143.951 314.414 142.694 315.416 cv
142.802 314.595 142.341 313.805 141.589 313.505 cv
141.379 313.421 141.158 313.38 140.94 313.38 cv
140.337 313.38 139.748 313.687 139.406 314.229 cv
139.204 312.163 137.979 310.504 136.412 309.753 cv
136.412 295.194 li
123.937 295.194 li
123.937 311.977 li
123.74 312.024 123.546 312.089 123.358 312.175 cv
121.968 312.81 121.181 314.412 121.54 316.004 cv
121.147 314.453 119.884 313.349 118.459 313.251 cv
118.389 313.246 118.321 313.244 118.253 313.244 cv
116.853 313.244 115.909 314.231 115.769 314.381 cv
115.651 314.213 113.913 311.819 110.985 311.819 cv
110.906 311.819 110.827 311.821 110.746 311.824 cv
108.347 311.93 106.206 313.609 105.433 316.031 cv
105.042 315.662 104.222 314.963 103.021 314.494 cv
103.021 308.611 li
91.5161 308.611 li
91.5161 312.578 li
86.3784 312.578 li
86.3784 316.998 li
85.8731 316.663 85.1635 316.343 84.2957 316.343 cv
84.141 316.343 83.9814 316.353 83.8169 316.375 cv
81.8985 316.632 81.0347 318.279 80.9634 318.421 cv
80.9014 318.251 80.0542 316.046 77.6811 315.479 cv
77.3258 315.395 76.9842 315.358 76.6596 315.358 cv
75.6873 315.358 74.8651 315.686 74.271 316.029 cv
74.271 308.876 li
72.7358 308.876 li
72.7358 296.715 li
67.648 296.715 li
67.648 292.398 li
64.6435 292.398 li
64.6435 316.156 li
64.0476 316.745 63.6106 317.531 63.4273 318.432 cv
63.3915 318.418 63.1026 318.315 62.7136 318.315 cv
62.3696 318.315 61.9473 318.396 61.5522 318.689 cv
60.7778 319.266 60.7617 320.176 60.7617 320.275 cv
60.3955 320.326 59.9911 320.395 59.5556 320.488 cv
59.5556 312.52 li
46.4863 312.52 li
46.4863 328.308 li
40.7754 328.308 li
40.7754 293.988 li
32.456 293.988 li
32.456 322.219 li
21.3139 322.219 li
21.3139 328.308 li
16.5645 328.308 li
16.5645 336.951 li
16.5645 339.322 li
16.5645 349.305 li
16.5645 405.624 li
67.6074 229.106 mo
63.3896 229.106 59.9389 232.557 59.9389 236.774 cv
59.9389 240.992 63.3896 244.443 67.6074 244.443 cv
105.597 244.443 li
109.814 244.443 113.265 240.992 113.265 236.774 cv
113.265 232.557 109.814 229.106 105.597 229.106 cv
67.6074 229.106 li
level3{
gsave
clp
[1.87077e-14 305.52 -305.52 1.87077e-14 250 95.6212 ]ct
/2 
<<
/ShadingType 2 
/ColorSpace /0 /CSA get_res
/Coords [0 0 1 0 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~T)^tRTE%(STE%(ST`@1TU&[=VU&[=VUB!FWUB!FWU]<RYU]<RYV#W[ZV>rg\V>rg\VZ8s^VZ8s^VuT'_
VuT*`W;o3aWW5<bWrPHdWrPHdX8kQeX8kTfXT1]gXT1`hXoLiiY5grjYQ.)lYQ.)lYlI2mYlI2mZ2d>o
ZN*GpZN*GpZiESrZiESr[/`\s[/`_t[K&hu[fAu"[fAu"\,],$\H,;&\cPM)\cYS*]*(e-]ELt/]EM"0
]`q12]a.=4^'RO7^'RO7^C!^9^C*g;^^O!=^^X'>_%'6@_%9EC_@]TE_@fZF_@ocH_A#iI_\H#K_\Z2N
~>
/BitsPerSample 8 
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 0 1 ]
/Size [64 ]
>>
]
/Bounds []
/Encode [0 1 ]
>>
>>/Gradient add_res /2 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[1.87077e-14 305.52 -305.52 1.87077e-14 250 95.6212 ]ct
clp
/2 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 4 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~StDXIT:_aJT:hjMTV8'QTqS0RTq\9UU8"BVU8+KYUSFTZUSO]]UnsoaV5:#bV5C,eVP^5fVPg>iVl-Gj
Vl-JlW2Q\pWMuntWiE)!WiE,#X/i;%X/i>'XK8M)XK8P+Xf\b/Y-+t3YHP.5YHP17Yct@9YctC;Z*CU?
ZEgdAZEgdBZa7!EZa7!F['[3I['[3J[C*EN[^NWQ[^NWR\$riV\@B&Z\[f8]\[f8^]"5Jb]=Y\e]=Y\f
]Y(ni]Y(ni]tM+m]tM+m^:q=q^:q=q^V@Ou^V@Ou^qdb$^qdb$_83t(_83t(_83t(_83t(_SX1,_SX1,
~>
<~zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz!!!!"!<E3&!WiE*!s8W."9\i1"9\i2"U,&5"pP
;;#RC\A#RC\A#mgnE$47+I$O[=M$k*OQ%1NaU%Ls![&.fBa&J5Te&eYfi',)#m'GM5q'bqK"~>
<~4$,Mc4$,Mc4$,Mc4$5Vf4?P_g4?P_g4?P_g4?Yhj4Ztqk4Ztqk4[)%n5!D.o5!M7r5<h@s5<h@s5<qJ!
5X7S"5X7S"5X7V$5s[e&5s[e&5s[h(6:+"*6:+%,6UO4.6UO4.6UO706psF26psF26psF26psI477BX6
77BX677BX77Rfj:7Rfj:7Rfj;7n6'>7n6'?84Z9B84Z9C8P)KF8P)KG8kM]J8kM]K91qoN91qoO9MA,R
9MA,R9MA,R9he>V9he>V9he>V:/4PZ:/4PZ:/4PZ:/4PZ:JXb^:JXb^:JXb^:f'tb:f'tb:f'tb;,L1f
~>
0 ]
>>
0 0 1 0 []true true []
/DeviceCMYK
GenStrips
} /Gradient add_res /2 /Gradient get_res exec grestore
}if
np
47.5754 328.308 mo
46.4863 328.308 li
46.4863 312.52 li
59.5556 312.52 li
59.5556 320.488 li
58.602 320.692 57.4995 321.014 56.3233 321.53 cv
54.9404 322.137 53.8374 322.843 53.0113 323.461 cv
52.4946 323.026 51.8653 322.811 51.2592 322.811 cv
50.7608 322.811 50.2782 322.956 49.8863 323.242 cv
48.8183 324.022 48.5708 325.744 49.5576 326.956 cv
49.3666 326.871 49.1642 326.829 48.9643 326.829 cv
48.6119 326.829 48.2675 326.958 48.0074 327.203 cv
47.7033 327.489 47.5517 327.897 47.5754 328.308 cv
40.7754 328.308 mo
21.3139 328.308 li
21.3139 322.219 li
32.456 322.219 li
32.456 293.988 li
40.7754 293.988 li
40.7754 328.308 li
170.654 327.847 mo
170.602 325.972 169.664 324.266 168.193 323.236 cv
168.193 308.665 li
178.681 308.665 li
178.681 311.286 li
171.964 311.286 li
171.964 314.639 li
171.964 327.435 li
171.525 327.446 171.066 327.583 170.654 327.847 cv
160.531 324.293 mo
159.634 322.136 157.766 320.799 155.935 320.799 cv
155.782 320.799 155.63 320.808 155.477 320.827 cv
154.078 321.002 153.151 321.946 152.801 322.347 cv
153.555 319.618 152.642 316.853 150.757 315.261 cv
150.757 309.455 li
152.259 309.455 li
152.259 288.543 li
161.886 288.543 li
161.886 317.416 li
162.164 317.416 li
162.164 322.958 li
161.557 323.294 161.001 323.742 160.531 324.293 cv
87.2407 317.753 mo
87.2084 317.713 86.9036 317.347 86.3784 316.998 cv
86.3784 312.578 li
91.5161 312.578 li
91.5161 308.611 li
103.021 308.611 li
103.021 314.494 li
102.559 314.314 102.042 314.168 101.47 314.087 cv
101.144 314.041 100.826 314.02 100.518 314.02 cv
97.4552 314.02 95.3297 316.103 95.0532 316.384 cv
94.5751 315.963 93.8687 315.488 92.9375 315.286 cv
92.6278 315.219 92.3128 315.186 91.9965 315.186 cv
90.2859 315.186 88.5268 316.141 87.2407 317.753 cv
73.2441 316.799 mo
73.1787 316.063 72.6563 315.452 71.9585 315.284 cv
71.8308 315.253 71.7016 315.238 71.5735 315.238 cv
70.9448 315.238 70.34 315.598 70.041 316.193 cv
69.8758 316.036 68.7974 315.039 67.2719 315.039 cv
67.1253 315.039 66.9748 315.048 66.8203 315.068 cv
65.9986 315.175 65.2411 315.566 64.6435 316.156 cv
64.6435 292.398 li
67.648 292.398 li
67.648 296.715 li
72.7358 296.715 li
72.7358 308.876 li
74.271 308.876 li
74.271 316.029 li
73.6509 316.387 73.2793 316.762 73.2441 316.799 cv
127.018 312.83 mo
126.361 312.216 125.514 311.892 124.674 311.892 cv
124.426 311.892 124.179 311.92 123.937 311.977 cv
123.937 295.194 li
136.412 295.194 li
136.412 309.753 li
135.87 309.494 135.288 309.344 134.693 309.322 cv
134.644 309.321 134.595 309.32 134.547 309.32 cv
132.094 309.32 130.574 311.54 130.486 311.673 cv
130.16 310.987 129.474 310.586 128.779 310.586 cv
128.555 310.586 128.33 310.628 128.115 310.715 cv
127.31 311.041 126.833 311.935 127.018 312.83 cv
194.074 290.454 mo
190.444 290.454 li
190.444 290.132 li
194.074 290.132 li
194.074 290.454 li
level3{
gsave
clp
[1.87077e-14 305.52 -305.52 1.87077e-14 250 95.6212 ]ct
/3 
<<
/ShadingType 2 
/ColorSpace /0 /CSA get_res
/Coords [0 0 1 0 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~YQ.2oYlI>qYlI>qZ2dJsZN*PsZN*VuZiE`!ZiE\u[/`i"[/`i"[K&u$[fB&$[fB,&[fB2(\H#A)\H#G+
\cGS,\cYb/]*(n0]*(n0]EM+3]E_44]a%C7]a.L9^'[^;^'R^<^C*p>^C4!?^C4$@^C4'A^^a?E_%9QG
_%0NG_@]`I_@ooL_@foM_\?,O_\Z;Q_\c>Q_\cDS_\uJS`#MbW`#DbX`>qtZ`>r%\`>r%\`ZJ=``ZSFb
a!+Xda!"Uda!4^ea<b!ia<b'kaX13laXCBoaXCBoasgTsb:?fub:?fub:?j!bUm*$bV!0%bV!0%bqEB(
~>
/BitsPerSample 8 
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 0 1 ]
/Size [64 ]
>>
]
/Bounds []
/Encode [0 1 ]
>>
>>/Gradient add_res /3 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[1.87077e-14 305.52 -305.52 1.87077e-14 250 95.6212 ]ct
clp
/3 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 4 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~YHY78Yct@9Yd(I<Z*L[@ZEgdAZEpmDZa7!EZa@*H['[3I['d<L[C3NP[^NWQ[^NWQ[^W`U\@B&Y\@K/\
\[f8]\[f;_]"5Ja]"5Mc]=Y\e]=Y_g]Y(ni]Y(qk]tM+m]tM.o^:q=q^:q=q^:q=q^:q@s^V@S"^qdb$
^qdb%_83t(_83t(_83t)_SX1,_SX1,_SX1,_SX1,_SX1-_o'C0_o'C1`5KU4`5KU4`5KU5`Pog8`Pog9
`l?$<`l?$<`l?$<a2c6@a2c6@aN2HDaN2HDaN2HDaiVZHb0%lLb0%lLb0%lLbKJ)PbKJ)PbKJ)Pbfn;T
~>
<~zzzzzzzzzzzzzzzz!!!$#!WiH+!s8W-!s8Z/"9\l3"pP89"pP;;#6tM?#mgnE#mgnE$47.K$O[=M$O[=
M$O[@O%1NdW%hB0]%hB0]%hK9a&J>]h&eYfi&ebom'c%Q$(Ddl((Ddl)(`=20)B0V7)]K_8)]Th;*#oq
<*#oq=*?H7D+!2RI+<VgN+X&!P+X&$R,9nHZ,U=W\,pai`-71)f-RU8h-n$Jl.4H_r.Olnt.Olnt.k</
%/M/P+/M/P+/hSb/~>
<~7n?0A84Z9B84cBE8P)KF8P)KG8kM]J8kM]J8kM]J8kM]J8kVfM91qoN91qoO9MJ5V:/4PZ:/4P[:JXb^
:JXb^:JXb^:JX_\:/4S\:JXb^:JXb^:f("d;,L1f;,L1f;GpCj;Gp@h;,L4h;GpFl;c?Xp<)cgr<)cgr
<)cgr<)cgr<)cgs<E<.$<`W7$<E3$u<)cgr<)lpu<E)ps<)cgs<E<.$<`W7%<``@(='&I*=BJ[.=]nm1
=]nm1=]nm1=]nm1=]nm1>$>-7>?b<9>?b<9>?b<9>[1N=>[1N=>?b<9>[1N=>[1N=>[1N=>[1N=?!U`A
~>
0 ]
>>
0 0 1 0 []true true []
/DeviceCMYK
GenStrips
} /Gradient add_res /3 /Gradient get_res exec grestore
}if
np
173.364 331.132 mo
174.285 329.968 174.037 328.405 173.12 327.763 cv
172.456 327.297 171.464 327.329 170.654 327.847 cv
170.59 325.542 169.188 323.492 167.101 322.641 cv
164.83 321.716 162.165 322.377 160.531 324.293 cv
159.559 321.956 157.448 320.581 155.477 320.827 cv
154.078 321.002 153.151 321.946 152.801 322.347 cv
153.717 319.032 152.172 315.663 149.414 314.408 cv
147.281 313.437 144.666 313.844 142.694 315.416 cv
142.802 314.595 142.341 313.805 141.589 313.505 cv
140.798 313.189 139.872 313.49 139.406 314.229 cv
139.135 311.449 137.009 309.405 134.693 309.322 cv
132.155 309.231 130.576 311.537 130.486 311.673 cv
130.055 310.766 128.995 310.358 128.115 310.715 cv
127.31 311.041 126.833 311.935 127.018 312.83 cv
126.01 311.887 124.554 311.63 123.358 312.175 cv
121.968 312.81 121.181 314.412 121.54 316.004 cv
121.147 314.453 119.884 313.349 118.459 313.251 cv
116.946 313.146 115.915 314.224 115.769 314.381 cv
115.648 314.208 113.818 311.688 110.746 311.824 cv
108.347 311.93 106.206 313.609 105.433 316.031 cv
104.891 315.52 103.528 314.378 101.47 314.087 cv
97.9019 313.582 95.3575 316.075 95.0532 316.384 cv
94.5751 315.963 93.8687 315.488 92.9375 315.286 cv
90.9531 314.855 88.7646 315.843 87.2407 317.753 cv
87.1719 317.667 85.8633 316.101 83.8169 316.375 cv
81.8985 316.632 81.0347 318.279 80.9634 318.421 cv
80.9014 318.251 80.0542 316.046 77.6811 315.479 cv
75.1514 314.876 73.3242 316.716 73.2441 316.799 cv
73.1787 316.063 72.6563 315.452 71.9585 315.284 cv
71.2041 315.102 70.4009 315.477 70.041 316.193 cv
69.8599 316.02 68.582 314.84 66.8203 315.068 cv
65.1792 315.281 63.7944 316.629 63.4273 318.432 cv
63.3598 318.406 62.394 318.064 61.5522 318.689 cv
60.7778 319.266 60.7617 320.176 60.7617 320.275 cv
59.5937 320.437 58.0366 320.778 56.3233 321.53 cv
54.9404 322.137 53.8374 322.843 53.0113 323.461 cv
52.0699 322.668 50.7548 322.608 49.8863 323.242 cv
48.8183 324.022 48.5708 325.744 49.5576 326.956 cv
49.0297 326.721 48.415 326.819 48.0074 327.203 cv
47.5537 327.63 47.4395 328.328 47.7402 328.901 cv
47.731 329.129 47.7207 330.041 48.3896 330.827 cv
49.3061 331.903 50.69 331.797 50.8257 331.784 cv
173.364 331.132 li
.821286 .327581 .295872 .0164492 cmyk
f
455.833 304.742 mo
450.548 304.742 li
450.548 280.588 li
455.833 280.588 li
455.833 304.742 li
417.832 301.179 mo
415.844 301.179 li
415.844 287.228 li
415.451 287.228 li
415.451 283.81 li
417.832 283.81 li
417.832 301.179 li
level3{
gsave
clp
[1.87077e-14 305.52 -305.52 1.87077e-14 250 95.6212 ]ct
/3 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[1.87077e-14 305.52 -305.52 1.87077e-14 250 95.6212 ]ct
clp
/3 /Gradient get_res exec grestore
}if
np
483.436 328.308 mo
473.544 328.308 li
473.544 313.946 li
460.378 313.946 li
460.378 280.588 li
455.833 280.588 li
455.833 248.647 li
460.965 248.647 li
460.965 264.093 li
469.771 264.093 li
469.771 288.566 li
483.436 288.566 li
483.436 328.308 li
450.548 327.464 mo
445.435 327.464 li
445.435 285.002 li
431.769 285.002 li
431.769 274.853 li
441.126 274.853 li
441.126 280.27 li
446.265 280.27 li
446.265 304.742 li
450.548 304.742 li
450.548 327.464 li
410.968 301.179 mo
408.263 301.179 li
408.263 276.705 li
405.294 276.705 li
405.294 246.4 li
415.451 246.4 li
415.451 283.81 li
412.782 283.81 li
412.782 298.179 li
410.968 298.179 li
410.968 301.179 li
level3{
gsave
clp
[1.87077e-14 305.52 -305.52 1.87077e-14 250 95.6212 ]ct
/3 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[1.87077e-14 305.52 -305.52 1.87077e-14 250 95.6212 ]ct
clp
/3 /Gradient get_res exec grestore
}if
np
473.544 328.308 mo
445.435 328.308 li
445.435 327.464 li
450.548 327.464 li
450.548 304.742 li
455.833 304.742 li
455.833 280.588 li
460.378 280.588 li
460.378 313.946 li
473.544 313.946 li
473.544 328.308 li
415.844 301.179 mo
410.968 301.179 li
410.968 298.179 li
412.782 298.179 li
412.782 283.81 li
415.451 283.81 li
415.451 287.228 li
415.844 287.228 li
415.844 301.179 li
level3{
gsave
clp
[1.87077e-14 305.52 -305.52 1.87077e-14 250 95.6212 ]ct
/4 
<<
/ShadingType 2 
/ColorSpace /0 /CSA get_res
/Coords [0 0 1 0 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~^C40D^CF?G^^aHH^^jQJ_%BcL_%BcL_@p&P_A$)P_A65R_A65R_\cMV_\uVW_\u\Y`#2e[`#Dn\`#Dq]
`#W(_`>i.``?/=b`?/=b`ZSOe`ZeXfa!"^ga!4mja<b*la<b0na<k3naXCEqaXCEqaXCKsasg^!b:?p#
b:@!%b:6p$b:I'&bUd6)bV!?*bV*B*bqNQ-bqNT.c8&f0cSK#3cSK)5cS]26cST27cST27co,J<co5M<
d5b\=d5bb?d5bb?d5kkBd5kqDdQD+EdQM4HdQM4HdlqFKdm.LKdm.LKe3@UMe3R^OeO+!SeO+!SeO4*V
~>
/BitsPerSample 8 
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 0 1 ]
/Size [64 ]
>>
]
/Bounds []
/Encode [0 1 ]
>>
>>/Gradient add_res /4 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[1.87077e-14 305.52 -305.52 1.87077e-14 250 95.6212 ]ct
clp
/4 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 4 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~^:q=q^;%Ft^V@Ou^VIY#^qdb$^qmk'_83t(_83t(_83t(_8=(+_SX1,_SX1,_Sa:/_o'C0_o'C0_o'C0
_o'F2`5KU4`5KU4`5KX6`Pog8`Poj:`l?$<`l?'>a2c6@a2c6@a2c9BaN2HDaN2HDaN2KFaiV]Jb0%lL
b0%lLb0%lLb0%lMbKJ)PbKJ)PbKJ)Qbfn;Tbfn;Uc-=MYcHa_\cHa_\cHa_\cHa_\cHa_]cd0q`cd0qa
d*U.dd*U.dd*U.dd*U.dd*U.ddF$@hdF$@hdF$@hdaHRldaHRldaHRle'ldpe'ldpeC<!teC<!teC<!t
~>
<~$OdFQ%1NaU%1WjX%M'']&.fBa&.oKe&ebol',2,q'bqGu'c%Q$(Dmu,)&X;0)&X;0)&X;1)B'M4)B0V8
*#oq<*#oq=*Zc@D*ZcCF+!2UJ+X&!P+X&!P+sJ6V,U=W\,U=Z^,palb-RU8h-RU8h-RU;j-n$Mn.Olnt
.Olnt.Olnt.P!#".k<,$/1iG+/hSb00/"t30/"t40JP:;1,:U?1,:U@1GgpF1c.$F1G^gD1c7-K2E!HP
2`E]U3&ilW3&ilW3B9)[3B9)[3]]>a4?P_g4?P_g4Ztqk5!D1q5<h@s5<h@s5<hCu5s[h(6:+"*6UO4.
~>
<~<``@(='&I)='/R,=BJ[-=BAR*='/R,=BJ[-=BAR*='&I)='/R,=BJ[-=BJ[.=^#!5>?b<9>?b<9>?b<9
>?b?;>[1N=>[1K;>?b?;>[1N=>[1N=>[1Q??!U`A?!U`A?=$rE?=$oC?!U]?>[1Q??=$uG?XI/I?XI/I
?XR8L?smAM?smAN@:E\T@U`eT@:<SP?smAN@:<SQ@:<SQ@:<SR@UinX@q0"Y@q9+\A7T4^AS#FaAS#F`
A7T1[@q0%[A7T4]AS#FaAnG[gB4kggAnGXeAnGXeB4kjiB4kggAS#FaAnG[gB4kjiB4kjiB4kjiBP;'m
~>
<~zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz!!!!"!<E3%!<E3%!<E3%!<E3%!<E3%!<E3%!<E3%!<E
3&!WiE)!WiE)!WiE)!WiE)!WiE)!s8W-!s8W-!s8W-"9\i1"9\i1"9\i1"9\i1"9\i1"9\i1"U,&5"U,
&5"U,&5"pP89~>
]
>>
0 0 1 0 []true true []
/DeviceCMYK
GenStrips
} /Gradient add_res /4 /Gradient get_res exec grestore
}if
np
171.964 314.639 mo
171.964 311.286 li
178.681 311.286 li
178.681 290.454 li
194.436 290.454 li
194.436 250.536 li
206.199 250.536 li
206.199 306.631 li
214.274 306.631 li
214.274 276.74 li
232.754 276.74 li
232.754 313.589 li
239.949 313.589 li
239.949 248.288 li
244.197 248.288 li
244.197 254.391 li
251.392 254.391 li
251.392 271.587 li
253.562 271.587 li
253.562 302.332 li
270.682 302.332 li
270.682 276.822 li
277.947 276.822 li
277.947 271.214 li
294.215 271.214 li
294.215 295.41 li
305.218 295.41 li
305.218 289.959 li
323.79 289.959 li
323.79 252.241 li
341.429 252.241 li
341.429 296.88 li
361.713 296.88 li
361.713 272.406 li
363.837 272.406 li
363.837 242.836 li
377.45 242.836 li
377.45 283.664 li
377.843 283.664 li
377.843 308.137 li
386.367 308.137 li
386.367 271.289 li
403.125 271.289 li
403.125 276.705 li
408.263 276.705 li
408.263 301.179 li
417.832 301.179 li
417.832 245.084 li
422.964 245.084 li
422.964 260.529 li
431.769 260.529 li
431.769 285.002 li
445.435 285.002 li
445.435 328.754 li
171.964 328.754 li
171.964 314.639 li
.821286 .327581 .295872 .0164492 cmyk
f
483.436 405.624 mo
481.643 405.624 li
472.644 405.624 li
470.076 405.624 li
471.788 405.505 473.017 405.178 473.017 404.793 cv
473.017 404.307 471.062 403.914 468.651 403.914 cv
466.239 403.914 464.284 404.307 464.284 404.793 cv
464.284 405.178 465.513 405.505 467.225 405.624 cv
414.991 405.624 li
416.703 405.505 417.932 405.178 417.932 404.793 cv
417.932 404.307 415.977 403.914 413.565 403.914 cv
411.154 403.914 409.199 404.307 409.199 404.793 cv
409.199 405.178 410.428 405.505 412.14 405.624 cv
359.906 405.624 li
361.618 405.505 362.847 405.178 362.847 404.793 cv
362.847 404.307 360.892 403.914 358.48 403.914 cv
356.069 403.914 354.114 404.307 354.114 404.793 cv
354.114 405.178 355.343 405.505 357.054 405.624 cv
304.821 405.624 li
306.533 405.505 307.762 405.178 307.762 404.793 cv
307.762 404.307 305.807 403.914 303.395 403.914 cv
300.984 403.914 299.029 404.307 299.029 404.793 cv
299.029 405.178 300.258 405.505 301.969 405.624 cv
249.736 405.624 li
251.447 405.505 252.677 405.178 252.677 404.793 cv
252.677 404.307 250.722 403.914 248.31 403.914 cv
245.899 403.914 243.944 404.307 243.944 404.793 cv
243.944 405.178 245.173 405.505 246.884 405.624 cv
194.651 405.624 li
196.362 405.505 197.591 405.178 197.591 404.793 cv
197.591 404.307 195.637 403.914 193.225 403.914 cv
190.814 403.914 188.859 404.307 188.859 404.793 cv
188.859 405.178 190.088 405.505 191.799 405.624 cv
139.566 405.624 li
141.277 405.505 142.506 405.178 142.506 404.793 cv
142.506 404.307 140.551 403.914 138.14 403.914 cv
135.729 403.914 133.774 404.307 133.774 404.793 cv
133.774 405.178 135.003 405.505 136.714 405.624 cv
84.4808 405.624 li
86.1922 405.505 87.4213 405.178 87.4213 404.793 cv
87.4213 404.307 85.4664 403.914 83.0549 403.914 cv
80.6435 403.914 78.6886 404.307 78.6886 404.793 cv
78.6886 405.178 79.9177 405.505 81.629 405.624 cv
29.3957 405.624 li
31.107 405.505 32.3361 405.178 32.3361 404.793 cv
32.3361 404.307 30.3812 403.914 27.9698 403.914 cv
25.5584 403.914 23.6035 404.307 23.6035 404.793 cv
23.6035 405.178 24.8326 405.505 26.5439 405.624 cv
18.3564 405.624 li
16.5645 405.624 li
16.5645 349.305 li
16.5645 336.951 li
16.5645 328.308 li
21.3139 328.308 li
40.7754 328.308 li
46.4863 328.308 li
47.5754 328.308 li
171.964 328.308 li
214.829 328.308 li
214.829 329.99 li
214.829 334.222 218.272 337.665 222.503 337.665 cv
397.619 337.665 li
401.851 337.665 405.294 334.222 405.294 329.99 cv
405.294 328.308 li
445.435 328.308 li
473.544 328.308 li
483.436 328.308 li
483.436 348.028 li
483.26 348.021 483.079 348.017 482.893 348.017 cv
481.393 348.017 480.176 348.262 480.176 348.564 cv
480.176 348.866 481.393 349.111 482.893 349.111 cv
483.079 349.111 483.26 349.107 483.436 349.1 cv
483.436 373.792 li
483.26 373.784 483.079 373.781 482.893 373.781 cv
481.393 373.781 480.176 374.026 480.176 374.328 cv
480.176 374.63 481.393 374.875 482.893 374.875 cv
483.079 374.875 483.26 374.871 483.436 374.864 cv
483.436 399.555 li
483.26 399.548 483.079 399.544 482.893 399.544 cv
481.393 399.544 480.176 399.789 480.176 400.091 cv
480.176 400.393 481.393 400.638 482.893 400.638 cv
483.079 400.638 483.26 400.634 483.436 400.627 cv
483.436 405.624 li
427.808 399.544 mo
426.307 399.544 425.091 399.789 425.091 400.091 cv
425.091 400.393 426.307 400.638 427.808 400.638 cv
429.308 400.638 430.525 400.393 430.525 400.091 cv
430.525 399.789 429.308 399.544 427.808 399.544 cv
372.723 399.544 mo
371.222 399.544 370.006 399.789 370.006 400.091 cv
370.006 400.393 371.222 400.638 372.723 400.638 cv
374.223 400.638 375.44 400.393 375.44 400.091 cv
375.44 399.789 374.223 399.544 372.723 399.544 cv
317.638 399.544 mo
316.137 399.544 314.921 399.789 314.921 400.091 cv
314.921 400.393 316.137 400.638 317.638 400.638 cv
319.138 400.638 320.355 400.393 320.355 400.091 cv
320.355 399.789 319.138 399.544 317.638 399.544 cv
262.553 399.544 mo
261.052 399.544 259.836 399.789 259.836 400.091 cv
259.836 400.393 261.052 400.638 262.553 400.638 cv
264.053 400.638 265.27 400.393 265.27 400.091 cv
265.27 399.789 264.053 399.544 262.553 399.544 cv
207.468 399.544 mo
205.967 399.544 204.751 399.789 204.751 400.091 cv
204.751 400.393 205.967 400.638 207.468 400.638 cv
208.968 400.638 210.184 400.393 210.184 400.091 cv
210.184 399.789 208.968 399.544 207.468 399.544 cv
152.382 399.544 mo
150.882 399.544 149.666 399.789 149.666 400.091 cv
149.666 400.393 150.882 400.638 152.382 400.638 cv
153.883 400.638 155.099 400.393 155.099 400.091 cv
155.099 399.789 153.883 399.544 152.382 399.544 cv
97.2973 399.544 mo
95.7968 399.544 94.5804 399.789 94.5804 400.091 cv
94.5804 400.393 95.7968 400.638 97.2973 400.638 cv
98.7979 400.638 100.014 400.393 100.014 400.091 cv
100.014 399.789 98.7979 399.544 97.2973 399.544 cv
42.2122 399.544 mo
40.7117 399.544 39.4953 399.789 39.4953 400.091 cv
39.4953 400.393 40.7117 400.638 42.2122 400.638 cv
43.7128 400.638 44.9292 400.393 44.9292 400.091 cv
44.9292 399.789 43.7128 399.544 42.2122 399.544 cv
448.209 389.985 mo
446.709 389.985 445.492 390.229 445.492 390.532 cv
445.492 390.834 446.709 391.079 448.209 391.079 cv
449.71 391.079 450.926 390.834 450.926 390.532 cv
450.926 390.229 449.71 389.985 448.209 389.985 cv
393.124 389.985 mo
391.624 389.985 390.407 390.229 390.407 390.532 cv
390.407 390.834 391.624 391.079 393.124 391.079 cv
394.625 391.079 395.841 390.834 395.841 390.532 cv
395.841 390.229 394.625 389.985 393.124 389.985 cv
338.039 389.985 mo
336.538 389.985 335.322 390.229 335.322 390.532 cv
335.322 390.834 336.538 391.079 338.039 391.079 cv
339.54 391.079 340.756 390.834 340.756 390.532 cv
340.756 390.229 339.54 389.985 338.039 389.985 cv
282.954 389.985 mo
281.453 389.985 280.237 390.229 280.237 390.532 cv
280.237 390.834 281.453 391.079 282.954 391.079 cv
284.454 391.079 285.671 390.834 285.671 390.532 cv
285.671 390.229 284.454 389.985 282.954 389.985 cv
227.869 389.985 mo
226.368 389.985 225.152 390.229 225.152 390.532 cv
225.152 390.834 226.368 391.079 227.869 391.079 cv
229.369 391.079 230.586 390.834 230.586 390.532 cv
230.586 390.229 229.369 389.985 227.869 389.985 cv
172.784 389.985 mo
171.283 389.985 170.067 390.229 170.067 390.532 cv
170.067 390.834 171.283 391.079 172.784 391.079 cv
174.284 391.079 175.501 390.834 175.501 390.532 cv
175.501 390.229 174.284 389.985 172.784 389.985 cv
117.699 389.985 mo
116.198 389.985 114.982 390.229 114.982 390.532 cv
114.982 390.834 116.198 391.079 117.699 391.079 cv
119.199 391.079 120.416 390.834 120.416 390.532 cv
120.416 390.229 119.199 389.985 117.699 389.985 cv
62.6135 389.985 mo
61.113 389.985 59.8966 390.229 59.8966 390.532 cv
59.8966 390.834 61.113 391.079 62.6135 391.079 cv
64.1141 391.079 65.3305 390.834 65.3305 390.532 cv
65.3305 390.229 64.1141 389.985 62.6135 389.985 cv
313.394 381.034 mo
312.814 381.034 312.339 381.51 312.339 382.09 cv
312.339 383.331 li
312.339 383.912 312.814 384.387 313.394 384.387 cv
340.164 384.387 li
340.745 384.387 341.22 383.912 341.22 383.331 cv
341.22 382.09 li
341.22 381.51 340.745 381.034 340.164 381.034 cv
313.394 381.034 li
468.651 378.15 mo
466.239 378.15 464.284 378.544 464.284 379.029 cv
464.284 379.515 466.239 379.909 468.651 379.909 cv
471.062 379.909 473.017 379.515 473.017 379.029 cv
473.017 378.544 471.062 378.15 468.651 378.15 cv
413.565 378.15 mo
411.154 378.15 409.199 378.544 409.199 379.029 cv
409.199 379.515 411.154 379.909 413.565 379.909 cv
415.977 379.909 417.932 379.515 417.932 379.029 cv
417.932 378.544 415.977 378.15 413.565 378.15 cv
358.48 378.15 mo
356.069 378.15 354.114 378.544 354.114 379.029 cv
354.114 379.515 356.069 379.909 358.48 379.909 cv
360.892 379.909 362.847 379.515 362.847 379.029 cv
362.847 378.544 360.892 378.15 358.48 378.15 cv
303.395 378.15 mo
300.984 378.15 299.029 378.544 299.029 379.029 cv
299.029 379.515 300.984 379.909 303.395 379.909 cv
305.807 379.909 307.762 379.515 307.762 379.029 cv
307.762 378.544 305.807 378.15 303.395 378.15 cv
248.31 378.15 mo
245.899 378.15 243.944 378.544 243.944 379.029 cv
243.944 379.515 245.899 379.909 248.31 379.909 cv
250.722 379.909 252.677 379.515 252.677 379.029 cv
252.677 378.544 250.722 378.15 248.31 378.15 cv
193.225 378.15 mo
190.814 378.15 188.859 378.544 188.859 379.029 cv
188.859 379.515 190.814 379.909 193.225 379.909 cv
195.637 379.909 197.591 379.515 197.591 379.029 cv
197.591 378.544 195.637 378.15 193.225 378.15 cv
138.14 378.15 mo
135.729 378.15 133.774 378.544 133.774 379.029 cv
133.774 379.515 135.729 379.909 138.14 379.909 cv
140.551 379.909 142.506 379.515 142.506 379.029 cv
142.506 378.544 140.551 378.15 138.14 378.15 cv
83.0549 378.15 mo
80.6435 378.15 78.6886 378.544 78.6886 379.029 cv
78.6886 379.515 80.6435 379.909 83.0549 379.909 cv
85.4664 379.909 87.4213 379.515 87.4213 379.029 cv
87.4213 378.544 85.4664 378.15 83.0549 378.15 cv
27.9698 378.15 mo
25.5584 378.15 23.6035 378.544 23.6035 379.029 cv
23.6035 379.515 25.5584 379.909 27.9698 379.909 cv
30.3812 379.909 32.3361 379.515 32.3361 379.029 cv
32.3361 378.544 30.3812 378.15 27.9698 378.15 cv
427.808 373.781 mo
426.307 373.781 425.091 374.026 425.091 374.328 cv
425.091 374.63 426.307 374.875 427.808 374.875 cv
429.308 374.875 430.525 374.63 430.525 374.328 cv
430.525 374.026 429.308 373.781 427.808 373.781 cv
372.723 373.781 mo
371.222 373.781 370.006 374.026 370.006 374.328 cv
370.006 374.63 371.222 374.875 372.723 374.875 cv
374.223 374.875 375.44 374.63 375.44 374.328 cv
375.44 374.026 374.223 373.781 372.723 373.781 cv
317.638 373.781 mo
316.137 373.781 314.921 374.026 314.921 374.328 cv
314.921 374.63 316.137 374.875 317.638 374.875 cv
319.138 374.875 320.355 374.63 320.355 374.328 cv
320.355 374.026 319.138 373.781 317.638 373.781 cv
262.553 373.781 mo
261.052 373.781 259.836 374.026 259.836 374.328 cv
259.836 374.63 261.052 374.875 262.553 374.875 cv
264.053 374.875 265.27 374.63 265.27 374.328 cv
265.27 374.026 264.053 373.781 262.553 373.781 cv
207.468 373.781 mo
205.967 373.781 204.751 374.026 204.751 374.328 cv
204.751 374.63 205.967 374.875 207.468 374.875 cv
208.968 374.875 210.184 374.63 210.184 374.328 cv
210.184 374.026 208.968 373.781 207.468 373.781 cv
152.382 373.781 mo
150.882 373.781 149.666 374.026 149.666 374.328 cv
149.666 374.63 150.882 374.875 152.382 374.875 cv
153.883 374.875 155.099 374.63 155.099 374.328 cv
155.099 374.026 153.883 373.781 152.382 373.781 cv
97.2973 373.781 mo
95.7968 373.781 94.5804 374.026 94.5804 374.328 cv
94.5804 374.63 95.7968 374.875 97.2973 374.875 cv
98.7979 374.875 100.014 374.63 100.014 374.328 cv
100.014 374.026 98.7979 373.781 97.2973 373.781 cv
42.2122 373.781 mo
40.7117 373.781 39.4953 374.026 39.4953 374.328 cv
39.4953 374.63 40.7117 374.875 42.2122 374.875 cv
43.7128 374.875 44.9292 374.63 44.9292 374.328 cv
44.9292 374.026 43.7128 373.781 42.2122 373.781 cv
234.416 366.955 mo
233.495 366.955 232.741 367.709 232.741 368.631 cv
232.741 369.553 233.495 370.307 234.416 370.307 cv
303.907 370.307 li
304.829 370.307 305.583 369.553 305.583 368.631 cv
305.583 367.709 304.829 366.955 303.907 366.955 cv
234.416 366.955 li
447.115 365.269 mo
447.449 365.298 447.82 365.315 448.209 365.315 cv
448.599 365.315 448.969 365.298 449.304 365.269 cv
449.305 365.269 li
450.26 365.184 450.926 364.992 450.926 364.768 cv
450.926 364.466 449.71 364.221 448.209 364.221 cv
446.709 364.221 445.492 364.466 445.492 364.768 cv
445.492 364.992 446.159 365.184 447.113 365.269 cv
447.115 365.269 li
392.03 365.269 mo
392.364 365.298 392.735 365.315 393.124 365.315 cv
393.513 365.315 393.884 365.298 394.219 365.269 cv
394.22 365.269 li
395.174 365.184 395.841 364.992 395.841 364.768 cv
395.841 364.466 394.625 364.221 393.124 364.221 cv
391.624 364.221 390.407 364.466 390.407 364.768 cv
390.407 364.992 391.074 365.184 392.028 365.269 cv
392.03 365.269 li
336.944 365.269 mo
337.279 365.298 337.65 365.315 338.039 365.315 cv
338.428 365.315 338.799 365.298 339.133 365.269 cv
339.135 365.269 li
340.089 365.184 340.756 364.992 340.756 364.768 cv
340.756 364.466 339.54 364.221 338.039 364.221 cv
336.538 364.221 335.322 364.466 335.322 364.768 cv
335.322 364.992 335.989 365.184 336.943 365.269 cv
336.944 365.269 li
281.859 365.269 mo
282.194 365.298 282.564 365.315 282.954 365.315 cv
283.343 365.315 283.714 365.298 284.048 365.269 cv
284.05 365.269 li
285.004 365.184 285.671 364.992 285.671 364.768 cv
285.671 364.466 284.454 364.221 282.954 364.221 cv
281.453 364.221 280.237 364.466 280.237 364.768 cv
280.237 364.992 280.904 365.184 281.858 365.269 cv
281.859 365.269 li
226.774 365.269 mo
227.109 365.298 227.479 365.315 227.869 365.315 cv
228.258 365.315 228.628 365.298 228.963 365.269 cv
228.964 365.269 li
229.919 365.184 230.586 364.992 230.586 364.768 cv
230.586 364.466 229.369 364.221 227.869 364.221 cv
226.368 364.221 225.152 364.466 225.152 364.768 cv
225.152 364.992 225.818 365.184 226.773 365.269 cv
226.774 365.269 li
171.689 365.269 mo
172.024 365.298 172.394 365.315 172.784 365.315 cv
173.173 365.315 173.543 365.298 173.878 365.269 cv
173.879 365.269 li
174.834 365.184 175.501 364.992 175.501 364.768 cv
175.501 364.466 174.284 364.221 172.784 364.221 cv
171.283 364.221 170.067 364.466 170.067 364.768 cv
170.067 364.992 170.733 365.184 171.688 365.269 cv
171.689 365.269 li
116.604 365.269 mo
116.939 365.298 117.309 365.315 117.699 365.315 cv
118.088 365.315 118.458 365.298 118.793 365.269 cv
118.794 365.269 li
119.749 365.184 120.416 364.992 120.416 364.768 cv
120.416 364.466 119.199 364.221 117.699 364.221 cv
116.198 364.221 114.982 364.466 114.982 364.768 cv
114.982 364.992 115.648 365.184 116.603 365.269 cv
116.604 365.269 li
61.5191 365.269 mo
61.8539 365.298 62.2241 365.315 62.6135 365.315 cv
63.003 365.315 63.3732 365.298 63.708 365.269 cv
63.7092 365.269 li
64.664 365.184 65.3305 364.992 65.3305 364.768 cv
65.3305 364.466 64.1141 364.221 62.6135 364.221 cv
61.113 364.221 59.8966 364.466 59.8966 364.768 cv
59.8966 364.992 60.5631 365.184 61.5179 365.269 cv
61.5191 365.269 li
415.185 358.869 mo
414.74 358.869 414.377 359.232 414.377 359.678 cv
414.377 360.63 li
414.377 361.074 414.74 361.438 415.185 361.438 cv
435.708 361.438 li
436.152 361.438 436.517 361.074 436.517 360.63 cv
436.517 359.678 li
436.517 359.232 436.152 358.869 435.708 358.869 cv
415.185 358.869 li
169.72 358.869 mo
169.275 358.869 168.911 359.232 168.911 359.678 cv
168.911 360.63 li
168.911 361.074 169.275 361.438 169.72 361.438 cv
190.242 361.438 li
190.687 361.438 191.051 361.074 191.051 360.63 cv
191.051 359.678 li
191.051 359.232 190.687 358.869 190.242 358.869 cv
169.72 358.869 li
317.354 353.933 mo
317.354 354.142 li
317.354 354.949 318.013 355.609 318.82 355.609 cv
371.681 355.609 li
372.487 355.609 373.147 354.949 373.147 354.142 cv
373.147 353.933 li
410.719 353.933 li
411.483 354.065 412.478 354.145 413.565 354.145 cv
415.977 354.145 417.932 353.752 417.932 353.266 cv
417.932 353.179 417.869 353.095 417.753 353.016 cv
418.031 352.641 418.196 352.177 418.196 351.677 cv
418.196 350.436 417.181 349.42 415.94 349.42 cv
189.375 349.42 li
188.134 349.42 187.119 350.436 187.119 351.677 cv
187.119 352.918 188.134 353.933 189.375 353.933 cv
190.379 353.933 li
191.143 354.065 192.138 354.145 193.225 354.145 cv
194.312 354.145 195.307 354.065 196.071 353.933 cv
245.464 353.933 li
246.228 354.065 247.223 354.145 248.31 354.145 cv
249.398 354.145 250.392 354.065 251.157 353.933 cv
300.549 353.933 li
301.313 354.065 302.308 354.145 303.395 354.145 cv
304.483 354.145 305.477 354.065 306.242 353.933 cv
317.354 353.933 li
468.651 352.387 mo
466.239 352.387 464.284 352.781 464.284 353.266 cv
464.284 353.752 466.239 354.145 468.651 354.145 cv
471.062 354.145 473.017 353.752 473.017 353.266 cv
473.017 352.781 471.062 352.387 468.651 352.387 cv
138.14 352.387 mo
135.729 352.387 133.774 352.781 133.774 353.266 cv
133.774 353.752 135.729 354.145 138.14 354.145 cv
140.551 354.145 142.506 353.752 142.506 353.266 cv
142.506 352.781 140.551 352.387 138.14 352.387 cv
83.0549 352.387 mo
80.6435 352.387 78.6886 352.781 78.6886 353.266 cv
78.6886 353.752 80.6435 354.145 83.0549 354.145 cv
85.4664 354.145 87.4213 353.752 87.4213 353.266 cv
87.4213 352.781 85.4664 352.387 83.0549 352.387 cv
27.9698 352.387 mo
25.5584 352.387 23.6035 352.781 23.6035 353.266 cv
23.6035 353.752 25.5584 354.145 27.9698 354.145 cv
30.3812 354.145 32.3361 353.752 32.3361 353.266 cv
32.3361 352.781 30.3812 352.387 27.9698 352.387 cv
427.808 348.017 mo
426.307 348.017 425.091 348.262 425.091 348.564 cv
425.091 348.866 426.307 349.111 427.808 349.111 cv
429.308 349.111 430.525 348.866 430.525 348.564 cv
430.525 348.262 429.308 348.017 427.808 348.017 cv
372.723 348.017 mo
371.222 348.017 370.006 348.262 370.006 348.564 cv
370.006 348.866 371.222 349.111 372.723 349.111 cv
374.223 349.111 375.44 348.866 375.44 348.564 cv
375.44 348.262 374.223 348.017 372.723 348.017 cv
317.638 348.017 mo
316.137 348.017 314.921 348.262 314.921 348.564 cv
314.921 348.866 316.137 349.111 317.638 349.111 cv
319.138 349.111 320.355 348.866 320.355 348.564 cv
320.355 348.262 319.138 348.017 317.638 348.017 cv
262.553 348.017 mo
261.052 348.017 259.836 348.262 259.836 348.564 cv
259.836 348.866 261.052 349.111 262.553 349.111 cv
264.053 349.111 265.27 348.866 265.27 348.564 cv
265.27 348.262 264.053 348.017 262.553 348.017 cv
207.468 348.017 mo
205.967 348.017 204.751 348.262 204.751 348.564 cv
204.751 348.866 205.967 349.111 207.468 349.111 cv
208.968 349.111 210.184 348.866 210.184 348.564 cv
210.184 348.262 208.968 348.017 207.468 348.017 cv
152.382 348.017 mo
150.882 348.017 149.666 348.262 149.666 348.564 cv
149.666 348.866 150.882 349.111 152.382 349.111 cv
153.883 349.111 155.099 348.866 155.099 348.564 cv
155.099 348.262 153.883 348.017 152.382 348.017 cv
97.2973 348.017 mo
95.7968 348.017 94.5804 348.262 94.5804 348.564 cv
94.5804 348.866 95.7968 349.111 97.2973 349.111 cv
98.7979 349.111 100.014 348.866 100.014 348.564 cv
100.014 348.262 98.7979 348.017 97.2973 348.017 cv
42.2122 348.017 mo
40.7117 348.017 39.4953 348.262 39.4953 348.564 cv
39.4953 348.866 40.7117 349.111 42.2122 349.111 cv
43.7128 349.111 44.9292 348.866 44.9292 348.564 cv
44.9292 348.262 43.7128 348.017 42.2122 348.017 cv
448.209 338.458 mo
446.709 338.458 445.492 338.703 445.492 339.005 cv
445.492 339.307 446.709 339.552 448.209 339.552 cv
449.71 339.552 450.926 339.307 450.926 339.005 cv
450.926 338.703 449.71 338.458 448.209 338.458 cv
393.124 338.458 mo
391.624 338.458 390.407 338.703 390.407 339.005 cv
390.407 339.307 391.624 339.552 393.124 339.552 cv
394.625 339.552 395.841 339.307 395.841 339.005 cv
395.841 338.703 394.625 338.458 393.124 338.458 cv
338.039 338.458 mo
336.538 338.458 335.322 338.703 335.322 339.005 cv
335.322 339.307 336.538 339.552 338.039 339.552 cv
339.54 339.552 340.756 339.307 340.756 339.005 cv
340.756 338.703 339.54 338.458 338.039 338.458 cv
282.954 338.458 mo
281.453 338.458 280.237 338.703 280.237 339.005 cv
280.237 339.307 281.453 339.552 282.954 339.552 cv
284.454 339.552 285.671 339.307 285.671 339.005 cv
285.671 338.703 284.454 338.458 282.954 338.458 cv
227.869 338.458 mo
226.368 338.458 225.152 338.703 225.152 339.005 cv
225.152 339.307 226.368 339.552 227.869 339.552 cv
229.369 339.552 230.586 339.307 230.586 339.005 cv
230.586 338.703 229.369 338.458 227.869 338.458 cv
172.784 338.458 mo
171.283 338.458 170.067 338.703 170.067 339.005 cv
170.067 339.307 171.283 339.552 172.784 339.552 cv
174.284 339.552 175.501 339.307 175.501 339.005 cv
175.501 338.703 174.284 338.458 172.784 338.458 cv
117.699 338.458 mo
116.198 338.458 114.982 338.703 114.982 339.005 cv
114.982 339.307 116.198 339.552 117.699 339.552 cv
119.199 339.552 120.416 339.307 120.416 339.005 cv
120.416 338.703 119.199 338.458 117.699 338.458 cv
62.6135 338.458 mo
61.113 338.458 59.8966 338.703 59.8966 339.005 cv
59.8966 339.307 61.113 339.552 62.6135 339.552 cv
64.1141 339.552 65.3305 339.307 65.3305 339.005 cv
65.3305 338.703 64.1141 338.458 62.6135 338.458 cv
466.895 328.308 mo
467.432 328.355 468.026 328.382 468.651 328.382 cv
469.275 328.382 469.869 328.355 470.406 328.308 cv
466.895 328.308 li
411.81 328.308 mo
412.347 328.355 412.941 328.382 413.565 328.382 cv
414.19 328.382 414.784 328.355 415.321 328.308 cv
411.81 328.308 li
191.469 328.308 mo
192.007 328.355 192.601 328.382 193.225 328.382 cv
193.85 328.382 194.444 328.355 194.981 328.308 cv
191.469 328.308 li
136.384 328.308 mo
136.921 328.355 137.516 328.382 138.14 328.382 cv
138.764 328.382 139.359 328.355 139.896 328.308 cv
136.384 328.308 li
81.2992 328.308 mo
81.8364 328.355 82.4304 328.382 83.0549 328.382 cv
83.6794 328.382 84.2735 328.355 84.8107 328.308 cv
81.2992 328.308 li
26.2141 328.308 mo
26.7513 328.355 27.3453 328.382 27.9698 328.382 cv
28.5943 328.382 29.1883 328.355 29.7255 328.308 cv
26.2141 328.308 li
level3{
gsave
clp
[6.17552e-15 -100.854 100.854 6.17552e-15 250 418.552 ]ct
/5 
<<
/ShadingType 2 
/ColorSpace /0 /CSA get_res
/Coords [0 0 1 0 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~T)^tRTE%(ST`@1TU&[:UUB!FWU]<OXV#WXYV>rd[VZ8m\VuT!]WW56`WrP?aX8kKcXT1TdXoL]eY5gff
YQ-rhYlI&iZ2d/jZiEDmZiEDm[/r\q[fo/"[g,;$\-YP'\-k\)\IM"-\e%:1\e7F3]+d[6]G<p9]bs9>
^)KNA^E#cD^E5rG^`c2J_'DMN_'__Q_CA(V_CS4X__+L\`%Xa_`A:*d`\g?g`]-Qja#Zfna#luqa?E5t
a?WB!a[8]&b!er)b"#)+b=P>/b=bJ1bYCe5bYUq8bu.4<c;[I?cW3^CcWEjEcWa'Ics9<LcsKHOd:#]R
~>
/BitsPerSample 8 
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 0 1 ]
/Size [64 ]
>>
]
/Bounds []
/Encode [0 1 ]
>>
>>/Gradient add_res /5 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[6.17552e-15 -100.854 100.854 6.17552e-15 250 418.552 ]ct
clp
/5 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 4 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~StDXIT:hjMTV8'QTq\9UU8+KYUSO]]UnsoaV5C,eVPg>iVl6PnWN)tuWiN2$X/rD(XKAV,Xfeh0Y-5%4
YHP17YctC;Z*CU?Za7!EZa7$G['[6K[^NWQ[^NZS\$riU\$rlW\@B)[\[f8]\[f;_]"5Mc]=Y_g]Y(qk
]tM+n^:q=q^:q=r^V@P!^qdb$^qdb%_83t(_83t)_SX1-_o'C1`5KU5`Pog8`Pog9`l?$<`l?$=a2c6@
a2c6@aN2HDaiVZHaiVZHb0%lLb0%lLbKJ)PbKJ)Pbfn;Tc-=MXcHa_\cHa_\cHa_\cd0q`cd0q`d*U.d
~>
<~zzzzzzzzzzzzzzzzzzzzz!<E6(!sAc2"pP;;#RC_C$47.L$k3[V%hB3_&J5Wg',)&o'bqK"(Dn#-)&aD
4)]Th<*?H7D+!;[L+sS<X,pjrd-n$Mo.P!##/1iG+/h\k30ekF>1GgpG2)[BQ3&ru[3]fDc4?Yhk5!D1
q5X@_'6UO7077B[87n6*@8P)NH92&#R:/4S\:f("d;GpFl<)cjt<`W:'=BJ^0>?b?;?!UcC?XI2K~>
<~4$,Mc4$,Mc4$,Mc4$5Vf4?P_g4?P_g4?Yhj4Ztqk4Ztqk4[)%n5!D.o5!M7r5<h@s5<h@s5<h@s5<qJ!
5X7S"5X7S"5X7V$5s[e&5s[h(6:+%,6UO4.6UO4.6UO4.6UO4.6UO706psF26psF26psF26psI477BX6
77BX677BX77Rfj:7Rfj:7Rfj:7Rfj;7n6'>7n6'?84Z9B84Z9C8P)KF8P)KF8P)KF8P)KG8kM]J8kM]J
8kM]J8kM]J8kM]J8kM]J8kM]J8kM]J8kM]J8kM]J91qoN91qoN91qoN91qoN91qoN91qoN91qoN91qoN
~>
<~zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz!<E3%!<E3%!<E3%!WiE)!WiE)!WiE)!
s8W-!s8W-!s8W-"9\i1"9\i1"U,&5"U,&5"pP89"pP89~>
]
>>
0 0 1 0 []true true []
/DeviceCMYK
GenStrips
} /Gradient add_res /5 /Gradient get_res exec grestore
}if
np
gsave
483.436 405.624 mo
16.5645 405.624 li
16.5645 328.308 li
483.436 328.308 li
483.436 405.624 li
clp
gsave
-8.23417 416.796 mo
46.8509 416.796 li
46.8509 365.269 li
-8.23417 365.269 li
-8.23417 416.796 li
clp
29.3957 405.624 mo
27.3565 405.624 li
26.5439 405.624 li
24.8326 405.505 23.6035 405.178 23.6035 404.793 cv
23.6035 404.307 25.5584 403.914 27.9698 403.914 cv
30.3812 403.914 32.3361 404.307 32.3361 404.793 cv
32.3361 405.178 31.107 405.505 29.3957 405.624 cv
level3{
gsave
clp
[6.17552e-15 -100.854 100.854 6.17552e-15 250 418.552 ]ct
/6 
<<
/ShadingType 2 
/ColorSpace /0 /CSA get_res
/Coords [0 0 1 0 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~VuT0bW;o<dWrPNfWrPQgXT1ciXoLljY5h#lYQ.,mYQ./nZ2dApZN*MrZN*Jq[/`\s[/`_t\-#8%\HGJ(
\HYY+\d:t/\dD%0]+.F5]+7L6]Fdd:]G!s=]bF0@^)'KD^DTcH^DfoJ_&Z8N_&lGQ_BM_T_^%tW_^8+Y
_^\=[`%4U_`%Faa`A('e`A(-ga#$Qla#6]oa>Zora?!)taZNB#b!/]'b<\r+b<f&-bXG>1bXPG3bt:e8
btCn:btV(=c;%7@c;7@AcVm[Ecr<jHcrO$Kd90?Pd9BKSd9]ZUdU,lYdU?&]dpu>ae7DMceS.kheS7tk
~>
/BitsPerSample 8 
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 0 1 ]
/Size [64 ]
>>
]
/Bounds []
/Encode [0 1 ]
>>
>>/Gradient add_res /6 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[6.17552e-15 -100.854 100.854 6.17552e-15 250 418.552 ]ct
clp
/6 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 4 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~Vl6PmW2ZbrWiE)!WiN2%XKAV,Xfeh0Y-5%4YHP.5YHY79Z*L[@ZEgdAZEpmE['[3I['d<M\%&rX\@B&Y
\@B)[\[f8]\[f;_]"5Ja]"5Mc]=Y\e]=Y_g]Y(qk]tM.o^:q=q^:q@s^qdb$^qde&_84"*_SX1,_SX1,
_SX1-_o'C0_o'C1`5KU4`5KU5`Q#p;`l?$=a2c6@a2c6AaN2HEaiVZIb0%lLb0%lMbKJ)PbKJ)Qbfn;T
bfn;Tbfn;Tc-=MXc-=MXcHa_\cd0q`cd0q`d*U.dd*U.dd*U.ddF$@hdF$@hdaHRle'ldpeC<!teC<!t
~>
<~zzzzzzzzzzzzz!!!!"!WrN,!sA`1"U,)8#RC_C#mgqH$k3[V%Ls![&.fEc&eYik',)&p'c%T%(`4,.)B
'P6*#ot>*ZcCF+<_pQ,9nHZ,palc-R^Dn.P!##/1iG+0/,(60JG181,C^C1c7-K2E!HP3&ioZ3]fDc4Z
ttn5<qJ"5s[e'6:4.077BX77n?3D8kM]J91qrP9he>V:/4S\:f1+g;c?Un<)cjt<``@)=]np3>?kE=?=
$rE?XI2K@:<VTA7T4]AS,RgBk_9q~>
<~6:4+-6UO4.6UX=16psF26psF26q'O577BX677Ka97Rfj:7Ros=7n6'>7n,s;7Ros=7n6'>7n?0A84cBE
8P)KF8P)KF8P)KF8P)KF8P)NH8kM`L91qrP9MA,R9MA/T9he>V9he>V9heAX:/4PZ:/4MX9he>V9he>V
9MA,R9MA,R9MA,R9MA,S9hnGY:/4PZ:/4P[:JXb^:JXb^:JXb^:JXb^:JXb_:f'tb:f'tb:f'tb:f'tb
:f'tb;,L1f;,L1f;,L1f:f'tb:f'tb;,L1f;,L1f;,L1f;,L1f;,L1f;GpCj;GpCj;,L1f;,L1f;,L1f
~>
<~zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz!!!!"!<E3%!<E3&!WiE)!WiE*!s8W-!s8W-!s8
W-"9\i1"9\i1"9\i1"U,&5"U,&5"pP89#6tJ=#6tJ=#RC\A#mgnE$47+I$47+I$O[=M$k*OQ~>
]
>>
0 0 1 0 []true true []
/DeviceCMYK
GenStrips
} /Gradient add_res /6 /Gradient get_res exec grestore
}if
np
27.9698 379.909 mo
25.5584 379.909 23.6035 379.515 23.6035 379.029 cv
23.6035 378.544 25.5584 378.15 27.9698 378.15 cv
30.3812 378.15 32.3361 378.544 32.3361 379.029 cv
32.3361 379.515 30.3812 379.909 27.9698 379.909 cv
level3{
gsave
clp
[6.17552e-15 -100.854 100.854 6.17552e-15 250 418.552 ]ct
/6 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[6.17552e-15 -100.854 100.854 6.17552e-15 250 418.552 ]ct
clp
/6 /Gradient get_res exec grestore
}if
np
42.2122 400.638 mo
40.7117 400.638 39.4953 400.393 39.4953 400.091 cv
39.4953 399.789 40.7117 399.544 42.2122 399.544 cv
43.7128 399.544 44.9292 399.789 44.9292 400.091 cv
44.9292 400.393 43.7128 400.638 42.2122 400.638 cv
level3{
gsave
clp
[6.17552e-15 -100.854 100.854 6.17552e-15 250 418.552 ]ct
/6 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[6.17552e-15 -100.854 100.854 6.17552e-15 250 418.552 ]ct
clp
/6 /Gradient get_res exec grestore
}if
np
42.2122 374.875 mo
40.7117 374.875 39.4953 374.63 39.4953 374.328 cv
39.4953 374.026 40.7117 373.781 42.2122 373.781 cv
43.7128 373.781 44.9292 374.026 44.9292 374.328 cv
44.9292 374.63 43.7128 374.875 42.2122 374.875 cv
level3{
gsave
clp
[6.17552e-15 -100.854 100.854 6.17552e-15 250 418.552 ]ct
/6 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[6.17552e-15 -100.854 100.854 6.17552e-15 250 418.552 ]ct
clp
/6 /Gradient get_res exec grestore
}if
np
grestore
gsave
46.8509 416.796 mo
101.936 416.796 li
101.936 365.269 li
46.8509 365.269 li
46.8509 416.796 li
clp
84.4808 405.624 mo
81.629 405.624 li
79.9177 405.505 78.6886 405.178 78.6886 404.793 cv
78.6886 404.307 80.6435 403.914 83.0549 403.914 cv
85.4664 403.914 87.4213 404.307 87.4213 404.793 cv
87.4213 405.178 86.1922 405.505 84.4808 405.624 cv
level3{
gsave
clp
[6.17552e-15 -100.854 100.854 6.17552e-15 250 418.552 ]ct
/6 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[6.17552e-15 -100.854 100.854 6.17552e-15 250 418.552 ]ct
clp
/6 /Gradient get_res exec grestore
}if
np
83.0549 379.909 mo
80.6435 379.909 78.6886 379.515 78.6886 379.029 cv
78.6886 378.544 80.6435 378.15 83.0549 378.15 cv
85.4664 378.15 87.4213 378.544 87.4213 379.029 cv
87.4213 379.515 85.4664 379.909 83.0549 379.909 cv
level3{
gsave
clp
[6.17552e-15 -100.854 100.854 6.17552e-15 250 418.552 ]ct
/6 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[6.17552e-15 -100.854 100.854 6.17552e-15 250 418.552 ]ct
clp
/6 /Gradient get_res exec grestore
}if
np
62.6135 391.079 mo
61.113 391.079 59.8966 390.834 59.8966 390.532 cv
59.8966 390.229 61.113 389.985 62.6135 389.985 cv
64.1141 389.985 65.3305 390.229 65.3305 390.532 cv
65.3305 390.834 64.1141 391.079 62.6135 391.079 cv
level3{
gsave
clp
[6.17552e-15 -100.854 100.854 6.17552e-15 250 418.552 ]ct
/6 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[6.17552e-15 -100.854 100.854 6.17552e-15 250 418.552 ]ct
clp
/6 /Gradient get_res exec grestore
}if
np
97.2973 400.638 mo
95.7968 400.638 94.5804 400.393 94.5804 400.091 cv
94.5804 399.789 95.7968 399.544 97.2973 399.544 cv
98.7979 399.544 100.014 399.789 100.014 400.091 cv
100.014 400.393 98.7979 400.638 97.2973 400.638 cv
level3{
gsave
clp
[6.17552e-15 -100.854 100.854 6.17552e-15 250 418.552 ]ct
/6 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[6.17552e-15 -100.854 100.854 6.17552e-15 250 418.552 ]ct
clp
/6 /Gradient get_res exec grestore
}if
np
62.6135 365.315 mo
62.2241 365.315 61.8539 365.298 61.5191 365.269 cv
63.708 365.269 li
63.3732 365.298 63.003 365.315 62.6135 365.315 cv
level3{
gsave
clp
[6.17552e-15 -100.854 100.854 6.17552e-15 250 418.552 ]ct
/6 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[6.17552e-15 -100.854 100.854 6.17552e-15 250 418.552 ]ct
clp
/6 /Gradient get_res exec grestore
}if
np
97.2973 374.875 mo
95.7968 374.875 94.5804 374.63 94.5804 374.328 cv
94.5804 374.026 95.7968 373.781 97.2973 373.781 cv
98.7979 373.781 100.014 374.026 100.014 374.328 cv
100.014 374.63 98.7979 374.875 97.2973 374.875 cv
level3{
gsave
clp
[6.17552e-15 -100.854 100.854 6.17552e-15 250 418.552 ]ct
/6 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[6.17552e-15 -100.854 100.854 6.17552e-15 250 418.552 ]ct
clp
/6 /Gradient get_res exec grestore
}if
np
grestore
gsave
101.936 416.796 mo
157.021 416.796 li
157.021 365.269 li
101.936 365.269 li
101.936 416.796 li
clp
139.566 405.624 mo
136.714 405.624 li
135.003 405.505 133.774 405.178 133.774 404.793 cv
133.774 404.307 135.729 403.914 138.14 403.914 cv
140.551 403.914 142.506 404.307 142.506 404.793 cv
142.506 405.178 141.277 405.505 139.566 405.624 cv
level3{
gsave
clp
[6.17552e-15 -100.854 100.854 6.17552e-15 250 418.552 ]ct
/6 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[6.17552e-15 -100.854 100.854 6.17552e-15 250 418.552 ]ct
clp
/6 /Gradient get_res exec grestore
}if
np
138.14 379.909 mo
135.729 379.909 133.774 379.515 133.774 379.029 cv
133.774 378.544 135.729 378.15 138.14 378.15 cv
140.551 378.15 142.506 378.544 142.506 379.029 cv
142.506 379.515 140.551 379.909 138.14 379.909 cv
level3{
gsave
clp
[6.17552e-15 -100.854 100.854 6.17552e-15 250 418.552 ]ct
/6 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[6.17552e-15 -100.854 100.854 6.17552e-15 250 418.552 ]ct
clp
/6 /Gradient get_res exec grestore
}if
np
117.699 391.079 mo
116.198 391.079 114.982 390.834 114.982 390.532 cv
114.982 390.229 116.198 389.985 117.699 389.985 cv
119.199 389.985 120.416 390.229 120.416 390.532 cv
120.416 390.834 119.199 391.079 117.699 391.079 cv
level3{
gsave
clp
[6.17552e-15 -100.854 100.854 6.17552e-15 250 418.552 ]ct
/6 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[6.17552e-15 -100.854 100.854 6.17552e-15 250 418.552 ]ct
clp
/6 /Gradient get_res exec grestore
}if
np
152.382 400.638 mo
150.882 400.638 149.666 400.393 149.666 400.091 cv
149.666 399.789 150.882 399.544 152.382 399.544 cv
153.883 399.544 155.099 399.789 155.099 400.091 cv
155.099 400.393 153.883 400.638 152.382 400.638 cv
level3{
gsave
clp
[6.17552e-15 -100.854 100.854 6.17552e-15 250 418.552 ]ct
/6 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[6.17552e-15 -100.854 100.854 6.17552e-15 250 418.552 ]ct
clp
/6 /Gradient get_res exec grestore
}if
np
117.699 365.315 mo
117.309 365.315 116.939 365.298 116.604 365.269 cv
118.793 365.269 li
118.458 365.298 118.088 365.315 117.699 365.315 cv
level3{
gsave
clp
[6.17552e-15 -100.854 100.854 6.17552e-15 250 418.552 ]ct
/6 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[6.17552e-15 -100.854 100.854 6.17552e-15 250 418.552 ]ct
clp
/6 /Gradient get_res exec grestore
}if
np
152.382 374.875 mo
150.882 374.875 149.666 374.63 149.666 374.328 cv
149.666 374.026 150.882 373.781 152.382 373.781 cv
153.883 373.781 155.099 374.026 155.099 374.328 cv
155.099 374.63 153.883 374.875 152.382 374.875 cv
level3{
gsave
clp
[6.17552e-15 -100.854 100.854 6.17552e-15 250 418.552 ]ct
/6 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[6.17552e-15 -100.854 100.854 6.17552e-15 250 418.552 ]ct
clp
/6 /Gradient get_res exec grestore
}if
np
grestore
gsave
157.021 416.796 mo
212.106 416.796 li
212.106 365.269 li
157.021 365.269 li
157.021 416.796 li
clp
194.651 405.624 mo
191.799 405.624 li
190.088 405.505 188.859 405.178 188.859 404.793 cv
188.859 404.307 190.814 403.914 193.225 403.914 cv
195.637 403.914 197.591 404.307 197.591 404.793 cv
197.591 405.178 196.362 405.505 194.651 405.624 cv
level3{
gsave
clp
[6.17552e-15 -100.854 100.854 6.17552e-15 250 418.552 ]ct
/6 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[6.17552e-15 -100.854 100.854 6.17552e-15 250 418.552 ]ct
clp
/6 /Gradient get_res exec grestore
}if
np
193.225 379.909 mo
190.814 379.909 188.859 379.515 188.859 379.029 cv
188.859 378.544 190.814 378.15 193.225 378.15 cv
195.637 378.15 197.591 378.544 197.591 379.029 cv
197.591 379.515 195.637 379.909 193.225 379.909 cv
level3{
gsave
clp
[6.17552e-15 -100.854 100.854 6.17552e-15 250 418.552 ]ct
/6 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[6.17552e-15 -100.854 100.854 6.17552e-15 250 418.552 ]ct
clp
/6 /Gradient get_res exec grestore
}if
np
172.784 391.079 mo
171.283 391.079 170.067 390.834 170.067 390.532 cv
170.067 390.229 171.283 389.985 172.784 389.985 cv
174.284 389.985 175.501 390.229 175.501 390.532 cv
175.501 390.834 174.284 391.079 172.784 391.079 cv
level3{
gsave
clp
[6.17552e-15 -100.854 100.854 6.17552e-15 250 418.552 ]ct
/6 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[6.17552e-15 -100.854 100.854 6.17552e-15 250 418.552 ]ct
clp
/6 /Gradient get_res exec grestore
}if
np
207.468 400.638 mo
205.967 400.638 204.751 400.393 204.751 400.091 cv
204.751 399.789 205.967 399.544 207.468 399.544 cv
208.968 399.544 210.184 399.789 210.184 400.091 cv
210.184 400.393 208.968 400.638 207.468 400.638 cv
level3{
gsave
clp
[6.17552e-15 -100.854 100.854 6.17552e-15 250 418.552 ]ct
/6 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[6.17552e-15 -100.854 100.854 6.17552e-15 250 418.552 ]ct
clp
/6 /Gradient get_res exec grestore
}if
np
172.784 365.315 mo
172.394 365.315 172.024 365.298 171.689 365.269 cv
173.878 365.269 li
173.543 365.298 173.173 365.315 172.784 365.315 cv
level3{
gsave
clp
[6.17552e-15 -100.854 100.854 6.17552e-15 250 418.552 ]ct
/6 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[6.17552e-15 -100.854 100.854 6.17552e-15 250 418.552 ]ct
clp
/6 /Gradient get_res exec grestore
}if
np
207.468 374.875 mo
205.967 374.875 204.751 374.63 204.751 374.328 cv
204.751 374.026 205.967 373.781 207.468 373.781 cv
208.968 373.781 210.184 374.026 210.184 374.328 cv
210.184 374.63 208.968 374.875 207.468 374.875 cv
level3{
gsave
clp
[6.17552e-15 -100.854 100.854 6.17552e-15 250 418.552 ]ct
/6 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[6.17552e-15 -100.854 100.854 6.17552e-15 250 418.552 ]ct
clp
/6 /Gradient get_res exec grestore
}if
np
grestore
gsave
212.106 416.796 mo
267.191 416.796 li
267.191 365.269 li
212.106 365.269 li
212.106 416.796 li
clp
249.736 405.624 mo
246.884 405.624 li
245.173 405.505 243.944 405.178 243.944 404.793 cv
243.944 404.307 245.899 403.914 248.31 403.914 cv
250.722 403.914 252.677 404.307 252.677 404.793 cv
252.677 405.178 251.447 405.505 249.736 405.624 cv
level3{
gsave
clp
[6.17552e-15 -100.854 100.854 6.17552e-15 250 418.552 ]ct
/6 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[6.17552e-15 -100.854 100.854 6.17552e-15 250 418.552 ]ct
clp
/6 /Gradient get_res exec grestore
}if
np
248.31 379.909 mo
245.899 379.909 243.944 379.515 243.944 379.029 cv
243.944 378.544 245.899 378.15 248.31 378.15 cv
250.722 378.15 252.677 378.544 252.677 379.029 cv
252.677 379.515 250.722 379.909 248.31 379.909 cv
level3{
gsave
clp
[6.17552e-15 -100.854 100.854 6.17552e-15 250 418.552 ]ct
/6 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[6.17552e-15 -100.854 100.854 6.17552e-15 250 418.552 ]ct
clp
/6 /Gradient get_res exec grestore
}if
np
227.869 391.079 mo
226.368 391.079 225.152 390.834 225.152 390.532 cv
225.152 390.229 226.368 389.985 227.869 389.985 cv
229.369 389.985 230.586 390.229 230.586 390.532 cv
230.586 390.834 229.369 391.079 227.869 391.079 cv
level3{
gsave
clp
[6.17552e-15 -100.854 100.854 6.17552e-15 250 418.552 ]ct
/6 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[6.17552e-15 -100.854 100.854 6.17552e-15 250 418.552 ]ct
clp
/6 /Gradient get_res exec grestore
}if
np
262.553 400.638 mo
261.052 400.638 259.836 400.393 259.836 400.091 cv
259.836 399.789 261.052 399.544 262.553 399.544 cv
264.053 399.544 265.27 399.789 265.27 400.091 cv
265.27 400.393 264.053 400.638 262.553 400.638 cv
level3{
gsave
clp
[6.17552e-15 -100.854 100.854 6.17552e-15 250 418.552 ]ct
/6 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[6.17552e-15 -100.854 100.854 6.17552e-15 250 418.552 ]ct
clp
/6 /Gradient get_res exec grestore
}if
np
227.869 365.315 mo
227.479 365.315 227.109 365.298 226.774 365.269 cv
228.963 365.269 li
228.628 365.298 228.258 365.315 227.869 365.315 cv
level3{
gsave
clp
[6.17552e-15 -100.854 100.854 6.17552e-15 250 418.552 ]ct
/6 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[6.17552e-15 -100.854 100.854 6.17552e-15 250 418.552 ]ct
clp
/6 /Gradient get_res exec grestore
}if
np
262.553 374.875 mo
261.052 374.875 259.836 374.63 259.836 374.328 cv
259.836 374.026 261.052 373.781 262.553 373.781 cv
264.053 373.781 265.27 374.026 265.27 374.328 cv
265.27 374.63 264.053 374.875 262.553 374.875 cv
level3{
gsave
clp
[6.17552e-15 -100.854 100.854 6.17552e-15 250 418.552 ]ct
/6 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[6.17552e-15 -100.854 100.854 6.17552e-15 250 418.552 ]ct
clp
/6 /Gradient get_res exec grestore
}if
np
grestore
gsave
267.191 416.796 mo
322.276 416.796 li
322.276 365.269 li
267.191 365.269 li
267.191 416.796 li
clp
304.821 405.624 mo
301.969 405.624 li
300.258 405.505 299.029 405.178 299.029 404.793 cv
299.029 404.307 300.984 403.914 303.395 403.914 cv
305.807 403.914 307.762 404.307 307.762 404.793 cv
307.762 405.178 306.533 405.505 304.821 405.624 cv
level3{
gsave
clp
[6.17552e-15 -100.854 100.854 6.17552e-15 250 418.552 ]ct
/6 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[6.17552e-15 -100.854 100.854 6.17552e-15 250 418.552 ]ct
clp
/6 /Gradient get_res exec grestore
}if
np
303.395 379.909 mo
300.984 379.909 299.029 379.515 299.029 379.029 cv
299.029 378.544 300.984 378.15 303.395 378.15 cv
305.807 378.15 307.762 378.544 307.762 379.029 cv
307.762 379.515 305.807 379.909 303.395 379.909 cv
level3{
gsave
clp
[6.17552e-15 -100.854 100.854 6.17552e-15 250 418.552 ]ct
/6 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[6.17552e-15 -100.854 100.854 6.17552e-15 250 418.552 ]ct
clp
/6 /Gradient get_res exec grestore
}if
np
282.954 391.079 mo
281.453 391.079 280.237 390.834 280.237 390.532 cv
280.237 390.229 281.453 389.985 282.954 389.985 cv
284.454 389.985 285.671 390.229 285.671 390.532 cv
285.671 390.834 284.454 391.079 282.954 391.079 cv
level3{
gsave
clp
[6.17552e-15 -100.854 100.854 6.17552e-15 250 418.552 ]ct
/6 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[6.17552e-15 -100.854 100.854 6.17552e-15 250 418.552 ]ct
clp
/6 /Gradient get_res exec grestore
}if
np
317.638 400.638 mo
316.137 400.638 314.921 400.393 314.921 400.091 cv
314.921 399.789 316.137 399.544 317.638 399.544 cv
319.138 399.544 320.355 399.789 320.355 400.091 cv
320.355 400.393 319.138 400.638 317.638 400.638 cv
level3{
gsave
clp
[6.17552e-15 -100.854 100.854 6.17552e-15 250 418.552 ]ct
/6 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[6.17552e-15 -100.854 100.854 6.17552e-15 250 418.552 ]ct
clp
/6 /Gradient get_res exec grestore
}if
np
282.954 365.315 mo
282.564 365.315 282.194 365.298 281.859 365.269 cv
284.048 365.269 li
283.714 365.298 283.343 365.315 282.954 365.315 cv
level3{
gsave
clp
[6.17552e-15 -100.854 100.854 6.17552e-15 250 418.552 ]ct
/6 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[6.17552e-15 -100.854 100.854 6.17552e-15 250 418.552 ]ct
clp
/6 /Gradient get_res exec grestore
}if
np
317.638 374.875 mo
316.137 374.875 314.921 374.63 314.921 374.328 cv
314.921 374.026 316.137 373.781 317.638 373.781 cv
319.138 373.781 320.355 374.026 320.355 374.328 cv
320.355 374.63 319.138 374.875 317.638 374.875 cv
level3{
gsave
clp
[6.17552e-15 -100.854 100.854 6.17552e-15 250 418.552 ]ct
/6 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[6.17552e-15 -100.854 100.854 6.17552e-15 250 418.552 ]ct
clp
/6 /Gradient get_res exec grestore
}if
np
grestore
gsave
322.276 416.796 mo
377.361 416.796 li
377.361 365.269 li
322.276 365.269 li
322.276 416.796 li
clp
359.906 405.624 mo
357.054 405.624 li
355.343 405.505 354.114 405.178 354.114 404.793 cv
354.114 404.307 356.069 403.914 358.48 403.914 cv
360.892 403.914 362.847 404.307 362.847 404.793 cv
362.847 405.178 361.618 405.505 359.906 405.624 cv
level3{
gsave
clp
[6.17552e-15 -100.854 100.854 6.17552e-15 250 418.552 ]ct
/6 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[6.17552e-15 -100.854 100.854 6.17552e-15 250 418.552 ]ct
clp
/6 /Gradient get_res exec grestore
}if
np
358.48 379.909 mo
356.069 379.909 354.114 379.515 354.114 379.029 cv
354.114 378.544 356.069 378.15 358.48 378.15 cv
360.892 378.15 362.847 378.544 362.847 379.029 cv
362.847 379.515 360.892 379.909 358.48 379.909 cv
level3{
gsave
clp
[6.17552e-15 -100.854 100.854 6.17552e-15 250 418.552 ]ct
/6 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[6.17552e-15 -100.854 100.854 6.17552e-15 250 418.552 ]ct
clp
/6 /Gradient get_res exec grestore
}if
np
338.039 391.079 mo
336.538 391.079 335.322 390.834 335.322 390.532 cv
335.322 390.229 336.538 389.985 338.039 389.985 cv
339.54 389.985 340.756 390.229 340.756 390.532 cv
340.756 390.834 339.54 391.079 338.039 391.079 cv
level3{
gsave
clp
[6.17552e-15 -100.854 100.854 6.17552e-15 250 418.552 ]ct
/6 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[6.17552e-15 -100.854 100.854 6.17552e-15 250 418.552 ]ct
clp
/6 /Gradient get_res exec grestore
}if
np
372.723 400.638 mo
371.222 400.638 370.006 400.393 370.006 400.091 cv
370.006 399.789 371.222 399.544 372.723 399.544 cv
374.223 399.544 375.44 399.789 375.44 400.091 cv
375.44 400.393 374.223 400.638 372.723 400.638 cv
level3{
gsave
clp
[6.17552e-15 -100.854 100.854 6.17552e-15 250 418.552 ]ct
/6 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[6.17552e-15 -100.854 100.854 6.17552e-15 250 418.552 ]ct
clp
/6 /Gradient get_res exec grestore
}if
np
338.039 365.315 mo
337.65 365.315 337.279 365.298 336.944 365.269 cv
339.133 365.269 li
338.799 365.298 338.428 365.315 338.039 365.315 cv
level3{
gsave
clp
[6.17552e-15 -100.854 100.854 6.17552e-15 250 418.552 ]ct
/6 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[6.17552e-15 -100.854 100.854 6.17552e-15 250 418.552 ]ct
clp
/6 /Gradient get_res exec grestore
}if
np
372.723 374.875 mo
371.222 374.875 370.006 374.63 370.006 374.328 cv
370.006 374.026 371.222 373.781 372.723 373.781 cv
374.223 373.781 375.44 374.026 375.44 374.328 cv
375.44 374.63 374.223 374.875 372.723 374.875 cv
level3{
gsave
clp
[6.17552e-15 -100.854 100.854 6.17552e-15 250 418.552 ]ct
/6 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[6.17552e-15 -100.854 100.854 6.17552e-15 250 418.552 ]ct
clp
/6 /Gradient get_res exec grestore
}if
np
grestore
gsave
377.361 416.796 mo
432.447 416.796 li
432.447 365.269 li
377.361 365.269 li
377.361 416.796 li
clp
414.991 405.624 mo
412.14 405.624 li
410.428 405.505 409.199 405.178 409.199 404.793 cv
409.199 404.307 411.154 403.914 413.565 403.914 cv
415.977 403.914 417.932 404.307 417.932 404.793 cv
417.932 405.178 416.703 405.505 414.991 405.624 cv
level3{
gsave
clp
[6.17552e-15 -100.854 100.854 6.17552e-15 250 418.552 ]ct
/6 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[6.17552e-15 -100.854 100.854 6.17552e-15 250 418.552 ]ct
clp
/6 /Gradient get_res exec grestore
}if
np
413.565 379.909 mo
411.154 379.909 409.199 379.515 409.199 379.029 cv
409.199 378.544 411.154 378.15 413.565 378.15 cv
415.977 378.15 417.932 378.544 417.932 379.029 cv
417.932 379.515 415.977 379.909 413.565 379.909 cv
level3{
gsave
clp
[6.17552e-15 -100.854 100.854 6.17552e-15 250 418.552 ]ct
/6 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[6.17552e-15 -100.854 100.854 6.17552e-15 250 418.552 ]ct
clp
/6 /Gradient get_res exec grestore
}if
np
393.124 391.079 mo
391.624 391.079 390.407 390.834 390.407 390.532 cv
390.407 390.229 391.624 389.985 393.124 389.985 cv
394.625 389.985 395.841 390.229 395.841 390.532 cv
395.841 390.834 394.625 391.079 393.124 391.079 cv
level3{
gsave
clp
[6.17552e-15 -100.854 100.854 6.17552e-15 250 418.552 ]ct
/6 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[6.17552e-15 -100.854 100.854 6.17552e-15 250 418.552 ]ct
clp
/6 /Gradient get_res exec grestore
}if
np
427.808 400.638 mo
426.307 400.638 425.091 400.393 425.091 400.091 cv
425.091 399.789 426.307 399.544 427.808 399.544 cv
429.308 399.544 430.525 399.789 430.525 400.091 cv
430.525 400.393 429.308 400.638 427.808 400.638 cv
level3{
gsave
clp
[6.17552e-15 -100.854 100.854 6.17552e-15 250 418.552 ]ct
/6 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[6.17552e-15 -100.854 100.854 6.17552e-15 250 418.552 ]ct
clp
/6 /Gradient get_res exec grestore
}if
np
393.124 365.315 mo
392.735 365.315 392.364 365.298 392.03 365.269 cv
394.219 365.269 li
393.884 365.298 393.513 365.315 393.124 365.315 cv
level3{
gsave
clp
[6.17552e-15 -100.854 100.854 6.17552e-15 250 418.552 ]ct
/6 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[6.17552e-15 -100.854 100.854 6.17552e-15 250 418.552 ]ct
clp
/6 /Gradient get_res exec grestore
}if
np
427.808 374.875 mo
426.307 374.875 425.091 374.63 425.091 374.328 cv
425.091 374.026 426.307 373.781 427.808 373.781 cv
429.308 373.781 430.525 374.026 430.525 374.328 cv
430.525 374.63 429.308 374.875 427.808 374.875 cv
level3{
gsave
clp
[6.17552e-15 -100.854 100.854 6.17552e-15 250 418.552 ]ct
/6 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[6.17552e-15 -100.854 100.854 6.17552e-15 250 418.552 ]ct
clp
/6 /Gradient get_res exec grestore
}if
np
grestore
gsave
432.447 416.796 mo
487.532 416.796 li
487.532 365.269 li
432.447 365.269 li
432.447 416.796 li
clp
470.076 405.624 mo
467.225 405.624 li
465.513 405.505 464.284 405.178 464.284 404.793 cv
464.284 404.307 466.239 403.914 468.651 403.914 cv
471.062 403.914 473.017 404.307 473.017 404.793 cv
473.017 405.178 471.788 405.505 470.076 405.624 cv
level3{
gsave
clp
[6.17552e-15 -100.854 100.854 6.17552e-15 250 418.552 ]ct
/6 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[6.17552e-15 -100.854 100.854 6.17552e-15 250 418.552 ]ct
clp
/6 /Gradient get_res exec grestore
}if
np
468.651 379.909 mo
466.239 379.909 464.284 379.515 464.284 379.029 cv
464.284 378.544 466.239 378.15 468.651 378.15 cv
471.062 378.15 473.017 378.544 473.017 379.029 cv
473.017 379.515 471.062 379.909 468.651 379.909 cv
level3{
gsave
clp
[6.17552e-15 -100.854 100.854 6.17552e-15 250 418.552 ]ct
/6 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[6.17552e-15 -100.854 100.854 6.17552e-15 250 418.552 ]ct
clp
/6 /Gradient get_res exec grestore
}if
np
448.209 391.079 mo
446.709 391.079 445.492 390.834 445.492 390.532 cv
445.492 390.229 446.709 389.985 448.209 389.985 cv
449.71 389.985 450.926 390.229 450.926 390.532 cv
450.926 390.834 449.71 391.079 448.209 391.079 cv
level3{
gsave
clp
[6.17552e-15 -100.854 100.854 6.17552e-15 250 418.552 ]ct
/6 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[6.17552e-15 -100.854 100.854 6.17552e-15 250 418.552 ]ct
clp
/6 /Gradient get_res exec grestore
}if
np
482.893 400.638 mo
481.393 400.638 480.176 400.393 480.176 400.091 cv
480.176 399.789 481.393 399.544 482.893 399.544 cv
483.079 399.544 483.26 399.548 483.436 399.555 cv
483.436 400.627 li
483.26 400.634 483.079 400.638 482.893 400.638 cv
level3{
gsave
clp
[6.17552e-15 -100.854 100.854 6.17552e-15 250 418.552 ]ct
/6 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[6.17552e-15 -100.854 100.854 6.17552e-15 250 418.552 ]ct
clp
/6 /Gradient get_res exec grestore
}if
np
448.209 365.315 mo
447.82 365.315 447.449 365.298 447.115 365.269 cv
449.304 365.269 li
448.969 365.298 448.599 365.315 448.209 365.315 cv
level3{
gsave
clp
[6.17552e-15 -100.854 100.854 6.17552e-15 250 418.552 ]ct
/6 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[6.17552e-15 -100.854 100.854 6.17552e-15 250 418.552 ]ct
clp
/6 /Gradient get_res exec grestore
}if
np
482.893 374.875 mo
481.393 374.875 480.176 374.63 480.176 374.328 cv
480.176 374.026 481.393 373.781 482.893 373.781 cv
483.079 373.781 483.26 373.784 483.436 373.792 cv
483.436 374.864 li
483.26 374.871 483.079 374.875 482.893 374.875 cv
level3{
gsave
clp
[6.17552e-15 -100.854 100.854 6.17552e-15 250 418.552 ]ct
/6 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[6.17552e-15 -100.854 100.854 6.17552e-15 250 418.552 ]ct
clp
/6 /Gradient get_res exec grestore
}if
np
grestore
gsave
-8.23417 365.269 mo
46.8509 365.269 li
46.8509 313.742 li
-8.23417 313.742 li
-8.23417 365.269 li
clp
27.9698 354.145 mo
25.5584 354.145 23.6035 353.752 23.6035 353.266 cv
23.6035 352.781 25.5584 352.387 27.9698 352.387 cv
30.3812 352.387 32.3361 352.781 32.3361 353.266 cv
32.3361 353.752 30.3812 354.145 27.9698 354.145 cv
level3{
gsave
clp
[6.17552e-15 -100.854 100.854 6.17552e-15 250 418.552 ]ct
/6 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[6.17552e-15 -100.854 100.854 6.17552e-15 250 418.552 ]ct
clp
/6 /Gradient get_res exec grestore
}if
np
27.9698 328.382 mo
27.3453 328.382 26.7513 328.355 26.2141 328.308 cv
29.7255 328.308 li
29.1883 328.355 28.5943 328.382 27.9698 328.382 cv
level3{
gsave
clp
[6.17552e-15 -100.854 100.854 6.17552e-15 250 418.552 ]ct
/6 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[6.17552e-15 -100.854 100.854 6.17552e-15 250 418.552 ]ct
clp
/6 /Gradient get_res exec grestore
}if
np
42.2122 349.111 mo
40.7117 349.111 39.4953 348.866 39.4953 348.564 cv
39.4953 348.262 40.7117 348.017 42.2122 348.017 cv
43.7128 348.017 44.9292 348.262 44.9292 348.564 cv
44.9292 348.866 43.7128 349.111 42.2122 349.111 cv
level3{
gsave
clp
[6.17552e-15 -100.854 100.854 6.17552e-15 250 418.552 ]ct
/6 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[6.17552e-15 -100.854 100.854 6.17552e-15 250 418.552 ]ct
clp
/6 /Gradient get_res exec grestore
}if
np
grestore
gsave
46.8509 365.269 mo
101.936 365.269 li
101.936 313.742 li
46.8509 313.742 li
46.8509 365.269 li
clp
83.0549 354.145 mo
80.6435 354.145 78.6886 353.752 78.6886 353.266 cv
78.6886 352.781 80.6435 352.387 83.0549 352.387 cv
85.4664 352.387 87.4213 352.781 87.4213 353.266 cv
87.4213 353.752 85.4664 354.145 83.0549 354.145 cv
level3{
gsave
clp
[6.17552e-15 -100.854 100.854 6.17552e-15 250 418.552 ]ct
/6 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[6.17552e-15 -100.854 100.854 6.17552e-15 250 418.552 ]ct
clp
/6 /Gradient get_res exec grestore
}if
np
63.7092 365.269 mo
63.708 365.269 li
61.5191 365.269 li
61.5179 365.269 li
60.5631 365.184 59.8966 364.992 59.8966 364.768 cv
59.8966 364.466 61.113 364.221 62.6135 364.221 cv
64.1141 364.221 65.3305 364.466 65.3305 364.768 cv
65.3305 364.992 64.664 365.184 63.7092 365.269 cv
level3{
gsave
clp
[6.17552e-15 -100.854 100.854 6.17552e-15 250 418.552 ]ct
/6 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[6.17552e-15 -100.854 100.854 6.17552e-15 250 418.552 ]ct
clp
/6 /Gradient get_res exec grestore
}if
np
83.0549 328.382 mo
82.4304 328.382 81.8364 328.355 81.2992 328.308 cv
84.8107 328.308 li
84.2735 328.355 83.6794 328.382 83.0549 328.382 cv
level3{
gsave
clp
[6.17552e-15 -100.854 100.854 6.17552e-15 250 418.552 ]ct
/6 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[6.17552e-15 -100.854 100.854 6.17552e-15 250 418.552 ]ct
clp
/6 /Gradient get_res exec grestore
}if
np
62.6135 339.552 mo
61.113 339.552 59.8966 339.307 59.8966 339.005 cv
59.8966 338.703 61.113 338.458 62.6135 338.458 cv
64.1141 338.458 65.3305 338.703 65.3305 339.005 cv
65.3305 339.307 64.1141 339.552 62.6135 339.552 cv
level3{
gsave
clp
[6.17552e-15 -100.854 100.854 6.17552e-15 250 418.552 ]ct
/6 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[6.17552e-15 -100.854 100.854 6.17552e-15 250 418.552 ]ct
clp
/6 /Gradient get_res exec grestore
}if
np
97.2973 349.111 mo
95.7968 349.111 94.5804 348.866 94.5804 348.564 cv
94.5804 348.262 95.7968 348.017 97.2973 348.017 cv
98.7979 348.017 100.014 348.262 100.014 348.564 cv
100.014 348.866 98.7979 349.111 97.2973 349.111 cv
level3{
gsave
clp
[6.17552e-15 -100.854 100.854 6.17552e-15 250 418.552 ]ct
/6 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[6.17552e-15 -100.854 100.854 6.17552e-15 250 418.552 ]ct
clp
/6 /Gradient get_res exec grestore
}if
np
grestore
gsave
101.936 365.269 mo
157.021 365.269 li
157.021 313.742 li
101.936 313.742 li
101.936 365.269 li
clp
138.14 354.145 mo
135.729 354.145 133.774 353.752 133.774 353.266 cv
133.774 352.781 135.729 352.387 138.14 352.387 cv
140.551 352.387 142.506 352.781 142.506 353.266 cv
142.506 353.752 140.551 354.145 138.14 354.145 cv
level3{
gsave
clp
[6.17552e-15 -100.854 100.854 6.17552e-15 250 418.552 ]ct
/6 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[6.17552e-15 -100.854 100.854 6.17552e-15 250 418.552 ]ct
clp
/6 /Gradient get_res exec grestore
}if
np
118.794 365.269 mo
118.793 365.269 li
116.604 365.269 li
116.603 365.269 li
115.648 365.184 114.982 364.992 114.982 364.768 cv
114.982 364.466 116.198 364.221 117.699 364.221 cv
119.199 364.221 120.416 364.466 120.416 364.768 cv
120.416 364.992 119.749 365.184 118.794 365.269 cv
level3{
gsave
clp
[6.17552e-15 -100.854 100.854 6.17552e-15 250 418.552 ]ct
/6 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[6.17552e-15 -100.854 100.854 6.17552e-15 250 418.552 ]ct
clp
/6 /Gradient get_res exec grestore
}if
np
138.14 328.382 mo
137.516 328.382 136.921 328.355 136.384 328.308 cv
139.896 328.308 li
139.359 328.355 138.764 328.382 138.14 328.382 cv
level3{
gsave
clp
[6.17552e-15 -100.854 100.854 6.17552e-15 250 418.552 ]ct
/6 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[6.17552e-15 -100.854 100.854 6.17552e-15 250 418.552 ]ct
clp
/6 /Gradient get_res exec grestore
}if
np
117.699 339.552 mo
116.198 339.552 114.982 339.307 114.982 339.005 cv
114.982 338.703 116.198 338.458 117.699 338.458 cv
119.199 338.458 120.416 338.703 120.416 339.005 cv
120.416 339.307 119.199 339.552 117.699 339.552 cv
level3{
gsave
clp
[6.17552e-15 -100.854 100.854 6.17552e-15 250 418.552 ]ct
/6 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[6.17552e-15 -100.854 100.854 6.17552e-15 250 418.552 ]ct
clp
/6 /Gradient get_res exec grestore
}if
np
152.382 349.111 mo
150.882 349.111 149.666 348.866 149.666 348.564 cv
149.666 348.262 150.882 348.017 152.382 348.017 cv
153.883 348.017 155.099 348.262 155.099 348.564 cv
155.099 348.866 153.883 349.111 152.382 349.111 cv
level3{
gsave
clp
[6.17552e-15 -100.854 100.854 6.17552e-15 250 418.552 ]ct
/6 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[6.17552e-15 -100.854 100.854 6.17552e-15 250 418.552 ]ct
clp
/6 /Gradient get_res exec grestore
}if
np
grestore
gsave
157.021 365.269 mo
212.106 365.269 li
212.106 313.742 li
157.021 313.742 li
157.021 365.269 li
clp
193.225 354.145 mo
192.138 354.145 191.143 354.065 190.379 353.933 cv
196.071 353.933 li
195.307 354.065 194.312 354.145 193.225 354.145 cv
level3{
gsave
clp
[6.17552e-15 -100.854 100.854 6.17552e-15 250 418.552 ]ct
/6 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[6.17552e-15 -100.854 100.854 6.17552e-15 250 418.552 ]ct
clp
/6 /Gradient get_res exec grestore
}if
np
173.879 365.269 mo
173.878 365.269 li
171.689 365.269 li
171.688 365.269 li
170.733 365.184 170.067 364.992 170.067 364.768 cv
170.067 364.466 171.283 364.221 172.784 364.221 cv
174.284 364.221 175.501 364.466 175.501 364.768 cv
175.501 364.992 174.834 365.184 173.879 365.269 cv
level3{
gsave
clp
[6.17552e-15 -100.854 100.854 6.17552e-15 250 418.552 ]ct
/6 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[6.17552e-15 -100.854 100.854 6.17552e-15 250 418.552 ]ct
clp
/6 /Gradient get_res exec grestore
}if
np
193.225 328.382 mo
192.601 328.382 192.007 328.355 191.469 328.308 cv
194.981 328.308 li
194.444 328.355 193.85 328.382 193.225 328.382 cv
level3{
gsave
clp
[6.17552e-15 -100.854 100.854 6.17552e-15 250 418.552 ]ct
/6 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[6.17552e-15 -100.854 100.854 6.17552e-15 250 418.552 ]ct
clp
/6 /Gradient get_res exec grestore
}if
np
172.784 339.552 mo
171.283 339.552 170.067 339.307 170.067 339.005 cv
170.067 338.703 171.283 338.458 172.784 338.458 cv
174.284 338.458 175.501 338.703 175.501 339.005 cv
175.501 339.307 174.284 339.552 172.784 339.552 cv
level3{
gsave
clp
[6.17552e-15 -100.854 100.854 6.17552e-15 250 418.552 ]ct
/6 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[6.17552e-15 -100.854 100.854 6.17552e-15 250 418.552 ]ct
clp
/6 /Gradient get_res exec grestore
}if
np
207.468 349.111 mo
205.967 349.111 204.751 348.866 204.751 348.564 cv
204.751 348.262 205.967 348.017 207.468 348.017 cv
208.968 348.017 210.184 348.262 210.184 348.564 cv
210.184 348.866 208.968 349.111 207.468 349.111 cv
level3{
gsave
clp
[6.17552e-15 -100.854 100.854 6.17552e-15 250 418.552 ]ct
/6 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[6.17552e-15 -100.854 100.854 6.17552e-15 250 418.552 ]ct
clp
/6 /Gradient get_res exec grestore
}if
np
grestore
gsave
212.106 365.269 mo
267.191 365.269 li
267.191 313.742 li
212.106 313.742 li
212.106 365.269 li
clp
248.31 354.145 mo
247.223 354.145 246.228 354.065 245.464 353.933 cv
251.157 353.933 li
250.392 354.065 249.398 354.145 248.31 354.145 cv
level3{
gsave
clp
[6.17552e-15 -100.854 100.854 6.17552e-15 250 418.552 ]ct
/6 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[6.17552e-15 -100.854 100.854 6.17552e-15 250 418.552 ]ct
clp
/6 /Gradient get_res exec grestore
}if
np
228.964 365.269 mo
228.963 365.269 li
226.774 365.269 li
226.773 365.269 li
225.818 365.184 225.152 364.992 225.152 364.768 cv
225.152 364.466 226.368 364.221 227.869 364.221 cv
229.369 364.221 230.586 364.466 230.586 364.768 cv
230.586 364.992 229.919 365.184 228.964 365.269 cv
level3{
gsave
clp
[6.17552e-15 -100.854 100.854 6.17552e-15 250 418.552 ]ct
/6 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[6.17552e-15 -100.854 100.854 6.17552e-15 250 418.552 ]ct
clp
/6 /Gradient get_res exec grestore
}if
np
227.869 339.552 mo
226.368 339.552 225.152 339.307 225.152 339.005 cv
225.152 338.703 226.368 338.458 227.869 338.458 cv
229.369 338.458 230.586 338.703 230.586 339.005 cv
230.586 339.307 229.369 339.552 227.869 339.552 cv
level3{
gsave
clp
[6.17552e-15 -100.854 100.854 6.17552e-15 250 418.552 ]ct
/6 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[6.17552e-15 -100.854 100.854 6.17552e-15 250 418.552 ]ct
clp
/6 /Gradient get_res exec grestore
}if
np
262.553 349.111 mo
261.052 349.111 259.836 348.866 259.836 348.564 cv
259.836 348.262 261.052 348.017 262.553 348.017 cv
264.053 348.017 265.27 348.262 265.27 348.564 cv
265.27 348.866 264.053 349.111 262.553 349.111 cv
level3{
gsave
clp
[6.17552e-15 -100.854 100.854 6.17552e-15 250 418.552 ]ct
/6 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[6.17552e-15 -100.854 100.854 6.17552e-15 250 418.552 ]ct
clp
/6 /Gradient get_res exec grestore
}if
np
grestore
gsave
267.191 365.269 mo
322.276 365.269 li
322.276 313.742 li
267.191 313.742 li
267.191 365.269 li
clp
303.395 354.145 mo
302.308 354.145 301.313 354.065 300.549 353.933 cv
306.242 353.933 li
305.477 354.065 304.483 354.145 303.395 354.145 cv
level3{
gsave
clp
[6.17552e-15 -100.854 100.854 6.17552e-15 250 418.552 ]ct
/6 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[6.17552e-15 -100.854 100.854 6.17552e-15 250 418.552 ]ct
clp
/6 /Gradient get_res exec grestore
}if
np
284.05 365.269 mo
284.048 365.269 li
281.859 365.269 li
281.858 365.269 li
280.904 365.184 280.237 364.992 280.237 364.768 cv
280.237 364.466 281.453 364.221 282.954 364.221 cv
284.454 364.221 285.671 364.466 285.671 364.768 cv
285.671 364.992 285.004 365.184 284.05 365.269 cv
level3{
gsave
clp
[6.17552e-15 -100.854 100.854 6.17552e-15 250 418.552 ]ct
/6 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[6.17552e-15 -100.854 100.854 6.17552e-15 250 418.552 ]ct
clp
/6 /Gradient get_res exec grestore
}if
np
282.954 339.552 mo
281.453 339.552 280.237 339.307 280.237 339.005 cv
280.237 338.703 281.453 338.458 282.954 338.458 cv
284.454 338.458 285.671 338.703 285.671 339.005 cv
285.671 339.307 284.454 339.552 282.954 339.552 cv
level3{
gsave
clp
[6.17552e-15 -100.854 100.854 6.17552e-15 250 418.552 ]ct
/6 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[6.17552e-15 -100.854 100.854 6.17552e-15 250 418.552 ]ct
clp
/6 /Gradient get_res exec grestore
}if
np
317.638 349.111 mo
316.137 349.111 314.921 348.866 314.921 348.564 cv
314.921 348.262 316.137 348.017 317.638 348.017 cv
319.138 348.017 320.355 348.262 320.355 348.564 cv
320.355 348.866 319.138 349.111 317.638 349.111 cv
level3{
gsave
clp
[6.17552e-15 -100.854 100.854 6.17552e-15 250 418.552 ]ct
/6 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[6.17552e-15 -100.854 100.854 6.17552e-15 250 418.552 ]ct
clp
/6 /Gradient get_res exec grestore
}if
np
grestore
gsave
322.276 365.269 mo
377.361 365.269 li
377.361 313.742 li
322.276 313.742 li
322.276 365.269 li
clp
339.135 365.269 mo
339.133 365.269 li
336.944 365.269 li
336.943 365.269 li
335.989 365.184 335.322 364.992 335.322 364.768 cv
335.322 364.466 336.538 364.221 338.039 364.221 cv
339.54 364.221 340.756 364.466 340.756 364.768 cv
340.756 364.992 340.089 365.184 339.135 365.269 cv
level3{
gsave
clp
[6.17552e-15 -100.854 100.854 6.17552e-15 250 418.552 ]ct
/6 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[6.17552e-15 -100.854 100.854 6.17552e-15 250 418.552 ]ct
clp
/6 /Gradient get_res exec grestore
}if
np
338.039 339.552 mo
336.538 339.552 335.322 339.307 335.322 339.005 cv
335.322 338.703 336.538 338.458 338.039 338.458 cv
339.54 338.458 340.756 338.703 340.756 339.005 cv
340.756 339.307 339.54 339.552 338.039 339.552 cv
level3{
gsave
clp
[6.17552e-15 -100.854 100.854 6.17552e-15 250 418.552 ]ct
/6 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[6.17552e-15 -100.854 100.854 6.17552e-15 250 418.552 ]ct
clp
/6 /Gradient get_res exec grestore
}if
np
372.723 349.111 mo
371.222 349.111 370.006 348.866 370.006 348.564 cv
370.006 348.262 371.222 348.017 372.723 348.017 cv
374.223 348.017 375.44 348.262 375.44 348.564 cv
375.44 348.866 374.223 349.111 372.723 349.111 cv
level3{
gsave
clp
[6.17552e-15 -100.854 100.854 6.17552e-15 250 418.552 ]ct
/6 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[6.17552e-15 -100.854 100.854 6.17552e-15 250 418.552 ]ct
clp
/6 /Gradient get_res exec grestore
}if
np
grestore
gsave
377.361 365.269 mo
432.447 365.269 li
432.447 313.742 li
377.361 313.742 li
377.361 365.269 li
clp
413.565 354.145 mo
412.478 354.145 411.483 354.065 410.719 353.933 cv
415.94 353.933 li
416.681 353.933 417.341 353.571 417.753 353.016 cv
417.869 353.095 417.932 353.179 417.932 353.266 cv
417.932 353.752 415.977 354.145 413.565 354.145 cv
level3{
gsave
clp
[6.17552e-15 -100.854 100.854 6.17552e-15 250 418.552 ]ct
/6 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[6.17552e-15 -100.854 100.854 6.17552e-15 250 418.552 ]ct
clp
/6 /Gradient get_res exec grestore
}if
np
394.22 365.269 mo
394.219 365.269 li
392.03 365.269 li
392.028 365.269 li
391.074 365.184 390.407 364.992 390.407 364.768 cv
390.407 364.466 391.624 364.221 393.124 364.221 cv
394.625 364.221 395.841 364.466 395.841 364.768 cv
395.841 364.992 395.174 365.184 394.22 365.269 cv
level3{
gsave
clp
[6.17552e-15 -100.854 100.854 6.17552e-15 250 418.552 ]ct
/6 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[6.17552e-15 -100.854 100.854 6.17552e-15 250 418.552 ]ct
clp
/6 /Gradient get_res exec grestore
}if
np
413.565 328.382 mo
412.941 328.382 412.347 328.355 411.81 328.308 cv
415.321 328.308 li
414.784 328.355 414.19 328.382 413.565 328.382 cv
level3{
gsave
clp
[6.17552e-15 -100.854 100.854 6.17552e-15 250 418.552 ]ct
/6 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[6.17552e-15 -100.854 100.854 6.17552e-15 250 418.552 ]ct
clp
/6 /Gradient get_res exec grestore
}if
np
393.124 339.552 mo
391.624 339.552 390.407 339.307 390.407 339.005 cv
390.407 338.703 391.624 338.458 393.124 338.458 cv
394.625 338.458 395.841 338.703 395.841 339.005 cv
395.841 339.307 394.625 339.552 393.124 339.552 cv
level3{
gsave
clp
[6.17552e-15 -100.854 100.854 6.17552e-15 250 418.552 ]ct
/6 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[6.17552e-15 -100.854 100.854 6.17552e-15 250 418.552 ]ct
clp
/6 /Gradient get_res exec grestore
}if
np
427.808 349.111 mo
426.307 349.111 425.091 348.866 425.091 348.564 cv
425.091 348.262 426.307 348.017 427.808 348.017 cv
429.308 348.017 430.525 348.262 430.525 348.564 cv
430.525 348.866 429.308 349.111 427.808 349.111 cv
level3{
gsave
clp
[6.17552e-15 -100.854 100.854 6.17552e-15 250 418.552 ]ct
/6 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[6.17552e-15 -100.854 100.854 6.17552e-15 250 418.552 ]ct
clp
/6 /Gradient get_res exec grestore
}if
np
grestore
gsave
432.447 365.269 mo
487.532 365.269 li
487.532 313.742 li
432.447 313.742 li
432.447 365.269 li
clp
468.651 354.145 mo
466.239 354.145 464.284 353.752 464.284 353.266 cv
464.284 352.781 466.239 352.387 468.651 352.387 cv
471.062 352.387 473.017 352.781 473.017 353.266 cv
473.017 353.752 471.062 354.145 468.651 354.145 cv
level3{
gsave
clp
[6.17552e-15 -100.854 100.854 6.17552e-15 250 418.552 ]ct
/6 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[6.17552e-15 -100.854 100.854 6.17552e-15 250 418.552 ]ct
clp
/6 /Gradient get_res exec grestore
}if
np
449.305 365.269 mo
449.304 365.269 li
447.115 365.269 li
447.113 365.269 li
446.159 365.184 445.492 364.992 445.492 364.768 cv
445.492 364.466 446.709 364.221 448.209 364.221 cv
449.71 364.221 450.926 364.466 450.926 364.768 cv
450.926 364.992 450.26 365.184 449.305 365.269 cv
level3{
gsave
clp
[6.17552e-15 -100.854 100.854 6.17552e-15 250 418.552 ]ct
/6 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[6.17552e-15 -100.854 100.854 6.17552e-15 250 418.552 ]ct
clp
/6 /Gradient get_res exec grestore
}if
np
468.651 328.382 mo
468.026 328.382 467.432 328.355 466.895 328.308 cv
470.406 328.308 li
469.869 328.355 469.275 328.382 468.651 328.382 cv
level3{
gsave
clp
[6.17552e-15 -100.854 100.854 6.17552e-15 250 418.552 ]ct
/6 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[6.17552e-15 -100.854 100.854 6.17552e-15 250 418.552 ]ct
clp
/6 /Gradient get_res exec grestore
}if
np
448.209 339.552 mo
446.709 339.552 445.492 339.307 445.492 339.005 cv
445.492 338.703 446.709 338.458 448.209 338.458 cv
449.71 338.458 450.926 338.703 450.926 339.005 cv
450.926 339.307 449.71 339.552 448.209 339.552 cv
level3{
gsave
clp
[6.17552e-15 -100.854 100.854 6.17552e-15 250 418.552 ]ct
/6 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[6.17552e-15 -100.854 100.854 6.17552e-15 250 418.552 ]ct
clp
/6 /Gradient get_res exec grestore
}if
np
482.893 349.111 mo
481.393 349.111 480.176 348.866 480.176 348.564 cv
480.176 348.262 481.393 348.017 482.893 348.017 cv
483.079 348.017 483.26 348.021 483.436 348.028 cv
483.436 349.1 li
483.26 349.107 483.079 349.111 482.893 349.111 cv
level3{
gsave
clp
[6.17552e-15 -100.854 100.854 6.17552e-15 250 418.552 ]ct
/6 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[6.17552e-15 -100.854 100.854 6.17552e-15 250 418.552 ]ct
clp
/6 /Gradient get_res exec grestore
}if
np
grestore
grestore
424.446 181.035 mo
416.385 181.035 li
415.617 186.689 li
425.214 186.689 li
424.446 181.035 li
cp
.771847 .22327 .286503 .00164797 cmyk
f
424.446 181.035 mo
416.385 181.035 li
416.385 176.684 li
424.446 176.684 li
424.446 181.035 li
cp
f
425.466 164.826 mo
415.365 164.826 li
415.365 176.684 li
425.466 176.684 li
425.466 164.826 li
cp
f
416.067 164.187 mo
416.618 158.333 li
416.781 156.613 li
417.473 149.281 li
417.619 147.729 li
418.169 141.892 li
418.322 140.249 li
418.507 138.293 li
422.323 138.293 li
422.341 138.49 li
422.835 143.727 li
422.922 144.664 li
422.935 144.776 li
423.011 145.613 li
423.554 151.367 li
423.638 152.26 li
423.644 152.316 li
423.726 153.171 li
424.583 162.288 li
424.672 163.239 li
424.762 164.187 li
416.067 164.187 li
cp
424.941 152.408 mo
424.902 152.017 li
424.234 144.932 li
424.196 144.52 li
423.49 137.014 li
417.342 137.014 li
416.95 141.163 li
416.95 141.18 li
416.262 148.485 li
416.241 148.687 li
415.415 157.466 li
415.404 157.594 li
414.662 165.466 li
426.17 165.466 li
424.941 152.408 li
cp
f
416.257 318.316 mo
416.387 318.517 li
424.574 313.215 li
424.574 324.633 li
416.257 324.633 li
416.257 318.316 li
cp
423.563 312.345 mo
416.257 317.076 li
416.257 307.613 li
423.563 312.345 li
cp
416.257 296.345 mo
423.563 301.075 li
416.257 305.806 li
416.257 296.345 li
cp
416.257 285.077 mo
423.563 289.808 li
416.257 294.538 li
416.257 285.077 li
cp
416.257 273.811 mo
423.563 278.54 li
416.257 283.271 li
416.257 273.811 li
cp
416.257 262.545 mo
423.563 267.275 li
416.257 272.004 li
416.257 262.545 li
cp
416.257 251.279 mo
423.563 256.009 li
416.257 260.738 li
416.257 251.279 li
cp
416.257 240.013 mo
423.563 244.743 li
416.257 249.473 li
416.257 240.013 li
cp
416.257 228.747 mo
423.563 233.477 li
416.257 238.207 li
416.257 228.747 li
cp
416.257 217.481 mo
423.563 222.21 li
416.257 226.94 li
416.257 217.481 li
cp
416.257 206.216 mo
423.563 210.945 li
416.257 215.674 li
416.257 206.216 li
cp
416.257 194.951 mo
423.563 199.68 li
416.257 204.409 li
416.257 194.951 li
cp
416.257 187.33 mo
424.574 187.33 li
424.574 188.158 li
424.393 187.877 li
416.257 193.144 li
416.257 187.33 li
cp
424.574 198.811 mo
417.216 194.047 li
424.574 189.284 li
424.574 198.811 li
cp
424.574 210.076 mo
417.216 205.313 li
424.574 200.55 li
424.574 210.076 li
cp
424.574 221.34 mo
417.216 216.578 li
424.574 211.815 li
424.574 221.34 li
cp
424.574 232.607 mo
417.216 227.843 li
424.574 223.08 li
424.574 232.607 li
cp
424.574 243.873 mo
417.216 239.11 li
424.574 234.347 li
424.574 243.873 li
cp
424.574 255.14 mo
417.216 250.376 li
424.574 245.613 li
424.574 255.14 li
cp
424.574 266.405 mo
417.216 261.642 li
424.574 256.879 li
424.574 266.405 li
cp
424.574 277.671 mo
417.216 272.907 li
424.574 268.145 li
424.574 277.671 li
cp
424.574 288.938 mo
417.216 284.174 li
424.574 279.41 li
424.574 288.938 li
cp
424.574 300.205 mo
417.216 295.441 li
424.574 290.678 li
424.574 300.205 li
cp
424.574 311.475 mo
417.216 306.709 li
424.574 301.945 li
424.574 311.475 li
cp
425.854 324.633 mo
425.854 312.386 li
425.918 312.345 li
425.854 312.304 li
425.854 301.117 li
425.918 301.075 li
425.854 301.034 li
425.854 289.849 li
425.918 289.808 li
425.854 289.767 li
425.854 278.582 li
425.918 278.54 li
425.854 278.499 li
425.854 267.316 li
425.918 267.275 li
425.854 267.233 li
425.854 256.051 li
425.918 256.009 li
425.854 255.968 li
425.854 244.784 li
425.918 244.743 li
425.854 244.701 li
425.854 233.518 li
425.918 233.477 li
425.854 233.435 li
425.854 222.251 li
425.918 222.21 li
425.854 222.169 li
425.854 210.987 li
425.918 210.945 li
425.854 210.904 li
425.854 199.722 li
425.918 199.68 li
425.854 199.639 li
425.854 186.05 li
414.978 186.05 li
414.978 193.972 li
414.861 194.047 li
414.978 194.122 li
414.978 205.238 li
414.861 205.313 li
414.978 205.388 li
414.978 216.502 li
414.861 216.578 li
414.978 216.653 li
414.978 227.768 li
414.861 227.843 li
414.978 227.918 li
414.978 239.035 li
414.861 239.11 li
414.978 239.185 li
414.978 250.301 li
414.861 250.376 li
414.978 250.451 li
414.978 261.566 li
414.861 261.642 li
414.978 261.717 li
414.978 272.832 li
414.861 272.907 li
414.978 272.982 li
414.978 284.099 li
414.861 284.174 li
414.978 284.249 li
414.978 295.366 li
414.861 295.441 li
414.978 295.517 li
414.978 306.635 li
414.861 306.709 li
414.978 306.784 li
414.978 324.633 li
409.138 324.633 li
409.138 334.742 li
431.693 334.742 li
431.693 324.633 li
425.854 324.633 li
cp
f
232.678 156.613 mo
236.909 156.613 li
230.577 164.703 li
230.868 164.931 li
228.685 164.931 li
232.678 156.613 li
cp
401.321 157.434 mo
407.188 164.931 li
395.455 164.931 li
401.321 157.434 li
cp
388.688 156.613 mo
400.338 156.613 li
394.513 164.059 li
388.688 156.613 li
cp
387.704 157.434 mo
393.57 164.931 li
381.838 164.931 li
387.704 157.434 li
cp
375.069 156.613 mo
386.721 156.613 li
380.896 164.059 li
375.069 156.613 li
cp
374.086 157.434 mo
379.953 164.931 li
368.22 164.931 li
374.086 157.434 li
cp
361.451 156.613 mo
373.103 156.613 li
367.277 164.059 li
361.451 156.613 li
cp
360.468 157.434 mo
366.334 164.931 li
354.602 164.931 li
360.468 157.434 li
cp
347.833 156.613 mo
359.484 156.613 li
353.659 164.059 li
347.833 156.613 li
cp
346.85 157.434 mo
352.717 164.931 li
340.983 164.931 li
346.85 157.434 li
cp
334.214 156.613 mo
345.867 156.613 li
340.041 164.059 li
334.214 156.613 li
cp
333.231 157.434 mo
339.099 164.931 li
327.364 164.931 li
333.231 157.434 li
cp
320.596 156.613 mo
332.248 156.613 li
326.422 164.059 li
320.596 156.613 li
cp
319.612 157.434 mo
325.479 164.931 li
313.745 164.931 li
319.612 157.434 li
cp
306.976 156.613 mo
318.629 156.613 li
312.803 164.059 li
306.976 156.613 li
cp
305.993 157.434 mo
311.86 164.931 li
300.126 164.931 li
305.993 157.434 li
cp
293.357 156.613 mo
305.01 156.613 li
299.183 164.059 li
293.357 156.613 li
cp
292.374 157.434 mo
298.241 164.931 li
286.507 164.931 li
292.374 157.434 li
cp
279.738 156.613 mo
291.39 156.613 li
285.564 164.059 li
279.738 156.613 li
cp
278.755 157.434 mo
284.622 164.931 li
272.888 164.931 li
278.755 157.434 li
cp
266.119 156.613 mo
277.772 156.613 li
271.946 164.059 li
266.119 156.613 li
cp
265.135 157.434 mo
271.003 164.931 li
259.268 164.931 li
265.135 157.434 li
cp
252.498 156.613 mo
264.152 156.613 li
258.325 164.059 li
252.498 156.613 li
cp
251.515 157.433 mo
257.382 164.931 li
245.646 164.931 li
251.515 157.433 li
cp
238.875 156.613 mo
250.531 156.613 li
244.704 164.059 li
238.875 156.613 li
cp
243.761 164.931 mo
232.023 164.931 li
237.892 157.433 li
243.761 164.931 li
cp
413.778 164.931 mo
408.342 164.931 li
408.634 164.703 li
402.305 156.613 li
408.232 156.613 li
413.778 164.931 li
cp
408.917 155.334 mo
231.872 155.334 li
226.651 166.211 li
416.169 166.211 li
408.917 155.334 li
cp
f
422.207 137.44 mo
418.624 137.44 li
418.624 132.492 li
418.624 131.502 419.426 130.7 420.416 130.7 cv
421.405 130.7 422.207 131.502 422.207 132.492 cv
422.207 137.44 li
cp
f
483.436 166.063 mo
415.484 166.063 li
415.484 163.119 li
483.436 163.119 li
483.436 166.063 li
cp
f
477.037 173.229 mo
462.448 173.229 li
462.448 158.384 li
477.037 158.384 li
477.037 173.229 li
cp
f
456.69 163.418 mo
446.58 163.418 li
446.58 158.171 li
456.69 158.171 li
456.69 163.418 li
cp
f
316.619 155.563 mo
316.508 155.063 li
418.568 132.242 li
418.68 132.742 li
316.619 155.563 li
cp
f
363.752 155.807 mo
363.562 155.332 li
418.332 133.321 li
418.522 133.796 li
363.752 155.807 li
cp
f
471.318 159.218 mo
422.086 132.718 li
422.328 132.266 li
471.56 158.767 li
471.318 159.218 li
cp
f
454.27 158.665 mo
421.855 134.018 li
422.165 133.61 li
454.578 158.256 li
454.27 158.665 li
cp
f
290.714 178.092 mo
268.412 178.092 228 165.939 227.594 165.816 cv
227.742 165.326 li
228.147 165.449 268.487 177.58 290.714 177.58 cv
313.251 177.58 345.988 173.462 362.269 165.831 cv
362.485 166.294 li
346.139 173.957 313.307 178.092 290.714 178.092 cv
cp
f
371.91 168.43 mo
363.849 168.43 li
363.849 165.487 li
371.91 165.487 li
371.91 168.43 li
cp
f
366.469 206.073 mo
369.29 206.073 li
369.796 168.282 li
365.963 168.282 li
366.469 206.073 li
cp
369.796 206.585 mo
365.963 206.585 li
365.908 202.473 li
365.444 167.77 li
370.314 167.77 li
369.796 206.585 li
cp
f
369.595 202.47 mo
369.543 206.329 li
366.216 206.329 li
366.165 202.47 li
369.595 202.47 li
cp
f
367.671 209.418 mo
366.781 209.418 366.058 208.695 366.058 207.805 cv
366.058 207.674 366.163 207.568 366.294 207.568 cv
366.424 207.568 366.529 207.674 366.529 207.805 cv
366.529 208.434 367.042 208.946 367.671 208.946 cv
368.301 208.946 368.813 208.434 368.813 207.805 cv
368.813 207.175 368.301 206.663 367.671 206.663 cv
367.541 206.663 367.436 206.558 367.436 206.427 cv
367.436 206.296 367.541 206.191 367.671 206.191 cv
368.562 206.191 369.285 206.915 369.285 207.805 cv
369.285 208.695 368.562 209.418 367.671 209.418 cv
cp
f
424.196 144.521 mo
422.835 143.727 li
418.384 141.129 li
422.341 138.49 li
423.119 137.973 li
422.694 137.333 li
421.256 138.293 li
418.322 140.249 li
416.95 141.163 li
416.936 141.172 li
416.95 141.18 li
418.169 141.892 li
422.922 144.664 li
423.026 144.725 li
422.935 144.776 li
417.618 147.729 li
416.262 148.485 li
416.058 148.597 li
416.241 148.687 li
417.473 149.281 li
423.638 152.26 li
423.692 152.285 li
423.644 152.316 li
416.781 156.613 li
415.415 157.466 li
415.308 157.535 li
415.404 157.594 li
416.618 158.333 li
424.672 163.239 li
425.223 163.575 li
425.622 162.919 li
424.583 162.288 li
416.769 157.527 li
423.726 153.171 li
424.941 152.408 li
424.902 152.017 li
423.554 151.367 li
417.727 148.549 li
423.011 145.613 li
424.234 144.932 li
424.196 144.521 li
cp
f
.0154421 .00189212 .00241093 0 cmyk
%ADOBeginSubsetFont: FiraSans-Light Initial
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2019 Adobe System Incorporated. All rights reserved.
12 dict dup begin
/FontType 1 def
/FontName /FiraSans-Light def
/FontInfo 7 dict dup begin
/Notice (Digitized data copyright 2012-2016, The Mozilla Foundation and Telefonica S.A.) def
/Weight (Light) def
/ItalicAngle 0 def
/FSType 0 def
end def
/PaintType 0 def
/FontMatrix [0.001 0 0 0.001 0 0] def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 32 /space put
dup 98 /b put
dup 99 /c put
dup 100 /d put
dup 101 /e put
dup 105 /i put
dup 110 /n put
dup 111 /o put
dup 114 /r put
dup 115 /s put
dup 116 /t put
dup 117 /u put
dup 119 /w put
def
/FontBBox {-167 -350 1360 1057} def
end
systemdict begin
dup /Private
16 dict dup begin
/|- {def} def
/| {put} def
/BlueValues [-13 -0 523 536 562 575 685 698 736 749] def
/OtherBlues [-210 -197] def
/FamilyBlues [-14 -0 564 578 689 703 739 753] def
/FamilyOtherBlues [-216 -202] def
/BlueScale 0.037 def
/BlueFuzz 0 def
/StdHW [49] def
/StdVW [58] def
/StemSnapH [49] def
/StemSnapV [58] def
/password 5839 def
/MinFeature {16 16} def
/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869
systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup
/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def
/Subrs 5 array
dup 0 <1C60D8A8CC31FE2BF6E07AA3E541E2> |
dup 1 <1C60D8A8C9C3D06D9E> |
dup 2 <1C60D8A8C9C202D79A> |
dup 3 <1C60D8A849> |
dup 4 <1C60D8A8CC3674F41144B13B77> |
def
put
dup /CharStrings
14 dict dup begin
/space <1C60D8A8C9B855A1B9> |-
/b <1C60D8A8C9B7F6E925F2C9A9D9E8A54835AB5B9D5E28E9DA8AC53913347D
89B651E47BC157CEF51584F5E9D0E4923CF961238B83B6CE7C12EA3659ABB38C
93821D1C6C4948C6DDAD1D3C78B634E66A80FA55AB529FB9765F0C1D13682874
EEA77FD3E9233EF336AAC1CE17E81C48ED02161B7225798A16309A468C7E91D3
2CB36D9FAD866C3D8493EA80293AFC5FED36CF3A694495> |-
/c <1C60D8A8C9B746F4DC0115F919F1C558D92BF8BDC375EDAFDA9AC5402B7E
F53286545899CFB0927CD90738299023DA6AE8F56CC278CDEDAFADD971ABBFCE
22A312C275C5236C265C5978115B10F72664E737490B90CC> |-
/d <1C60D8A8C9B7F2A7849A7D617DEC806A52D1B0F9CE2A19333ECC531C5AF1
7DD0694E2D9A60F3149F7456A65C717F2AF943B76AC70131CCD7B6520671FD74
AD6441B2401C883BC9F8F9792F17B712B5F7F954F24F6829AF12A2C02B17865D
630B3E9B0CC70B607217C365FE2E560E3CA8A462AC831AA4F215996EE2E95656
DDF5BF63761B9D153E6D205410D3CFEFDA3AC744630FB306> |-
/e <1C60D8A8C9B78324EEF80EE2E00EED41BD98BC4E2A1A745CC9F883017D7D
6C1F7115270387A297A1EF6CC2440093E232B2A8BB87876140EC6B71E11D83AA
548217ED98B075F1EE95C23F5FBA0D0CC20BC2EE0B4F7CA3F460CB84C806D948
9011C585AAD62467C1E9C76740A6D1FB29> |-
/i <1C60D8A8C9B85C5CED0A3E59B6D165F0DD957E191475500A6E9F159BB170
F2981EB204C13D9DD9D385DCBD1B3EBBE15AC68D6F4789DF8D8E65373901C461
94A6B2B35DC7BA02FB9228D5C94355> |-
/n <1C60D8A8C9B7F374DE58F5A49359D20EC85E33D62FA9CF0C16AFC68A91EA
6BB7CC96016D0885E8CFC9C95C93646F9651E8BBC3E2B0973E4D169470B1882D
B4A996211586CA26ECAB576DD76B4D1955749D7295D6320DE8550AE769BA5B9B
5C040E9469C3A63027EDEE28> |-
/o <1C60D8A8C9B7E02ADD8744D0A4215C7BCF312058B9BB47394C1F0957DED6
21F59CCE9581D7F1342F288C7152FFB8037F5A0CE3C1A49255078B310E74CAA9
12C74952A2C394D6CE8E68B0DB6F94BEE56486CD7259> |-
/r <1C60D8A8C9B72626531911858C709CDC5C8652E808CB6F9642CAF5F98D44
35D2C641FF4F4E368C480E3B1374345D196314B74573AE6154816D8F13B530AA
FCC0E3214A519A70709202C9684CA586003988EE5057B38FE5543C34CDAA87AD
FF718DB6AFF4EB6AE3B23E023D96E83FAC71478DF0AA8B2B> |-
/s <1C60D8A8C9B74B0CCD5B13189FC45002662E897A93CBBF711E8D0DC83F44
2EF2B938D0DCFEAA0195ED9569FA89C118CCAD0B1EB9425E81B24D93B2F26BEA
86AB8E3220B6482F16C2C4F2F1D63324312BAA4F80E0C304A393867B72B993B6
3DFA7EEDD7DDA3BCD5C1AB762DDE061A1BE9E8D7> |-
/t <1C60D8A8C9B817A003C9FE0A94DA9BAABA68310E24B07A643CD2E650629E
DB907F5C33C35F76976CF159F8FBBCAD562667024001731B2BA5D952CD56CB70
E2F60BC6CA1121BD473B3E740A5E48E8> |-
/u <1C60D8A8C9B7F88C5CBFC400E0486343061763881E2A78ACBD104D4E1725
A5A3EC2D033C0FD9C31B642191BC0B893B0D4650D8701C11B8F5A7C47BAFB382
E18E150FA9FECF07A4414ED724EA8325DD3DEBBCF1FFA4A971> |-
/w <1C60D8A8C9B62FDE09D4884E53BEF348E204432FD0AEADFF2F4786DCD88F
71CE29095E4DBCBCC61042B1A64AE84CA5D1813755F716491DD82EE827F8275C
915CAE14498A13EA2E> |-
/.notdef <1C60D8A8C9B64FADB619E309546AF58CE0C708D6A2D4DA16668C7F
2D4A1D078EC9DE64A936E6FEA4D83073AAEF119EC88636B96A49D19F6F1657B2
5E59E7A3800CD9A4C80D13A0997606698B69F1F3642D79B44EC413EB245DB0AD
18F8791EFB72BCE43C206E058EA180575C5C1EA0C4823EB9952077B7037B4128
42976C96CC34315953461D2FBA77C06212EA6552F5C0B7995373926B6B5EDBD7
4EA4C57A47466BF878A5C57562BD65CAB62491DAE7FBF318BBAEF2FF9B165CF1
7EADD8E1B00F6E3930FA87A8B1308A8F39> |-
end put
end
dup /FontName get exch definefont pop
end
%ADOEndSubsetFont
/RCGASP+FiraSans-Light /FiraSans-Light findfont ct_VMDictPut
/RCGASP+FiraSans-Light*1 
[32{/.notdef}rp /space 65{/.notdef}rp /b /c /d /e 3{/.notdef}rp 
/i 4{/.notdef}rp /n /o 2{/.notdef}rp /r /s /t 
/u /.notdef /w 136{/.notdef}rp]
RCGASP+FiraSans-Light nf
RCGASP+FiraSans-Light*1 [23.4458 0 0 -23.4458 0 0 ]msf
59.939 154.546 mo
(web)sh
102.493 154.546 mo
(sit)sh
127.415 154.546 mo
(e is)sh
59.939 182.681 mo
(under)
[13.5752 13.6924 13.7153 12.5669 0 ]xsh
59.939 210.815 mo
(construction)
[10.5977 13.3877 13.6924 10.8784 7.99463 8.74512 13.5752 10.9961 7.99463 6.33008 13.3877 0 
]xsh
397.619 337.165 mo
222.503 337.165 li
218.541 337.165 215.329 333.952 215.329 329.99 cv
215.329 226.27 li
215.329 222.307 218.541 219.095 222.503 219.095 cv
397.619 219.095 li
401.581 219.095 404.794 222.307 404.794 226.27 cv
404.794 329.99 li
404.794 333.952 401.581 337.165 397.619 337.165 cv
.847105 .373083 .380194 .0636301 cmyk
f
222.503 219.595 mo
218.823 219.595 215.829 222.589 215.829 226.27 cv
215.829 329.99 li
215.829 333.671 218.823 336.665 222.503 336.665 cv
397.619 336.665 li
401.3 336.665 404.294 333.671 404.294 329.99 cv
404.294 226.27 li
404.294 222.589 401.3 219.595 397.619 219.595 cv
222.503 219.595 li
397.619 337.665 mo
222.503 337.665 li
218.272 337.665 214.829 334.222 214.829 329.99 cv
214.829 226.27 li
214.829 222.038 218.272 218.595 222.503 218.595 cv
397.619 218.595 li
401.851 218.595 405.294 222.038 405.294 226.27 cv
405.294 329.99 li
405.294 334.222 401.851 337.665 397.619 337.665 cv
.874845 .41709 .464149 .143343 cmyk
f
399.618 233.469 mo
399.618 331.987 li
220.505 331.987 li
220.505 233.469 li
399.618 233.469 li
.0154421 .00189212 .00241093 0 cmyk
f
270.35 324.351 mo
228.163 324.351 li
228.163 240.45 li
270.35 240.45 li
270.35 324.351 li
.0919814 .0401617 .0409552 0 cmyk
f
249.256 320.562 mo
232.741 320.562 li
232.741 304.046 li
249.256 304.046 li
249.256 320.562 li
.0154421 .00189212 .00241093 0 cmyk
f
379.946 246.668 mo
329.977 246.668 li
329.977 240.45 li
379.946 240.45 li
379.946 246.668 li
.0919814 .0401617 .0409552 0 cmyk
f
321.256 275.565 mo
279.07 275.565 li
279.07 240.45 li
321.256 240.45 li
321.256 275.565 li
cp
f
287.084 246.307 mo
287.084 247.446 286.162 248.369 285.022 248.369 cv
283.883 248.369 282.96 247.446 282.96 246.307 cv
282.96 245.167 283.883 244.244 285.022 244.244 cv
286.162 244.244 287.084 245.167 287.084 246.307 cv
cp
.0154421 .00189212 .00241093 0 cmyk
f
294.655 246.307 mo
294.655 247.446 293.731 248.369 292.593 248.369 cv
291.454 248.369 290.53 247.446 290.53 246.307 cv
290.53 245.167 291.454 244.244 292.593 244.244 cv
293.731 244.244 294.655 245.167 294.655 246.307 cv
cp
f
302.225 246.307 mo
302.225 247.446 301.302 248.369 300.163 248.369 cv
299.024 248.369 298.101 247.446 298.101 246.307 cv
298.101 245.167 299.024 244.244 300.163 244.244 cv
301.302 244.244 302.225 245.167 302.225 246.307 cv
cp
f
309.795 246.307 mo
309.795 247.446 308.872 248.369 307.733 248.369 cv
306.594 248.369 305.671 247.446 305.671 246.307 cv
305.671 245.167 306.594 244.244 307.733 244.244 cv
308.872 244.244 309.795 245.167 309.795 246.307 cv
cp
f
317.365 246.307 mo
317.365 247.446 316.442 248.369 315.304 248.369 cv
314.164 248.369 313.241 247.446 313.241 246.307 cv
313.241 245.167 314.164 244.244 315.304 244.244 cv
316.442 244.244 317.365 245.167 317.365 246.307 cv
cp
f
287.084 261.908 mo
287.084 263.047 286.162 263.97 285.022 263.97 cv
283.883 263.97 282.96 263.047 282.96 261.908 cv
282.96 260.769 283.883 259.846 285.022 259.846 cv
286.162 259.846 287.084 260.769 287.084 261.908 cv
cp
f
294.655 261.908 mo
294.655 263.047 293.731 263.97 292.593 263.97 cv
291.454 263.97 290.53 263.047 290.53 261.908 cv
290.53 260.769 291.454 259.846 292.593 259.846 cv
293.731 259.846 294.655 260.769 294.655 261.908 cv
cp
f
302.225 261.908 mo
302.225 263.047 301.302 263.97 300.163 263.97 cv
299.024 263.97 298.101 263.047 298.101 261.908 cv
298.101 260.769 299.024 259.846 300.163 259.846 cv
301.302 259.846 302.225 260.769 302.225 261.908 cv
cp
f
309.795 261.908 mo
309.795 263.047 308.872 263.97 307.733 263.97 cv
306.594 263.97 305.671 263.047 305.671 261.908 cv
305.671 260.769 306.594 259.846 307.733 259.846 cv
308.872 259.846 309.795 260.769 309.795 261.908 cv
cp
f
317.365 261.908 mo
317.365 263.047 316.442 263.97 315.304 263.97 cv
314.164 263.97 313.241 263.047 313.241 261.908 cv
313.241 260.769 314.164 259.846 315.304 259.846 cv
316.442 259.846 317.365 260.769 317.365 261.908 cv
cp
f
287.084 254.107 mo
287.084 255.246 286.162 256.17 285.022 256.17 cv
283.883 256.17 282.96 255.246 282.96 254.107 cv
282.96 252.968 283.883 252.045 285.022 252.045 cv
286.162 252.045 287.084 252.968 287.084 254.107 cv
cp
f
294.655 254.107 mo
294.655 255.246 293.731 256.17 292.593 256.17 cv
291.454 256.17 290.53 255.246 290.53 254.107 cv
290.53 252.968 291.454 252.045 292.593 252.045 cv
293.731 252.045 294.655 252.968 294.655 254.107 cv
cp
f
302.225 254.107 mo
302.225 255.246 301.302 256.17 300.163 256.17 cv
299.024 256.17 298.101 255.246 298.101 254.107 cv
298.101 252.968 299.024 252.045 300.163 252.045 cv
301.302 252.045 302.225 252.968 302.225 254.107 cv
cp
f
309.795 254.107 mo
309.795 255.246 308.872 256.17 307.733 256.17 cv
306.594 256.17 305.671 255.246 305.671 254.107 cv
305.671 252.968 306.594 252.045 307.733 252.045 cv
308.872 252.045 309.795 252.968 309.795 254.107 cv
cp
f
317.365 254.107 mo
317.365 255.246 316.442 256.17 315.304 256.17 cv
314.164 256.17 313.241 255.246 313.241 254.107 cv
313.241 252.968 314.164 252.045 315.304 252.045 cv
316.442 252.045 317.365 252.968 317.365 254.107 cv
cp
f
287.084 269.708 mo
287.084 270.848 286.162 271.771 285.022 271.771 cv
283.883 271.771 282.96 270.848 282.96 269.708 cv
282.96 268.569 283.883 267.646 285.022 267.646 cv
286.162 267.646 287.084 268.569 287.084 269.708 cv
cp
f
294.655 269.708 mo
294.655 270.848 293.731 271.771 292.593 271.771 cv
291.454 271.771 290.53 270.848 290.53 269.708 cv
290.53 268.569 291.454 267.646 292.593 267.646 cv
293.731 267.646 294.655 268.569 294.655 269.708 cv
cp
f
302.225 269.708 mo
302.225 270.848 301.302 271.771 300.163 271.771 cv
299.024 271.771 298.101 270.848 298.101 269.708 cv
298.101 268.569 299.024 267.646 300.163 267.646 cv
301.302 267.646 302.225 268.569 302.225 269.708 cv
cp
f
309.795 269.708 mo
309.795 270.848 308.872 271.771 307.733 271.771 cv
306.594 271.771 305.671 270.848 305.671 269.708 cv
305.671 268.569 306.594 267.646 307.733 267.646 cv
308.872 267.646 309.795 268.569 309.795 269.708 cv
cp
f
317.365 269.708 mo
317.365 270.848 316.442 271.771 315.304 271.771 cv
314.164 271.771 313.241 270.848 313.241 269.708 cv
313.241 268.569 314.164 267.646 315.304 267.646 cv
316.442 267.646 317.365 268.569 317.365 269.708 cv
cp
f
391.96 256.144 mo
329.977 256.144 li
329.977 253.442 li
391.96 253.442 li
391.96 256.144 li
.0919814 .0401617 .0409552 0 cmyk
f
391.96 269.092 mo
329.977 269.092 li
329.977 266.391 li
391.96 266.391 li
391.96 269.092 li
f
391.96 262.617 mo
329.977 262.617 li
329.977 259.916 li
391.96 259.916 li
391.96 262.617 li
f
391.96 275.565 mo
329.977 275.565 li
329.977 272.864 li
391.96 272.864 li
391.96 275.565 li
f
379.946 295.453 mo
329.977 295.453 li
329.977 289.235 li
379.946 289.235 li
379.946 295.453 li
f
321.256 324.351 mo
279.07 324.351 li
279.07 289.235 li
321.256 289.235 li
321.256 324.351 li
cp
f
391.96 304.929 mo
329.977 304.929 li
329.977 302.228 li
391.96 302.228 li
391.96 304.929 li
f
391.96 317.877 mo
329.977 317.877 li
329.977 315.176 li
391.96 315.176 li
391.96 317.877 li
f
391.96 311.402 mo
329.977 311.402 li
329.977 308.702 li
391.96 308.702 li
391.96 311.402 li
f
391.96 324.351 mo
329.977 324.351 li
329.977 321.649 li
391.96 321.649 li
391.96 324.351 li
f
287.084 295.092 mo
287.084 296.231 286.162 297.154 285.022 297.154 cv
283.883 297.154 282.96 296.231 282.96 295.092 cv
282.96 293.953 283.883 293.029 285.022 293.029 cv
286.162 293.029 287.084 293.953 287.084 295.092 cv
cp
.0154421 .00189212 .00241093 0 cmyk
f
294.655 295.092 mo
294.655 296.231 293.731 297.154 292.593 297.154 cv
291.454 297.154 290.53 296.231 290.53 295.092 cv
290.53 293.953 291.454 293.029 292.593 293.029 cv
293.731 293.029 294.655 293.953 294.655 295.092 cv
cp
f
302.225 295.092 mo
302.225 296.231 301.302 297.154 300.163 297.154 cv
299.024 297.154 298.101 296.231 298.101 295.092 cv
298.101 293.953 299.024 293.029 300.163 293.029 cv
301.302 293.029 302.225 293.953 302.225 295.092 cv
cp
f
309.795 295.092 mo
309.795 296.231 308.872 297.154 307.733 297.154 cv
306.594 297.154 305.671 296.231 305.671 295.092 cv
305.671 293.953 306.594 293.029 307.733 293.029 cv
308.872 293.029 309.795 293.953 309.795 295.092 cv
cp
f
317.365 295.092 mo
317.365 296.231 316.442 297.154 315.304 297.154 cv
314.164 297.154 313.241 296.231 313.241 295.092 cv
313.241 293.953 314.164 293.029 315.304 293.029 cv
316.442 293.029 317.365 293.953 317.365 295.092 cv
cp
f
287.084 310.693 mo
287.084 311.832 286.162 312.756 285.022 312.756 cv
283.883 312.756 282.96 311.832 282.96 310.693 cv
282.96 309.555 283.883 308.631 285.022 308.631 cv
286.162 308.631 287.084 309.555 287.084 310.693 cv
cp
f
294.655 310.693 mo
294.655 311.832 293.731 312.756 292.593 312.756 cv
291.454 312.756 290.53 311.832 290.53 310.693 cv
290.53 309.555 291.454 308.631 292.593 308.631 cv
293.731 308.631 294.655 309.555 294.655 310.693 cv
cp
f
302.225 310.693 mo
302.225 311.832 301.302 312.756 300.163 312.756 cv
299.024 312.756 298.101 311.832 298.101 310.693 cv
298.101 309.555 299.024 308.631 300.163 308.631 cv
301.302 308.631 302.225 309.555 302.225 310.693 cv
cp
f
309.795 310.693 mo
309.795 311.832 308.872 312.756 307.733 312.756 cv
306.594 312.756 305.671 311.832 305.671 310.693 cv
305.671 309.555 306.594 308.631 307.733 308.631 cv
308.872 308.631 309.795 309.555 309.795 310.693 cv
cp
f
317.365 310.693 mo
317.365 311.832 316.442 312.756 315.304 312.756 cv
314.164 312.756 313.241 311.832 313.241 310.693 cv
313.241 309.555 314.164 308.631 315.304 308.631 cv
316.442 308.631 317.365 309.555 317.365 310.693 cv
cp
f
287.084 302.893 mo
287.084 304.031 286.162 304.955 285.022 304.955 cv
283.883 304.955 282.96 304.031 282.96 302.893 cv
282.96 301.754 283.883 300.83 285.022 300.83 cv
286.162 300.83 287.084 301.754 287.084 302.893 cv
cp
f
294.655 302.893 mo
294.655 304.031 293.731 304.955 292.593 304.955 cv
291.454 304.955 290.53 304.031 290.53 302.893 cv
290.53 301.754 291.454 300.83 292.593 300.83 cv
293.731 300.83 294.655 301.754 294.655 302.893 cv
cp
f
302.225 302.893 mo
302.225 304.031 301.302 304.955 300.163 304.955 cv
299.024 304.955 298.101 304.031 298.101 302.893 cv
298.101 301.754 299.024 300.83 300.163 300.83 cv
301.302 300.83 302.225 301.754 302.225 302.893 cv
cp
f
309.795 302.893 mo
309.795 304.031 308.872 304.955 307.733 304.955 cv
306.594 304.955 305.671 304.031 305.671 302.893 cv
305.671 301.754 306.594 300.83 307.733 300.83 cv
308.872 300.83 309.795 301.754 309.795 302.893 cv
cp
f
317.365 302.893 mo
317.365 304.031 316.442 304.955 315.304 304.955 cv
314.164 304.955 313.241 304.031 313.241 302.893 cv
313.241 301.754 314.164 300.83 315.304 300.83 cv
316.442 300.83 317.365 301.754 317.365 302.893 cv
cp
f
287.084 318.494 mo
287.084 319.633 286.162 320.557 285.022 320.557 cv
283.883 320.557 282.96 319.633 282.96 318.494 cv
282.96 317.354 283.883 316.432 285.022 316.432 cv
286.162 316.432 287.084 317.354 287.084 318.494 cv
cp
f
294.655 318.494 mo
294.655 319.633 293.731 320.557 292.593 320.557 cv
291.454 320.557 290.53 319.633 290.53 318.494 cv
290.53 317.354 291.454 316.432 292.593 316.432 cv
293.731 316.432 294.655 317.354 294.655 318.494 cv
cp
f
302.225 318.494 mo
302.225 319.633 301.302 320.557 300.163 320.557 cv
299.024 320.557 298.101 319.633 298.101 318.494 cv
298.101 317.354 299.024 316.432 300.163 316.432 cv
301.302 316.432 302.225 317.354 302.225 318.494 cv
cp
f
309.795 318.494 mo
309.795 319.633 308.872 320.557 307.733 320.557 cv
306.594 320.557 305.671 319.633 305.671 318.494 cv
305.671 317.354 306.594 316.432 307.733 316.432 cv
308.872 316.432 309.795 317.354 309.795 318.494 cv
cp
f
317.365 318.494 mo
317.365 319.633 316.442 320.557 315.304 320.557 cv
314.164 320.557 313.241 319.633 313.241 318.494 cv
313.241 317.354 314.164 316.432 315.304 316.432 cv
316.442 316.432 317.365 317.354 317.365 318.494 cv
cp
f
377.829 226.146 mo
377.829 227.407 376.807 228.43 375.546 228.43 cv
374.285 228.43 373.263 227.407 373.263 226.146 cv
373.263 224.886 374.285 223.863 375.546 223.863 cv
376.807 223.863 377.829 224.886 377.829 226.146 cv
.00238041 .392645 .597345 0 cmyk
f
388.696 226.146 mo
388.696 227.407 387.674 228.43 386.413 228.43 cv
385.152 228.43 384.13 227.407 384.13 226.146 cv
384.13 224.886 385.152 223.863 386.413 223.863 cv
387.674 223.863 388.696 224.886 388.696 226.146 cv
cp
.710201 0 .3888 0 cmyk
f
399.563 226.146 mo
399.563 227.407 398.541 228.43 397.28 228.43 cv
396.02 228.43 394.997 227.407 394.997 226.146 cv
394.997 224.886 396.02 223.863 397.28 223.863 cv
398.541 223.863 399.563 224.886 399.563 226.146 cv
cp
.0188296 .577478 .471443 0 cmyk
f
252.245 257.197 mo
252.245 263.013 247.53 267.728 241.715 267.728 cv
235.899 267.728 231.185 263.013 231.185 257.197 cv
231.185 251.382 235.899 246.668 241.715 246.668 cv
247.53 246.668 252.245 251.382 252.245 257.197 cv
cp
.0154421 .00189212 .00241093 0 cmyk
f
252.894 268.292 mo
239.036 292.295 li
266.751 292.295 li
252.894 268.292 li
cp
f
223.902 336.665 mo
222.503 336.665 li
221.041 336.665 219.688 336.193 218.587 335.392 cv
218.023 334.211 217.651 333.567 217.511 333.335 cv
217.41 333.345 217.319 333.354 217.215 333.363 cv
217.089 333.373 216.977 333.373 216.854 333.381 cv
216.854 333.435 216.854 333.488 216.853 333.54 cv
216.204 332.511 215.829 331.294 215.829 329.99 cv
215.829 297.021 li
216.128 296.439 216.609 295.995 217.475 295.896 cv
217.662 295.875 217.841 295.865 218.013 295.865 cv
219.113 295.865 219.92 296.277 220.505 296.814 cv
220.505 304.615 li
220.251 304.668 219.705 304.668 219.705 304.668 cv
219.368 305.65 li
219.382 305.723 li
219.499 305.849 219.723 306.071 220.057 306.311 cv
220.191 306.408 220.34 306.507 220.505 306.602 cv
220.505 323.417 li
219.833 323.602 218.898 323.83 217.862 323.997 cv
218.917 323.876 219.842 323.651 220.505 323.456 cv
220.505 331.987 li
222.693 331.987 li
223.16 333.681 223.556 335.23 223.902 336.665 cv
.871916 .440986 .420356 .128695 cmyk
f
224.021 337.165 mo
222.503 337.165 li
221.221 337.165 220.021 336.824 218.979 336.235 cv
218.84 335.928 218.709 335.648 218.587 335.392 cv
219.688 336.193 221.041 336.665 222.503 336.665 cv
223.902 336.665 li
223.942 336.833 223.982 337 224.021 337.165 cv
216.832 334.373 mo
215.893 333.16 215.329 331.643 215.329 329.99 cv
215.329 298.716 li
215.446 298.135 215.569 297.526 215.829 297.021 cv
215.829 329.99 li
215.829 331.294 216.204 332.511 216.853 333.54 cv
216.848 333.825 216.837 334.092 216.832 334.373 cv
.892119 .468727 .495857 .218814 cmyk
f
222.693 331.987 mo
220.505 331.987 li
220.505 323.456 li
221.171 323.26 221.573 323.094 221.573 323.094 cv
221.573 323.094 221.166 323.234 220.505 323.417 cv
220.505 306.602 li
220.764 306.751 221.06 306.887 221.391 306.98 cv
221.716 307.084 222.069 307.146 222.449 307.146 cv
222.543 307.146 222.64 307.142 222.737 307.134 cv
223.719 307.053 225.954 306.6 228.163 305.992 cv
228.163 309.968 li
227.564 310.322 227.014 310.616 226.562 310.807 cv
225.116 311.42 223.593 312.131 222.443 312.276 cv
222.443 312.276 li
222.443 312.309 li
222.443 312.309 221.145 318.903 221.573 323.094 cv
221.573 323.094 li
223.537 331.338 li
223.269 331.464 223.041 331.683 222.678 331.934 cv
222.683 331.951 222.688 331.969 222.693 331.987 cv
220.667 311.437 mo
220.9 312.065 221.383 312.306 222.025 312.306 cv
222.158 312.306 222.297 312.296 222.443 312.276 cv
222.306 312.294 222.177 312.304 222.054 312.304 cv
221.41 312.304 220.949 312.048 220.667 311.437 cv
220.505 304.615 mo
220.505 296.814 li
221.599 297.82 221.916 299.263 221.916 299.263 cv
221.916 299.263 222.295 300.103 221.847 300.385 cv
221.748 300.449 221.657 300.474 221.566 300.474 cv
221.409 300.467 li
221.447 300.825 221.556 302.105 221.304 303.096 cv
221.009 304.257 220.776 304.525 220.574 304.597 cv
220.555 304.603 220.532 304.61 220.505 304.615 cv
.127718 .0883192 .0852064 0 cmyk
f
228.163 309.968 mo
228.163 305.992 li
229.922 305.508 231.665 304.926 232.741 304.356 cv
232.741 306.901 li
231.431 307.848 229.649 309.092 228.163 309.968 cv
236.814 304.046 mo
233.26 304.046 li
233.43 303.928 233.566 303.811 233.661 303.697 cv
234.811 302.321 234.713 301.195 235.148 301.195 cv
235.167 301.195 235.187 301.197 235.208 301.201 cv
235.713 301.299 235.262 302.799 235.262 302.799 cv
235.262 302.799 236.509 300.647 237.17 300.647 cv
237.24 300.647 237.303 300.671 237.357 300.724 cv
237.594 300.954 238.15 302.548 236.814 304.046 cv
.209567 .133425 .127413 0 cmyk
f
232.741 306.901 mo
232.741 304.356 li
232.937 304.252 233.111 304.148 233.26 304.046 cv
236.814 304.046 li
236.341 304.576 235.632 305.094 234.588 305.535 cv
234.588 305.535 233.826 306.116 232.741 306.901 cv
.127718 .0883192 .0852064 0 cmyk
f
410.719 353.933 mo
373.147 353.933 li
373.147 353.724 li
373.147 352.917 372.487 352.257 371.681 352.257 cv
318.82 352.257 li
318.013 352.257 317.354 352.917 317.354 353.724 cv
317.354 353.933 li
306.242 353.933 li
307.172 353.771 307.762 353.533 307.762 353.266 cv
307.762 352.781 305.807 352.387 303.395 352.387 cv
300.984 352.387 299.029 352.781 299.029 353.266 cv
299.029 353.533 299.618 353.771 300.549 353.933 cv
251.157 353.933 li
252.087 353.771 252.677 353.533 252.677 353.266 cv
252.677 352.781 250.722 352.387 248.31 352.387 cv
245.899 352.387 243.944 352.781 243.944 353.266 cv
243.944 353.533 244.533 353.771 245.464 353.933 cv
196.071 353.933 li
197.002 353.771 197.591 353.533 197.591 353.266 cv
197.591 352.781 195.637 352.387 193.225 352.387 cv
190.814 352.387 188.859 352.781 188.859 353.266 cv
188.859 353.533 189.448 353.771 190.379 353.933 cv
189.375 353.933 li
188.134 353.933 187.119 352.918 187.119 351.677 cv
187.119 350.436 188.134 349.42 189.375 349.42 cv
415.94 349.42 li
417.181 349.42 418.196 350.436 418.196 351.677 cv
418.196 352.177 418.031 352.641 417.753 353.016 cv
417.218 352.652 415.546 352.387 413.565 352.387 cv
411.154 352.387 409.199 352.781 409.199 353.266 cv
409.199 353.533 409.788 353.771 410.719 353.933 cv
level3{
gsave
clp
[6.17552e-15 -100.854 100.854 6.17552e-15 250 418.552 ]ct
/7 
<<
/ShadingType 2 
/ColorSpace /0 /CSA get_res
/Coords [0 0 1 0 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~^'[m@^C40D^^jKH_%BcL_%ToN_A$,Q_A?;S_AcSW_AZPW_]Dq\`#i._`$&=b`?JIc`["aga!Y'ka!k6o
a!k9pa=LTtaY$g!atR'$atR*%atd9)b;ET-b;Wc0b;`c0bW9&4br]87c9>S;cTkh?cp;%BcpM.CcpV4E
d7@OHd77LId7I[LdS*sPdS4'SdSF-Sdnj?Wdo'NZe5]f^e5Tf`eQ6)deQH2eeQZ>hem)Pkem2Ynf3hqs
fOA+tfOJ5"fO\A%fOeJ(fkOe,fkXn/fkXn/gMU=5gM^C7gMgL:gN$[>gN-a@h0<3Dh0E<Gh0NBIhL&ZN
~>
/BitsPerSample 8 
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 0 1 ]
/Size [64 ]
>>
]
/Bounds []
/Encode [0 1 ]
>>
>>/Gradient add_res /7 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[6.17552e-15 -100.854 100.854 6.17552e-15 250 418.552 ]ct
clp
/7 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 4 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~]tV4p^;%Ft^VIY#^qdb$^qmk'_83t(_83t(_83t(_8=(+_Sa:/_o'C0_o0L3`5T^7`Q#p;`l?$<`l?$<
`l?'>a2c9BaN2KFaiVZHaiVZHaiV]Jb0%lLb0%lLb0%oNbKJ,Rbfn>Vc-=PZcHab^cd0q`cd0q`cd0tb
d*U.dd*U.dd*U.edF$@hdF$@hdF$@idaHRldaHRme'ldpe'ldqeC<!teC<!teC<!ue^`4#e^`4$f%/F(
f@SX+f@SX+f@SX+f@SX+f\"j/f\"j/f\"j/g"G*5g=k97g=k97g=k97g=k97gY:N=gt^]?gt^]?h;-oC
~>
<~#mq"I$OdIS%M'']&.oKe&ebol',2/r()If*)B'M4)B'P7*?H7C*ZlIH+<_mO+X/*T,:"N\-7:/h-n$Jl
-n$Mo.k</%/M/S-0/"t30/#"50ekF>1GgsH2E!KQ2`E]U3B9,]3]]>a4?Ykl5<hCu5X7V$6:+%,6UO71
77Kd;7n6'>7n?0B8kVfN9MA,S9hnGZ:JXb_:f1(f;c?Xp<)cgr<E3($='/R-=^#!5>?b<:>[1N>?!^lG
?smDO@U`eU@q0%[AS#FaAnPdkC2.KuC2.KuCM[g(DJj?0Df9Q4E,]f:EcQ2@F*)PKG^+IXH$O[\H?spb
~>
<~<E<.$<`W7%<``@(='&I)='/R,=BJ[-=BAR*='/R,=BJ[-=BSd0=^#!4>$>*5>$>*5>$>*5>$G38>?kE<
>[1N=>[1N=>[1K;>?b?;>[1Q??!U`A?!UcC?=$rE?!U`A?!UcC?=$rE?=$rE?=$uG?XI/I?XI,G?=$rE
?!U`A?!U`B?=$rE?=$rE?=$rE?<piB?!U`B?=$rE?=$rE?=.&H?XI/H?=$rD?!U`B?=$rF?XI/I?XI/H
?=$oC?!U`A?!U`A?=$rE?=$oC?!U`A?!U`A?!U`A?!U`A?=$rE?XI/I?XI/I?XI,F?!U`A?!U`A?=$rE
~>
<~zzzzzzzzzzzzzzzzzzzz!!!$#!<E3%!<E3%!<E6'!WiE)!WiE)!WiE)!WiH+!s8W-!s8W-!s8Z/"9\i1
"9\i2"U,&5"U,&6"pP8:#6tJ=#6tJ>#RC\A#RC\B#mgnF$47+J$O[=M$O[=N$k*OQ$k*OR%1NaV%M''\
%hB0]&.fBa&J5Te&eYfi',)#m'GM5q'GM5q'bqGu()@Z$(Ddl((`4),)&X;0)&X;0)B'M4)]K_8*#oq<
~>
]
>>
0 0 1 0 []true true []
/DeviceCMYK
GenStrips
} /Gradient add_res /7 /Gradient get_res exec grestore
}if
np
196.071 353.933 mo
190.379 353.933 li
189.448 353.771 188.859 353.533 188.859 353.266 cv
188.859 352.781 190.814 352.387 193.225 352.387 cv
195.637 352.387 197.591 352.781 197.591 353.266 cv
197.591 353.533 197.002 353.771 196.071 353.933 cv
level3{
gsave
clp
[6.17552e-15 -100.854 100.854 6.17552e-15 250 418.552 ]ct
/8 
<<
/ShadingType 2 
/ColorSpace /0 /CSA get_res
/Coords [0 0 1 0 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~`#2n^`#E"_`#i7b`?8Ie`Zeai`Znjka!G-oa=(Bra=(Hta=:U!aX^g$at7$&b:d9)b:d?+bVNZ/bVWc1
br0#4br9,7c8]>:c9,S>cTP_?cTbnBcTYnCcp2.Gd6hILd6qRNdRIaOdRRjRdn"$Te4X?Zdn=6Ye4jK\
e50T]eP]lbePfobePoudePp)gelQAkelZGmf32Ypf3Desf3Mo!fO/2%fjSD)fO8A+g14\-g1Fh0g1b"3
g1Y"5g1k19g1t:<gMLI=gi$[@gi-aBh/QsFhK36JhKEENhKNKPhg&ZQhKr`ThgT#YhgK#[hgo8_i.>Gb
~>
/BitsPerSample 8 
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 0 1 ]
/Size [64 ]
>>
]
/Bounds []
/Encode [0 1 ]
>>
>>/Gradient add_res /8 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[6.17552e-15 -100.854 100.854 6.17552e-15 250 418.552 ]ct
clp
/8 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 4 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~_o'C0_o'C0_o0L3`5T^7`Pog8`Q#p;`lH-?a2c6@a2c6@a2l?CaN;QGai_cKb0%lLb0.uObKJ)PbKS2S
bfn;Tbfn>Vc-=MXc-=PZcHa_\cHa_\cHab^cd0tbd*U.dd*U1fdF$@hdF$CjdaHUne'ldpe'ldpe'ldp
e'ldqeC<!teC<!teC<!teC<!ue^`4#e^`4$f%/F'f%/F'f%/F(f@SX,f\"j/f\"j/f\+s2g"G'3g"G'3
g"G'3g"G'3g"G'3g=k97gY:K;gY:K;gt^]?h;-oCh;-oCh;-oChVR,GhVR,GhVR,GhVR,GhVR,Ghr!>K
~>
<~(`=20)B0Y:*ZlIG+!;[L+X/*S+sS<X,UFca-RU8h-R^Al.4Qes.P!##/1iG+/hSb//h\n51,C^B1GgpG
2)R9M2E!KQ2`E]V3]fGd4?Pbi5!D.o5!D.o5<hD!5sdq+6UO7077B[87Rfm<7n6*@8P2TI8kM`L9MA/T
:/=Y^:f1(f;GpCk;c?Un;c?Uo<E<.%='&I*=BSd1>$G39>[1N>?=$uH?smAM?smAN@:E_WA7]=aAnPdj
BP;'mBP;*oC2.KuCMRa&D/F0.Df9Q4E,]c8EH6)@FEDYJG'8%PGB\:VH$O^^H[C-gI=6NlI=?ZrJUrB'
~>
<~?=$rE?<piB?!U`A?!^iD?=.&H?XR8L?smAL?XI/J?smAM?t!JP@:<SQ@:3JN?t!JQ@U`eT@:<SQ@:<SQ
@:<VS@U`hW@q0"Y@q/tW@U`eU@U`hWA7T4]A7T4]A7T7_AS#FaA7T4]A7T4]A7T4]A7T4]A7T4]A7T4]
@q&nV@U`eU@U`eT@:<SR@q9+\A7T4\@q0"Y@q0"X@U`eV@q0"Y@q0"Y@q0"ZA7]=`ARo:[@U`eU@U`eU
@U`hWA7T4]AS#FaAS#C_@q0"Y@U`eU@q0"Y@q0"Y@q0"Y@q0"Y@q/tW@U`eU@U`eU@U`hW@q0"Y@U`eU
~>
<~zzzzzzzzzzzzz!!**$!<E3%!<E3%!<E6'!WiE)!WiH+!s8W-!s8W-!s8W-!s8Z/"9\l3"U,&5"U,&5"U
,)7"pP89"pP;;#RC\A#RC\A#RC_C#mgnF$47+I$47+J$O[=M$O[=N$k*OR%1NaV%LrsZ%hB0^&.fBb&J
5Tf&eYfj',)#m',)#n'GM5r'bqH!()@Z$(Ddl((`4),(`4),)&X;0)B'M4)]K_8*#oq<*??.@*Zc@D*Z
c@D+!2RH+<VgN+sJ3T,9nEX,U=W\~>
]
>>
0 0 1 0 []true true []
/DeviceCMYK
GenStrips
} /Gradient add_res /8 /Gradient get_res exec grestore
}if
np
251.157 353.933 mo
245.464 353.933 li
244.533 353.771 243.944 353.533 243.944 353.266 cv
243.944 352.781 245.899 352.387 248.31 352.387 cv
250.722 352.387 252.677 352.781 252.677 353.266 cv
252.677 353.533 252.087 353.771 251.157 353.933 cv
level3{
gsave
clp
[6.17552e-15 -100.854 100.854 6.17552e-15 250 418.552 ]ct
/8 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[6.17552e-15 -100.854 100.854 6.17552e-15 250 418.552 ]ct
clp
/8 /Gradient get_res exec grestore
}if
np
306.242 353.933 mo
300.549 353.933 li
299.618 353.771 299.029 353.533 299.029 353.266 cv
299.029 352.781 300.984 352.387 303.395 352.387 cv
305.807 352.387 307.762 352.781 307.762 353.266 cv
307.762 353.533 307.172 353.771 306.242 353.933 cv
level3{
gsave
clp
[6.17552e-15 -100.854 100.854 6.17552e-15 250 418.552 ]ct
/8 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[6.17552e-15 -100.854 100.854 6.17552e-15 250 418.552 ]ct
clp
/8 /Gradient get_res exec grestore
}if
np
415.94 353.933 mo
410.719 353.933 li
409.788 353.771 409.199 353.533 409.199 353.266 cv
409.199 352.781 411.154 352.387 413.565 352.387 cv
415.546 352.387 417.218 352.652 417.753 353.016 cv
417.341 353.571 416.681 353.933 415.94 353.933 cv
level3{
gsave
clp
[6.17552e-15 -100.854 100.854 6.17552e-15 250 418.552 ]ct
/8 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[6.17552e-15 -100.854 100.854 6.17552e-15 250 418.552 ]ct
clp
/8 /Gradient get_res exec grestore
}if
np
371.681 355.609 mo
318.82 355.609 li
318.013 355.609 317.354 354.949 317.354 354.142 cv
317.354 353.933 li
317.354 353.724 li
317.354 352.917 318.013 352.257 318.82 352.257 cv
371.681 352.257 li
372.487 352.257 373.147 352.917 373.147 353.724 cv
373.147 353.933 li
373.147 354.142 li
373.147 354.949 372.487 355.609 371.681 355.609 cv
358.48 352.387 mo
356.069 352.387 354.114 352.781 354.114 353.266 cv
354.114 353.752 356.069 354.145 358.48 354.145 cv
360.892 354.145 362.847 353.752 362.847 353.266 cv
362.847 352.781 360.892 352.387 358.48 352.387 cv
level3{
gsave
clp
[6.17552e-15 -100.854 100.854 6.17552e-15 250 418.552 ]ct
/7 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[6.17552e-15 -100.854 100.854 6.17552e-15 250 418.552 ]ct
clp
/7 /Gradient get_res exec grestore
}if
np
358.48 354.145 mo
356.069 354.145 354.114 353.752 354.114 353.266 cv
354.114 352.781 356.069 352.387 358.48 352.387 cv
360.892 352.387 362.847 352.781 362.847 353.266 cv
362.847 353.752 360.892 354.145 358.48 354.145 cv
level3{
gsave
clp
[6.17552e-15 -100.854 100.854 6.17552e-15 250 418.552 ]ct
/8 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[6.17552e-15 -100.854 100.854 6.17552e-15 250 418.552 ]ct
clp
/8 /Gradient get_res exec grestore
}if
np
397.619 336.665 mo
391.548 336.665 li
391.723 334.683 392.053 333.116 392.366 331.987 cv
399.618 331.987 li
399.618 304.174 li
401.157 302.409 402.438 300.204 403.329 297.211 cv
403.287 297.066 402.79 294.134 403.38 293.908 cv
403.384 293.908 403.388 293.907 403.392 293.907 cv
403.678 293.907 404.033 295.269 404.033 295.269 cv
404.033 295.269 404.139 294.943 404.294 294.68 cv
404.294 304.443 li
403.699 306.432 402.741 308.731 401.21 311.143 cv
401.21 311.143 402.922 315.461 404.294 319.527 cv
404.294 329.99 li
404.294 332.947 402.362 335.46 399.694 336.335 cv
399.61 334.042 399.707 332.145 399.707 332.145 cv
398.944 333.387 398.278 334.956 397.7 336.664 cv
397.673 336.665 397.646 336.665 397.619 336.665 cv
.871916 .440986 .420356 .128695 cmyk
f
397.534 337.165 mo
391.508 337.165 li
391.52 336.995 391.533 336.829 391.548 336.665 cv
397.619 336.665 li
397.646 336.665 397.673 336.665 397.7 336.664 cv
397.644 336.83 397.589 336.997 397.534 337.165 cv
399.716 336.852 mo
399.707 336.678 399.7 336.505 399.694 336.335 cv
402.362 335.46 404.294 332.947 404.294 329.99 cv
404.294 319.527 li
404.467 320.041 404.635 320.551 404.794 321.048 cv
404.794 329.99 li
404.794 333.223 402.655 335.954 399.716 336.852 cv
404.294 304.443 mo
404.294 294.68 li
404.399 294.502 404.527 294.353 404.66 294.353 cv
404.704 294.353 404.749 294.37 404.794 294.406 cv
404.794 302.472 li
404.666 303.085 404.502 303.745 404.294 304.443 cv
.892119 .468727 .495857 .218814 cmyk
f
399.618 331.987 mo
392.366 331.987 li
392.756 330.576 393.119 329.849 393.119 329.849 cv
391.96 324.309 li
391.96 321.649 li
391.404 321.649 li
390.614 317.877 li
391.96 317.877 li
391.96 315.176 li
372.853 315.176 li
373.643 314.906 374.488 314.747 374.488 314.747 cv
373.91 314.357 373.377 314.049 373.783 313.752 cv
373.832 313.716 373.901 313.7 373.985 313.7 cv
374.612 313.7 376.075 314.579 376.075 314.579 cv
376.206 314.536 382.127 313.227 387.513 311.402 cv
391.96 311.402 li
391.96 309.681 li
392.308 309.522 392.643 309.361 392.96 309.199 cv
392.299 307.788 391.865 307.691 391.865 307.691 cv
391.865 307.691 391.351 307.873 390.778 307.873 cv
390.45 307.873 390.103 307.813 389.822 307.627 cv
389.219 307.227 388.863 306.075 388.756 305.492 cv
388.722 305.31 388.697 305.12 388.68 304.929 cv
391.96 304.929 li
391.96 302.228 li
388.212 302.228 li
387.037 301.595 385.842 300.385 386.831 300.238 cv
387.577 300.13 389.193 299.771 390.759 299.771 cv
391.756 299.771 392.734 299.917 393.453 300.365 cv
395.166 301.426 395.013 305.147 394.996 306.301 cv
394.996 306.394 395.732 307.452 395.775 307.555 cv
397.164 306.577 398.463 305.499 399.618 304.174 cv
399.618 331.987 li
.127718 .0883192 .0852064 0 cmyk
f
391.96 304.929 mo
388.68 304.929 li
388.573 303.734 388.756 302.477 388.756 302.477 cv
388.581 302.412 388.397 302.327 388.212 302.228 cv
391.96 302.228 li
391.96 304.929 li
.209567 .133425 .127413 0 cmyk
f
391.96 317.877 mo
390.614 317.877 li
390.459 317.135 li
376.855 316.207 li
375.27 317.147 374.589 317.31 373.216 317.369 cv
373.16 317.371 373.105 317.372 373.052 317.372 cv
371.798 317.372 371.398 316.803 371.52 316.055 cv
371.574 315.703 372.194 315.401 372.853 315.176 cv
391.96 315.176 li
391.96 317.877 li
f
391.96 311.402 mo
387.513 311.402 li
389.095 310.866 390.631 310.286 391.96 309.681 cv
391.96 311.402 li
f
391.96 324.309 mo
391.404 321.649 li
391.96 321.649 li
391.96 324.309 li
f
405.538 295.31 mo
405.683 296.226 405.75 301.967 401.578 308.537 cv
401.578 308.537 406.418 320.74 406.342 323.428 cv
406.342 323.428 406.197 323.538 405.926 323.733 cv
404.434 324.785 399.109 328.143 393.488 327.243 cv
390.828 314.53 li
376.855 315.87 li
376.075 314.242 li
376.254 314.183 387.683 309.478 393.329 306.595 cv
394.389 306.052 395.254 305.568 395.788 305.204 cv
395.906 305.119 396.025 305.034 396.144 304.949 cv
399.383 302.669 402.138 299.846 403.698 294.605 cv
403.698 294.605 405.394 294.394 405.538 295.31 cv
cp
.0033875 .779599 .342412 0 cmyk
f
373.784 313.414 mo
374.19 313.109 376.075 314.242 376.075 314.242 cv
376.855 315.87 li
375.271 316.81 374.589 316.973 373.216 317.032 cv
371.833 317.083 371.393 316.498 371.52 315.718 cv
371.639 314.946 374.488 314.41 374.488 314.41 cv
373.91 314.02 373.377 313.711 373.784 313.414 cv
cp
.0567636 .141695 .269688 0 cmyk
f
403.749 291.303 mo
404.037 291.265 404.402 292.664 404.402 292.664 cv
404.402 292.664 404.801 291.418 405.19 291.816 cv
405.589 292.206 406.648 294.174 405.538 295.31 cv
405.394 294.394 403.698 294.605 403.698 294.605 cv
403.656 294.462 403.159 291.529 403.749 291.303 cv
cp
f
392.55 301.364 mo
393.347 301.645 393.211 302.702 393.406 303.032 cv
393.602 303.372 393.457 304.086 395.365 303.696 cv
395.365 303.789 396.102 304.848 396.144 304.949 cv
396.025 305.034 395.906 305.119 395.788 305.204 cv
395.254 305.568 394.389 306.052 393.329 306.595 cv
392.667 305.184 392.234 305.087 392.234 305.087 cv
392.234 305.087 390.963 305.535 390.19 305.022 cv
389.588 304.622 389.232 303.471 389.124 302.887 cv
388.879 301.564 389.125 299.872 389.125 299.872 cv
389.37 299.948 li
390.668 300.288 391.101 301.949 391.108 302.603 cv
391.49 302.603 li
391.49 302.603 390.892 300.496 392.55 301.364 cv
cp
f
394.93 349.355 mo
394.93 349.355 394.93 351.651 394.93 352.144 cv
394.533 352.229 388.359 352.144 388.359 352.144 cv
392.14 349.287 li
394.93 349.355 li
cp
.815946 .639521 .563195 .523217 cmyk
f
408.495 348.855 mo
408.495 348.855 405.454 352.386 402.884 352.182 cv
402.799 352.249 405.036 348.618 405.138 348.075 cv
407.358 346.65 li
408.495 348.855 li
cp
f
393.488 327.243 mo
399.109 328.143 404.434 324.785 405.926 323.733 cv
407.172 326.929 406.12 331.276 405.604 334.605 cv
404.787 339.887 407.548 346.978 407.548 346.978 cv
405.138 348.075 li
405.154 347.981 405.163 347.923 405.163 347.923 cv
405.163 347.923 401.771 342.784 400.763 339.232 cv
399.754 335.68 400.076 329.541 400.076 329.541 cv
396.362 335.578 394.93 349.355 394.93 349.355 cv
392.14 349.287 li
392.14 349.287 391.683 342.36 391.792 336.392 cv
391.895 330.423 393.488 327.243 393.488 327.243 cv
cp
.779202 .591241 .502647 .329534 cmyk
f
392.862 303.052 mo
392.667 302.721 393.031 301.438 392.394 301.31 cv
391.342 300.824 391.49 302.603 391.49 302.603 cv
391.108 302.603 li
390.892 301.551 li
390.727 301.096 390.474 300.653 390.102 300.336 cv
389.72 300.011 389.09 299.979 388.908 299.455 cv
388.729 298.935 389.112 298.341 389.451 297.978 cv
389.89 297.506 390.497 297.388 391.079 297.3 cv
392.023 297.158 392.994 297.244 393.821 297.761 cv
395.534 298.82 395.382 302.543 395.365 303.696 cv
393.457 304.086 393.057 303.391 392.862 303.052 cv
cp
f
388.545 300.153 mo
388.493 298.194 390.032 296.568 391.991 296.516 cv
393.947 296.464 395.573 298.004 395.625 299.962 cv
395.625 299.979 li
388.546 300.172 li
388.545 300.153 li
cp
.0158694 .165713 .759853 0 cmyk
f
388.546 300.172 mo
395.625 299.979 li
396.414 299.957 li
396.429 300.557 li
395.589 300.578 li
395.064 300.593 li
392.378 300.666 li
392.103 300.674 li
388.695 300.768 li
388.616 300.77 li
387.776 300.791 li
387.76 300.192 li
388.546 300.172 li
cp
f
218.946 299.599 mo
218.946 299.599 219.179 301.171 218.839 302.333 cv
218.5 303.494 218.231 303.762 218 303.834 cv
217.767 303.905 216.999 303.905 216.999 303.905 cv
216.266 305.764 li
213.854 303.477 li
215.659 298.795 li
218.946 299.599 li
cp
.0567636 .141695 .269688 0 cmyk
f
221.683 349.681 mo
221.917 351.021 222.014 351.949 222.014 351.949 cv
227.923 351.949 li
225.542 350.068 li
225.55 350.076 224.064 350.916 221.691 349.681 cv
221.683 349.681 li
cp
.00238041 .392645 .597345 0 cmyk
f
210.365 350.254 mo
210.365 350.254 208.855 350.98 206.877 349.681 cv
206.771 349.879 206.236 351.351 206.215 351.486 cv
206.191 351.642 206.272 351.69 206.397 351.734 cv
206.471 351.758 li
206.885 351.891 210.941 352.025 211.84 352.066 cv
211.979 352.072 212.118 352.076 212.256 352.08 cv
212.471 352.084 li
212.654 352.066 li
212.659 351.964 li
212.614 351.873 212.536 351.806 212.462 351.739 cv
212.263 351.56 212.03 351.416 211.811 351.263 cv
211.587 351.107 211.364 350.951 211.141 350.796 cv
210.883 350.615 210.625 350.436 210.365 350.254 cv
cp
f
220.149 311.513 mo
219.172 311.626 218.43 311.433 218.106 310.674 cv
217.348 308.881 217.356 307.146 218.938 306.226 cv
218.938 306.217 li
218.316 306.063 217.8 305.798 217.404 305.547 cv
216.831 305.192 216.517 304.853 216.517 304.853 cv
216.686 305.611 216.952 306.33 216.92 306.669 cv
216.855 307.274 215.976 307.21 215.814 307.743 cv
215.645 308.284 216.282 308.954 216.048 309.696 cv
215.814 310.439 215.241 311.045 212.48 311.247 cv
210.462 311.392 209.017 310.027 208.25 308.68 cv
207.378 309.979 206.91 312.28 206.635 314.557 cv
206.296 317.325 206.264 320.062 206.191 320.966 cv
208.262 325.632 219.148 322.33 219.148 322.33 cv
218.656 318.141 220.149 311.545 220.149 311.545 cv
220.149 311.513 li
cp
f
214.401 332.47 mo
214.401 332.47 215.92 334.488 218.408 340.22 cv
219.897 343.65 221.279 347.332 221.683 349.681 cv
221.691 349.681 li
224.064 350.916 225.55 350.076 225.542 350.068 cv
224.339 349.124 li
224.339 349.124 224.404 343.67 220.375 331.027 cv
219.229 331.439 216.985 332.445 214.401 332.47 cv
cp
.0567636 .141695 .269688 0 cmyk
f
206.877 349.681 mo
206.886 349.681 li
208.855 350.98 210.365 350.254 210.365 350.254 cv
209.534 349.665 li
209.534 349.665 213.65 345.943 213.723 332.47 cv
213.723 332.462 li
211.697 332.422 209.59 332.099 207.887 331.267 cv
207.976 331.308 210.631 342.819 206.877 349.681 cv
cp
f
220.488 306.37 mo
219.923 306.411 219.406 306.347 218.938 306.217 cv
218.938 306.226 li
217.356 307.146 217.077 308.725 218.106 310.674 cv
218.492 311.402 219.172 311.626 220.149 311.513 cv
221.473 311.368 223.225 310.657 224.888 310.044 cv
227.77 308.986 234.123 304.772 234.123 304.772 cv
238.72 303.083 237.678 300.272 237.31 299.961 cv
236.652 299.406 234.898 302.035 234.898 302.035 cv
234.898 302.035 235.417 300.535 234.836 300.438 cv
234.255 300.334 234.437 301.498 233.057 302.935 cv
231.676 304.372 222.87 306.201 220.488 306.37 cv
cp
f
219.14 299.711 mo
219.245 299.711 219.35 299.687 219.463 299.622 cv
219.979 299.339 219.543 298.5 219.543 298.5 cv
219.543 298.5 218.589 294.721 214.434 295.134 cv
211.339 295.44 212.512 299.073 210.971 299.88 cv
209.42 300.688 208.613 301.761 209.485 303.844 cv
209.485 303.844 208.839 304.401 208.314 305.16 cv
207.862 305.798 207.499 306.572 207.668 307.274 cv
207.766 307.694 207.959 308.187 208.25 308.68 cv
209.017 310.027 210.462 311.392 212.48 311.247 cv
215.241 311.045 215.814 310.439 216.048 309.696 cv
216.282 308.954 215.645 308.284 215.814 307.743 cv
215.976 307.21 216.855 307.274 216.92 306.669 cv
217.024 305.691 216.271 304.743 216.679 303.752 cv
216.788 303.487 216.982 303.27 217.153 303.04 cv
217.624 302.41 217.378 301.827 217.514 301.118 cv
217.59 300.72 217.768 300.3 218.029 299.988 cv
218.363 299.59 218.676 299.711 219.14 299.711 cv
cp
.779202 .591241 .502647 .329534 cmyk
f
219.148 322.33 mo
219.148 322.33 210.962 325.31 206.191 320.966 cv
206.054 322.613 207.051 331.567 207.051 331.567 cv
208.685 332.257 210.733 332.833 214.134 332.601 cv
219.988 332.199 220.471 330.956 221.408 330.575 cv
219.148 322.33 li
cp
.883513 .462104 .292668 .0517891 cmyk
f
212.045 297.327 mo
212.045 295.368 213.627 293.784 215.586 293.783 cv
217.543 293.784 219.127 295.366 219.128 297.325 cv
219.127 297.342 li
212.045 297.346 li
212.045 297.327 li
cp
.0158694 .165713 .759853 0 cmyk
f
212.045 297.346 mo
219.127 297.342 li
219.916 297.341 li
219.915 297.94 li
219.075 297.94 li
218.55 297.94 li
215.862 297.942 li
215.587 297.942 li
212.178 297.946 li
212.1 297.945 li
211.26 297.944 li
211.259 297.346 li
212.045 297.346 li
cp
f
372.581 336.665 mo
332.913 336.665 li
333.639 331.987 li
335.278 331.987 li
334.585 336.46 li
349.654 336.46 li
348.96 331.987 li
350.601 331.987 li
351.295 336.46 li
354.198 336.46 li
354.892 331.987 li
356.533 331.987 li
355.84 336.46 li
370.908 336.46 li
370.215 331.987 li
371.855 331.987 li
372.581 336.665 li
376.196 233.469 mo
333.335 233.469 li
335.827 219.595 li
338.285 219.595 li
373.278 225.879 li
373.268 225.966 373.263 226.056 373.263 226.146 cv
373.263 227.407 374.285 228.43 375.546 228.43 cv
376.216 228.43 376.818 228.141 377.236 227.682 cv
376.196 233.469 li
.871916 .440986 .420356 .128695 cmyk
f
372.658 337.165 mo
332.836 337.165 li
332.913 336.665 li
372.581 336.665 li
372.658 337.165 li
338.285 219.595 mo
335.827 219.595 li
335.903 219.167 li
338.285 219.595 li
.892119 .468727 .495857 .218814 cmyk
f
371.855 331.987 mo
370.215 331.987 li
369.133 325.01 li
357.615 325.01 li
356.533 331.987 li
354.892 331.987 li
355.974 325.01 li
349.52 325.01 li
350.601 331.987 li
348.96 331.987 li
347.878 325.01 li
336.36 325.01 li
335.278 331.987 li
333.639 331.987 li
334.823 324.351 li
370.671 324.351 li
371.855 331.987 li
370.252 321.649 mo
368.611 321.649 li
368.026 317.877 li
369.667 317.877 li
370.252 321.649 li
358.136 321.649 mo
356.495 321.649 li
357.08 317.877 li
358.721 317.877 li
358.136 321.649 li
348.998 321.649 mo
347.357 321.649 li
346.772 317.877 li
348.413 317.877 li
348.998 321.649 li
336.882 321.649 mo
335.241 321.649 li
335.826 317.877 li
337.467 317.877 li
336.882 321.649 li
369.249 315.176 mo
367.607 315.176 li
367.105 311.938 li
359.642 311.938 li
359.14 315.176 li
357.499 315.176 li
358.001 311.938 li
347.492 311.938 li
347.994 315.176 li
346.354 315.176 li
345.852 311.938 li
338.388 311.938 li
337.886 315.176 li
336.245 315.176 li
336.83 311.402 li
368.663 311.402 li
369.249 315.176 li
368.245 308.702 mo
366.604 308.702 li
366.019 304.929 li
367.66 304.929 li
368.245 308.702 li
360.144 308.702 mo
358.502 308.702 li
359.087 304.929 li
360.729 304.929 li
360.144 308.702 li
346.991 308.702 mo
345.35 308.702 li
344.765 304.929 li
346.406 304.929 li
346.991 308.702 li
338.889 308.702 mo
337.249 308.702 li
337.834 304.929 li
339.474 304.929 li
338.889 308.702 li
367.241 302.228 mo
365.6 302.228 li
365.079 298.866 li
361.669 298.866 li
361.148 302.228 li
359.506 302.228 li
360.027 298.866 li
345.466 298.866 li
345.987 302.228 li
344.346 302.228 li
343.824 298.866 li
340.414 298.866 li
339.893 302.228 li
338.253 302.228 li
339.303 295.453 li
340.944 295.453 li
340.666 297.245 li
343.573 297.245 li
343.295 295.453 li
344.937 295.453 li
345.215 297.245 li
360.279 297.245 li
360.557 295.453 li
362.198 295.453 li
361.92 297.245 li
364.828 297.245 li
364.55 295.453 li
366.19 295.453 li
367.241 302.228 li
365.226 289.235 mo
363.586 289.235 li
363.374 287.869 li
363.162 289.235 li
361.521 289.235 li
362.055 285.795 li
343.438 285.795 li
343.972 289.235 li
342.331 289.235 li
342.119 287.869 li
341.907 289.235 li
340.267 289.235 li
341.052 284.174 li
342.26 284.174 li
341.419 283.858 341.082 283.215 341.055 282.515 cv
341.018 281.588 341.024 278.472 341.134 278.453 cv
341.178 278.446 341.327 278.43 341.555 278.43 cv
341.873 278.43 342.347 278.461 342.912 278.592 cv
342.91 278.522 li
344.365 279.327 345.4 279.655 346.131 279.655 cv
347.229 279.655 347.642 278.916 347.766 277.939 cv
347.867 277.148 347.553 276.287 347.159 275.565 cv
352.858 275.565 li
352.917 279.915 352.814 282.265 350.484 283.559 cv
350.046 283.803 349.525 283.904 348.964 283.904 cv
346.398 283.904 343.005 281.805 343.005 281.805 cv
343.002 281.708 li
342.492 282.524 342.715 283.358 342.955 283.869 cv
343.005 283.977 342.985 284.091 342.927 284.174 cv
358.026 284.174 li
358.1 283.792 358.227 283.124 358.364 282.366 cv
358.251 282.358 358.174 282.352 358.174 282.352 cv
358.684 278.796 359.89 275.881 360.023 275.565 cv
364.235 275.565 li
363.371 278.484 361.352 282.172 361.352 282.172 cv
361.317 282.178 li
363.667 284.174 li
364.441 284.174 li
365.226 289.235 li
355.883 275.796 mo
354.874 275.796 353.841 275.737 352.993 275.565 cv
359.795 275.565 li
359.198 275.632 357.573 275.796 355.883 275.796 cv
364.493 272.864 mo
345.939 272.864 li
345.879 272.558 345.844 272.246 345.835 271.934 cv
345.831 271.672 li
345.55 271.657 345.379 271.644 345.379 271.644 cv
345.372 270.826 345.404 269.965 345.465 269.092 cv
358.015 269.092 li
358.01 269.265 358.006 269.435 358.002 269.601 cv
358.002 269.601 363.581 270.563 364.493 272.864 cv
358.1 266.391 mo
345.731 266.391 li
345.896 265.046 346.101 263.75 346.301 262.617 cv
358.246 262.617 li
358.201 263.695 358.148 265.038 358.1 266.391 cv
371.447 259.916 mo
346.821 259.916 li
346.98 259.16 347.085 258.713 347.085 258.713 cv
346.386 258.805 345.584 258.909 345.109 258.91 cv
344.944 258.736 li
344.99 258.792 li
344.314 258.9 343.709 258.949 343.167 258.949 cv
339.929 258.949 338.972 257.213 338.69 256.144 cv
372.125 256.144 li
371.447 259.916 li
329.977 253.78 mo
329.696 253.73 li
330.964 246.668 li
373.826 246.668 li
372.782 252.478 li
373.417 252.33 374.112 252.162 374.468 252.162 cv
374.593 252.162 374.676 252.183 374.699 252.233 cv
374.784 252.431 374.432 252.975 373.704 253.442 cv
329.977 253.442 li
329.977 253.78 li
374.943 240.45 mo
332.081 240.45 li
333.335 233.469 li
376.196 233.469 li
374.943 240.45 li
.127718 .0883192 .0852064 0 cmyk
f
373.826 246.668 mo
330.964 246.668 li
332.081 240.45 li
374.943 240.45 li
373.826 246.668 li
.209567 .133425 .127413 0 cmyk
f
372.125 256.144 mo
338.69 256.144 li
338.564 255.668 338.572 255.324 338.572 255.324 cv
338.873 255.398 339.229 255.465 339.634 255.515 cv
329.977 253.78 li
329.977 253.442 li
373.704 253.442 li
373.38 253.65 372.981 253.843 372.513 253.982 cv
372.125 256.144 li
f
358.015 269.092 mo
345.465 269.092 li
345.528 268.193 345.621 267.281 345.731 266.391 cv
358.1 266.391 li
358.067 267.313 358.037 268.24 358.015 269.092 cv
f
358.246 262.617 mo
346.301 262.617 li
346.492 261.533 346.678 260.599 346.821 259.916 cv
371.447 259.916 li
371.219 261.186 li
367.323 260.487 li
366.938 260.804 366.555 261.032 366.185 261.1 cv
365.678 261.195 365.13 261.24 364.559 261.24 cv
363.663 261.24 362.712 261.129 361.783 260.931 cv
361.625 261.134 li
360.426 260.862 359.235 260.516 358.347 260.31 cv
358.347 260.31 358.303 261.251 358.246 262.617 cv
f
364.235 275.565 mo
360.023 275.565 li
360.031 275.547 360.035 275.537 360.035 275.537 cv
360.035 275.537 359.95 275.548 359.795 275.565 cv
352.993 275.565 li
352.948 275.556 352.903 275.547 352.859 275.537 cv
352.857 275.536 li
352.858 275.546 352.858 275.556 352.858 275.565 cv
347.159 275.565 li
347.042 275.351 346.918 275.15 346.796 274.966 cv
346.376 274.331 346.085 273.612 345.939 272.864 cv
364.493 272.864 li
364.581 273.087 364.626 273.323 364.617 273.571 cv
364.598 274.139 364.453 274.828 364.235 275.565 cv
f
366.19 295.453 mo
364.55 295.453 li
363.586 289.235 li
365.226 289.235 li
366.19 295.453 li
362.198 295.453 mo
360.557 295.453 li
361.521 289.235 li
363.162 289.235 li
362.198 295.453 li
344.937 295.453 mo
343.295 295.453 li
342.331 289.235 li
343.972 289.235 li
344.937 295.453 li
340.944 295.453 mo
339.303 295.453 li
340.267 289.235 li
341.907 289.235 li
340.944 295.453 li
f
367.66 304.929 mo
366.019 304.929 li
365.6 302.228 li
367.241 302.228 li
367.66 304.929 li
360.729 304.929 mo
359.087 304.929 li
359.506 302.228 li
361.148 302.228 li
360.729 304.929 li
346.406 304.929 mo
344.765 304.929 li
344.346 302.228 li
345.987 302.228 li
346.406 304.929 li
339.474 304.929 mo
337.834 304.929 li
338.253 302.228 li
339.893 302.228 li
339.474 304.929 li
f
369.667 317.877 mo
368.026 317.877 li
367.607 315.176 li
369.249 315.176 li
369.667 317.877 li
358.721 317.877 mo
357.08 317.877 li
357.499 315.176 li
359.14 315.176 li
358.721 317.877 li
348.413 317.877 mo
346.772 317.877 li
346.354 315.176 li
347.994 315.176 li
348.413 317.877 li
337.467 317.877 mo
335.826 317.877 li
336.245 315.176 li
337.886 315.176 li
337.467 317.877 li
f
368.663 311.402 mo
336.83 311.402 li
337.249 308.702 li
338.889 308.702 li
338.639 310.317 li
345.601 310.317 li
345.35 308.702 li
346.991 308.702 li
347.241 310.317 li
358.252 310.317 li
358.502 308.702 li
360.144 308.702 li
359.893 310.317 li
366.854 310.317 li
366.604 308.702 li
368.245 308.702 li
368.663 311.402 li
f
370.671 324.351 mo
334.823 324.351 li
335.241 321.649 li
336.882 321.649 li
336.612 323.389 li
347.627 323.389 li
347.357 321.649 li
348.998 321.649 li
349.268 323.389 li
356.226 323.389 li
356.495 321.649 li
358.136 321.649 li
357.866 323.389 li
368.881 323.389 li
368.611 321.649 li
370.252 321.649 li
370.671 324.351 li
f
375.546 228.43 mo
374.285 228.43 373.263 227.407 373.263 226.146 cv
373.263 226.056 373.268 225.966 373.278 225.879 cv
377.426 226.623 li
377.236 227.682 li
376.818 228.141 376.216 228.43 375.546 228.43 cv
.132906 .462257 .668879 .00317388 cmyk
f
364.566 261.187 mo
323.044 253.729 li
329.251 219.167 li
370.773 226.624 li
364.566 261.187 li
cp
.17258 .0816358 .095613 0 cmyk
f
336.104 226.349 mo
335.903 227.469 334.831 228.215 333.71 228.014 cv
332.589 227.813 331.844 226.74 332.045 225.619 cv
332.246 224.499 333.318 223.753 334.439 223.954 cv
335.561 224.155 336.306 225.228 336.104 226.349 cv
cp
.0154421 .00189212 .00241093 0 cmyk
f
343.556 227.687 mo
343.354 228.808 342.282 229.553 341.161 229.352 cv
340.04 229.15 339.295 228.079 339.496 226.958 cv
339.697 225.836 340.77 225.091 341.891 225.292 cv
343.012 225.494 343.757 226.565 343.556 227.687 cv
cp
f
351.007 229.024 mo
350.806 230.146 349.733 230.891 348.612 230.69 cv
347.491 230.489 346.745 229.417 346.947 228.295 cv
347.148 227.174 348.22 226.429 349.341 226.63 cv
350.462 226.832 351.208 227.904 351.007 229.024 cv
cp
f
358.458 230.363 mo
358.256 231.484 357.185 232.229 356.063 232.028 cv
354.942 231.827 354.196 230.755 354.397 229.634 cv
354.6 228.513 355.671 227.767 356.792 227.968 cv
357.913 228.17 358.659 229.242 358.458 230.363 cv
cp
f
365.908 231.701 mo
365.707 232.822 364.636 233.567 363.515 233.366 cv
362.394 233.165 361.647 232.093 361.849 230.972 cv
362.05 229.851 363.122 229.105 364.243 229.307 cv
365.364 229.508 366.11 230.58 365.908 231.701 cv
cp
f
333.347 241.704 mo
333.146 242.825 332.073 243.571 330.952 243.369 cv
329.831 243.168 329.086 242.096 329.287 240.975 cv
329.488 239.854 330.561 239.108 331.682 239.31 cv
332.803 239.511 333.548 240.583 333.347 241.704 cv
cp
f
340.798 243.042 mo
340.597 244.163 339.524 244.909 338.403 244.708 cv
337.282 244.506 336.537 243.434 336.738 242.313 cv
336.939 241.192 338.012 240.446 339.133 240.647 cv
340.254 240.849 340.999 241.921 340.798 243.042 cv
cp
f
348.249 244.38 mo
348.048 245.501 346.976 246.247 345.854 246.045 cv
344.733 245.844 343.988 244.772 344.189 243.651 cv
344.391 242.53 345.463 241.785 346.584 241.986 cv
347.705 242.187 348.45 243.259 348.249 244.38 cv
cp
f
355.7 245.718 mo
355.499 246.839 354.427 247.585 353.306 247.384 cv
352.185 247.182 351.439 246.11 351.641 244.989 cv
351.842 243.868 352.914 243.123 354.034 243.324 cv
355.155 243.525 355.901 244.597 355.7 245.718 cv
cp
f
363.151 247.057 mo
362.949 248.177 361.878 248.923 360.757 248.722 cv
359.636 248.521 358.89 247.448 359.091 246.327 cv
359.293 245.207 360.364 244.461 361.485 244.662 cv
362.606 244.863 363.353 245.935 363.151 247.057 cv
cp
f
334.726 234.026 mo
334.524 235.147 333.452 235.893 332.331 235.691 cv
331.21 235.49 330.465 234.418 330.666 233.297 cv
330.867 232.176 331.939 231.431 333.061 231.632 cv
334.182 231.833 334.927 232.905 334.726 234.026 cv
cp
f
342.177 235.364 mo
341.976 236.485 340.903 237.231 339.782 237.03 cv
338.661 236.828 337.916 235.756 338.117 234.635 cv
338.318 233.514 339.391 232.769 340.512 232.97 cv
341.633 233.171 342.378 234.243 342.177 235.364 cv
cp
f
349.628 236.703 mo
349.427 237.823 348.354 238.569 347.233 238.368 cv
346.112 238.167 345.367 237.094 345.568 235.973 cv
345.77 234.853 346.842 234.107 347.962 234.308 cv
349.083 234.509 349.829 235.582 349.628 236.703 cv
cp
f
357.079 238.041 mo
356.877 239.162 355.806 239.907 354.685 239.706 cv
353.563 239.504 352.817 238.433 353.02 237.312 cv
353.221 236.19 354.292 235.445 355.413 235.646 cv
356.534 235.848 357.28 236.919 357.079 238.041 cv
cp
f
364.529 239.378 mo
364.328 240.5 363.257 241.245 362.136 241.044 cv
361.015 240.843 360.269 239.771 360.47 238.649 cv
360.672 237.528 361.743 236.783 362.864 236.984 cv
363.985 237.186 364.731 238.258 364.529 239.378 cv
cp
f
331.968 249.382 mo
331.767 250.503 330.694 251.248 329.573 251.047 cv
328.452 250.846 327.707 249.774 327.908 248.653 cv
328.109 247.532 329.182 246.786 330.303 246.987 cv
331.424 247.188 332.169 248.261 331.968 249.382 cv
cp
f
339.419 250.72 mo
339.218 251.841 338.146 252.587 337.024 252.385 cv
335.903 252.184 335.158 251.111 335.359 249.991 cv
335.561 248.87 336.633 248.124 337.754 248.326 cv
338.875 248.527 339.62 249.599 339.419 250.72 cv
cp
f
346.87 252.058 mo
346.669 253.179 345.597 253.925 344.476 253.724 cv
343.354 253.521 342.609 252.45 342.811 251.329 cv
343.012 250.208 344.084 249.462 345.205 249.664 cv
346.326 249.865 347.071 250.937 346.87 252.058 cv
cp
f
354.321 253.396 mo
354.12 254.518 353.048 255.263 351.927 255.062 cv
350.806 254.86 350.061 253.788 350.262 252.667 cv
350.463 251.546 351.535 250.8 352.656 251.002 cv
353.777 251.203 354.522 252.275 354.321 253.396 cv
cp
f
361.772 254.734 mo
361.57 255.855 360.499 256.601 359.378 256.399 cv
358.257 256.198 357.511 255.126 357.713 254.005 cv
357.914 252.884 358.985 252.139 360.106 252.34 cv
361.228 252.541 361.974 253.613 361.772 254.734 cv
cp
f
357.412 284.512 mo
351.309 284.512 li
351.309 284.512 351.514 283.469 351.735 282.236 cv
351.735 282.228 li
351.851 281.916 354.569 282.097 354.569 282.097 cv
357.412 284.512 li
cp
.815946 .639521 .563195 .523217 cmyk
f
344.479 271.414 mo
341.471 271.71 339.174 271.416 339.174 271.416 cv
339.174 271.589 339.174 271.762 339.183 271.934 cv
339.215 273.01 339.552 274.07 340.144 274.966 cv
340.678 275.771 341.244 276.913 341.112 277.939 cv
340.907 279.566 339.896 280.535 336.258 278.522 cv
336.353 281.805 li
336.353 281.805 341.392 284.923 343.832 283.559 cv
346.235 282.224 346.271 279.784 346.201 275.168 cv
344.479 271.414 li
cp
.779202 .591241 .502647 .329534 cmyk
f
337.868 255.192 mo
337.876 255.324 336.763 257.051 338.338 258.792 cv
331.814 259.836 331.92 255.324 331.92 255.324 cv
333.078 255.611 335.025 255.792 337.621 255.25 cv
337.868 255.192 li
cp
.0567636 .141695 .269688 0 cmyk
f
368.047 252.233 mo
368.194 252.578 367.024 254.001 364.814 254.19 cv
364.814 254.19 361.89 260.672 359.532 261.1 cv
358.185 261.354 356.541 261.256 354.973 260.902 cv
356.706 259.021 356.287 257.222 356.287 257.222 cv
357.108 257.509 357.913 257.657 358.538 257.509 cv
360.107 257.131 362.301 253.895 362.917 253.196 cv
363.533 252.498 365.283 250.813 365.727 251.061 cv
366.17 251.298 364.576 252.44 364.798 252.662 cv
365.02 252.884 367.891 251.896 368.047 252.233 cv
cp
f
355.498 249.22 mo
355.213 250.477 354.458 253.609 352.822 253.7 cv
351.926 253.748 350.93 253.406 350.93 253.406 cv
350.93 253.406 350.655 253.737 350.279 254.314 cv
349.105 253.764 347.488 253.057 346.93 252.884 cv
346.749 252.843 li
347.164 252.237 347.504 251.791 348.071 250.715 cv
348.269 250.929 349.131 251.791 350.183 251.882 cv
351.103 251.956 351.819 251.341 351.819 251.095 cv
351.819 250.61 352.171 249.671 352.943 249.688 cv
353.707 249.705 353.264 251.109 353.264 251.175 cv
353.798 251.175 li
354.191 249.902 354.759 249.434 355.498 249.22 cv
cp
f
343.394 271.499 mo
343.394 271.499 343.361 274.905 346.207 275.537 cv
348.824 276.119 353.383 275.537 353.383 275.537 cv
353.383 275.537 352.062 278.585 351.521 282.352 cv
351.521 282.352 353.071 282.517 354.699 282.172 cv
354.699 282.172 357.868 276.384 357.965 273.571 cv
358.062 270.759 351.35 269.601 351.35 269.601 cv
343.394 271.499 li
cp
.779202 .591241 .502647 .329534 cmyk
f
349.805 254.092 mo
351.004 254.65 352.245 255.258 352.927 255.628 cv
353.731 256.063 355.082 256.67 356.331 257.097 cv
356.331 257.097 356.706 259.252 354.973 261.134 cv
353.772 260.862 352.583 260.516 351.694 260.31 cv
351.694 260.31 351.438 265.897 351.35 269.601 cv
345.845 272.271 338.727 271.644 338.727 271.644 cv
338.678 266.155 340.433 258.713 340.433 258.713 cv
339.733 258.805 338.931 258.909 338.457 258.91 cv
336.608 257.168 337.876 255.324 337.868 255.192 cv
341.066 253.786 341.962 252.785 343.394 252.615 cv
344.368 252.499 345.549 252.613 346.749 252.843 cv
346.93 252.884 li
347.488 253.057 348.63 253.541 349.805 254.092 cv
cp
.76437 .0889906 .320897 0 cmyk
f
336.321 278.604 mo
335.317 278.362 334.59 278.436 334.481 278.453 cv
334.372 278.472 334.365 281.588 334.402 282.516 cv
334.433 283.313 334.867 284.039 335.99 284.286 cv
336.224 284.338 336.403 284.086 336.302 283.869 cv
336.062 283.357 335.838 282.521 336.353 281.702 cv
336.321 278.604 li
cp
.815946 .639521 .563195 .523217 cmyk
f
354.971 246.744 mo
355.189 246.844 355.385 246.981 355.527 247.218 cv
355.825 247.716 355.986 248.352 355.768 248.912 cv
355.589 249.372 354.9 249.403 354.544 249.773 cv
354.172 250.16 353.954 250.668 353.798 251.175 cv
353.264 251.175 li
353.264 251.109 353.707 249.705 352.943 249.688 cv
352.171 249.671 352.049 250.67 352.049 251.155 cv
352.049 251.401 351.103 251.956 350.183 251.882 cv
349.131 251.791 348.091 251.249 347.894 251.035 cv
347.984 250.855 348.252 250.345 348.334 250.148 cv
348.916 248.742 349.307 246.185 351.146 245.916 cv
351.542 245.858 351.945 245.901 352.339 245.974 cv
353.003 246.096 353.677 246.27 354.307 246.503 cv
354.533 246.587 354.763 246.649 354.971 246.744 cv
cp
.0033875 .779599 .342412 0 cmyk
f
348.96 247.375 mo
349.481 245.486 351.429 244.38 353.317 244.901 cv
355.204 245.422 356.31 247.37 355.788 249.258 cv
355.783 249.273 li
348.956 247.392 li
348.96 247.375 li
cp
.0158694 .165713 .759853 0 cmyk
f
348.956 247.392 mo
355.783 249.273 li
356.544 249.483 li
356.383 250.061 li
355.573 249.836 li
355.067 249.698 li
352.477 248.983 li
352.211 248.91 li
348.924 248.006 li
348.849 247.984 li
348.039 247.76 li
348.197 247.183 li
348.956 247.392 li
cp
f
346.094 345.825 mo
346.669 349.531 li
347.16 349.531 li
348.936 338.081 li
347.295 338.081 li
346.094 345.825 li
cp
349.573 323.389 mo
351.214 323.389 li
352.989 311.938 li
351.349 311.938 li
349.573 323.389 li
cp
347.546 336.46 mo
349.187 336.46 li
350.963 325.01 li
349.321 325.01 li
347.546 336.46 li
cp
351.6 310.317 mo
353.24 310.317 li
355.017 298.866 li
353.375 298.866 li
351.6 310.317 li
cp
325.906 349.531 mo
327.682 338.081 li
343.253 338.081 li
343.001 336.46 li
327.933 336.46 li
329.708 325.01 li
341.226 325.01 li
340.975 323.389 li
329.96 323.389 li
331.735 311.938 li
339.199 311.938 li
338.947 310.317 li
331.986 310.317 li
333.762 298.866 li
337.172 298.866 li
336.921 297.245 li
334.013 297.245 li
335.467 287.869 li
334.894 284.174 li
334.399 284.174 li
323.583 353.933 li
325.224 353.933 li
325.654 351.152 li
345.269 351.152 li
344.837 353.933 li
345.711 353.933 li
345.028 349.531 li
325.906 349.531 li
cp
356.399 285.795 mo
355.402 285.795 li
353.627 297.245 li
355.268 297.245 li
356.722 287.869 li
356.399 285.795 li
cp
.908354 .494026 .385138 .133608 cmyk
f
346.669 349.531 mo
346.094 345.825 li
344.894 338.081 li
364.507 338.081 li
366.282 349.531 li
346.669 349.531 li
cp
342.866 325.01 mo
362.48 325.01 li
364.256 336.46 li
344.643 336.46 li
342.866 325.01 li
cp
340.84 311.938 mo
360.453 311.938 li
362.229 323.389 li
342.615 323.389 li
340.84 311.938 li
cp
338.813 298.866 mo
358.427 298.866 li
360.202 310.317 li
340.589 310.317 li
338.813 298.866 li
cp
336.786 285.795 mo
356.399 285.795 li
356.722 287.869 li
358.175 297.245 li
338.562 297.245 li
336.786 285.795 li
cp
357.789 284.174 mo
334.894 284.174 li
335.467 287.869 li
336.921 297.245 li
337.172 298.866 li
338.947 310.317 li
339.199 311.938 li
340.975 323.389 li
341.226 325.01 li
343.001 336.46 li
343.253 338.081 li
345.028 349.531 li
345.711 353.933 li
347.352 353.933 li
346.92 351.152 li
366.534 351.152 li
366.965 353.933 li
368.605 353.933 li
357.789 284.174 li
cp
.883513 .462104 .292668 .0517891 cmyk
f
466.582 275.359 mo
458.322 275.359 451.626 286.031 451.626 299.197 cv
451.626 312.362 458.322 323.034 466.582 323.034 cv
474.843 323.034 481.539 312.362 481.539 299.197 cv
481.539 286.031 474.843 275.359 466.582 275.359 cv
cp
.821286 .327581 .295872 .0164492 cmyk
f
474.328 309.744 mo
467.297 315.914 li
467.297 300.286 li
465.868 300.286 li
465.868 310.64 li
459.341 304.964 li
465.868 312.47 li
465.868 342.044 li
467.297 342.044 li
467.297 317.757 li
474.328 309.744 li
cp
.771847 .22327 .286503 .00164797 cmyk
f
124.364 275.359 mo
116.104 275.359 109.407 286.031 109.407 299.197 cv
109.407 312.362 116.104 323.034 124.364 323.034 cv
132.625 323.034 139.321 312.362 139.321 299.197 cv
139.321 286.031 132.625 275.359 124.364 275.359 cv
cp
.821286 .327581 .295872 .0164492 cmyk
f
132.11 309.744 mo
125.079 315.914 li
125.079 300.286 li
123.65 300.286 li
123.65 310.64 li
117.123 304.964 li
123.65 312.47 li
123.65 342.044 li
125.079 342.044 li
125.079 317.757 li
132.11 309.744 li
cp
.771847 .22327 .286503 .00164797 cmyk
f
31.186 293.789 mo
25.8784 293.789 21.5757 300.646 21.5757 309.105 cv
21.5757 317.564 25.8784 324.423 31.186 324.423 cv
36.4937 324.423 40.7959 317.564 40.7959 309.105 cv
40.7959 300.646 36.4937 293.789 31.186 293.789 cv
cp
.821286 .327581 .295872 .0164492 cmyk
f
36.1626 315.883 mo
31.645 319.848 li
31.645 309.806 li
30.7266 309.806 li
30.7266 316.459 li
26.5332 312.812 li
30.7266 317.635 li
30.7266 336.637 li
31.645 336.637 li
31.645 321.031 li
36.1626 315.883 li
cp
.771847 .22327 .286503 .00164797 cmyk
f
154.278 275.359 mo
146.018 275.359 139.321 286.031 139.321 299.197 cv
139.321 312.362 146.018 323.034 154.278 323.034 cv
162.538 323.034 169.234 312.362 169.234 299.197 cv
169.234 286.031 162.538 275.359 154.278 275.359 cv
cp
.821286 .327581 .295872 .0164492 cmyk
f
162.023 309.744 mo
154.992 315.914 li
154.992 300.286 li
153.563 300.286 li
153.563 310.64 li
147.036 304.964 li
153.563 312.47 li
153.563 342.044 li
154.992 342.044 li
154.992 317.757 li
162.023 309.744 li
cp
.771847 .22327 .286503 .00164797 cmyk
f
440.403 275.359 mo
432.143 275.359 425.446 286.031 425.446 299.197 cv
425.446 312.362 432.143 323.034 440.403 323.034 cv
448.664 323.034 455.36 312.362 455.36 299.197 cv
455.36 286.031 448.664 275.359 440.403 275.359 cv
cp
.821286 .327581 .295872 .0164492 cmyk
f
448.149 309.744 mo
441.118 315.914 li
441.118 300.286 li
439.689 300.286 li
439.689 310.64 li
433.162 304.964 li
439.689 312.47 li
439.689 342.044 li
441.118 342.044 li
441.118 317.757 li
448.149 309.744 li
cp
.771847 .22327 .286503 .00164797 cmyk
f
169.713 346.283 mo
172.585 344.528 173.873 341.872 173.243 340.547 cv
172.559 339.109 169.189 338.338 165.595 340.253 cv
165.713 339.711 167.473 331.425 165.595 330.693 cv
164.09 330.107 160.987 334.666 160.301 335.694 cv
160.992 329.71 160.845 326.572 159.86 326.281 cv
159.136 326.068 157.959 327.392 156.33 330.253 cv
155.737 328.191 155.149 327.161 154.565 327.164 cv
153.421 327.169 152.293 331.14 151.183 339.076 cv
150.637 336.179 149.476 331.004 147.947 330.988 cv
146.038 330.968 144.546 339.004 144.124 341.43 cv
141.643 338.813 140.123 337.687 139.564 338.047 cv
138.857 338.504 139.69 341.348 142.064 346.577 cv
151.281 346.479 160.497 346.381 169.713 346.283 cv
cp
.821286 .327581 .295872 .0164492 cmyk
f
35.043 337.357 mo
36.6353 336.385 37.3491 334.912 37 334.177 cv
36.6211 333.38 34.7524 332.952 32.7598 334.014 cv
32.8252 333.713 33.8008 329.119 32.7598 328.714 cv
31.9253 328.389 30.2046 330.916 29.8242 331.486 cv
30.2075 328.168 30.126 326.429 29.5796 326.268 cv
29.1782 326.149 28.5259 326.883 27.6226 328.469 cv
27.2939 327.326 26.9678 326.755 26.644 326.757 cv
26.0093 326.76 25.3843 328.961 24.7686 333.361 cv
24.4658 331.755 23.8223 328.886 22.9746 328.877 cv
21.916 328.866 21.0884 333.321 20.8545 334.666 cv
19.479 333.216 18.6362 332.591 18.3267 332.791 cv
17.9341 333.044 18.3965 334.621 19.7129 337.521 cv
24.8228 337.466 29.9331 337.412 35.043 337.357 cv
cp
f
417.742 347.029 mo
414.87 345.274 413.582 342.618 414.213 341.294 cv
414.896 339.855 418.266 339.084 421.86 340.999 cv
421.742 340.457 419.982 332.172 421.86 331.44 cv
423.365 330.854 426.468 335.412 427.154 336.44 cv
426.463 330.456 426.61 327.318 427.596 327.028 cv
428.319 326.814 429.496 328.139 431.125 330.999 cv
431.718 328.938 432.306 327.908 432.89 327.91 cv
434.034 327.915 435.162 331.886 436.272 339.823 cv
436.818 336.926 437.979 331.75 439.508 331.734 cv
441.417 331.714 442.91 339.75 443.332 342.176 cv
445.813 339.56 447.332 338.433 447.891 338.793 cv
448.599 339.25 447.765 342.094 445.391 347.323 cv
436.175 347.226 426.958 347.127 417.742 347.029 cv
cp
f
435.708 361.438 mo
415.185 361.438 li
414.74 361.438 414.377 361.074 414.377 360.63 cv
414.377 359.678 li
414.377 359.232 414.74 358.869 415.185 358.869 cv
435.708 358.869 li
436.152 358.869 436.517 359.232 436.517 359.678 cv
436.517 360.63 li
436.517 361.074 436.152 361.438 435.708 361.438 cv
level3{
gsave
clp
[6.17552e-15 -100.854 100.854 6.17552e-15 250 418.552 ]ct
/7 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[6.17552e-15 -100.854 100.854 6.17552e-15 250 418.552 ]ct
clp
/7 /Gradient get_res exec grestore
}if
np
432.678 358.175 mo
418.048 358.175 li
419.409 353.785 li
420.666 349.74 li
421.813 346.04 li
423.07 341.995 li
423.275 341.335 li
423.911 339.284 426.814 339.284 427.451 341.335 cv
427.655 341.995 li
428.912 346.04 li
430.061 349.74 li
431.316 353.785 li
432.678 358.175 li
cp
0 .493324 .647425 0 cmyk
f
433.06 360.153 mo
417.667 360.153 li
416.716 360.153 416.232 359.011 416.896 358.328 cv
417.098 358.12 417.376 358.002 417.667 358.002 cv
433.06 358.002 li
433.35 358.002 433.628 358.12 433.831 358.328 cv
434.493 359.011 434.01 360.153 433.06 360.153 cv
cp
f
428.912 346.04 mo
421.813 346.04 li
423.07 341.995 li
427.655 341.995 li
428.912 346.04 li
cp
.0154421 .00189212 .00241093 0 cmyk
f
431.316 353.785 mo
419.409 353.785 li
420.666 349.74 li
430.061 349.74 li
431.316 353.785 li
cp
f
190.242 361.438 mo
169.72 361.438 li
169.275 361.438 168.911 361.074 168.911 360.63 cv
168.911 359.678 li
168.911 359.232 169.275 358.869 169.72 358.869 cv
190.242 358.869 li
190.687 358.869 191.051 359.232 191.051 359.678 cv
191.051 360.63 li
191.051 361.074 190.687 361.438 190.242 361.438 cv
level3{
gsave
clp
[6.17552e-15 -100.854 100.854 6.17552e-15 250 418.552 ]ct
/7 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[6.17552e-15 -100.854 100.854 6.17552e-15 250 418.552 ]ct
clp
/7 /Gradient get_res exec grestore
}if
np
187.212 358.175 mo
172.582 358.175 li
173.943 353.785 li
175.2 349.74 li
176.348 346.04 li
177.604 341.995 li
177.809 341.335 li
178.445 339.284 181.349 339.284 181.985 341.335 cv
182.189 341.995 li
183.446 346.04 li
184.594 349.74 li
185.851 353.785 li
187.212 358.175 li
cp
0 .493324 .647425 0 cmyk
f
187.593 360.153 mo
172.201 360.153 li
171.25 360.153 170.767 359.011 171.429 358.328 cv
171.632 358.12 171.91 358.002 172.201 358.002 cv
187.593 358.002 li
187.884 358.002 188.163 358.12 188.365 358.328 cv
189.027 359.011 188.544 360.153 187.593 360.153 cv
cp
f
183.446 346.04 mo
176.348 346.04 li
177.604 341.995 li
182.189 341.995 li
183.446 346.04 li
cp
.0154421 .00189212 .00241093 0 cmyk
f
185.851 353.785 mo
173.943 353.785 li
175.2 349.74 li
184.594 349.74 li
185.851 353.785 li
cp
f
303.907 370.307 mo
234.416 370.307 li
233.495 370.307 232.741 369.553 232.741 368.631 cv
232.741 367.709 233.495 366.955 234.416 366.955 cv
303.907 366.955 li
304.829 366.955 305.583 367.709 305.583 368.631 cv
305.583 369.553 304.829 370.307 303.907 370.307 cv
level3{
gsave
clp
[6.17552e-15 -100.854 100.854 6.17552e-15 250 418.552 ]ct
/7 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[6.17552e-15 -100.854 100.854 6.17552e-15 250 418.552 ]ct
clp
/7 /Gradient get_res exec grestore
}if
np
340.164 384.387 mo
313.394 384.387 li
312.814 384.387 312.339 383.912 312.339 383.331 cv
312.339 382.09 li
312.339 381.51 312.814 381.034 313.394 381.034 cv
340.164 381.034 li
340.745 381.034 341.22 381.51 341.22 382.09 cv
341.22 383.331 li
341.22 383.912 340.745 384.387 340.164 384.387 cv
level3{
gsave
clp
[6.17552e-15 -100.854 100.854 6.17552e-15 250 418.552 ]ct
/7 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[6.17552e-15 -100.854 100.854 6.17552e-15 250 418.552 ]ct
clp
/7 /Gradient get_res exec grestore
}if
np
248.357 367.873 mo
245.741 367.873 li
245.741 325.096 li
248.357 325.096 li
248.357 367.873 li
cp
.112154 .0440375 .0521248 0 cmyk
f
291.365 367.873 mo
288.748 367.873 li
288.748 325.096 li
291.365 325.096 li
291.365 367.873 li
cp
f
298.703 329.631 mo
298.703 339.293 li
298.703 340.024 298.11 340.616 297.379 340.616 cv
239.338 340.616 li
238.607 340.616 238.015 340.024 238.015 339.293 cv
238.015 329.631 li
238.015 328.9 238.607 328.308 239.338 328.308 cv
297.379 328.308 li
298.11 328.308 298.703 328.9 298.703 329.631 cv
cp
0 .493324 .647425 0 cmyk
f
251.321 328.308 mo
242.381 340.616 li
239.338 340.616 li
238.607 340.616 238.015 340.024 238.015 339.293 cv
238.015 338.479 li
245.403 328.308 li
251.321 328.308 li
cp
.112154 .0440375 .0521248 0 cmyk
f
263.408 328.308 mo
254.467 340.616 li
248.549 340.616 li
257.489 328.308 li
263.408 328.308 li
cp
f
275.491 328.308 mo
266.55 340.616 li
260.635 340.616 li
269.576 328.308 li
275.491 328.308 li
cp
f
287.577 328.308 mo
278.636 340.616 li
272.721 340.616 li
281.662 328.308 li
287.577 328.308 li
cp
f
298.703 329.631 mo
298.703 329.631 li
290.723 340.616 li
284.808 340.616 li
293.749 328.308 li
297.379 328.308 li
298.11 328.308 298.703 328.9 298.703 329.631 cv
cp
f
298.703 344.055 mo
298.703 353.717 li
298.703 354.447 298.11 355.04 297.379 355.04 cv
239.338 355.04 li
238.607 355.04 238.015 354.447 238.015 353.717 cv
238.015 344.055 li
238.015 343.324 238.607 342.731 239.338 342.731 cv
297.379 342.731 li
298.11 342.731 298.703 343.324 298.703 344.055 cv
cp
0 .493324 .647425 0 cmyk
f
251.321 342.731 mo
242.381 355.04 li
239.338 355.04 li
238.607 355.04 238.015 354.447 238.015 353.717 cv
238.015 352.903 li
245.403 342.731 li
251.321 342.731 li
cp
.112154 .0440375 .0521248 0 cmyk
f
263.408 342.731 mo
254.467 355.04 li
248.549 355.04 li
257.489 342.731 li
263.408 342.731 li
cp
f
275.491 342.731 mo
266.55 355.04 li
260.635 355.04 li
269.576 342.731 li
275.491 342.731 li
cp
f
287.577 342.731 mo
278.636 355.04 li
272.721 355.04 li
281.662 342.731 li
287.577 342.731 li
cp
f
298.703 344.055 mo
298.703 344.055 li
290.723 355.04 li
284.808 355.04 li
293.749 342.731 li
297.379 342.731 li
298.11 342.731 298.703 343.324 298.703 344.055 cv
cp
f
336.212 380.129 mo
317.128 380.129 li
318.903 374.403 li
320.543 369.127 li
322.04 364.3 li
323.68 359.023 li
323.946 358.162 li
324.776 355.487 328.563 355.487 329.394 358.162 cv
329.66 359.023 li
331.3 364.3 li
332.797 369.127 li
334.436 374.403 li
336.212 380.129 li
cp
0 .493324 .647425 0 cmyk
f
336.709 382.711 mo
316.631 382.711 li
315.39 382.711 314.76 381.22 315.624 380.329 cv
315.888 380.058 316.251 379.904 316.631 379.904 cv
336.709 379.904 li
337.089 379.904 337.452 380.058 337.716 380.329 cv
338.58 381.22 337.949 382.711 336.709 382.711 cv
cp
f
331.3 364.3 mo
322.04 364.3 li
323.68 359.023 li
329.66 359.023 li
331.3 364.3 li
cp
.0154421 .00189212 .00241093 0 cmyk
f
334.436 374.403 mo
318.903 374.403 li
320.543 369.127 li
332.797 369.127 li
334.436 374.403 li
cp
f
283.51 208.354 mo
280.249 208.354 li
280.422 207.937 280.521 207.481 280.521 207.003 cv
280.521 205.062 278.932 203.473 276.991 203.473 cv
268.652 203.473 li
268.843 203.004 268.954 202.494 268.954 201.958 cv
268.954 199.733 267.133 197.913 264.909 197.913 cv
252.148 197.913 li
249.923 197.913 248.104 199.733 248.104 201.958 cv
248.104 202.494 248.214 203.004 248.405 203.473 cv
245.507 203.473 li
243.566 203.473 241.977 205.062 241.977 207.003 cv
241.977 207.481 242.075 207.937 242.25 208.354 cv
237.71 208.354 li
236.512 208.354 235.531 209.334 235.531 210.533 cv
235.531 211.732 236.512 212.712 237.71 212.712 cv
283.51 212.712 li
284.708 212.712 285.689 211.732 285.689 210.533 cv
285.689 209.334 284.708 208.354 283.51 208.354 cv
cp
.600183 0 .235935 0 cmyk
f
460.343 233.164 mo
458.383 233.164 li
458.487 232.913 458.546 232.639 458.546 232.352 cv
458.546 231.185 457.592 230.23 456.425 230.23 cv
451.413 230.23 li
451.528 229.949 451.595 229.642 451.595 229.32 cv
451.595 227.983 450.501 226.889 449.164 226.889 cv
441.495 226.889 li
440.158 226.889 439.064 227.983 439.064 229.32 cv
439.064 229.642 439.131 229.949 439.246 230.23 cv
437.504 230.23 li
436.337 230.23 435.383 231.185 435.383 232.352 cv
435.383 232.639 435.441 232.913 435.546 233.164 cv
432.818 233.164 li
432.098 233.164 431.509 233.753 431.509 234.474 cv
431.509 235.194 432.098 235.783 432.818 235.783 cv
460.343 235.783 li
461.063 235.783 461.652 235.194 461.652 234.474 cv
461.652 233.753 461.063 233.164 460.343 233.164 cv
cp
f
375.982 137.014 mo
317.149 137.014 li
316.134 137.014 315.304 136.183 315.304 135.167 cv
315.304 134.152 316.134 133.321 317.149 133.321 cv
375.982 133.321 li
376.998 133.321 377.829 134.152 377.829 135.167 cv
377.829 136.183 376.998 137.014 375.982 137.014 cv
cp
f
363.607 135.167 mo
325.08 135.167 li
323.062 135.167 321.41 133.516 321.41 131.498 cv
321.41 129.479 323.062 127.828 325.08 127.828 cv
363.607 127.828 li
365.626 127.828 367.277 129.479 367.277 131.498 cv
367.277 133.516 365.626 135.167 363.607 135.167 cv
cp
f
329.354 130.7 mo
342.295 130.7 li
343.908 130.7 345.229 129.38 345.229 127.768 cv
345.229 126.154 343.908 124.834 342.295 124.834 cv
329.354 124.834 li
327.741 124.834 326.422 126.154 326.422 127.768 cv
326.422 129.38 327.741 130.7 329.354 130.7 cv
cp
f
105.597 244.443 mo
67.6074 244.443 li
63.3896 244.443 59.9389 240.992 59.9389 236.774 cv
59.9389 232.557 63.3896 229.106 67.6074 229.106 cv
105.597 229.106 li
109.814 229.106 113.265 232.557 113.265 236.774 cv
113.265 240.992 109.814 244.443 105.597 244.443 cv
level3{
gsave
clp
[1.87077e-14 305.52 -305.52 1.87077e-14 250 95.6212 ]ct
/3 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[1.87077e-14 305.52 -305.52 1.87077e-14 250 95.6212 ]ct
clp
/3 /Gradient get_res exec grestore
}if
np
.0154421 .00189212 .00241093 0 cmyk
%ADOBeginSubsetFont: FiraSans-Light AddGlyphs
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2019 Adobe System Incorporated. All rights reserved.
systemdict begin
RCGASP+FiraSans-Light dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/a <1C60D8A8C9B78324EEFEE4B53E1F282A28F6D7CB8C2426968A5A83A130DC
47BF059367787018ACDEFA2C9F9A3FC9110DCF6AFF7AC4C4293A5FE929EC6462
8679FB3D8834B68CEE02F74EAE29782A22118FDAF6AF1B553E4D74CBA89E1001
D2734F4802A906E9AA14C67AB707257390B37ABCE2A6169D141B74A573C632AC
4E5A0BFCE2> |-
/m <1C60D8A8C9B6889AFC1D997FE0B81853AAE6B9A31A610AD5B666995FB62E
E931450D3A9552243380C24E7D222F9558CA27FE61341CD05FADE04F548C4607
25A973EEBF70B8A5D32C7053582791DCD32097D8C3705DCAE7C47D197F0E3ADB
70C37282EB46334F0D24A3A4F84FD2851973780D943399390B611DA869DB7289
9B3E0697C4BAD0457D6DB99BCA22F479175B245423F9AA536F82> |-
systemdict /gcheck known {setglobal} if end {end} if
end
RCGASP+FiraSans-Light /Encoding get
dup 97 /a put
dup 109 /m put
pop
%ADOEndSubsetFont
/RCGASP+FiraSans-Light*1 
[32{/.notdef}rp /space 64{/.notdef}rp /a /b /c /d /e 
3{/.notdef}rp /i 3{/.notdef}rp /m /n /o 2{/.notdef}rp /r 
/s /t /u /.notdef /w 136{/.notdef}rp]
RCGASP+FiraSans-Light nf
RCGASP+FiraSans-Light*1 [8.72842 0 0 -8.72842 0 0 ]msf
66.6489 239.345 mo
(read more)
[2.99365 4.59082 4.67822 5.10596 2.43506 7.44531 4.98389 2.99365 0 ]xsh
260.104 467.948 mo
259.672 468.392 259.301 468.88 258.996 469.401 cv
258.53 469.161 li
258.463 468.863 258.181 468.658 257.872 468.694 cv
257.541 468.733 257.304 469.033 257.343 469.364 cv
257.382 469.695 257.682 469.932 258.013 469.894 cv
258.196 469.841 li
258.647 470.075 li
258.396 470.629 258.215 471.214 258.108 471.819 cv
258.854 471.95 li
259.085 470.645 259.705 469.444 260.646 468.478 cv
260.104 467.948 li
cp
f
265.592 465.646 mo
265.421 465.646 265.251 465.652 265.082 465.664 cv
265.008 465.037 li
265.196 464.889 265.304 464.648 265.274 464.393 cv
265.228 464 264.872 463.719 264.479 463.765 cv
264.086 463.812 263.805 464.167 263.851 464.561 cv
263.881 464.814 264.04 465.021 264.255 465.124 cv
264.329 465.748 li
263.615 465.864 262.926 466.08 262.269 466.395 cv
262.596 467.078 li
263.53 466.631 264.538 466.404 265.592 466.404 cv
266.088 466.404 266.584 466.458 267.067 466.563 cv
267.228 465.821 li
266.692 465.705 266.142 465.646 265.592 465.646 cv
cp
f
272.194 468.194 mo
272.525 468.153 272.76 467.853 272.72 467.521 cv
272.679 467.19 272.378 466.955 272.047 466.996 cv
271.738 467.034 271.512 467.3 271.518 467.604 cv
271.102 467.968 li
270.684 467.538 270.212 467.155 269.694 466.829 cv
269.29 467.47 li
270.424 468.185 271.31 469.196 271.853 470.396 cv
272.543 470.083 li
272.293 469.528 271.976 469.011 271.602 468.538 cv
272.003 468.187 li
272.194 468.194 li
cp
f
265.044 475.855 mo
264.658 475.878 264.269 475.89 263.887 475.89 cv
263.007 475.89 262.154 475.829 261.409 475.711 cv
261.018 475.648 260.563 475.556 260.138 475.419 cv
261.185 477.279 263.208 478.544 265.527 478.544 cv
268.382 478.544 270.789 476.628 271.477 474.04 cv
270.794 474.489 269.971 474.865 269.018 475.162 cv
267.838 475.53 266.463 475.77 265.044 475.855 cv
cp
f
268.17 472.77 mo
267.42 472.77 266.81 472.159 266.81 471.409 cv
266.81 470.659 267.42 470.049 268.17 470.049 cv
268.92 470.049 269.53 470.659 269.53 471.409 cv
269.53 472.159 268.92 472.77 268.17 472.77 cv
cp
263.433 473.678 mo
262.413 473.678 261.583 472.848 261.583 471.828 cv
261.583 470.808 262.413 469.979 263.433 469.979 cv
264.452 469.979 265.282 470.808 265.282 471.828 cv
265.282 472.848 264.452 473.678 263.433 473.678 cv
cp
265.592 467.163 mo
262.239 467.163 259.512 469.829 259.512 473.106 cv
259.512 473.532 259.558 473.955 259.649 474.368 cv
260.323 474.851 262.355 475.258 264.997 475.099 cv
267.876 474.926 270.293 474.142 271.669 472.94 cv
271.664 472.745 271.648 472.55 271.624 472.358 cv
271.244 469.396 268.65 467.163 265.592 467.163 cv
cp
f
281.595 469.03 mo
281.3 468.914 280.79 468.721 280.213 468.793 cv
279.662 468.861 279.369 469.133 279.369 469.799 cv
279.369 470.665 li
281.597 470.665 li
281.597 472.383 li
279.369 472.383 li
279.369 477.837 li
277.438 477.837 li
277.438 472.383 li
276.098 472.383 li
276.098 470.665 li
277.438 470.665 li
277.438 469.777 li
277.438 468.097 278.333 466.994 280.005 466.994 cv
280.648 466.994 281.163 467.116 281.596 467.303 cv
281.595 469.03 li
cp
f
286.298 472.362 mo
286.121 472.332 285.94 472.315 285.771 472.315 cv
284.876 472.315 284.262 472.863 284.262 473.93 cv
284.262 477.837 li
282.33 477.837 li
282.33 470.665 li
284.203 470.665 li
284.203 471.45 li
284.654 470.776 285.342 470.473 286.223 470.473 cv
286.638 470.473 287.071 470.601 287.317 470.81 cv
286.298 472.362 li
cp
f
288.851 473.574 mo
292.026 473.574 li
291.848 472.656 291.293 472.138 290.464 472.138 cv
289.554 472.138 289.021 472.686 288.851 473.574 cv
cp
293.965 474.24 mo
293.965 474.462 293.95 474.729 293.928 474.892 cv
288.843 474.892 li
289.05 475.928 289.776 476.379 290.686 476.379 cv
291.308 476.379 291.981 476.128 292.5 475.69 cv
293.632 476.935 li
292.818 477.682 291.782 478.022 290.575 478.022 cv
288.377 478.022 286.853 476.527 286.853 474.27 cv
286.853 472.013 288.333 470.473 290.479 470.473 cv
292.544 470.473 293.958 472.005 293.965 474.24 cv
cp
f
296.504 473.574 mo
299.679 473.574 li
299.501 472.656 298.946 472.138 298.118 472.138 cv
297.207 472.138 296.674 472.686 296.504 473.574 cv
cp
301.618 474.24 mo
301.618 474.462 301.604 474.729 301.582 474.892 cv
296.497 474.892 li
296.704 475.928 297.429 476.379 298.339 476.379 cv
298.961 476.379 299.635 476.128 300.153 475.69 cv
301.285 476.935 li
300.471 477.682 299.435 478.022 298.229 478.022 cv
296.03 478.022 294.505 476.527 294.505 474.27 cv
294.505 472.013 295.986 470.473 298.132 470.473 cv
300.197 470.473 301.611 472.005 301.618 474.24 cv
cp
f
304.287 474.248 mo
304.287 475.38 305.035 476.224 306.13 476.224 cv
307.27 476.224 307.98 475.343 307.98 474.248 cv
307.98 473.152 307.27 472.271 306.13 472.271 cv
305.035 472.271 304.287 473.115 304.287 474.248 cv
cp
309.964 474.248 mo
309.964 476.401 308.469 478.022 306.493 478.022 cv
305.53 478.022 304.85 477.645 304.383 477.09 cv
304.383 480.798 li
302.459 480.798 li
302.459 470.665 li
304.346 470.665 li
304.346 471.457 li
304.813 470.872 305.501 470.473 306.485 470.473 cv
308.469 470.473 309.964 472.094 309.964 474.248 cv
cp
f
312.809 477.837 mo
310.877 477.837 li
310.877 470.665 li
312.809 470.665 li
312.809 477.837 li
cp
313.067 468.319 mo
313.067 469.015 312.527 469.548 311.831 469.548 cv
311.136 469.548 310.603 469.015 310.603 468.319 cv
310.603 467.623 311.136 467.075 311.831 467.075 cv
312.527 467.075 313.067 467.623 313.067 468.319 cv
cp
f
316.032 473.219 mo
318.733 470.665 li
321.103 470.665 li
317.623 474.04 li
321.124 477.837 li
318.748 477.837 li
316.032 474.936 li
316.032 477.837 li
314.101 477.837 li
314.101 467.18 li
316.032 467.18 li
316.032 473.219 li
cp
f
184.413 475.854 mo
184.413 472.646 li
184.017 472.03 183.167 471.503 182.289 471.503 cv
180.868 471.503 180.018 472.675 180.018 474.242 cv
180.018 475.81 180.868 476.967 182.289 476.967 cv
183.167 476.967 184.017 476.469 184.413 475.854 cv
cp
184.413 477.772 mo
184.413 476.718 li
183.885 477.436 183.021 477.948 182.025 477.948 cv
180.179 477.948 178.875 476.542 178.875 474.242 cv
178.875 471.986 180.165 470.521 182.025 470.521 cv
182.977 470.521 183.841 470.99 184.413 471.767 cv
184.413 468.002 li
185.511 468.002 li
185.511 477.772 li
184.413 477.772 li
cp
f
190.403 471.43 mo
188.895 471.43 188.147 472.704 188.089 473.788 cv
192.732 473.788 li
192.718 472.733 192.015 471.43 190.403 471.43 cv
cp
186.932 474.228 mo
186.932 472.177 188.396 470.521 190.418 470.521 cv
192.557 470.521 193.816 472.191 193.816 474.315 cv
193.816 474.594 li
188.089 474.594 li
188.177 475.927 189.114 477.04 190.638 477.04 cv
191.443 477.04 192.264 476.718 192.82 476.146 cv
193.348 476.864 li
192.645 477.567 191.692 477.948 190.535 477.948 cv
188.44 477.948 186.932 476.439 186.932 474.228 cv
cp
f
194.607 476.835 mo
195.178 476.044 li
195.647 476.586 196.541 477.055 197.507 477.055 cv
198.591 477.055 199.177 476.542 199.177 475.839 cv
199.177 474.125 194.797 475.18 194.797 472.558 cv
194.797 471.459 195.75 470.521 197.434 470.521 cv
198.635 470.521 199.485 470.976 200.056 471.547 cv
199.543 472.309 li
199.119 471.796 198.342 471.415 197.434 471.415 cv
196.467 471.415 195.867 471.898 195.867 472.528 cv
195.867 474.081 200.246 473.056 200.246 475.81 cv
200.246 476.996 199.294 477.948 197.463 477.948 cv
196.306 477.948 195.325 477.597 194.607 476.835 cv
cp
f
201.667 477.772 mo
201.667 470.697 li
202.766 470.697 li
202.766 477.772 li
201.667 477.772 li
cp
201.477 468.954 mo
201.477 468.544 201.814 468.207 202.209 468.207 cv
202.619 468.207 202.956 468.544 202.956 468.954 cv
202.956 469.364 202.619 469.687 202.209 469.687 cv
201.814 469.687 201.477 469.364 201.477 468.954 cv
cp
f
209.708 475.736 mo
209.708 472.646 li
209.328 472.03 208.478 471.503 207.6 471.503 cv
206.178 471.503 205.329 472.631 205.329 474.198 cv
205.329 475.751 206.178 476.894 207.6 476.894 cv
208.478 476.894 209.328 476.352 209.708 475.736 cv
cp
204.582 479.589 mo
205.139 478.769 li
205.725 479.472 206.428 479.735 207.438 479.735 cv
208.61 479.735 209.708 479.164 209.708 477.611 cv
209.708 476.601 li
209.196 477.318 208.332 477.86 207.335 477.86 cv
205.49 477.86 204.187 476.483 204.187 474.198 cv
204.187 471.928 205.475 470.521 207.335 470.521 cv
208.288 470.521 209.138 470.99 209.708 471.767 cv
209.708 470.697 li
210.807 470.697 li
210.807 477.567 li
210.807 479.911 209.167 480.644 207.438 480.644 cv
206.237 480.644 205.417 480.409 204.582 479.589 cv
cp
f
217.413 477.772 mo
217.413 473.144 li
217.413 471.898 216.784 471.503 215.832 471.503 cv
214.967 471.503 214.146 472.03 213.737 472.602 cv
213.737 477.772 li
212.638 477.772 li
212.638 470.697 li
213.737 470.697 li
213.737 471.723 li
214.235 471.137 215.201 470.521 216.256 470.521 cv
217.735 470.521 218.512 471.269 218.512 472.807 cv
218.512 477.772 li
217.413 477.772 li
cp
f
223.404 471.43 mo
221.896 471.43 221.148 472.704 221.09 473.788 cv
225.733 473.788 li
225.718 472.733 225.015 471.43 223.404 471.43 cv
cp
219.933 474.228 mo
219.933 472.177 221.397 470.521 223.419 470.521 cv
225.557 470.521 226.817 472.191 226.817 474.315 cv
226.817 474.594 li
221.09 474.594 li
221.178 475.927 222.115 477.04 223.639 477.04 cv
224.444 477.04 225.264 476.718 225.821 476.146 cv
226.348 476.864 li
225.646 477.567 224.693 477.948 223.536 477.948 cv
221.441 477.948 219.933 476.439 219.933 474.228 cv
cp
f
233.35 475.854 mo
233.35 472.646 li
232.954 472.03 232.105 471.503 231.226 471.503 cv
229.805 471.503 228.956 472.675 228.956 474.242 cv
228.956 475.81 229.805 476.967 231.226 476.967 cv
232.105 476.967 232.954 476.469 233.35 475.854 cv
cp
233.35 477.772 mo
233.35 476.718 li
232.823 477.436 231.958 477.948 230.962 477.948 cv
229.117 477.948 227.813 476.542 227.813 474.242 cv
227.813 471.986 229.102 470.521 230.962 470.521 cv
231.914 470.521 232.779 470.99 233.35 471.767 cv
233.35 468.002 li
234.448 468.002 li
234.448 477.772 li
233.35 477.772 li
cp
f
242.9 476.967 mo
244.335 476.967 245.185 475.81 245.185 474.242 cv
245.185 472.675 244.335 471.503 242.9 471.503 cv
242.036 471.503 241.171 472.03 240.791 472.646 cv
240.791 475.854 li
241.171 476.469 242.036 476.967 242.9 476.967 cv
cp
239.692 477.772 mo
239.692 468.002 li
240.791 468.002 li
240.791 471.767 li
241.362 470.99 242.211 470.521 243.178 470.521 cv
245.024 470.521 246.328 471.986 246.328 474.242 cv
246.328 476.542 245.024 477.948 243.178 477.948 cv
242.182 477.948 241.318 477.436 240.791 476.718 cv
240.791 477.772 li
239.692 477.772 li
cp
f
247.528 479.545 mo
247.689 479.618 247.954 479.662 248.129 479.662 cv
248.612 479.662 248.935 479.501 249.184 478.915 cv
249.652 477.846 li
246.693 470.697 li
247.88 470.697 li
250.238 476.498 li
252.582 470.697 li
253.783 470.697 li
250.238 479.208 li
249.813 480.233 249.096 480.629 248.158 480.644 cv
247.924 480.644 247.558 480.6 247.353 480.541 cv
247.528 479.545 li
cp
f
%ADOBeginClientInjection: EndPageContent "AI11EPS"
userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse
%ADOEndClientInjection: EndPageContent "AI11EPS"
grestore
grestore
pgrs
%%PageTrailer
%ADOBeginClientInjection: PageTrailer Start "AI11EPS"
[/EMC AI11_PDFMark5
[/NamespacePop AI11_PDFMark5
%ADOEndClientInjection: PageTrailer Start "AI11EPS"
[
[/CSA [/0 ]]
[/Gradient [/0 /1 /2 /3 /4 /5 /6 /7 /8 ]]
] del_res
/RCGASP+FiraSans-Light*1 uf
/RCGASP+FiraSans-Light uf
/FiraSans-Light uf
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get exec
Adobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get exec
Adobe_AGM_Core/dt get exec
%%EOF
%AI9_PrintingDataEnd

userdict /AI9_read_buffer 256 string put
userdict begin
/ai9_skip_data
{
	mark
	{
		currentfile AI9_read_buffer { readline } stopped
		{
		}
		{
			not
			{
				exit
			} if
			(%AI9_PrivateDataEnd) eq
			{
				exit
			} if
		} ifelse
	} loop
	cleartomark
} def
end
userdict /ai9_skip_data get exec
%AI9_PrivateDataBegin
%!PS-Adobe-3.0 EPSF-3.0
%%Creator: Adobe Illustrator(R) 16.0
%%AI8_CreatorVersion: 23.0.2
%%For: (Ayib) ()
%%Title: (Under construction landing page h2 up-02.eps)
%%CreationDate: 5/11/19 12:03 AM
%%Canvassize: 16383
%AI9_DataStream
%Gb",Kl!!)hoC.)/g]OLRLd:Z&>TbST)^r5"!<PXj_#Q9(k/75Qhs/KR5a3sDNe0L>ULrbnY,\Y4]@.&j-,&3=WpRBns0Lg"$-"(G
%=MdiHk_s$Y?SH_tSh&X=`R9(/hbr1AJtZ81DE"D-]$]@)Vgca)s+t!9-aNbAd5:g"?de"-do@]p[sLq.Wu?"UDKd>GC;&#94YQLj
%*DKP6n!$K-fVbgN.9YJ?aZVj[71"("Un4BrW`;jlXg2C9ef9`gdn^ggM_<ojkb3'>Rt&Sgi(d/6omf_L"jrPq\N+]Z"*^M&,OuNT
%-QFe&,(iYs\-FB*5r("[?b\[(l>!e@a?<OA5D6+=%DC5RNFmAss%ni@dctLd:Vf^?80Z4Q,7K/&\M(%i5VOh2n-jW]$O@_H_`;S"
%(j(T)6WJSQq%"1MWYd(tP")XRrWWRg$ii0bRSV6+RUTO/<Q&S]h%EG:S`j'BKCVe9X<qF@iI`-J2%,XZUTX5SEceFEfDl'-/O5(2
%bJ+`:*OOKb^8&&.qBa.EV?L?6_t_?P!.RDp&C<lB8HCcdq&.n#P8sKX5pJW#N")EBTnQkT3]:oTFg\o:=jN"rg#`*c=rm5p:\b1c
%&#LR$\:-mDf0gHhn+DpR`=A!:e;6h=M!.DBRa&4?.D:GHTF4g6a@$u#8^m"f1Zo`BJa32on'4F]Z.H_H;n;s%;u@gUWuLU?"f,=X
%-*+%T^lrXeBu&b2WhNHm9p9')\^KpqZ-sbM]+W<A`I+ouVhT"'OYO51>YtrlNgcjC'9`Z4bka(!?Eo&3\>CpVQrOl&<Q1r;Rc%2P
%N9Vmf3b@"^]J$.OATb>\mOG8!AT\ZO^0.g](@;WiqI4lNCfRXi'dH`_";N4`!Ii)#4iPbZ'j[YfUb>d:CRW\0F^tSoT[S]_NL&A&
%Q8RT`J^kL.<FZcWo?0C2,mNX=<KP);9H9SbU2@SF<GJdL-C4+8Ejt"KDKW=8\#$P1K0o;3?V3E2lAsfq]d[Uof8XN>!DmN860Bi1
%>Noqe_CctKIB3%m^=#G<<qW*PR.=$AP?[erUe@i2)H:ZjeNf8Ip00B=?mmn/V=ugCef.k^S,f=dFqEckNa,Fj8[C49QEXNl1,0fk
%8@o3W`KV/;LBSPtN.K\!-;8eE\8U6*W]sH.+:cj?T&2M?2+'9K1t+C*N%*<l#B,!D_>.Ot'aV7d"'U_-TH1_'"9eJl5gRSn=)eei
%(JqKjd/.)[&RR*R'%)[(4D@DW`^)4eZ6j5@cah"Pk7l(,L%8iL]F1<*GMXlj@@"EBK=NZX<DcP7]5#Pig['`^>VV>QK@.`Yj9eon
%;l*3Jp;IsKG$R$&/PY[-5S*OrdYq1:W95[BYT[QgT1WDY*aAVBG\HpeCo/uTMN6\H/cX;()]n[pGHm83Z'"US"Y\]#^qh)GT`*!4
%?<0\53f<Bdj@DqIr?P1ZJ3V1l?e4.eMlH(^kXY*.9C!-bDuhY]MMuj!?2-sA7*5bWhc"*gWn(o>+KgFSF0&m8eU@ZqK*i0:aN+C,
%6&ao08mV/f8<Jm_,s[=jcA7P'*N8IgKnUqndY\6[%7N%<oRbZm<n_]8:GDu%XFWJu'n<X6](Qgos'+p7,b6ggq?20u5UR]ki]HP#
%-c/eJlbfKG6go5>m@*HIa.2ZAK,sHNci!QHaM3c(!I[1TUC!9tWZhs?U8Y/:66Ce12O.UF0acFAqr_??_>8c"q5mWpq=4nu+;cNN
%ns;V$JQ0.&b"N!E?IuD1LRS"dr]dr:>,_PVKBhUT9`'U>koCRBZeT)9"\imXL;PRSDnoEjAE_)85ZCSE?$h)-0hVa3X<2BWG@CU)
%,7b7*]`pm`@'.$ND"D[t258%%2]5po"rDjhW`npc7_d^IQZQMS@#oU$[,ZUi+/,-p8-&U+kM%=8DqhW+N&ColX''()gN)S<CBkp+
%9,jb-;nFUdYkq/rRGs+$'RrF(j[%LU(!PWVp^TN/E40X[KCL=r@1*Eq$t/_a;=Y7@'S"85PE48bLMDZ,$bR^[Hi@J]m3r-3e6<rX
%b57)+\YJ)SYY,`PJ1P`]DN>Kgp_^cqG581ej:`]@f^c4Q[+fU//:?9bjekGZEAt_g;gt\Q3R5'o0RlWF,%uQO=?&9l-Nlbh,=tEo
%MT??3Os!>Z,&'"RL]htlj!'m:,r.o$a=KbV,XkQe`DEXsi[B?jW?`H4.SXKQ/.G/q:"'NqdQB+sOea9a7AoAYSRk@LmJmWJLPZ>S
%Ku(:OfH`%bdX[C8OW,\?b@8[LDE\H='Ua+U,Y\CB5Mj7RZ8&/\ItEC!(!:7HjG@D+l[s@dX;TVFjpbmALBB(5^a#>nB!UZ;.P#(o
%=YVF;q(.kDZV6Yh9Z\iJa_!;rF=*981<GKB&Me`gbHMj26YE>+R3C"HF?5sb9Bftj9FGRkQfc_4RRttB.SZds<&U"5V,O@XPY.gk
%P`Xm'>`)61.69lub6Z5N`nt5+G\#Wtp^eq(@.LL/nSdoKnHY[3"4W$DNHZKc,5n%(75s.Md2.1VpUSfH&Q+F>Sjl'`U]:IM:+2:d
%#mLo[n;Kn7kWd5s*:;O#@$&="Q+r(Wpdf,>^t:!PUK+#PEFoCB6M$4C&[S,[TFP?75i7c!P"ft9n4=cP-Bh"-N`7d)KMG0P,m#NT
%6qOc(^qiX5`(L.q7!q7.T-R"T8Q&a786L&1L_Nm/kU-^`MhXE*T]]G@57W"%LV?03#R@`$_Ne'`#G_Cs4QD'sa%)T6a+tn-reJFh
%K#^=^)2Kh!%R.*+/@J+_Z3anK-u94nC]qNVJ,qq#DjnZk2N(]l3Y]Ic/Aj1DP6@2IR4K1ek]N3]YoG9u8QK<LC^)rX7%6qS8(p!Z
%p_O>i2R3I?8MDFh2%PS<nLoNE=Z?V83?L);Rcj3Jqjb]V"oKkP@d)GC/)ak4D[QNRs/$[ULO.!ePX^0&QJ5o!V?9@M#A"p_lbEr#
%@>AMX!&u[d@-K\pf9lQW4@J@'>)-W/.Ha6+8&dTqkjY912@eA<R>:`.>6j1.XEAL5_)mF&%NfjMk(+Ll&u.UlrC,9JZn2`E,Cp2Z
%TT2.5-4@LXK<gY(M+D5EJ(('^8^M2Q[$q.\B0b?'+J04O@Ra%D#"i?&'Lb=K78@A^7\g&>;C$psO:fp6V36oS6p^;K]YFiT^d*uH
%!CqtIg,@q;l8J2[qDJ@$#rWAB)&=A2.@:r_8PFG(MJS_TWdl]qQ:Y0sTH`Ahnn\A%&hP;kKFcOG;[TlA\Vqp\KLO?(Zp957,@`=B
%)7i13!X'7ZNe:dQ*1X59.<9Z.K)d73BE.upOOu:-'[:TA:d5;"KK6+U,m9;[(6,m-+BBJPN:D7E!TL:f&N;VbKtCi"&VXMQl%jT>
%S#.Dch%4Tna:6PL!LYPG3?AM(SMV*'bNJZ)b5nO4[l02NJkOr-[3;Io#p50T_.O/bqnT/BbrB:&Dqf5PQAmfiF4)eOkSN5%lp=78
%q2_AR:_V%i>[`\D!bl1gck"bs+q"X9io%Tj":#Q`PSa[F+FAq2,-m78/S$[e*tX-A:N(5"g)Gn<=_a?CL-?#q\:me\2Jh!">4U@+
%%I5[n0f4rF=V+$'F;,mk=[jt%*4SO]P;fmc]Y=A*LcO'_I[k`T6eVk&-\4i(+faL'('L$0a$qacOOuB")3S*r3@s>M(=XlFDc2Zc
%-6['^Bb"r%"$mV)!XMA!"rp#<Zs<fYaFTOc^ibg][=XlB@kTBaD\g0!o-"%@i0.:(1K`"@+\)UZqQP@r=Kp$u!sp'&4b=Ce0qa>?
%Zk-[j:3><jOU*t_%:LVmY:P9l2DM!Vb3,FbKs2\ZO`[A?\e2>Hc!\f'[8Lu9&Sn/f6CDqI,E-da7qF)`1O3`1:CM79IIn+eD=djS
%T>b.EURlbKhZ<#,MoSbjN=;(&Eu5a14(kcR#1Hsa8HLg$'M]'=S.Z)e'p*AAJAQdMoRk\%^j^618H_QqPE72i+CWKiZbTn'f-,l\
%+J%R9XVARk-c$7f+Pk7PZ="^sBS/,U/1RHk]FT$]n2)OLJUA3(@t+Hi8>iaW$YfH%7XH2emFZ5r0uBk,*k@1\.gS+e'57dT:Lp.b
%pe33[YuVbPl'=RhK0/+pled8=hniPqIF^A'(t_dKV`cL9QIUCpg2i"D.=fQmAI"R=P#7OC.6K;H`.+t?_S88u-*=G0lX0GX&5HTj
%k"fBFs29E]5kqBlQ#llLK&ppeeHgR&Z0S!6`3D<D148>hd>$O\dcdN-4H1m2^\h<GRpqP`C]=!;cD'^J*.NC"j@W?ffC=H^VfOtU
%[0[T-n7tliqNDrT:*+TefFpfIE);Ma%=H$Mk)p@>@0mOL-a>_Rr-p:c9a62]StPWM,t>fu41B_?0T(<_Lk9&Fco&rBBeBb7UM*q5
%TKGq=H')S'k@>:..6"2B?^hM_$A2PjEhS9uJ;SrN(pm[WiYj]^jt.Ct(r-ChW((Vda(#dc/I8V&7>>]BeZGq^?AG1iD5H_1rf,SC
%A<^^1Ebr8g"jJln`GAH/LNdSN,fUTKW(O<B)ndM#Pr#*VW7,]?;mM.IeFZB)VqV(\f"'YTF4;gU650Q*(gHi/XnEYK:].I;KKR/u
%F);XdJ"QDqWZeig0fBE5aZ_g3!!LAth!1>(h#Ke@fL9#HkZ)!n>#"L`idomfC5R!<@FobV6]+5<;2,la'F6]%Uutk:#<+)d!R'RP
%q'a50fS6[Cc[nV"=JeUnmSimE%:[3FXt%^+$SX4%g_<$4BFoCr!#[*0\:=\<^;cG>`gnjpFuGFZ)ZE(Y&IdNSZm/g&9"RgCS4bp_
%A^GJ5q3Ud_cX&!N"XhbbMcZolOekG(QuXR[g3uZYSR50=%=9U@NmQ=Zk[+krYHKKIAK,9NNs[.7q:>$uRc5=u"6NLWBu]ZCp9iYu
%3+XWg@Y5M&i`=i`#/F.]004Od2(+RRTGd(Lm:kp6%]1##;/6(sq.pTMBCig-%E1bMP$j#l%GW06JTb9-KhNjb[;A7tCU`&<b#iQ#
%JMF[SmC6F4guFKT3A@tA_"+XOXD><.EQS]/2.;Hjo,"->K33Ain*,+"3_FELLaEA(M_N%"f0'g(U&7H7!!Z_=Zc*PrT4=C,,[QF[
%P*\HPL6(m>LnG3pFcG.lFmOI&P[Gr=A&I5e"W%C1=P'L3K8X$T`moYq9$cC*(`%pW9D!(A(8=#4U-DZ)20CTagL(ff<$(hrp*h-&
%4AQ<E:I,'o'G>0(382u%TAl*?r.P6j^:)a8q\6P1o15Qk(fZ`p#[u)?Fm\lO:72.^-B&O_r^*l+&.>-$4Vc/K_$h&i8VS;W.<#g"
%+`Mf9"91BQG&4j?mIi"&4kj>r0O35>*OegqHNK&^fe>Z;37??;Fm\lO:72-c(rdseIj+YHLkSY#Stc8XM>TFPfH]>jMr+qQj5Fbi
%Y??e8D[K[OMkZP%]C-q\Pte;2KX[t'T8o.CP=coI[GDQnRPja2qu!\geN5!emA0&8$AW_9&rGfJ:Q%W0GS_p*Z(Mrt/ZJi6b^6#1
%5Ih2Yi9i_Y.t]l-4dg:rI'Q"br&,*XR#d,kqcQpOo"LK4$3CdN4uke1+\/FtP4@rB&G(BT=rSMOTRB0ZpNm80"pgP=O-HS"<39m`
%D=j@(BXaV-5J:F$Sue+Y&U^X"m\2pVX`'O(BhIDUL"hno!\-EOg&5H=FSt-]lhu%2jOJ5,i&@Vu'00%Tdn*9rSs!9T+[;)qBiM-0
%EWSt6bbpZa>m_tOVi-XdAt"`eT'?%C"a!FJ(E/SKpIJ&s1&7#1T+s.R6j_Ep44*lG=nF&Ad]Ri`jH3W<hVl/^;>*VUTlg1#pC=Zj
%Il^;g=+]0)<kd"GIjj/*^UqXd'@t`m4ge@Zi/@p5F`D+0E-WgMW6U`c@p]=D(m>MiVpVU2OZ9tD5=V7B!;Z.+eeMjH-'-Ob0`I^I
%5.P=QS!;cU7.2OY$ph>b?5Z_0C%J72-Q!VC0SRYu3]0@>%ggUsq3&11ZDO;[$^Ct3'&1AYaa2L.rrN]Nq0PORQ<%c"p`]lHUk&J#
%WD3fA/5j8<KIg$:71/gnV1>.-=V_n5#\dY3!ID23M[XRU1-iKlS?/:HlF9EZ71QiK!Pd%_/on`r%euT85j#]?J<1U>aq$ok2WUn;
%o,Go87B#[<+AG5FN2K3FW6P?-MIa:<4<F$b3Lj5H+M,7$>5=lOKiCu=f^;A(:0^rf:[h]j6H8ag&]29;mrh^A/PW$\('AC!@TW5?
%+KJjX+h\QKh.Ka&_J)`>/$j-CoNJAtoHn@nr+^^&;`K8Q:D08t9h22T2;-(Ke'ZoBgO%hjXn_^#e$MN?oQI\krrJ77MP!Y>L>k/!
%(N0J,M<8G\@^bP3-@T[c#I:GZT2)*C'iEf$;3NM&Yp)t2ePN)r^&JIDO>c1s'=?q$N;]j1=\(j;a"'N+Hfi<9Y=PSE.7flsOTBKk
%DOGN]i/9paK!)P/a4',Ks34ZB;RCi2Z/qA8008s$dggjaC,5+]%o^'0Ka7S)FQj=5;eEuqGkMot$!E%a5>]bR?T-u5O9oDHDF0^n
%cL..XNEGd&Cm]E5B^^W$?U0E`W4bYnl$8m+SgXOu[B#^<ht]8gpRaVhd_h\[>I`&%/p)R5kikU#k@K@hM.4sL`6%f_M5F:\DqlZ=
%*?L,m8,l>C7=M_"8,ldHT;6R7P70nUm<NSZFr+8cSgABr7o?0dQ*aY#2+Q%0)>3ns48M')hn'o6Mgp$`=&hug4termC$@Q]%-O%?
%H$MQoHd>[)pIt616Y,$:1iuHqHa`7HPI<$DgDjA*De%81h(+QC?X[-jZqgtH^WSt#.Gg#QEJ=-LXYVmS5MaLWF.i*q\pS^ZSsXLL
%+hS%io=<UAfmBq`-YC0cEnnW?#B'qH+5,sfAsI1=4OZF]g5tqh.%G%nmC&`('htZ$PE<M\puruHmWf6@:PjI'n^E>bYhmH4$E&74
%iiCqDn89RbIdt_X#m&5@V/0H^,juGlM`XP3h2Wg`Pa9bcS]IAto1=Vm55]=oae;Y:?&-b=#C^jd=Vf"[2\_hg\`Uk-Zt'0uH/ZbJ
%7,l\_%lsrm083`54n6lrZY9'0k`-N^Idc`Gcf53YT#Xgm`NjcekWc9RZ_Dl:g/_b1/!_>-Wgr;0=.QoPI)/W^g[bE.>cI@"rQ,`&
%0$;sLB%PJ\%)(bN"XPc`]7[LSh0Wh/Ig$u/6>b<_VtZ1<bd(S0$p2^#es`UQdk'#!^47EEF75@@a6L=`hO(-(J(]\P;uYmH-Le>)
%A"(kkA[D<t^Vf1o3-*\j]D5B!JQELK>jKif2&&/\iL.c%<UHbMVP)87n3rb%gf@WXpsf?-*L6HWr[oBGQHdWUSlb`2b@\Cc1bV3?
%o=AaMMOp2T/c#D'M6)*:FYhnK>[/hM))jmk=?,o;=uJ%JBsDVhZ#JjkM=d<>bf@Sg.Eo`S0:_i%6"&g//Y)?+dCcuan$d7jr*NSd
%1PIO.\tN4WS=0=HI'IX&QH\2"h(ds4s/d*_<5.2*)=J9aM]MSZVhjJJq9Ka\3NWbdU9:$HbmL@NOLFA3q;'S2Ier'=_rGNPpbl>G
%-?Dss]W]W0FJBK+C_<`B6)MV58I1qAh[8e@IZ""u[c^fG2c'.,qd6dMSr$h,[tT67fXJDsD]&Xp/Ael7A_n-NV[Mh!Y\jj7L992S
%G[":ZKlpU%\*mqbgs\_gdnPjP1F)(NpjZiZGHPNa(J6N<'(Q"F9&uE8Kb>u%aM%$BiFb;,D)B?uT42r<X2_&mAH,k@&1a^Z-sAp#
%Im$O#53=f1K5/#ueC=31%u@eu:3@8]Q_%Yf%9JP8hr15\G2;[\gLAL");0)OqZ\7N^V,Q![.HpO8M%;o6&7)#GPQIInecj-p3)ih
%T5/A3cSgH*1/8F1P(gZ(++E6h%fbSY_#L%A@IkdZbL@KabXs;V%DTRN\QSK90*.[(oC;GC]"g-ZrK"ZHnEC81@es\S?3[#oI:h8X
%=7fN`mm:KUmnYWBs+6[9,1DXZBq.E"i->m=3FR<XeK:aRk9knR$(3JejX,ZVMHJUh+l:IGo.-o0G=!XX#'1GEImm[]W4bYnl$7J-
%oB/K=bSOmIKDp_ZR3tf,heu$\%:&/q9Rlt;f?VVrUr?PoMtuPTr::/HcG]YPFF,Vmk+CgOrd"%Y(]RtDGqo?s0+U&ok+<I]c\qV^
%cO)VY$oCDkV[>R'F3_*RL,@Y[/W2XP`LQO/cM;N.!)/e0::9?]:n?:1gSh-[>/.,6oJT*%D=;63VV\57pe0!krMN^X27;<)_=L2$
%mB>fCbgC0t+'EhHo6mA<dFE>*3a?C-:#_-/@nRuZS(F*lXDe#>il)Ja@L-iULZ#nq(Od/fE/PmLY8Mq]-9POl_p.O-S=(&/l\;.@
%it,KGEU_[s?'#"^F\V,>%Aaup%CnW9Sp`=YpXsFXn2t52s&NA&hLr'Z]#E&Ls67tQH)=0\i*r\e3`h:o)uW@/3;5X,[e#F/cD8]A
%jk)?KF/T)q'E*qhJS<NRr6p5,G)@H4[hZYc_K]66V]M4O>O`(@m"?p7reI>I&D+n2e<c1gg%mBAYID`5\QoX+/-^/2K/nk+S>do?
%%-B)FEu'BgTBW,ud#C&Q@u]j50qH9kcA^qlMntpu(sMd_A,4s3--afX<7/k'k'(M(4)`C6c!Dq"K4KHdIdsPs.A#(4L5YFZAr_rj
%hk%_I+cG_J^<hp9]0L>tIH]jAEokcFr*DZi-V^?f>j*!6d)?JrZfXRj4'X@Bk_uE!ZgUA]of2R&5o2UeIB/p@VXE$SY#^%&a4K>?
%D0E>`hqIq+fT<01ci<D$%Xl6S$U!n<[Fhus[K;-XIbEWMk<Q)>^IF->I_(>\-Y.gUE"hfgN9eWf)`><0lRG&n)2;%[b$<8^(!'lW
%s/0mj5O[BGS1MlVkBu_OUb@n@DjSD)$k`+]Va&_s'T;"Qd\$"+rYO&3s'RqJ:SoF)ZCV6IHRS\)OlS?`G`V:-,.K"7n&D&p9XDCZ
%.D?YupsMie>7?#*BAt`)_]Qa>)?0,#aC=pS%Pm*jZN?'DO2^V//D9^8nAf#5A$1PNrl53NHL_c.f"U/QG3-JC=nC>4>GIcK]d_-1
%-#4p4IAL6>*`%jHqK)chT#\5#AbT[&qb=KqXaHrms-Vg=E-IRCVl[!:HYT`>@;sj^RXe"s<,DsDL['7JKf)4%mV8Z2lM^)_Za**l
%m$;6ab8-R]0D8`k:YK:XV6BU^2+);-%mt?q0-J=,7tQ&uGI+8u!@`qdZ+T3\?a2?:GMPf)MD0LaO44=/>l.'?a_9,P].*\+,>"`G
%;=83B:3/DE\C_$uDI1&H,0-(7U#8.[4)H\\qr,W;@MRTZ%kJ52ajYoe\*%-FRWhW!m<*+!l'V!@BN#b's++0`7$RK/,QBp2-Jr\,
%ht'1.`R+Wh!l&pB^ZR=EqTFHi0+)8,3T)(dS2$MIa9&9VA!$pIZG9Vd!^0&PM_&gZkZDAHF-QoThK`Ol"HJT;AP&QX/mBTPZ^(`C
%gA8!A)Rr<?(MVeO%@e>tmums]M_oCEe%dJ>YLX09]2bHU*&'^.QRm(o8nL0rSAI>b&*/<!o(ruio;'@.'XNqS::5GaS:%__^3A43
%CbY\t+c@@!r\C/Fr#I]0KYm1ie,HcR69]bg9nStQr.+KA=d(A\\DOrqGN=Y8qmA<#E-Skd9Ck=uB9iJo2:L$%/::cgC+>t?7AmF^
%&Ecic^?;0Rhs:h0lXQjAC!RuTpgRab`B1E'^8&f>j6mp^q8'.A7@k]*(om3',@d<$-1`@\.D:_U9CG#\)Qibu,lVURYt'FYIH*NN
%_/Qua*3Jr!7!`0$ea4;5\Y;bFUVi?4=n#eF1?HQ2kJ_F8q[MZU].XRaHe(X]\(^+C0brr;s7Ga@4RYV5BQ,]Vd(69tVpg@ep/gZo
%oUge?BbgO!j(TjGrhJ9Nd\^;0[f#/*`dXL*hu3gtk+@[j<i-.bhH$0&0[Rg^l8\9M`C1oZ#R(0_"2R4sAG1M_e+h.SgI:`kB@50P
%Gl#a<VkR`Hju7V_SeD=cEg?;>pnNP$rUQ"pr%F#/2^ai3o`luCq/8oP-=ju>"#hCI9G?FAQo2XqQ?aig_Tl(t6Kg'F6oNP$USUZS
%!JYmjUXK\kcb'eeQ4'`N[9&I?8OGWK(]":fe@V8U\Bn@dC1c7TH7*7^6GLm$r__6)lY^fJO0e>KhoCApcVX;oUQRDQ)?&_FA:D,N
%^VaR\`8V_bNW%W#m-Ae\RJC&D\+mDh@W//ga]n-!o]LP^-`gh5R<-Da\)B.3EbQ>^"%,*7^24slFseq>RQo!QOo^g1*I[(lDW#`*
%:-=UsMh^72L54Z4>Ehp3(%@+qC;..kM0McjApmI;aLBi%jAUf75+/;GkJ%r57J:+q\)[7T9*,&tmUgqeB'ST,er9g$Va+NfqM]:.
%^VO1!*-BN.M]D![HgL>@J@iG;o4sT^VGd"+JU^<CIU,m2XD7\-j$N>n*DQ>mcR/;FZDLl%2l\l;kL9;J\,ID'bHh(ija@&d8sK&`
%re7l,V7>p=Tt$3mj#3g`-@PDN'q>f.>notdh!Wb+J*g]gV#Pe%SG_?X'!jc8ngDiL4@It:GKi\&]biaImNB.\0<&YAco&/HP!>/`
%`A5e)^uK3MpleKU"d:s0GfmCocDRbj/Jd/f3n;sg!.d*!M3tauV678_%t(8qoL(C*'XU(%c/\7Mq::a0]r^uTUYfq`:ZSrh<t'T8
%Vuhu$5P(?T;mN:"FjhjE,tkhP`Sb[LdMVR8(@jsiA,uKM<;pHlhSBUsIh/rK\J0s2r$4Sd?Z]-,qQ#)\D:*`o1jVTtpNkF-4)4(G
%g\:hlE';n*gO>Te3=qERO9VMR7CC[n'Y=Y0chiMH6*^n$#Y#,P'L_PG@S".V/1U31_is:P?tb_>-NZ`CrbL1G=C?=N$SDqJj99H"
%"KMDJrjrEP?\R7dkIBGmeJH-(dm4\=YH!RJ=<RG8_Ntj?pa3hss)@Ie@JAJo=.N.-Xf!';dr-#C>&'!MMHNBP@CT:K.\oQ?i*-K+
%Sm5u)!C;m\C;jK7d$opeq@nCOjUJ9Mk--38de2J-;UIe*X-4UYc:]WR#[B4fQ7SLq3mWu>+6K=!W(Y+n>(cc]:7K@qUr`M+>3fs9
%a_jC&jAm's3)[tS''9:s-\/l$n_GjYl$cS?\tAUfAO(P>U5`u'eIQD$<?\@4o-%ap-0\TG$0CKOP2nF<`UEE%]<JN!1#RjV$;g/M
%l(=3sY4gD;Q`g,a$L4oGAE9L\K3AnT4Q&S.ao"uhq5X7E3Rkut]gsklNb2r:</qSNJVX7^5m^XD3L16`$D2i,14qZ<U6Q40*=Ue5
%m0EQO1o4LVQP^FS^hd&5?HF)30rY+)+hh(@+/RCU34s0jmbk5V60lG/#1Os3UtGdagF+EV'S/<)iu*Th>so&?_86LSM[YRdOYfk=
%kRL1H/19EjkXYYqdX*X1n(:\-d(f_ngt>)f=HGD:f2F@lKeh#j1EoVWQj/Ze0b$5GpQ-168;?4X'\Dg!TmjI`i$lU"&E_"*Dr9c,
%?_R%V?0bR:91Ad&F,QugKYGK9eY@APi(uRfj9V2uXGGQHq7[!*;B9S5CuZ)')1a(o<.h).dSqa;a)TInL`TIPms3UiZ9tmmIt*77
%3PVr=MH7nEi5oKDa>#4t+R_lX,lS=1P;MQ(JY98T,t7$16jq2-rJ\QJ*'f3.Bnp4Y%!DMJq<9Ot/ta'Kd#_fqO#r\rI.2?7b9I"_
%IiY_dp$WiG^Z-+s:ps3@F>G+8RhgY8)2^<9jog^]GaZ8d\DoPo6oW".\lf)2'Q(EAMIni3D/_ru1d32s+9Xr;G_-Y8-Pds7!)Y"N
%+T/YES27R(&-QAfC7HINdHYGA4tO:eUE6\OF,.R05TuH`i])feS)Ph%#"=oa$kQto%"^m'!nKb4!BCg3'0;,pKsCtH$a<;e"bC9*
%Iki!4&r;7+89#X;C6moa&YE2!R'Gltl=uJNO?pg(?TX>UJu/^1%kk5_Lntb/0Zr`%)b8V8"L*.sV`%2a6gX8t/-6.EF[-$-1iAn?
%ij]WC=Ig^(E5s3fAngmi+!N&d]oBQqEu6+c6B]4F%AF8oNbXJ7bub$XUW*<RnO$st1rfVG+HRS/EF9r(GM,i#;gV8@&M1t491^m8
%(."WR&5>eVD-R5X1,+V!&W^`d#["Gf*s>fT8;c?0&I.k1(6Qg;*$Lbe&54u+ULWn*8EuljOVhK%=i0,"/atkmiR/EoNAf+H/..`;
%'oKrG15H%2(Li]4=VR/]"?Ejl4a$l2`.,,2oDTsg.g(O9AXFCW0J?>Vh6S:3Ee-skb%cG>=W5I-ALRt'.LM=^9U86ZMqA-V8NQu<
%Xtdq1N+-K.7ifB7!n0X?*$k!?<G(%&ZToApgp!SY`:aeq/"q$r)8(40!WQ5M&[Muf+T1*3n'MX+K=3r&3J#$)8:`L`,nN1kV43/m
%aV4diHcf69b1,"O?pt;M/V$hk^fXtPL'fDK.R+I/_dGZ4i+NK\D)19+=MY1LU*H&*/CG_to`]FEb94n41j0t"h4]elK8+J_(bY9m
%V'pmPV4>FP*<QM6_o@t:=ArsOnN]WT6<KGnDo$HP=MTP9YXj?9=JQ;$2A5K^.hQPEMQH25=V5aO(^$,4iR/][ZB,\i`p=:6V9ok+
%2CY/+UkZ]?2E5660PR=21>%!WWJkD_*)k0F`h,[(A.1`W"pe8NN'4t:#e2OLqXGna!WXSZ*5V%k@1Xsu"/Ka`"F*;RoFmaNUCVI`
%n>:oGHUbq["J=U))CP5:5S/&FpB*iM+G*Bkd7W536:HfrU8+b6rF'JVekhTkg@T0,>p!21591f\L*&E''K:T\B;om*LNPO$R**^Z
%4Ee(o.gdgj*1Am(GA3HcRSa2CetU?#5ltU)&]%[t#/M?rg+q(H=cO[[B%1HT'Fq`@!kUbLN`@4!1ZMDIOgeg7g?&HH,A6Q'"=7MJ
%">[^,3*TAhK&b'G60'G04=eRC4q18W5'%T]P/d"o6XWHFfF))_9]_sBf7rc^'a8u:U/(o++RT5da"\&W?q@Y!*DZsRkn-WQ"<RVp
%!#@)R-;=0nKHnC5RW&EuWaNh*2LaT$=W0faJ;@SOA/`aueK\1T3q1"n;l&G->p0N2OCaMXYq00HEj?QEBpiRHmhg'XGC'!1=i(@A
%A.4SGbX]WZXg5)Q0`THV:cs-s*T.^9Bt_r56,o(RHa5="'XOtdlU4hBaUbm&b_s,^q!RbU'X];*rd,4V!rR73re!ug:#Z;JelUV^
%V]W4lNJAiS"@-+3^\^bdHO@R)UcWZUVqc"PD8cTe1qh=:Wa7YpQe_LB]#nd"$AaidBER3A._SbS`+8`"V>mC[s%?+72"q`4njL6M
%edm$<r/&*J:PumZ_m?A<U0fJ!LqH?pgXBA6CWZQ;3S`oBBQt9f4A[c9iqT/371m9b2_1hS#;,>oIa5/VraIbKC2.>:D)#bNEkOtR
%=mpnb4'$+0]V3pHR[K#Gr3jo&>%G_5r3:<3rd`4bC))5)Ag2(m_652AR7,CdT%*;2$&NWf`3/ptKp#eM9o0)mCFIbXAgUDcQ^e(`
%O,][?\5#?u1;;PsK1l&U'O"+)Y!VLH[s3^YM8sYe)Jnme;m+"$%Ulc9b`S^Y)74puV;LebbO'U_Xt0L'hW]7@aI6,ZK"GqS%k/us
%;X#WDH%FiBkLrqt+2>35A^F[J1!hhuBXQ4$TiReIP:1*b>JZ4-<))cY.e_qpno:e5VX)8!eHB2$r;rGM^`$A&eTMHXoF7=3Uh5s6
%>O=>!H+;YM%A3AP`A!i$-8;J=?)rj5L>E)gn^]*X?G_0>eZ=9J`s%pm-GaZRQ;TOko2!]s<mOl-&DePgQ1gqMdG%Z&Zb/7,nKkm/
%C6TM_DdA+e*nOnn0lRC?7_f=`cmYR%VP./h[UT"nL=0(\+,XG*Tbne,!b`HYJRuLeeUZ`.cJmN.'"ZgSjDIaJ,!Q'`DYVC1e?+\L
%CElh/RbI:5FHi'hj#<2`\@o'$SIrn$I=S*pT\oleel3RH:cDDia7s%T`"\f]d!&:qr)-M"gP)0>0c6Z#*PtSsUgql($)2nk0`W-a
%?f]X@J%k;G)EiSm:n7:@#6l:)W[]c)VUYK9NIIpEfrA<3^L%g)2J)*C,X=,O2ni!]7W@DlJK67n0%ChW+K]fKRf)J>2O]q+#NX(>
%CfLAmgNCeoYq4=`2%%Is5tDh9=a*A'T9f+jZWXW`d45`X07IYUOX*alDMj>$La;,o2U8`9Gdi2\P(3>Z6/!V=F"LGJSL@LGht!Bi
%?!Zc#99r%m1<tA\*OR:<mHs^TN#T^)adhQZ;7[5:3EA*32\m63CM"$E(oi_epH&90KK:*rdKA;@rNb7Ype.l@dU.0f3(kujn:"4A
%Pe$&kW:uHt6ZL(3AhViCSnfE5d?JNJ]5LCRBlXp@_ijRdc_%2:TY+CkXhl&0cq`&5^SKra&%PnDIsWJf^`W.'@cQhYc.Te\OfP7?
%f^7l)F(X9Dak`hpUN'MgNZ&oe->TX#%`Tt$3#F88jA5Jr\g&!589N-;3rnlQ+>(ZBQ-fY('n,CfUp0(Oa;kiLY1i/V/j&b:]OkBO
%1j+o&3h!)AaC:JE:p+h%o]fsW2UDZT:e%Pg&iMb4[rrIUk^,eK/N:>Wf^Bqag@aK;K`8XO9eC/b;'8(/&LBpgBSu!JO2AbT>77B\
%WfIoXd%QNmp44a=,2)\t,HmYieAk&O?)Y:/Hq1>!g;(38CDeF/[*JM'dMW"hnjCegp?U)+RbCg??$!^RGaTZ!"2P<da?<?_BNd.+
%-b=-Z4!fs\MQ@sGkq;9S:dQ3A[;)+AP)0fK_Nf:$PIYL:dqj`I(9YR([t;f6aHP@AeITlc]=&2ue-j7#MD^E"4YTX+p4K04MP1"3
%VPST=RFIdPr+`/hh\?_C"D-\PP&/`-%t]\^mgg-%I3`dR+Y4ri^d(t'iBuV[U$.9jh#O2(Z]$Isd(X]rQ!?\;'4Z1JgZ',:P7gGc
%Pc>V8?-6JE`H\q-A_o(eW@C+uT$?^*gG-2#S-m6KG*MVR>9Sge%6438i>_9MUIaO"JhCb`?VXJ7&M[j!JU\1_(+0pV$'rokXDg!e
%Q;mb[JRgL#b6_ug5lhrTp\X\_1&fN+TV)8=*Jk%"(D+q(N?G_6^rkF;rGOpVf5sQNcBV.3lam%lX"O/u=3]]:ApW](N2)0R)\40Z
%GP$TFkm(3nAumE\:ei,k<[!+%KAg\\Cu0,)D4@kA#W1mW\b)9AQDFEiPW4:OEk?&i],ua9Au0!J5u@l[8iY$6XYefGl-C'$;`A:=
%RbZHsQJ2h)%0f=407#X9K*ti2m'p[>b^NZA=D^Q$);q`YY+jt.3)*3D2Bs*AA7GUj<F,D;I^c;"b)f7T7n3R:TSm,(SI?$<4j?R;
%j%]`<hEX*NbIMdjpCEe*8(er#UTF/m1(*E'HHk\gGO\GAeVofVRd%4`e=7hjXPg_0>EBbI7uNGo`F7^'XoeHT<OutDPHNMj53Oc?
%1BfRDO>W&n^!htLQ+B'p)"9eC#1d?2JKFoL6CB`bad0r*Dc[m8)on3lA"3?Zo!NWog?k6oYtGV+)hUu_*H%Ot-PYOOARKm=i=r(=
%)r6PeXD/cNVE4ltj,-iqC:"61V^mQ!5VP<Yk+J@'"c,!3"U1>_.V.'CMAWL?YMS`tDGQ0k9``8Bau2L10pWm!(q^Mi[./^?F:9+c
%($RF%=QVk/pQX00;P8uZkf%P_@sb7d%4-GXV_q391j%dP#<dg!kskUrqFi58g>1U23+1;p\J+r30im+&8#uQ6^HGM/>>B)+NhSe'
%1p#g\e?AV/)#_p?lCEeYMQFn5f8$N>CR4/@/#B[>[,(R2&EBmX;g+=<#5ljCoE7<Rg*k(EHLe,6DIIOcWGb[fEFSLV4'_8i4gk#-
%e7!DQC`>SSZ,T;qYbLBb3;WS_5J7dN;;:hq%0V=[-pT7d1ViH/#m,iOO=Y:%bCor"l7`2.V[`-[@lEcm'rf$F,q43mG)f<k["0=_
%2574QFOb]lD1F"@r3:`:ii]bAf\U!Qia&sop>>$p'^/`<Aj=\AR7$FuNLE4'':S<;:]Ng^#XnOVb(LtV$L;E5IKY`*gBikKLff9k
%[]u?q_75N\DVG9,j'ub-b3c@O\rTna@p9EHm--gLf5NkCa!E7<?d0*C#E=T!+Yb@E)2q7M'K&@tDOd)R.p3rG3DSE29,(MgUDFSG
%NC"8ALRh35@h$?,6Q\)6j$Q?ceXhlPR&O9@bWFZlQD;1&+[`E0G`s-NI3=^N\.AjH3A_hihF0*"k;"KH'KId47E9dim#<-t(u^%b
%^g&.>>'j..U6-i,Qb@U7'hAgKiJ2u^h9A(T?APBrBFI.t&E.?C,gCoR[Q3[;+(bLLd[?OWj/iO0Z;G@a*/$F5d"@(0?#K,eW2+4t
%:Z3`8E*Uh1ZCSAG]@(Qjj?F]/1$=R+QfbBa1c"A]<&?hF(;W.\J.&1"Ee'C^*8l3h3IlH%*mIo_+o(,[]c!F36c1bL_gBGl];B3q
%66AqDNZt+)#4[W>3=k,_;C/f5FchF*rg5Ukhpr%U3rE_30;,PX"WR\Zo&4G\mVXl)I,'eO!$%_U1/H0;+#A$VX&5#TBNR/(#\<d@
%iD=h-h!FIWkudpMN+_7FYp1!!-d0PPr%ns=Y)'kCF)[`'asVM0RQ\4]/`^jHNU5s0ETd)bhgn&V3?8BAX=XSWl\A-ITYMU]o"PDo
%B[E)<(hYiA:0%dF=\A5qFU_)tBCKP*fU!5n5/q6CJY'3)bD4[\S?/jObKP#RGDIm3pemi?p`@#jRtXMEPq@)\_3[aPN(-1ZlUqNW
%G#Ba$eDMmbK.]g2i;Qn:\I%F<W6iugI^")i_qF0$Wgu_\h,4Ye@RSmkoK:QUP6d#;AlFTWMCpR/AL-l[qmqe_AG@CT'%JBLp_)%"
%!bNG,)Ec?CC(ED@\Qc5caHT?9;Kb.X:IaU/]a\/&71./bCH%X*8/i94HMo!c?J2n_f@CF`l(^H@LfoJ#8c++,q;LCTTL#DqoEgdh
%\_A="0?NhC^K3KI7Y9Y1eN-chgtYeq5X^Je>.\4T5L=BIn)(X5;<M67XNoR6hO6B/:KIs4c12M,F8-(!K\CDB&BJ*<HA($IeLnJ@
%KmG-H"Aa($")N66/^ddA:S@/PUZB.2F*jK@YO8MbRFj9In6(h'?Q[2Mh<%IE<PRDCQgVCsWOZ$b9YB5\P"V#D;"GfB#d0*`l>#oJ
%g!]3bluk:RkI@;0AP1c=fEu7dNlf6*?A/o&NjGW'^!a+^rZ,bq*X0Em4bL4'e3;Y[(,looPZk9aHpPJh^Dflth*!rC>K]WqXj`VK
%m&1\3pspI20nRYA4P)a;B?J/)5C%@W>_AVq#tkm#ln4j0k14oG8P<a(Up7`kcc<US3b_Q6A@O'P+SAht4+ro\ojk<LBS<2j<SL<4
%7O4KpXd,):,eB5C7IKEIFE4ZKg8/Cgrl-_k40T\K,CsE^4T\:,K9nhGIDp`\)Q>u0n$%T:>dF2U[.1@7#b>;:"u`p.%4pPL?_N.L
%Z0MqaC,ro/$cHuO.\_V1h,%BBO!7-'"07!LeVC9Bnn._TYX4&eJKPK']=O2=62&p=M#G-cSotnUAVteAj!YrXK[5s[^ujb=AKZ#c
%GmQm^O\d0$=*F^6X)Jgs]=\cLQ[:4`\pqO"f[]B,!4TN:(uWL`,9S7,k^]%3%K]iNJ]C$gK!l@%m&XO`J_f/"HslD`V]JC9a`'N!
%g.2HHGKWd5bc7o\a;/(qJV.@n5*3s3Q30X>IPPjn#G2'qHf7eoYfc&/BB>p-.-=9l^]e_+&\.2B/-W3LbtR'hBr;!6gg=FXJ]BS6
%54Dfd2Zr0bo4"A=h,t'6Wk6<&L+`3%buNaGd+Z'V%I!WOIc.VSoc!%2;?ojGSD7ITmRS]uX4$S(dX'sM@O[i$,F0P0i:@S$,0-$`
%ntb@T0!R'6LJ,MKgA4]pX*qai]-_GL-&e>FV,ZKf\<MD(@[;$F3Gn$UrZJt?YF[F@kLs'cl(WB)>.PjWc@&Sp>'_Y&SsIMNBXno)
%;+p0X!,*s.*gShj+U>.Aeh4JoV4t6#]ZTRuQ:#E_C,o2Q%[K]_7Ta8(l0u"*P.Solcgf_0ir%n]3IQ4@?TokNg#_7pk0A#+resu4
%^$J.QDjEb+b7A&pBj!(0`j/Jq[[(:!UDI9V\UC&a/9b0Zop)BO?>X7j1K@cg5OLI2M"oB@$6-KgXbc^IY:I4TS\RiI9s1T<d)jAO
%8be0K3T'2kXB\3'p/gZlQ\?0"C\_kEG&l)7Bg-b</"POG1`2&CGC76blLjC]0\g$I&!Ei2437)XiSaFol>BEBC;o+[j/`hT3SFcC
%MgR>n]NON*#9UA9CU!Z0El"*?k<cCOX0bn0<LHuqCKAb^UT:NB.`3pY=18Oth.f8NY5<gOqqU;\lH+1T]inUqgf_<RgFobQKZ^CI
%(%uOQS\Buap*693[FO\FA1aOoY1K&aLZhq>/:P>\*U1dO/mk]_(%-;?eumNqcIudCEO&X*DSg1kj4r*eYF4#FqmX#G'3L=H`9VP@
%jL3W`?A.0]-6'^+567gp?>:9XfC/1ib'N`bF1eYI"Lm6ONg<"IP#;V*;W0ru5<dp5m6,WfU&ESb2cPSkX.ejse5b^8%ig;Qh%I(-
%HIW.A,FEohDa[[qQ8c=/o]sNR!Rog`TN@A;ZW1;f\C$S^%>_1U2k'$Lh*t1i\dO9[onP4IkYL14_,<:`IO8gge'568^,ie__X^S`
%(k+IWU>atW3U[>nY!4L2RoD:i]"&j/mkuuXXLah'FI+q)*X_OOjdFD1[`ZjqaATY"N'r90i<[158Oel@Y?-i2XenT@fm>dNI"-8O
%Bh$DfOad7pLk_b<P:3nDetS!j#?ls*?*7O'09<SDU@Q^N5u]p^CU'^'H92m&5;1'1l7s;Ooa`*Rq5k\Y]=g1ON.E+WZ.Hj&R93fl
%DA2Z]Eg,-cjXbE(.kD@#p%/tr5,28T%IK=ph"n9/8<TmE(qEQR29;:]S<+OJ:Q]3DV3C;!_BfqE<Ke-)ZPKE]oo)?\V&jQRl](*l
%"dp3']cJi1d@kZe9lj"lR81$5(Nb4p%d=4<,sf9cf*,dN.Sohk9WXQf1HX@h.W]hJ?=L&r<dK^FZdNEroLbGZ2`H&aGf;>@ql*PV
%]nkc;CaDt,f[n@WT%hnZp,IVN52`_EXN6[PMbdS\>M$AdnRe'D\7[d-$rsXlch8HAY5-7HWl\<OI=puhO`*8%?O>Hl#9DbO,r*:(
%DZ!I1NtO,*E]udGP]B_7V:EbLGa<&[MpKNQke"(4\[A-fS8E+SQNCR$p@bt5PX]:Y/a]?^_>)08VT5+SIQ!cmYBAm%oYY[]H?H_5
%n&`Mu2R1!?DC8=8l?8jua_f5<I;&McG5Jocft0iClu#ci4/[+oZL`1KEjX:UAEhppr?Gfr-XD2R4[%N?m69?t5k"/beB[>c,a)p1
%m@G4,Hhks,@8G0dVY?%0/1+j%rE(8cdqag"H8(GZ[[Nati:3M/UuaZqRAo&mP?7FX>4Q6!DFeQtbnir6laN[b%Uhnhdf-Q%0e-U=
%0GQb,TMnGIGW/XhoaXp.o)<3HjgnenoD-jQqCj"NVB;rZa`Q_AUmR"@m]%-rfEc%@mK:Ri]$\+2Y$J__Zgh-bbap</MekE2lg>"d
%69G'\7!RM5Khe>,rJ+eBAH+M,1(FT[.!:V((sR^!7V;Cf[@u,lS#)n9>V[">a^*\%;RmT`h`)&;WRJajAN>-?/2\IY)je_8d<bep
%HaIkkG^0FkWsJDsm2`A<`m+&!'.*I+a2PII`c:&0mc>]^"ti\p<@N&g\koAi(F^Cb%J084Bp-ZpSR/SEVl-ZaqfG#JP)\YRNs(`_
%>O$.h?Sfs7!nEC!$b<tJIc7:#fK0I'eG<fE<aRo2MsEZ9n>mDf6Kd[>!cbqE^[UEQ6>Z,'FaA%0N%(eD`VnG7\bMO&F\74]qf#+T
%m;80s>O2)_]iQ^kCfE$R0;Q4TXc(qCip=N1`LE4\isp?[db$^nXK?)@Y!Q$KnHH+Zp"IC8XUnaK12=FhC[U->jZ4JiO'gM.-^C1j
%o*Tu2I^gf`4PWfND*V-;[p+jP^"^utQ@@T2KT>NB>'K#pLoru!<?KDrpS"-Mi'%lTDt!/<S_](:6ZgipI#+D4PohX(MT66R8`Lm1
%R9P-a#B"=<._fun'YV#t4QY-cri'qo#X=*3>lQh7-C`>BGJ/mHOt5G5H\oorq)2(ub5GT(X;jGX'Zucmb<jn7.%aRoe)$oS==JF8
%]8D'%PH3JNrM=g@+cL1%nh-^lLBOXlG&ATp9?#4moYG=>QG:$!f:')M?)K,4=3h[aTBa\(*b`o5m<GB;CL&j*VI?FII427i?#8>r
%mF,R$5$tfd-21<M&%>k+p"W;@>h,k!bB/ncG$d;9[[fDl[$s7Y[$Ik!]<0"pZ.4/rZA7hTF`FOS=X3CiPo-d$Dt;;IIX"+bl&G9%
%G)%:4bFLuil+*RE",FVKX73dF^0]p^,pPZF'dF<=\29d8q#,(Y=;.fJ5A"*f/=@rS@q>QqI`i'/nW=7?*X-gfFR8!PMJs;0s&$.T
%@al*Q.iu]iL3Zpn3GpB^i]9Mcji1@H$gI!k?F3f91'^d=SM[^sRqo:7L>GN@]q;m`PU9)OfbMm]E2gZA^9pl3_bjI\X5Z?YpI&rc
%Pm60IV"L?sF*iH_eUG2Fr35l+EsC1O/3E^4.N1!@LK:WTi6GI&`X^AM[>Oo<l3tA^4%G8"dbh!siU2/m!=G++kULhIYr#l8KFQ`U
%2_)A(H@)=@HHcYtp28'R2OM/N.SU#"]n>-297oGQW*g*GUXs27lV$-u(`&MR*anEq'q:Y,o3aVm3d,*:-]GOh/R(=(rYc3qH*!B6
%\inT6UjP8J2kbhm5**sV)NAq%Ft_HlB2IDr:WZF;W"Z==Zd-dM\r630TM[^+]:(;:5<^E4SCW`<Mt(E%_s9M8cXVuK'ma^,O2_ZU
%Bqf/\X!8]*]jXk#dF<JhA+7ei,_t4];/<0p%6C%$S\*asR"AO0re[Ahc.J"gfVkT#Sp]#^IeqDFR?PA,MP6BuhQcuO0g8e5o.GMb
%p;GD"7#i\7.$[a(/:)`?h6XsKD^NLSS8235rhs+.^WU>1[th^ak5Y%\QsSG4C'hSI#&mL]a*^ZW[A1+6e%=ID`#V&is%tc9;+Ek9
%!B35-Wa>&6mAauM[,B?Oe62JD+]JY-'Pg#%jF@@WMb[nO_1B6kc:ZHEqKCqZZ&ad21o]jQelat%)g_9O.AQW$/28_65_f1J(&<1c
%`Ga"Kq`u0`(j5dA)bSlBQ%'oZQ.pbs9]Irtm\8Iu=*1)9k9[g?+/1Rp')i@Cqka&c*KVg:GU(1l<nt%gY)^5cU(0&fl%d9KWbnEZ
%hpW0nMW._-4JqJsjBq,)5j/E6(t6rVd>*&K]j*XYf/jGWR'!b^7/DG)?5k`)G5_A_'7F^@l8_J9(i!^#6L^\/nne.sgC"4*EjnB"
%L#S2s<ug#[dH&`PNtu4d[KoQFm_]4FUJ]KJ@k>-*`XjT>!"OW!I0%B95om^p5C%RAfupSUKt"7/f&H8njrqF,O%9Re^X^u:[f_E=
%^ukJs8sQ1-(%1'(__#dQ0(sKbR(]W^qmDW@dBE&m%!<`s+X(2>Li3&8?/Ho.'(O$+7Ug_NdnOqFW0f6*L`Zj1]?jt^WZR`O-ajnh
%Qr8-O/*U_hXo>2sj6@)\a/?8[/cKq.Q[X4AR+o\oZDAXePIY/+&`2W8qq3g4E[AD4CKJ5X\jd[*`r]K(`>X5OG'BQ0V4s=F2sN$)
%ooRgDAfhXih.S=/h@0+alhf5$08Q$]I0R$JY!$%[B\)TtX!T]MW<RiF%^G&>2-hAd?PD1@CKDi&5e3A1X?Yuh[ebk.rW5tcGZdTR
%,Kjp;LMOHSpBAO&ol)3U@F*M'%H]+RSIErI@Hhn*)9qq^A5c*MA,#P5\Il#Ej<cod_jT4u_eb_d@PVl#/'hGbj'bs9JpV8F,CJBE
%*Z%mb&cSIlr3/KaJmA6E+d$SBelq%'PB`%)h=%:0PE/qD"0n"Qls9bJpbdc?U5A0$RYo56^Z<M^H=Ts:1qq<l.C_AJ-;qDAjf?V&
%aEF7aEd-=0/t^Q6_qUO.].L%qr.)WO[Y$il0"8*E]&\m`im-86:V0L\`'l6)]W<.fjMUO[3[SdKAcq!r"1?">#EK]/0&d6OjeWrL
%cbmBJD<l$8.W],9:Mj^89jlH[PloFI-GmC,R8#0E=5U:@>jZ@JX"UB3\0i;M!FB)AX]D*VFQak:0L1.nh`42\'F*H)"&et%ZPq(!
%1YaSV;G!2&0B%")G4_5cjg>h[.png'L#DVm17s^:kupr49tWZ+eU9`?\LB\0be3&;\!\U!Hmpf%aa?#FEqPYp?as4NedC!7WS.O_
%%,?9nq=CUMBMU%j[Z6OHj,KgM3`J6tH"/YaP^Vco?71%7hRf"Z9nIOK5u,?k]qo9(Yh+@tg'D=sI'>]lg'H?(MP*!*<6lB)gfB&M
%l?R_09k<]+1_tZ0kO!((Ugmmj/Eu0SBO;3if%mTS8!oIGfBDo_Q[fi1T+6qVP>?rZQC.&Y-iTWAY8p&q`-1C2$EZF.RtqKZKBo.f
%8p5Wj'1t-lo4B=s*6es='boRq7i%thW?MXCJ5WdUJ[FN8Wntg=q0;#\4NZJY=/11?37':5?n^n[,+E.`>aL7@jXB3u-;,`:0Na]J
%0eFF'1rj$_9=i:5hs`L"RLDV]qom/dalsPGTn4'+VV,0']Y"1`nHB/>!EGCg2Nq`uM2UFJZ,)9[#FCpid<+`cZQ[$SW\$eX?g>a2
%j*Cko*/,C5S]ms[8nD'Kr*Am+el[Q>&$$<Z5&Qb=15$FAE.G(I0WeaFo(p-[iR#Bf6]')8l9!V=^d"a?9]IUJ&Zg)0bH3,;96Zio
%U.)Mq72n2fBP$[<5:!\6k'BPBDXWeT0&(i%^*1+6!kuTaX@]/Ac`HTJ?4B$AaA\2]oc@HFoT\@)kJD:"T'OtC@TSjuM<o#%al;o#
%b'GNaT+fraW@/I+^'#s*]IK&QrMO22?Xa48EFH(]E2/[P.U/rcDn5NsG-elK:UU#i>()qm5@,W"e\Fc]a`NEq:E:h0fe.9S:[Scd
%H#&Jr>Yj`IpN?d!I)/*?Hl$'\a:tLj7=<2lO/Xr-FN:J"2ipB#,SO:#4-J^Y8G\j&]'X$)O_n>??)E$9#<`A.3ZZ!j>=%WcK1IuC
%mlE>c\-TsKJ5L@.9k$M<5tn.I0LCXM*1W8?]f63SBEa#*AW_uCBVY@NJQK3^EGFMpEV(67Yr?&:/rn=8\_+(*cQ!]70gD40[R[n=
%H@NH"`cUSiFMp^/=KRs5&@2SF0c??S_sH$l<"1H70W4%20fUGud]tsF92(T?R01iQFSO8u$aBQt$-'SdJI3J\<"26,/@4gJOQ<mp
%g+d<\RU`[6B0\7&S0,f$&P[Bb\79PqKM9URX^Mcf_q:cTQ;*bgBbV@)BH9Y7TXTZ%Fa"t9\2`J9Ef@$:*=N=9nM#Y25Ho5OK:SUa
%+3P%(3T_N?Crt<h",KNi<-()T1qU]R+k'V(*7$Wr%-@#IaaQV^7NVN=*=i$+P,6?sFuHV&PT\DX;/V.4-JRH/lc7]APFJ[j?m?"b
%%+-BRhEJ4HO\<9R\6?VFVprbb7&JC[>r>oU/"C!oL%j%6GM!MA_W_Ki@`&K]7PnD3K_EX:YE0.J%t*//[RD_p0%\[n<24qlRm&lZ
%Q.uL6:J12jS^&U?O%(!?Ao*UIXb:]^Y]WQO:YV#pX?QJ;[M6<*,kSC+WGIl0'":G$>^7PCQ0W-q,BGPpX\bg8fG=dOZ(eIL+n&%Z
%gd)(=VC8ng[B*[j_m;9%Xr4/Rd:4QepIU#S6qS#mZaYFJS9RS!:o*`Mabbf&`/=C2$&p(Ub`mB$pO-if1)*$4)@':b>QgNsHuscb
%i@oGjVZEabQ!*$5g<QT+maFZ=[g!:pb0jGPDF6Gm54ieRN(aC>L/75B"H342G8*d7??gb22TRE\j"0mOgB[YQG$IZ%09/<Q5s%g"
%*$FfY;IT-;QfBtD"k].uY'u/$Ip[.+s1_!%af"m&5m>d(C`<gu<8_T!\)1=<MdeZkS.:07IO@_??8F1WI^5mu_GIlD8lj73nl4Tm
%+Bk1JBgVo5244bB5BY^c:,VGA>Cc4lPMQ*H;'7e)\h>p:_N9QfC5eo1>:;4NPa^)s@.:rDG%.N+dKn>sLI4'W-Y9bCpJD/&T7)+>
%=O(O4IF(S9.(07WZ8PcnG62,35*X>"$1J]hX]#VTr_5(lG$;OH\[MIpl@lZkXKN7aZX5<ra.90;hp![k8B[<"NjSb'\*OJ`,+2.B
%7cT*R3k<t^%E++:pbU(\;FF5Qj]o%]*U,guq@Z)3???9:I;nqJ']V[qk<XrMNN,R?Me+d[`mWg3FsFB9J@W7Cr+<:h#4HZ*bs$g_
%%7DY9fIfCs'3Ai*eZD<NW.OUS?a-'4XRhn^N.X[td+ES$AaHP;">[T$8On8cJ9fUMMG(*]%uA56-L!0H(j,[XHX2FMm=eM9YGKaO
%b+V[daPAjrR!DDc5kL0"]>1!A^iS8a91/JpUu<M%U_&'D59%0_oTD^'AC^%dSYOYK]%RcUD;e]+JinIB8>cr`9kP0f"1qEO+M\s[
%]@p]&Pil&cimU1:->CkK&qCbP3:-,<bna).KSRe#A+0tiY6P]Ddc7q!Yo8YXJ^rj_K"q[ILO;i[;i]\6__DS.fQT<!\,>o=*?lg/
%lD.>up>'=PI[eV2RE'^N$"B)X1,u[<V@k6DPK^U_#3PAH0Ok-aH$VKU]m$`McF).`M7pQ^-I4RWp#LBI%%5(`E;tKURUjrfLFT/g
%fnlPHGK1XNfJpo?^cHBMa!!+#<`b13VrcHuF:J!kBu8#)qJ\U)Ne89@pMhHU%lQ^#`2.]qV:ZX6-j*6:]UK4GE&G+O6[dL1Orb:'
%/%qP'nhG6+4i$`NZf`IQCag8?HF+G1Ed.E8('qsqiXsn.QWe6!>rt-!ODZkB:#?q,N$E2<*#nSTit)"BrC;Po2u(io4?l^hXuqH-
%GT:SdZlW:)S,+]CQB<JW75k%Ihs,'[TlMfpKm=n3b?aT`-Ohkng#K70;l?V<]b/r%AhT+Y*JD\@kKq>-=''KWJKgi(hQ)YiLaPI-
%oKa2`o8)FMZEFMfC$h9."Mn+d4t[)g[GnNa;O:Ed&8W\cD"$NYEAE4D"USI@YB7^H>)Z/;[k^I1\C>LghA0_XlNnd[p5r'E,l*5\
%Bt>WTa"k+rDfp`*iet'B!l+b[PLLQI%H,mCYW1SS^:YO1%nQ*L>Z.l>_pRKI6u42+V'I^cj08&&>s%A(7lF(qL$c]s2O/ZgB2aZ`
%q8(2`R7iFBAo`9]jMjjPZBUQZgZb:;)mI9(98Tc$V4J5Z`Y0D[I+nuRF;q`n5`,mXYEYJahCt2]II3gFhW=JB^q[P=`c%B-U;9Z<
%\nIK1%&Dop2/ubLoj+eG\\ikWH<uTh=28(W3W(=G9A+L2RX/u'oehT3=/cA[Di"@->-+D[523/>(cOMdo)83sA%.ra/8$cnTp=O>
%aPtIFeB76cDrp(s$/AVR(.Ci8EZOKd'802a'MI%M"seO`Xl\!H>kd3&5F;m"-&gs+?Fm!Qd4k\QK%I)Zd+loh2HAM,#O5g\0.8g<
%d6OcN@V&WD?W;VdRuR(>DGYlq6fcHGfZN;mf)Zi:Y32fd.(Qu\2W?d"Cd4XnTcY=$JG(N)]s/Uk=<i7u;:5A91/CM!UtL+>`:e(]
%fr^0U(^+L%R#?kjGOq-T]jNTe2KEno$jHI8'jM"hqO"*O@sud'p:-ZmY\e&6&e0h/eln4iSn+N*D@/ru=^*!*$?5u8GRq_R6r-4!
%lQf/V-S;G)4DF)BfUMj1T&;\_mmI\N\C=7de6_hWK^+uH<,N+&SN,iGg4_J.'[Uis+RS&31d#bk72OpR_qRNpGJNN,8/e+&_5W)F
%Oia<="b*5-m)Ad$Upb,"Pe)Vm:(BUDUhQC_OT^+U@kP5rcBO1Q20T1A60-5p8PN74XMcl_X<EbiqJe1%R=D?mO]&OS@.!Y@\<YT<
%AVkba9I=.X1W&t(BX%#QE.3`Zj`mo8\dE0K$TElq`^BeS@'MLbgtC&s#;J[F.ML+2Kn4f9OcRZPSq%_#X[((_kdZq,6)X+N`3ts@
%\RY,+@)_m5%]Sr5l80_L@tt]RmG<^&is=3KOgMHD(:ldLb%XOThV,C>>.[W)8W.Rr,<7?l?e7)*@DCPa;r<`(qI/G?7:*@4EFipn
%"Z2j,gb&!/[Vuq;D":n$)7Gk0UepL/>qQ-sgtOX\!+J*^LtDK\0ku%-NHEBE_jM@]6K8GoYG>9RGe9?f-L)`7`I=dI=aiB$oO:"W
%4Q$@\kDFk9AGa;o@<eR7D?UD\VUAgt1>grBJ<1]^05sEu7:M_9.X-1.E%1:'WIn11Y.B9AXJNl/)?#pd3ndn\-AtBp5s1Hu=#5^.
%_Zb^ar)oD[2I@tBj_pXHF).?-\].qb).E>%d1'A7V2l+#&Gp%<1X;ZIZhB)W^@]onqgqX"[?Ic"gsYn.s'Ff1?T0a%"`:na\$HfB
%)BJ_9QmUQ7=a$l^,o)-an4nRB9&m;]JB1*8037a_LrMM,O-.9:k#Sln.;_rQ7R>HHA82)?p::_3dZXm1H"N2fa)XEAr6TB?f;rt0
%'PVKO(u,_kc6gn.H`_LkA!&;*pl"fU]3Oec[VZ<0,LsXpd'^l&#j`i?YE+*>i(Xd,g0&ppe<I5=AEe\!%<s6Y'/.BkH0]3Ya:`Lg
%q$LA+LZg(AmF.)29GB9U>2([+2q1r@Hh6Aj8d_%J"E.9D>-P.j!RZ7a[l_Wfn1kPK8X3ickQ">Deo)*AW$.DNQG>L/GB*FNIt?rD
%Q?`dK1SV$a*j6M!?uR;K@u<Kl(\tZZbJG63n)&hi%JA_,VS\$hkp-s@q0)0WN&'qNdHECUq^:&S&Ef>59]S[A9?\+kEV7'B\62Un
%dbPB#ogmroJ_YJjP,iG?\31)>`X_3*H)nK>ISasK?%V4S_.c(-SCW$0kd+55;2qAm>3]k@jV-.srGm)[8.qS&$FcM9MuKDiE6b]s
%.`t!/9Y$Br#F9A.j]`EY*)uHY[66is/)i8uPU"XFFa2,A.jI9nCaRn`JO9'UrII;XE1]<&e;+-O2XI?^GV4Jbc>?ioP^sSrCP@Qe
%C6l7e,jNbR&E\\>JU@,n4h%isi+Zm;.mAYC-XdUo0"_KO<9e'F]*A?$@^WNd?=`J)`;150aFMqE)OHLK-;0=j&)fM?Y1TFSp?1s4
%_li;_0kZ9,2g]VTmEMAMIX(0!2k\"a2X>uASE<^3Zn7qg()u)e`XQA3(+eJ/?I0_'D/\A/#J9E(mAAJ%74X"/'%jf*jk<EnqJNiZ
%Rj$csL,AOp#AWr!4*+nUU40]t%f=YCFmERk)Y^A"Z*;OZ)]:`nLUufOJ_kpWaP,CnH^r,(3a.C;e<,*;dCkW2bB0"1_Y2epBg_ma
%ZkS#E'liF.o>BI58";NQ"cmg1ZCgs^nkSqMZ"l)3]Bh<qhRb>ZLfjEt'&IErBQQ]ugLj`toAIhQ_[kc!?E#;<A@^S[=?bW);+e@a
%4JfnVk?K79IaD@06t0qe^0i(ZC>ltj;tW0_<6.a@PKN:u2FE=1PWfibi!VS3oMYK&DP#P)5OT3ic\HiQ3PeB,'LV.u_C*B*l(_LV
%BKo3MUTlFu+?l.c_3/E5,iq-#ldiPS*XX9(qDQ%=M!pHm<!p$6MlDK%QHn8Ks*sb!]>&?V7i;1-rXNX;S7\ggoYg!2dO.1tb"OST
%:9sa\pQ,'T?N?lI;PI^Dp?\C.^#qMi)&nl,&d1K#"MiE>%[uR]h-1uXjc(#m)Hn.@\=rYLO5@-s5HDJm\(*5Dm0lLmO/!c6Y:%05
%hOaAZ5VF15h^rNVY'TE/1J^_8?_*Zif2`j2MaBr!j!/p%Vm-Q?FW0?ZD%ZM-nr_2CAomP7TQtuI[\hTVrJF.lX8Dak\,:AZ>eW?1
%C3P:kBMmFUNsKUo6Mm8SgtqehbY%=HFQIQoTX)%9Gor6"i9SNA]R@(62gX>nfK.ni2-MKI]C)LYZ$'9HB&ekW%W$'\2X3DBXH_7p
%:A%YVT6e%>N?Z>NA)5PYXZg6(7+LMad+Hoo8u))IV(m(tUh[89DDnWUo?f#I[rSRBIERsXs5EkHVQ*L1H!t28V,=.?i3bR-9oXai
%*ZqG*EiCYjg>5mi]$`YtW39PK-lZGp2%ETFQHDU'j)jGAR[SqAEO-q:lHeVgpWOsB3h.>]9'*uRHe*tG;<ogM8=S<722W#YB4r\O
%X1%tIoq'au<V,5/ocU*Y\VB,s&*U8fq5S7;c<fu0YpLAp*AB"-kNYO7H7qJZ+7AmQNUGAQB0HN+2JHJ1@i_+fSsW)`e:&7&4e;JD
%DU^^-d?]2t44Yge_HH-440\Hgr(o8N/RMa6V_m]2Q_.Tnl=l59[$@o^,A9M'f"Ml9Id"N*Sg\7EX++rO2gR5cM33"*gR@9c>rmI=
%VFIg*f'MXc[crh<f]Yl#dFJ+QB<O%-5bmaoI&*6EVi?p1SUU=tDY^S;N\qb6\u9J*>kmSRf01PDr\V+YP`>*,%[jRkW>4:V`r3WN
%V)3KVY3fR*pSf+f=M<TU3utIP)a,*c"mn3jXSWO?f/IE'Y%U<Emo/L@2pLpPo%_`:e7bg42Z(5FQeLZNeOn_#>,+<hT<fJpl:/6p
%Q9])ngqC3oNqMDPdopL]Ino@Bjci6\4mh8#Gs#i+nk$]1\,X+Ur9ujJg$$u?phOW>c1:jIDb?cPLVV#)O"]hAZ$P0bID'\<j%Ib_
%`(,4&HsaEc][7[>34<LT:H'4;e>P)Y;d#+RI5]YNm<W;P*ZH,X2%"$sHiucc\f#GYo5/H82u5Bn)B1+@%r7[EZXt"KoJKbcN\s$3
%B6pi1C3"Z*)\5DAs%3R6eNSaG3id1X_n='bE9uE7Aiku40N$_h)]`TM)`OtQW"pIhF8l.ji8=4a=JMNpfRG4`GdA'qeJNl7hX7QX
%fN*IY\8pX_XW@sY^.kF&HEsTd*!JEEo(NC96He8#Da/d9>oZQ6e`lNC*3F:qk5N]?Ruf=aVdBW+rd=9GD`b-5IE/>%\iX[@kGc4^
%b+:>nGFeTBpX$Di9)Wnh(d,K+rH32RFk-gIVYL,Pa03V7[t"&+hQ3UPlE(Q!:*"eh?[iN5p^)fuN]m[4kqB_g,)6!aAps\:p",tX
%dALUAYGLg9nkH5Fp%P*AM\FR=^L!6[h1='_s*X4HY6G\>r;LeK/F97JrUR<XF.)_Pct7LMNr:G(XLrFQ1WQJ5hnIt6Dl3IofK6Td
%5*GamfOFGV2ts;dY8afrHJ5Ro]uIkW7*;_,WjX`IEZ%bkU,!V`IIpqAF-aRHY>3&c4h+f9R2:@\`qEpNXKL@gS^dfe[/A.LUj$\o
%043C+paj(+DR3,j*&G;5J5)X#^#SGX$(?VSpns"Rjkd8]]fQ/g.9g_CHn;qL`nj$)qjMrQd.GUCQfqiA#dSBGho%spr^(B&m2S>/
%Bl2%?*R\]Oa58"CqZ`b-?W3(N[ae`3SA#jFq:)n'r4]=o9*/12PjFp)7\,"8F3[aEP*L-0)DrIL'Xj,gH>93ckG1"n>McL'al6F)
%P<6$HCO\T_eD"<^(E0t+*:/_)-1*p5e;P;W<miJ_s5@']Su"o3:Jr,8nkL.'NKWugk[S4@XJl))VDNU>OZq4-j\JP".(>@1s&Y2F
%)Fa&n6/Ca(D`+TCbooY#PK-9V7;ATr;]J?0FRKIZdjNH(_tDKjQe:Z&4F-c$o%F_Oe,OEuFSmBV3GO8>Zl_9jEI"ehUHY<JG7k;X
%](1I&fb5>^1X"ZM/mJVTkGWsq[8IkQ0?9eO1[gU@")b7H?EopmiMlP_@tdb'po=LHW"1]`b1RsEY/V*_CeB9cS"Eh5j&k63d@%8A
%2r4N`_(iD<oEU+/rQZI@q49k8/^tj0(X(d04],^dfb]r,4MHWRXG?rg4Eo06_]AM5M"^9283e2m[DtCN0S5i]JUi.AUFp?JG.C:r
%O<oCr3gJpWPJ<F2V5s&.@,.lh;V;nUeHAYdmodFW7!.JKHXS.ake\FuH"L%aj'sh^7l]!KZ&!^RoV^gKmJ"T^0<k5I)=.mS2j-3c
%<*g+,c6%=&dV&&$RmWCX;PPG.dbpTYZLDM;'s]sG4uod?48NBCF4SM08*cEbd%1%cQ';O8k-QWhk7'CriRD4QP?>-S),?'\b9`TZ
%k#4%q-O5?;A*JBC.2"?$E(IbWO`6Bg+#WF<QU1bOoO_oRN;__Be)TTliMo!XmnFPPl;^FT39AL^qI2fjY0%MI1M;aY[TX8hARggo
%-9t(3h`0rEib4o\h=";Jq<TJrI0j(;HA_tQb^QetTfI<JoH@Io,+i3Q&(5.ugL$+;IPUW"2[5";$P>io(+k\Z$,Y15hF=CFh?c31
%S2tCqH7Fm\<N2LJ9O;ofa`Z3;Q3F:/bb\S1Y0hIkS[n1bos$l4%0)iW$7@&!>6p`-P-M="d;hSD%npZtL/.:DN),ajdCdip5Baq>
%#sEpGI'"e6Fr=oljtgk9F5$TE@?&biY)fu^P0r?Tgo[s;ir[V,.]3UqrqM]ORAphZcks`-%.osoYKW!*`VbH$Y9687A(qXJa("mD
%9C:t]7@)C0@VreIgMV6gVWu[_m!?f\q.#K[-=<*IY=r$^_L3YMo*FIhXSfI$.g7t&b8C`Nn$QDJrWMUT,1ao^9=L9sAcK0f7aFto
%M&T%q(#/J@+?R\'@Z"$aKjIiV?WYK);G<BiKdl^JKj;.4K]2bbP:hNEKhH^!j4,?N@!mS:jOh?>6Z697>J2N$B)B0J.Mn+0#)X;@
%GTNpHYuNnCfkcj5]Jh3dK<d\l#'FNA_elr\W;q9Rb#hIkF>uuNT94[@BG[(B8a/bR.3N^X9t/'D8@iAZ*P#X6N=aj.D&\M4Cf.rK
%d<0l'bpk$m2IsjkEgRHZBO#rA<!@J(Hs/mt?cp3CV0'0N%nruSj`,#@_Li"C8-G_n1@.t<n]8"ke%=,eb21Gr!%u".fqLS]!(phQ
%#het[#_;:3%7Tm:2UMUjaNtVnAHg\_l10>Tn5/RdnaVmeaUp.Skt;hb/,B,].5j3Urdu)ppc9SL<AU*^9)4=oHASOT".O^IM44VH
%;b^TXlgZ:(1t&\B97_j$\@/S>?c%-E,ocO^1o5dn`QPio^Sa$m,aW>)jG0E<F[!1cM;9cJN%`YrOj]BbDg>P^GAi/@T4E0(K+F^b
%Es6ojXMM@(pN]o^_qgMm%P6]b9IjIW9GAcN2-f\sFdsH$&O_32Bol?Z\aPn8NVi^nDB<G"CK5[*Y"C(n9+IhffI^b1-?U8$GSJEU
%6[,Id8&R8njj:k]Y_2U(YreJBc]OFASA(-<rn?<%pC5jNG`6):"6u/\]Mr6FQA6-NWGHc.!&gd@WtoULI(Ck*-aqF!E,n-J(([I#
%`:sc]'u87cTi<YMmcr/gl<A7g&7a[,<6+m8qd%V*%T%l9f'N'm_r$?mA0&#tR>d'$p`W(b;d%&pE8F;B'b=`8:C9ff-5XPJH3L=Q
%Lp9)O:T#QTKI+(q8NA"UG<Q%qF?Z)+M$Ej+Q<P>0i8@^+ei2n/VOI74Td6I^.$c$2T6@m'0Y7s[):a=OI&Wq>F$C9^A_Od&$>?;)
%qg9;W8@6^@q!jon@mqX]&8(>TY=)#HXZer8SjYZY<k<C)"T:rVBE^4=oLlYBdH%\Go@=)%#$>=I/WIeSj!c2"9$&?l&5VI%%Bse)
%>ftI;67"b7W@:o/4CMA.oT*:ZXW/<$WjNN^kS6K/K$BMKN?^"G!&f>N'cqti&jcrM9K7C$_`Ig[/K+.$/g.0h?J1t+[T6a:76d`h
%9W=PY9HP?Feo\O(1p^NK@86.JM7^-*/>[B)4@MRZdNVZs:J6m4=)X7Q8+Ht)VFhn"<kshd?F[)m&B6XIh[KTE?HB.$[@b#L2Z!,F
%6NhF5I)eHc0?gfuo'_;tZhM=ma7ASO5BH&_.L)%0Q^.0'NqIaf[Feg<eh2]%;YBng],9L@:VVs#_7d'q/6kh1)6jdi?AK2nH$7*s
%O6k[VHS7dE`HT5#j@M)C>)+?!mY-h$";48K%\?:I@AJq_WYqc`6)8pd@ZdAmLhl36LSi8W--,:7mR5N`HPMQ^XmS;\ql1McE!=4<
%(mcq?eJpVg(o=,'3Rr\P8%!^adG!&BS]Xc3>H=4_D5gh^O1(mhQ$P=$bCtm3A)[28*hF`mI7!:(C?1gC-1u$L.6q]hQ./:'a=K9B
%h2A^1A;*ft;Yt#89Q"Zi_a=J>F7[[fOH#hEKnseqPt0;9Cloo#:<3ZePj4-j3'r$u&aPUC,<.(6=C,h&7f1kt^%JD4/GKWM[bU'7
%hXT4RX&?KPm-&JhGC88[`6>cg2KS(+.e6A5?<O8_SK,6-$p'9XkX#bbFp;6OgmoEG7AG'I[U;%7kd!#.=A>(+F6JdHMA^M`<Ham"
%Q^pE4fn*MNTi3feA^IE_"cMQjANs6GG://`1c'b:Oi\?:VZh/*ZK%Xhhm28^\l_4<Cqga/j@'J;=`.gEML&QS#$*;)7Bqb^F\;!u
%G5N%(L7rk4GtH>L>##Sh/`L5C9R;"hdOEGL4^4.pHXZ2-03fPZ`EZ*)FGd#]bd&+ST,`t12A',G]rC'b_Y\Br<2/TDT3B3BZ+.LX
%1?\4g0CgQ#ZCC3kb"6\DQYNcX,u-pM'>9+_.XSki9q'7'RhP.gN4*"a%0jrCofF&gMIkE%%gIm:Ja>9iFW-Te\;cj/oN0.Ms(&dW
%:!^CAj/c&g+VM(\Z<O3H32`YjPMJ9B<FL?FdQ1+`]s]1[H72=q)3W"]q(f>JKja069S8UpL`>BL<R=Ycn^(BuN8?B%8_uS')`(7i
%ALU]DBqoUI7FknUj%S#VJ63\?!BD-40t6,*pJ,T=;'s38LY6+B"k$g)V2K`]D<HJXMD-ZGa7nD)Rk0ZAGE\TtdP!V_dSnVZ8MG_/
%T/4#3kgDhJ>*nAN$(>"BHnAgc$`"Q(b46]Eq@'g(^Lh4U9Vbl.5aF2n1d[InR0(H5<C&%[00C&oa7D<QV.RrY6a;qkU.$K]WY@d3
%^LYA<el=[n)4*^]<a0.]jO7ZbT5T%q:pekR1;[4+b6\I(k@/u$.:,XmNoJd&eFCk-VK?,j;btsrgGS\RYGN4bib:`F$PcLF&eD)U
%,bkXnB0&1-X@8jg^Mq2Z2T]$(?8G9g.)':WF0,=@jN(cH[5d8N9dl2W[Q!lI"L\A!C:VV9o.!+gSG8%YOdL^L.`Y04,L\GsZKY[f
%F>Q/ZW.94BVEdcMfZ!#Tl@*&1+'XX`G@LDNTb[T?/UPH,<!poXdaROi\T^pcD6+B>q%39X[)iBK*Z6-u.8QkG91JG(KmRA^"0IYT
%-DO47WslVqFDC3*OZccDVdti^2<g6K=jQDrOXj0SG\k'7Nst6g"/U1iF5g=E!u'5$4MH^n*gu\=6kBBV8iP2F&g!J#oork0$[ZCu
%)6*K/GK1aBbWiF;H/\<+-@^%Go8oaO]3pe.8pX7+j;dUP`N(jQ=]sTpQ%tf(=Z0n'8,GBn8UTF:&]kS`D9B:j@$A]t3h#3Z&U.b&
%gdJ"!TrCBP6B>SN%\5a6VgFb.q(l=jE[*A^+b*gh*&JV8%94OSY"7ojg.F]KFHS[7e)odK%k"8#f>RjbG*;$e#]!SH0@s?0Sp\$f
%p%l7]%i:c_M&C<PA*UAkiS*:r_YJ.bGo#5\L[-W\2.o*XX,PQrjMUM(_2^=fZh*,idP=nc^1-nW/1[i)W^cN+\F_g-h9:YlGtDVd
%[1):MQk.7*)JE!p1>f>Hk-9'#=c_<ARk^$sh3*kB.jjiNNQgT]fDarsRIA'D92Vf="!lSsGO*2hP@GWn8VT$sjb^Ide!3V06nC^[
%[7FG@?+:.Te[13(4:ck!,SG*O5/pdZ00,BX;-jXA<6id#l8UU\oI(ohDCrbipK2*L45)[BgZi#_YBQf]0OYi;2>]E(jBb%7[6*ZQ
%nI:2!UUB[1jAbO4acaGsg4KQ$bRBOYI9;kaQ=WktFlDn%V!<Bq&l=a$SX(%W:gFB_;&s8E2Yq=fEu:T&1/`UF,9umZUH9?mk9&O%
%8B#t]DIfOeT$B,i&W<0A.bk&e,C_;-SXE>32'-;(biX^5_f<XN4>,^Hb)!Ln@O`A$gQOG`WSLO`2JYSp9SF/KY>cb47OfCU=>&pQ
%rD^9`]<]&JE+sU$h+`U@41V.t\@ee[3>KFF;@HKFX,Bu2Y9sAsUj,7kaT_;$>*qaY':Z@SWE4.@l=q=QLo?h]kqK@d_s(f*X_WFF
%>ir&i(,$=@b=98BbhD]HD%7pjV=1XR[UN(.eVeXkNN(V>cc#(2bF'F_/'g_FX2Y(Mn"jTF@.&(2?tO%cY4a_P?Tsj":DQ`m:C\.9
%Q^W!eX3SP-IA(skY:nB`n.L?OpL#d,5Kb)(%X^lh2HE<(fi7ECqTWm6m_k.,?EjpNdE1,b>GD!tB[hJJ.8TWNV<+6gB3c<t=-FjP
%A'&Tn$gAOPjWBOfNO20Y1GeAu`dM9snSG:`dEf&EGd<f]r3.'q9,L;%l`4Q,fJUFIokJ6:UJm@0Bc2(hJ,b;qI@cm9GB0"7GP72b
%@J=qaOP8pVk5E2'HA:7(epVqXa6AR9D4dr/)Wg_`%D8-n=(tarm3ZE[Q7HmF5&icY8:?NU!"qIUR1#d4^7"H#i>m4sWmeTE-ra(3
%/=p#DIZA?E=gcc=+h,TtC9e%*qO0Agg)58gPhM=@O&`?0\cf3.qE7k$`F>u*;X-$\\L1mi3k\*[V>\E62g""*\U[H74`]hWo((3X
%Dhqq^GaQGi2i^E9B'-dFh75p+oa3]^)pc\4/MA'"N@ukI)*?C.Y(>A6C44E!%\cmgZ9p(!XI#4L(=s+sJmH9`-MTZ.b,/,0E/@`W
%h9;`pC"oJeB@Eh"??&bZkLjsW>WR#ha\K/+;un,A(rae+ku>38RC-qdb,-]O[;Ipm/rc(,Rn]g'V/%*H=>ZLB2$;6#H/6W?;q]F;
%%.6lsl!hRT0q*:Zg3trN&8`BKdUhKu[$aXdb,*9ck:1s>SSE=ZHbUNQFK/S,jaB]@A^dW!l,*;=?-B*Dbo_iel"2iE8e[.t8mTN8
%;k]qQX0-'`V<O<%c)+EZI+o?NW=p&@=Rg4=%#T0^Rnf5A8%Vl)ZftG00t`jNCY<eY3?qhTVGiU'(8oZ9CcYSa=3Q!X68kAaQS*`Q
%e9NsCC5/PNVljRZj]MCcaJMlJ6TBA[;Dt'qQ`am/U(jGG[?(D;SrC`&Q&67,5AS512l0\LCTXb=banP$d8rlN.!T*i9&XK`>nk#V
%0'b^8QJ+bk3dlttWOa@p_<.NAi`Adl,/F?'3[ALo2piE+&rD4IReBm3RI!hP.qiGCJ295dkh>-#QNRW$Q@8dL+ZdTTT32dReKUI4
%f0<a\OZD@7VahiJp\bLZ=9mI5#o$%IkcUjVT"*o8a#tY]j=bJs?+TK6^%4Lfn=$u7ifit?F4VU"Gs1-:D'Md>"mu8KA"["4F/QN^
%+sfpVPABU=?J4>4],]GXjfJpb^<q4,jm8\Dbbf,"cXNYoAl7j(f_^CQ"M![BVMEW1'ae2BQS7n`/(U.%l&(_a:J7IhE^d!=?Vm*A
%/)/3=_[OFnfO9@c=[?TW*N;;p]JjZgaX:9*mN7Ud4*WAa-/5Djn%<:Ek=)fDMFOKG;mj-$UHgXM+NrkQcOgTiW:EB!B1I]?jQfG#
%@u#8%P.aY93mO]N/F"f_OHqosZs&#@mn)lo7?`C^l`)P4A^86JrFF7X^q*S^&<XBG2_!k:n>NgAKUK>oNMb%F60?RXg5sO9TH<&>
%M/j$t@<ZGgi#uN11/m1TO0]H:>2<Qla>R7YO5-$\,2:4Z8=[A*%o`/qJsh[:-8NN63Y>0.LV%X;>j#)g(nLe$Hs1UsiCR@Y'qVE?
%MH)f=SFC-e1:1ABUIhrKnPR^:hrZ]<]]$"YIUraCgo5>Og((;WU>e,eFeXlY^Yu=qk$rUQ\7<)"SM%f\2r#.Y.Be/(>.uF=I2R3O
%_d-H2Z^`sVkIfcVc)TonrDXoP.92D!Irm'CQKPu)/[>$I,LreHE7Znm]A6]>A!rB^?-#YD/9/5R7a)V+.@/;ZoSjNUoRsRq^!WV(
%l=AO8U&9)F/hd/GH>K8f7]POoDkEte-'mLXV+#!:.IT#Sc<>t)P*clo(l[`8<LGCa3S6a=Ls8TIL$'"MM[]8VJMa6\8tK%Nm^JE0
%p=atTV:\HG#(/&81.?.f2=i.L+XcI;<4`%!7kp6<iN@qNjUs"FW\_Uj\1+UsEH[uea7:*ZbG&C)lUfqH)e!&NF'ML%/kmYA\N9!/
%FcSJRYmf6EDT]#ZEa2VC19*8Y__BdsI_mj<CL,#$jW5P7LeThZ?K,94b]m?_5$33\lO1,nT8W[BlhcUHU\b;FDqC`oHs533\UDN]
%bBLtQ9]%&KGf[9Cpso0fQC::NDCB^DG#'*TPRmNAIrqt@\uOh<fI#lr-Rnk1_oG&LP2'l8RPpk;2QA?E,AEQq:B,jV2gc3Q'X_qP
%Y]ZP&qtG!*2nIFeHC3FMd+V4eGN?;lhnq@BOd`^gVrtsG%_75>/V5N2NE.@OEZD7+Sis!IV@@1p37g^Ir6prjVKRVu/=qSt[^I!U
%e+2J#1)aF9E+4fiVA'Yf\,S:];/]H,Xc,3MQ^.BUE?sp)n_CmU_e"*o#Op?Mn.SU6r#V9/ANpF%YU@],Q33n*4Yeaaj13Qo\$)XL
%ImTZQ@`?mCn@1rmFk/@mVf8ES\C!Rm<e7@GYT,X5fOid3l5$_jm*qncLEo%[-d[.fDDB=_b?$i&>[&XI$J9"3Z/f/F8N:hH$E[cZ
%;?U$s77+GUdse?2e(e)?`BpU\'#=3J>@aQFi2<Y)XTGajP]`>eq?+9$EQ_fG8"<WJXLm+f;?oV9'r@1.]t@oeWUemk@UnF56D1)0
%,I4g_lAgoC0X!>qp;(&fj`PIK^AI/*]L=5B%eDW@0VO-0PG+i(ZH;PWl_IpYi#c1g`f]rUP01*^9?Wi.J;&p.-ML-6(=sS--)q]X
%p;>t*OujN#85]h0/4Ul4WMe9l,g:9FD</]Wa3NVic]9N!)1#=,7fX)NiTDjtGt:,:ZT]!&"A`>[VN3/'r40/gNmj$no@/SX;?:!U
%`92t\V/t_0PsW#TR9=aI.cjC;^JadFVJ!ALq2TN0j&2f'KCr`RJ1]sQBqSK*IdU1\bWB`F9uu+hJ?:K<;PI'#E$M[HB&cWGMkg,r
%qC+pYFFYpNX)ph9QFT+H.+[D=Z;A;$U32N+S(;ilWZQT)q9)mKIb;c%H=?eG>?QK%Er^8_eOW&i.gHV6ej1'ZEIW!j=b(d=!0]@G
%VkN>87QhLreSZ.q1d`-@J>I:&CJf!Q.9V1Hkt-55gKB'Tb/q^*<8#@gZN+2XMlEUmfi`iHX>e6u[CDG3[IME!="AbqLR7QX3OqT0
%<a1p],qOthE[b@a(TtB:ns.@Ckg\jnI)5d&J+ljT9J9Z&0',aN)<pF_I,2BK1Aas57D85M:,s3'1\IVfD5`K_ouj^_f=Om!$LdZR
%<c+f%Hi8iPL2-Hh5C$r4>Q*93;c;K<QgGMcl,i>Jl_hn:lU#HefY)aem]rqlb&6<-YaiXLh!7IKUu(C'>,Adf]ma8.jQ\^.;97h`
%k[$JfBSfslMVhd?^=TQ]hm1LRrFGndhs-PW4%$9"rS!-*/UXa/=urD,.Mf26]mb5d\at1HZ8Xg9+7%ik^RSG@>tT<Bhs.-1o=&eE
%?^jp>"n2+W91Kui6I'q"Y@$UCZ#8@_Qg6iLN`TW^Xa]ht<VuOeAV[gm=.q'dY@"`7VN/(8$K(09IB-_h][ta/qISRL-dR]i;H*'k
%^[,2'&q64lJEuiSr<d/5FY3&J][\Z6\'1'1_!gs^FRA8'f.YHuI%B0\Q[PoAZ2=<",bjJ9O0@AdrF@I!#DHh;F`O[X.dnMfCb=aP
%L99q;;[kimKPVIjr*I-==_V/GL)IJsV96&pp\GWS`nS/X0@"6OO@Db7n`=(@/ahZb_XbN(b?_('OGq[[pqKFH<VmR+qA$34e'>XU
%f`nkFL[!`'5@Mcn>Q*R4CV0?;AZIi->m$YSl^+#nMs&/e\^rJr$b*p"Hl[I<jSS`+^Xl9"P0Ccp*-7sdf<9<PI&_+ti4XSs'eLt'
%R[5Y^l^*%#?\TONRe)b`Wuoken%ubefk,U-]G/!00@O`%``B[8o9=6q?W"Ejm9W#b?($!LDk$LtV07\T,#>WBHjR&\\,'[uMAE_R
%04eV'-ihGb/,/mO-c@M,Z*s)n91t>PF*SJkhWpLY]=-aHrNZqMimiV6^"6%`T8?eN1?'knh<UEP&Z&H9`H8JU@WONRg)PP]9(sWC
%\98r,'bq%@mb1AA]FXHIM^9uJr5<7]q64J.hhC=U.N<<+,*ANj<`"l,XOVdT4!@&%-!PK_Ze70!+*q@"=mm@ogE+^Va%n=7"S8U=
%#I\6qW`nMl[s!,lDOJb)p#VV)$\.niUb_p)4LFU/pAX@GmJ6aBmffW`]Q%T$VsCn!m7j_nDZ0@_ZTk$Vc<Rtrh0N;Ka46/aZe+&=
%Z*"o:SdoE%p:$Qa%gVj`p;^%lrn"s3q-e(/:Z'"F`m_lteFD;lCut?Mb5Hk`d[YZ,[X3LAcOLDOPng4plYLETq"pcbb^)@cT:i0[
%bg)WoKDhS%lKI>7YOVMMBQVB:Ra[Q=2AW[]?ao@TMDMcoCgR"(k,7rpmBci@\bWUNc?>rZpkB;KVeb<WX6-;:(SnbCWAQodhsdp3
%^L&Q[V!QOOe'0Cmrc\#V26ZKV8A%[fqc\c[N6KUbY,d@IjF@8\%5s^<5]>dU+"E8Dqjm_]dt='>f4JlFd'.tKpHRR.hI.bq3mU?N
%(43g:hQ:XR=5/%tSAa:[jb&2k2K4-NYam^U@=O=i*uN^,>tCBA]WF.Md=+qi@`BkK^DB\4muQ`0bkf<$hQaCm^[%AiI8-iieNWFK
%Qi6o]SY_s"js?,VF_9b2kkKOSe`jaJ/4UeEelSPdQ&7d%jC0n)alV==AoEl&2?36Uq)Q4[oB4Zfda@S7IY-PH4BF7OGDqs_1\OD(
%/17Rn<P_djX"PgGCNahKONB@aYE82iB]?bC=*K>gIR2nn]u/Id1&;6hfNAm%euJh/jkB9gZ/l#?<GchtXSfb:=^>7\a+bXAQ>W<Y
%I'#<e%T>;ZAaJ9-5#Tu[l]7$o%R3[KL*O2.je+dXr(nJrIP;O4%qgM:f#%,=`:h1UefKVuV"8L8K@"jidT8@()?I+O7tnub/uuJ?
%&*)X[mh6VVC0X!/[l)AaHI5fb9`r-KKGf%$k->udhAp/<h7W'PU$n"sCboH-bu?CPC:D>,\TR1nB33!tYbll]qLcL;[/01SREk!\
%A/QqVg=H7e$,7R@dI5)Z1N=3fH;J1TBYsqDAj#OKQcAr3i!o'e5d^8Gqs8<789g34ReD9:efB\m4tXVV4Jpa,5Gps]-_&E*Ts[&P
%?JJP"h(9J]Vu+/t=\d8$E8n(GJZ5X7jf@@H%:f21mO9"Jc`q0#N5a=]jQW::4tjq8l'dW:q1,_pqnqQgSdu;0l20h1'GP%k\8fJP
%)8C#V@5Ag/S^&CudjesF]GXesRi6YJl?eS#`]2W0j+j9lVhWQjlcHb'i=Au!.W:!F>lX/mj%_Ce@1%>hcdgnto/jFr2A\='HM8X=
%6J;T)bc-BcJO/76,nO;hB)-f@5%sS_7`-nbNC/VMCCX+2g&0<.j"Yr,j:jBTO'^u/rV9;T\6*'bm^o%I4#e<c\f%.;M-KWe7C2Nl
%s7Pfa[4!O8ZDK=s/W2l7EktdIDGFI7GcNCo>hE4e(k-@3OTK0<@7dL@`8kN%g3*20_a?8&&8N=%W>uHap<FU!`pqM+S)8q[b>586
%e5rb8p?`9W"9-K1VH'XgS2ET9;BRsDMtI8SCREP?oqh7?r&QR4_qm,#U2VZRpiC]C#XumNQ1R*G]r@/:!eh23)HLXQ5,D7R1&H3q
%[Sam)f+3:'HbBn9FCU!GOKj---A7@ufV+<f]`Ge)*j+"sTB>T5Wg:eY>i!mdqdopX@RCsniPGi":qqLQm"5L;hIp]@JY180/Sh1H
%`aEVd=BT-p+L1ns4SQNAK="l(?e,gCLjO8f%qXM`81sk%CQ'*>2SHsbfO1bGi[q?`?6"K0W_[=JFk>)k*=^N+?X(45r)A9G`EOKs
%bH_4fW:i2,4_J#<]pnlCAn-rL&L]4=+]@h+kKhu<j2kH[\6f(hXo58ibo#'0^WE&8XVr3:(<=`:NQ&F?]=.BeGGFJ6Q+^>cEl%fg
%_DU;F$GON_c=NI4*,'<J2cFPumC-Zk/;^$Jp%^drEUO8W5Ea/r0GMDKMQt2J_*FY#"SI?!V+;O_.fP8R`q'kNYA\#r7Ct(b/iK3J
%D^1tt#tj2ihsteJ6D<60fsQXi"?Sg(R1Bll<hst5Ep*Sf<>a%8SPP9@m*gM=(WUL&1"QKCE)fpVm,IUDg$nnq:b8c`,UK[ELu3;k
%r8*D_KM^J5Xs_[=j(N<%i=@;Vl&_T0D]P8C3RS1tdqL&R93HfUd!tnn'tS6D<p>DePih)>(E;aQF'sEf%H:+M]g8&#d*Pp6Se&;!
%lg86LPuDL-(qj7W.`cA(Hr9;.EsQk+?%uslj!5>&"[a&tTP#dMS-Y%Fq]Q9k71t!?r<Pu6/Dhg=\htrKiN-bM#j#87,1KEW/d!:_
%DaY5Jc"n#SrA$,N&7N$HnKneJPq>H.hIpj/4AAC_&qJV`Wq"d`]r(\eM%d`#eoUCJ/Rn),hRD2O,=-D0j=DK@j^qoh*7fS[$*o+H
%,#GO,eU+E-,sm`K5aVb[`H$!ol6%Kn+(/E<.)n=h7Q%WM,)\,K0XSL!Oh*$_3p#V20bjba=C+UY<HASdSD1/F3.f0:&,GkbH;%*P
%7UAuQ)$'f:5@UV<^6O\(N+02WkfJBWF)iY,1A#%sP>g_9a+c\;Z!%QeR`@0\kah=tE2PfVP0.:F;2j[H&.nr@K>:u:@MU9OR$NV[
%pAGsZC3c+\.K]1Ye;D@373BrKannma\"&F]Se[mNLK^\4kqKIaUb%ceLXF,qO:a1G_^X0fg8LFAqljg0Dq.@1*P"1?99nD;NDB3J
%,@W+Ka0L&SeqY#7($bt(rHKuq*HHfF=)J(Rfm5"Q;5>l8][G6Tjfe6X@`6?"8RLj>q<N9AmG%2^m@*rQPJ>6\Z/q"ak0LJ&%geW:
%g>1]B-i$sMhg'9TmrA/2G2dVCH!*;$?ZieYl]'ffJ']EMMr%>'bECI\p1-[l:f!Z%RK4,_e+7'&=$'@aEp;c(aYq`9gPr3s-JfNO
%1`q=Aj_h:\aK7)W=@"se>q8/-8!n('BR6<KahnMtpDZeek[X'7@.q;ci;rd5G?1fX:Xo.aNK:?cc%Y])__I'&_jr(*Q+[u$MpR6m
%&&dZ8?A1=#93S;5="gnLkfB_-rpnE%Ie'8VG;40T1Hjo?HD3TQ3&p^PpdFl6M<F9hS%HMUe)cdG;;]g:[-QaYc);`>#^+a1?XCLX
%0_i/9VPe8@/hO2%7)Z'7%[p=>F<1r537\24oHu2OQ/+`T.Zm%2oGL**3_.9:M0sF3I"+FE"-a<XclK-I/DMgHA"L1lSNR9npJZ#B
%lYAkO(e[hbq*NFiRcT-05$tAp'?=ck^L>q3F#@]]EaeEMM`g1-+%g*op#I&ZX6+3*a0E08@qkMQVBD2Y_lr@,p?Q[l7aV8']Qr8'
%QnjEZ`j[stT)>Z,_n2D)`'XPGY(=sFM'&ia(3NP!3[4SnB*cPfpa/<\(&:Ukq7:&:.F$8E?bSNb1::R"^W\b8MEWuD:PY"'N^dZq
%RP)nbbqBX[-bo#qRF?U,#(/.cQbhE1=#203o%Yp3&$%V(::).ti;=7p?#TAi1Tdh;]Jl-HB8p?O\69hTelN@MJ=JhGO+A.CZf^3+
%^as*M*K;`<A+eknQ;4,RWi)Vu_ip;2]n*aY<k1'2_3*F<g>g<6Jj-V'C&t<+f<l(dN,X,Uq=\kqqfOc(EFDl#4!C4S*fLUI=0"!4
%kj'`\5+NhdYtjbHP;bB\Z=^a!SHL<i&<G]X_,3(=^9h5spPuD(D"`l,b6P_U\)Y*qBtq,qrdDD&m-8Ht@+B,l3n6=cnE6Hgg`+#p
%*NooXp5\S7D<&Mui47SW[+tu*,V?"/.+0/"@+O=IGXuWT_@G4MM$b@-F#5iPeqY-D"=HaXKSA&":S^[We"7LfC$Ok,q+cdeqM/dE
%Z*f.<CuOWg9uS>F=%8?"i\47mhBf#E47;!s2'sp5K>U]Z[46B:1P[UM.RtSCr5#7@4X/*>:P`>cX/nGTk,2!)XSJ^aq$Qh8,Tt\;
%4+CdP@Ml@d;1JYhBt*fg5<<Z,5J149@k3o,XP'`\d/gHefr)VIMID3fj>Jn3:.CT@mVHuk.ca_@&k5t`5A'OlfA%QJ#(el%EoUZ"
%*OEs2p5o`1'ZP@3&BL-qF`5n+<gMomlXt=h"#QTU`>s59qM+8h0@!Vd:6"_?;qng0HQ(,?H0!U=.*k5fH$H*02imU5K*!gfpEmhX
%*5oJ<N\qGZS'`W"(I,`@l"`&HRlpHGecUonj?4+oaA;]m2R:eU67e^mmD]u)o`f_7-*;qMIC"=!Xm'=+j"AD<EttHfG)kb1L"c;b
%Drpb.4GiUL;sn,;m;6BD*lCs4[9o8MQAskVpN^r)"$2JA?.1\]a,BKu;?ju(XQqD0]eSM$PeXQEin=[[h\1;0g#K$L<3Y?><-2es
%F,#oI^)3ZZeGV213YNQ$ogR\(VL`#hk773ggZ(k/JO,aur]BO3-c"_G2&Pbl6hQ]3EJqF!?jTpKnr<lX964VJPri7nS%-se"D:\J
%_joW@>m3u0fJG4p.PC)HH](/`M_,K1K:p^YXj-+>CU64KMmJ$,Ec\^mXZ%;MN\Xs)mX_$$Y37ed]c4IWksje/bGI;PCKg3t>H0ih
%X9&*<DZ\"0"u>90HBT]jg3P'(?N=R.:K;Dg1%TD`pniWu`!f.!N_p8'M1(8lLkuub%:V!Wc()N=0S0Q0X.p81Nc_")'2k.f5-?33
%SW)g+4]S2NMoV0XXPMnl;FF!$cF>\a$#PEk4$n:G>j3A\Ba4B1qm"_EI*j!2CD;a%Vs+?rKYAN_,dUj<WL+/:TplnQ@%6c4h?b1+
%#ttN,b_aqia+"2D*54)bJt1<XGOu2jS@86+(0&C?CHOf6S3>T_8=[6TQS[@!b2*d!(7M\GUV"<c0>nGT#1(Me:3_=g;MgEH@@O>-
%$-NbMQBJK![+^I=$+8eV3AccIh$0(41XC]hk?$\*/;sf*dU<ILoU(FK`*,8^@Dl7fDq'@.YPg^+G<lqIo9UUOE')5%)ql&2V\i2j
%2hP*3*)mR5pk^K!YuHM>gI3;GUGG^@l+8#oQg_`sdW"/Dc/Ocqlum>?I$iDhdYY^g-V8;?]*9i__l>PJT.e$ZW#UENn[+-2h34V9
%YDg=l?hLR7n-1QX4>O9P%SZ)Z,+nj;K&->;p-N7_#C;F,@"^.W]M<B=Y8)n%YDu/j)@tiHj69hFD.N)W`f:A5ql`#@2Vp+pk#+/n
%D[a:KZPX=:Wcer]E(.h9j+6lLreXutOk,<3ag<R+r0c[8B,oG-)[ffbYU>DbNaZ;\<HJMK<l<O(d<Yia^+TUT!u;QAeB5e8)#iWH
%Ku$V*@c.t<'k-%NL)>.mG3O`)//qH5(ZrNoms/XY3I0bB*YF-^GcXT"6ng@,%!6:D#9gYe'j=_8,=&m4;5S_JI/`qr+80fZN<>C=
%!aoXn_L9D@5'E6KhBRSl\+kW=XrcjT*\@11+CB>AeBjmC"q>qg^t1rEhI%KQ[@K*PM!Ul'TqBh'BV>2'RbMEgr,sZkOJh,s[Dp_S
%`:)<O_r[jDlVEIf0]I:88m`tQ=U^ueiBn\olYU*1iPU)9l1^@04#_82Ydej8h4)na&&a!tiTI9@+S`!GK`c6Y.pkK4YaZ`pCgP,+
%GiHtVNJGX3*,GDqk1VM:3n(V`IWK5IphL)XeP3pi52B@pJ5>O\hDd)*8hkk"a0dT6o'&j.Gb-N4DS(bd-N%gq$9qehRTDVWC[7b>
%a7Al^#[WJebMch$#A<kQ_R%k_0q$8Q2d2=(Vk=&ZIos4/UsOT3=2RLG3NIO5C1q-Zi);uR52@)C]]Ca>h0f1+')f)MNg<1iB-uH0
%n\2-el`IJ=,&@Ie5$aDQ(_q8Rn?p?%KWWj.F;:hfd`qP:<HJu?0O9[A)HB1,Q-.pCY>RejJ[FcaI$H1m$N2[#po=?U;fYT.mr;W?
%n#>]&5MnDL1`q33^@mMN-;1cB2-iFo]mEt$hVTF1s.?L6\(gA<qq&$CM4WH!IXQ(XZPW(KhsToZ`^o6!]:l_OkFE(L[1oMGkpHjs
%^\j@pec*8H`o8Z=A1$a()1"OB5f_,!qKZtZAb>5W0c*VsolCPVT!0m[U4-UFG8W644*43iJnTLG3r8-se9Y;q?b@V[EdCfAc.-P#
%*:717^f57J?JiPimGlg[TF^LJJfI)s@c3XiDrL%lLj1I9SDF+koapXqJ2j[Oc9oOR_KDYR*gg9]Nqsmrn6Z,8rXb!(*2,eKYK+OQ
%\@B#g`#jG4@H9:lSNpqB1n%pJ_70J>[K).-UQm40a.(t]8D@E&1N!HQ$,-S%D7q[ui9g:r0'(h,%i1dC6aH*"[(!Z&K[pi:"uHdV
%GT@j7`ee.0j5Tbn4#`QPfN@i$Q/f_:F9!2rX34GcEp4L^h9G1t6/#[-"8=;^Vqu@E^\5DI*g]XjG#5mpkRmh5(Z1R#>dg5/R\=%r
%M1OWlDTF:la-l1u\6I";b+H(lm?qVRjoXQoId4c#ook??2uI3@T.G_+C%;Fd(Aj>+]Xjqr57R2f::9ST,`T'LEYs.OC5NV`MbaG+
%ddY9e`cC>YO2VX0WC1b%@_h1r2/:V\*<(LW^!Psg"@)/0-UW9!laMR%98_d@qQme]I<8@o*;,&QQ^>.@]KfD@Z*jIu#mWJt)@!pJ
%k)JjV=)F>:SNOi,2J:j>M8;-g>5Gf!E<O^1A9$,.Xf4R'^<]]]pu6L-k6Lo=4hL%km+p2Ff)&N]4pG=OUJjpb<=Tc5jr]!oA(+:`
%752/:FbG*D5[#r1"n/IK8]uMtQ]H$HO$NH-)lMH30\@4aQEd2sTEr,-/>)LbiP_.ip;aA[\b"nKdn(TOfU>.:N[gji3"r5aRJB!O
%>?meHdm.nUNc`PSN.H@/Q'oc,-JXP,:H5?kbrc?%b1p[k_[d4jQH,c\%f!V<$T'*PZm"DmCd+*++`<khF)tJ*c]Ml`.a3bG1PU/F
%$Q=4+TgVR3?2HFH)1,%)j?`-PF#4ZFgh]a1mL'<OcGusTpudF#_lJor0Zs5g&S9cO7Tl?%l`hjRD/&9*KO?_SB1jYe,o!D4X.lL3
%2"o>T0GB,rfX?@&+di&0<BRCNWJ7W\#_RC?gIDpO!]r/I=E\^5SW:'!4[L>$#K27pH[2.Kkg\\:?5VXKOqHX]H_i4/3BOrXN9"XG
%5IDTgWsl>0(`Y7o/LqHiY$PO)\;VW%.Hil>_5Ts,kY4GHC^'0j<^^UpD+?uJc^o8T\E)T-o;3uqRZ)<C<jIP.BkZ5U2j")9`7g/l
%?TEE?WH^$n;.Lr,+Q0L-MNdcO2\tICX<A5MTiB>*71+pQB&6sLo+FQ5o@`(V*kl,-pHeFumb-5QIkT*r;@SMOSZ@udOdD:opReJ0
%!O+)n@:WpZbj<"8[dJd2P_"U>Au?NBelX:Q&INAtlf;*he2S!7pI(BnD>@X@;/3Kp*nu23R)eX0$DC!7Gjasda,XIfk-:,Z:.-`X
%\7qrS^fVjSS7W5jTj:Pc4SJF'fkd0`V(^Fu3?O-JO&#O:Vb$PS@cj;BP6^3,O6$^[&*'WV`]e\HVCFNq%&4\I)lf1>ep^dU^ABtW
%_eFUMlQ+[R4HE>2%NR_!M^WI\Epj%fNZ@B(c2C-_9!mg"K>:Bj[*21"S#=S-V<,tf=3CopgkTc2iX9"j-YMu2c$-AdosVV2qE!7N
%eA56urbjVjI47g2`36`8IeD%o]%K0ZE+6)NSmV/*kT=#gU9^<%#FqW2Rn'!&%QI>&'KtH7$t/J*;OIf>Ql$E-="IWP9EdZ)5q>:l
%$K9W.ZDL&4f$(!<R+Xgt.hffOCg(KiXD6^Ak>H+8N9c;$5et8aZ`n^Gh%'sC&u5@AEokZ@;b?MPD5TQi#FG@UD.d]JZB;ml\.-!T
%=_4M#/BDO<:IEl&LHg"XopDF1B+I8hB:d4rl>TSM@Vq&m`X1h8Ypeqj@9NG(=hHMT&Grn;;rL+$7CsBI2+8M[FoB/4Gb73fJ#2E9
%^9MW8!YU6SXLLD'*I\6*jLc2ipL\J?3:UNlH8g2p230UWLY8Rph[t-.`kjue]XJS"2^nG'=D;N054PVcq/*Ie9m05)FBHKr?9LEH
%)\3$(a2N,iVhQ?7CJ+7#Spjn;B@7Qq>0J$?Y808o`Y+6s%mN^IDG/ZQ'"RPuX@=g1kkFu\qm:IZ50?%qrVlY1&hJk/'RSl1^8sLO
%r[NC=Pfe&GZc?*cP'MV0[C[/[(uqk`8=g:Q_[935MgG\3eW+,<_;a=f;Rs;eYdem2ONBrhK>kNVjG,2J+3a3acMudidNloR2-mt#
%HG'uQ0h^U`5kaZ]^>JG]qeG*hpZ(ROj$3:_P2;u.B_;>kYNtrHL=]qf2LMbA\p75S/Bl^)<q^t^DD)LoCqc4X=1.kdfAbiXfAkV$
%U\UOR#m;8eD'#i3p.Y*LO&,IKTMO8V]E#\VisFuco^`DnShFe@a8ZTuk"FV,pDs82-j@;8hu3^bf&=Lg!<%,&Y4ZW(S6]ekGPL$$
%8_5f"BAA&5^6J!Bj!OZ%dms+bpmF:NE)Y20)[d2'OilYKCZFOUY31#8EVG7o^W%u-?*EOjl'ha.nF+6_P2Vg/b;3sdN/-:q)d9L'
%5l=OV"g'=,Uen,2GHIdOGMdZ5WAGYD-MHkG^Da;jTC4-Sl>Or!qrSrAoD<T<_IW;?XM+U7j8&4_\>ONFqM5C,qd7UgfADFopYNVk
%n)/tRs1H6.NP2Ige/$ot'MUa*h*1f3j6&RP/74J1Jj!R]9DrRG1jX=(kOBYfLomL:[!McIqr+T.+W*X]V7#U6cc<Z$LQ70gW'<`V
%""u_(E]6!#Rm"/:=FBXOf3TQ6*ZNG;hi56[j0b*8iU(m$Br=f2<r[U>3-^J#7FIeiiUVs+]_V>0p\PI1ChT`oCqP/dSk?2dq^]=j
%g3C;X^2InA5Z2).A138YWp,n:l1\jk_fIpVr\ZPEi#n;bNc"T\5p&58YTh/.ULY<=e[$:.BABpX'O<mpd0Sqq<R("B&=/@:<ZT5)
%&?&Yf'A<F0=4K-%(I8"#ngnJ.e8,0LHQYL(;oElX&qE9kS#YmmK)EQ(iHM90FoV9aEt!6LQ-iMl\o3%LT^4],8$Q381r&HC*uhCH
%24S+[4gTHVrM$3us7lV588YX%e_iXnC#HIki#@(#$QcnZYK,Dp]p4;C>(&X1SVY:Ba@QY!J8OROPBGM9W]kUY2Z-qk[a)mcHk(M3
%*Fa4E*N-udCqYURdg;;BZ*s^HEpPNBo""clm("R?+G,b]&bapV3*WsR>?/r"r+O6a3B_Q9Fh9q(];jP]gPsm+bc9^XL'f29pT#V`
%.6'Dn8kiBRC#E!.f@K':EI`RoAuEk5+jH&8l(0Rjfr\h9B_<,_M5&I5fXj?U+],u"IWjDJY,2A)Z6Af&e,-'/]NmJd4o%LdbRma6
%e(OHt3h(!oF-mS](p;hTbQ0c2NI)Bp0`5PWi&78JN#)1N.+=2g<%ZS)fMfBI=qZ*#giYH;1TuAiFU[K4j"cF#_jYaR&)O+:go>(U
%?:Xo>O1PWU/D'M6en<;_c.r4CcCa3!%EJ+oG9-(SlmX4FiJ(.ao3KB;lIf01G>-RNOE-;)^;K\_bCE@pin:KN\o'Ns:W0TDFTV@W
%r.riYJ?itqCtH&b0W8cV+Er6l9nVa4Bb_b8:']%ZB->O+Ec!NT,,]1FL`=aW2\,EG6l.\-9[0H#`292(3N[KB<?DqB0qe"!_K.`i
%,E7!h;+*PN8b6=[rQVetlj6MX**]+/lm\0U:kb-j&-YIX2460^[PU.5D:ueuGc751[ODI^&!s93R#8(kcZ?+HWI'4n&:)ne/6jQS
%,k<f3QBrk?HqUYhY%J-Z.>Ja3V1q,%*nQ0ICmh09_!OiAimBka>Z&Ys'sJ>\6#m6O!,:Z6J)R+\M2&D6,LMUGTc"[N+HSPp28^!D
%O)KS[ndII?;)r0D%hctT8:ZmDN.6U1*)s.u$UXC:RT#oD0Q'f'nNMo_TLBV'F)"H/ICJ<]k=CO=Hn$nOWj,g%*)*4tPjEK1p(go!
%KD]_FJ<YNS9gQJ7"3J_$^)<nVSdM9@Y"dbL:lj"l"%hZL1Lj[H3FIoQ>&Q01o,;C?HnJCWF3\PN!Qh9ZgcP^UKq5:ed#\qaq)L:&
%gg$kZ3+?d`M'-]ZM:<`EcUh?PShrO5"dnSOX(j1+<,CegLm"<(_u:H!+TNk@Y\;/@"6C<d^)fciK9X])c6o;EK$dhE!h-$5,CG>F
%^t^dS/Rs'djn<*271I7OB9$Q?+<jVsSRM`gaB@T65,^5;Z.W!aBb1e'=mc'C,hF(c.DGe*S43JSo%KHQ?1tp3%9o9kqucSC/m,j?
%L!0RDW7K/li*-N&ZN>g+JVL609cBR1:Ei[pg!-KlP"ReqU8)j9s#X-m3(H'$)DGhu_m?p/20^sOKCUH6EpTf7=\e<D%I?>9QgU()
%4Ug/S,.S\tSfBt3C5fO!q7@-Vp^iV%D<1aL6N.*Y=3cZ`?H%-Di#Opfap4(9OPWE]q9JI]O"Xhqnp,03$2&B,q#;'->7Y":#,eoq
%Qmo[VVXh_kgdRU+6#sn9a(S6IMG5/MF>ZMspgiXjHc7=25`UK+FH-0E>ocrUP0::>MmL$ho>-'*a!g-h$+3jf6ghMFVO\Lo+/4B:
%nrN&?3MQ"'heLnqQuKE):\b=SUqgG?_4@9Ro@K%.J4ZAFlcDjG*CCNkF<s*A?k7Zs&bZJE9haWs%%HV!odY;kV<9V3`_N"lJ%AR^
%KbHN,&VWTY]ik!TIk.]Jjj_:4UGfM##QUTmC"^@<7uCE70$8he!eB8Q9L_Mb;'(6QfQri9m4Z1b<XkZq!QluGfD^s&fdRo:n;q""
%9\XKr`AhR*p33'SP0Yl9eP*G^&ZR3D\oK8gLBn'g(nsWb&!WD8KW#d5B"d.E3)kNH8,Z]5:-[-AlA)N4,e0`FSEZ2D1XFpNlp.j.
%V(4=ar5OR0JP_%JX$K2%6J0[4!P'R%6M&)M9_g\*<(n[kR;`OH?/Q\;ab<3MY?<;Qj0`!tJ'X`'+%<KQX^$lTAfq-&Q.(mu^JYVH
%5#?.5DRgB(PU;D6g8M%7g@P$7\4]\,\kZ$OX5@i.rPgp\CeO#FbU];3U<nqD'_fZlUS;Gr*&=><H\PI8C)$XYKibX35=R._2?3Nq
%reGl47a-uDq_="*O7rX5>W:j@I,2^h?h#4cb6gi&0N'>bpm`@bcV_6Wo4(Q?;E!3&^.OP]3B%h)b\g-Lk^Ml?C;<5[2"$:cE,$A#
%>mk2&J-`7nF9'G/_94O,0"C-ILT!`rGg?!4$Ajo,`r+#?]]:2ErDi\9gS@&bg]5:WT:?V;ObrN0YLq>n_Vtfn!3c0V4S\RJ)0F.p
%Dh2mq?#b7EG6LZBolFu]fbEjN7W7,U):6iC-_A*rWP6Tkl&&+O7D-Mf%q89<M+rM7!N2?5C,Oi=!X=M+MT?p5rgQ#*ecgs5qe1OL
%i410:_9f`RdpnBJ?nQ,5UanKZ?-7f;;-C'`oDnhT44]"Ki#")oeR@EX?lJiq,nlDQ_QgVUk1dU;*ap!fCjH2f\MOtsk45E,f<Fjc
%X6A4mR5[S<)50h3SYER5S\h78jg#=qIRAg52>1;1.k,FQL0M$XcW=jSl-4%hBkbNGLs3q[RA=L;m,TS$,jZ,aOJ=iG:Md<=VlT/k
%Q(#peRS:3S?h3EWH]B\'H52I]p*KbO=lLW%c:Qf`Bef_2(G?9UJMtB1C6;HIZ@c(7>0h2dYi0r'(dWbAXrGIkYK&RffRUmP,`@>o
%2Ge#MTg84:Vc3<u6$i>Dj/2-3.-'<\qasc^+QoCVOj(dD1_a]=*f=#7]4Z_DcR'hI`9k)H'g>fIcJuc$F43eVY5W8kA'tr-n$(5%
%g6u001B8PH83e:eUZAdQDAj2%3.f;jYV;CsJTtDI6[;gfqu9JaZOPJ%mO*\%\=0CGY&c7,i2pQ)pWZMF[F5iQ$n#hQ%`I+"qF5PO
%DObq`#bLWE4db%B713NoK?<[I&J<_d5)\feSjP##cZLq3m6;#M[3E$*!43_/AS0A=XFK!DQlJQ-_b/NoRhHos\;rL-/'5a\)SU2&
%qM(20j^#SABsJ=g,=q?\4;*P7g2fT\S@)U0;U.b?7j>jk>,28j[ZmrBSF\6E`A96R`cad3.4Nt6B9D5K.RGj7SN2U-cIr?FU'rF8
%^Q,u,9h1cmF0`B_QaK3OAIX_;!a'.prZbAD?qra-Um;mO$7A+6S/I@A:/66fWoRAVr/%SrCDQhBi^EC%iFqUZ#=AH(kHb6pLZc6T
%iRr4YWoLUTpm-P`CL6?f2"4a1:8#kbM0T^[Vlf5Ep$?3K>Q:S,0ms<nDj;BlK(BpUM?IrO=.\;gVBffToF=?H`Ba]HbV>iiA@!cP
%&":92&^P#_]=Q=X2L-?&U@P&A3a9I@GAbiMgVTL30M-T[kl3:UNk+DRE7sC9fGKC2U%SX4e'LIBNNl45qoaB)5$5oL`,*U(cG'A_
%`gfP?iRuE]iE$K8a-1T'YW'4pM[?(:(T-?b2`+h'F5_+K>#uDBYX8YT_./$::%L>;@+GTXKZt@SWL?:sfn^,/>=tFsAl%peqBhhG
%gUC-k,1j+t\OI;dACYbdAWu*KD9&n5qds=JgH9kL7T,8hQ3(r6FH5a9U'K)3'%SX[Fp.iHSW$As1cm.hA_E!CH;6Ubg!8LTcauDG
%\EY;b-JZZ;==qW:Le+<#)f23/Z0)h&L/VN74,9MT/C;GB(epCY^mQm);7\#"_DIcZU@F(jAKAlGS-R)Im;Nr0Qj:n+6IG)H4QmPB
%k2UL3a&;uoLnq/B&8Jpl_mX"KJtrVmWTo3Ob&eEl#.of]g7n4XDq1dkX9sHcl8eO;a`'WI<A1Gj9cWK%dW_4:=-\u$+QB@s(K8SC
%jN+V/5?FL2'$,13IGO('#uAM[=^cNK7kfLO>37G8+);rISoYpQ,:6"Ve-6u](2e#@8MV:5?0ac65L)F0EK]$Bd0,Q9?808O3la-B
%iB7Q;QYhRt=d\lT]CL#V;Yk"[-==3V2/m<2*`Gj0L+iBV]4/+[`P/6p:A.->Rc.p`,*3Z_#:/J)]ncdJ5TGb!XD8Tn.QCXq1<#CF
%T_'@,132,'9[%e9RG13qlV>%!>PPc52TbGXGLQYY'03gl(+JO:3iE196p)c`g[qIr8AtWRDWd4Yn6`.7gBDt>)?/iL?(V(c0$i8"
%lQ'$"V:snKG9s/b1>HsKZZK=?_b[A(H<@gbHEMXl/@m?_UU%MnX1X.1b?&s^n!:/A`HRRf6guVW7\>0YHgU>S5;q*;"]e8;LdIBf
%a2aIQjTC+u4XSaGL]<9tQN+4o^/R>LcW+%1HoAC2]G;3Hs"7>FhY4f(0i<$1kZ@k,%;$pgUAr3K3c\?%=Mr!pAdU5>I8bi`9$aR'
%br]$H^5AL;X_6G0ils/U2C7"rlH[<9->$X()RO+-cJuGr^'.PcfUC&OQB#>ABhpZB!QJ/)m=P>S7^6o:"SY4mgf+\M[m5]Lgq4If
%%+56A),#s>_<C1prr<fLNEXfYAUtr-Ai5#+EM#7/aD3<#\-:-.X_:Z3l3QU(R0M;`DU9Z9;IHYY2E-no2UUg1$pun6,S<a/bbj]X
%euFJ@cKNpIAR!(;9i`/D"10a;"+Xcd!^#(L5S&d!q:#tSbV2@2%;6Vm0Ui>iFTA.qQ3)^k&8M^ud)"L657NE_\$!u+?Ia#f'UT+4
%\.5eL?p4iA.[?q:iZQYEJO&-P*PIVN+BE:-C!I^C"Z`HX!aQaN!(^Qh\#Q$3po-Nll@FA<5f9`#VJDt.J_P;hltHGtr%YI8&r>$=
%FUs$GUKur0--Z(FT1jjQ7`4GjJ=.H>\6Z,LDHB!@0M3Ja;07T)K@P$A@A#coL.)1IrmlM)VU[pWY@A0li-10h$T6;Ig(?5;KSTOU
%<1MK(f*CT11e-B&=r*;>.Nm);2[ou`Wg[_"^d,>A2K>CjTc73[dsqpnQ,'k7*>Y_dVZM8X-#Ds;P!fH]6k7eHa5_)792Ue=L22,a
%]aWfl>a/P5d%5o]%f-H;('9pJrWaNqbqMQm"IlbkU%W0*$,[Sk(r/e$76&Z=,![p@EGb9PCK0C4<\sS#D:1Lgh'\;B*_3j*[Y1)%
%-FXW3n>THDNQ3If`"Z5[SSL-9GVF\3ob%<l@X2c%fiUe\62)!aAH8,P`s+$Acq-:V6)!OF3]7;?"]N3IMosSTCW(obHcj8V!l.I-
%,SLI>WM&QERj@MdQbDY$7sIc6`c,4l_q:Ob+C$R;!:gO8'/YT3<&mcFf<GY.!Bk7ipVVbteq<;3dfR@H!B/:Q4QbpRWb%lVd)8et
%A%Kj.#PL5?UB55ddV88,72ZV1YYd)QYY+tLT2"6:a22uYQji%Y5S9Z3eH(6<YebKRX]j?jKB!&ba.>(=ZlA4/c%;X`-0t@:"5+T7
%(g=nl`qMGh8#I,A-18JeA76`5Jq,G#epq1Zpr?E0N%:XcOKLcj=Q_un,_pp!*=t#eDfEf$Hqs;kn[O6:A`2G0R*]d'd2=RkKIm0i
%QH-6l=C)&t";oeX"Ouo@$6M(>g9s][12Yqt"R.u7TD4W\cXWG*m*Zej6,RG_%[`WTC"NjTA(3D#V<K$74MZ0Z]I#6op(3'P`rOM$
%Zg#rdrs(@_0b8,B0nq;`BG'k<hspL(ltJY*(-oI/#8=9[2M#NrU1UODm_W;[/N7n]e-:0?`.0Gb*%$JF!.egZi,]#=GY!RmJs'UI
%*!7F@C"HdY1MYCoR21?Ya6*o!Skd2Qd:)GIEt%sWcad/BO;#]d_=um5kOJg2^)acfXm3k)"t-2IQlR1MQc?ICN4OQ$U7ioHRXD'<
%PsLlXVJS,8i%C"RKMC)WJo8@>&%F<DhUQjp2;h2F;o;3KCg!/W`Pk=28i]#`JdY8'+O(B72*De(*Adh(es'A2Yt0uD]=;?tHs(a!
%,&Q5RS_IQqONH.TmGgd!WO&aP\3&?W!Q;?mp7,b5%Y/X`QM/tn$(@AWXb(Y9%@mO9*eW=#kkD#F&bZ]&T*lbe3Jh530_Q,_o`-`3
%>Qf.fo0SO.Gm:eS+MDUD8RX.cK35)G6)+_8fNO$M!#n74$0dsN.*c7jJ][$7!"Qdj$Hca!mr4quS_5:I/`$jH`>4$Gq8P[-@R--e
%F1?&F63FICHVjYC0c79*@mC1`"$Vpo6s\ds"<&Qc!N+o<ih<ZSKj=ep6\r_c)kH12e>C?'l!#]*)7sLb&9'N-6t2@5&+F@pLT?Y%
%\?6qG"%J6i6a"a+leq=l#\4g3_1B$A/JpNaj-2uP6K_$+UQ:042lK'/D&[kg*7&i.79&_=[RD$47gf<Wm^#&I8)$cC)9BsCVSi9X
%#?o3<R$XMO*?IHuOr[ibVSP2@)p@V6PH^bV'ISH9Q&]Jd=O#W2ljY'J`^CqD-dq"?m''@@3/MJ;2NVd,&P)r1!YB6Vk[4$GLVIS+
%Ub7a!>:6ku8M^dB'cZgdc!cK[M`VikC/Z0#lF=2sA#gsQ)&rj&d>#S@/LK!KjQSkG#)bt6$41HsfI@<a2S%s:V__:Bd\L^dis?.H
%,7m8+!W]GiFD=apC^Z:Q7cYO7&;>%qklGV@\m]p'C*!md]VY%b9\Ob?QB:9\8.L+ZOMF=N+O=FR(nN$UU`%-/1fORB^5E?j!3_G>
%LO3dPF\`AQo=)3d07.VE%=C!U#M[Q%_<TS)rmf$dcHc>frG_4=8T\lmaa-GNXj0s+3`Y_!MZgs:T,+Hr4utJORMmI`ptKF8-MmBL
%R#/tT90aW!btLq[&9(h`R;>&VL\e`I#"7lG"pU_<3"4>&(n#p_%=eX4=\OZR!C9M#20-M.YZ\SOkG8/QeBrY#+CH7@2+VU6JJOhF
%qpZo4"[6YI8t\gl*82.AL8S1]$RgS9-uC`p4<O5dbteFF\4sQe,nINCpPJ!s5SScc3]sd(2(#Sn5SKE,A:+n><j!LCJ1q4s:,]=h
%@E]MOhF\n]<j2h-+bMgoV?)6iT[V:B%2;mN4I&/6R@B-t:ClQD&nmIB,67#QW)j%+$oK`;9,bBk>W3+*TcZS<0"E#=P@3OT$A_@`
%HP6Es$s0[]J0;OR%=LDm8kQO7WF,qpC\4o*L4GHl"E!$Tabf,BG2[[[5dUaBZiD4@8qV:2-.#.VJJo/SM@pb^T6(Z[OpfZU.7-Tk
%ap,SR_3DT'5RNVul5Ot=cg1iN&C28;nj^1R"(VI?$.Jq\jpV<B#n80`PH1(saMkRGg.iR5`;>KaHFb`sfjlEYJI\-XjFhJl#IBdM
%V#l8*mFaPFVM>Kqa]ULJA[-mgo^TGWoH5Fk%3D#:+te3-*)a#+5T;Rho#ZF4K#*.1)UP:K4p6M7&ag5;R"<tYMhL\0)@W1<>U9s&
%n%27C?l`,#2cG8M]aSp9H(Y1iA2_kd@+ojM$B;>)<foZh(F9Vu^$(bNa_`fRC'kO>:04b-#ae<6^f3SJ7uc&sSPVhk+j)&V&GB`j
%*JkmE,ZdA@&AobMNU;B?O&T-^%9tCDJb7>!C=&\Q!b'poL[Bc'`euUNJZ,#@`3OX`$?1T`!]5=IF1[!8iKFGC"N$0#/!+okN/;R\
%;A#0ZoVnS"7QdkO"$KI.fQrD8M$b"(T"j8)7,sUo;aB!0KRT&6k`92%?d.?s1cGkWd7$ZY8(BA3.h/Fc[qsbTF;.iKT*D[Mct07b
%a.8F*U]eP(jFULmEn%LL/Lq,Q7faVP\9QY8"jW;7&Ga-2>b;C0*OU)K&B2!?ZQ0FkWc]fqL-arCgOO.Bfj^bmd(D(*5WUu#ku.ZR
%QkfR6JTN6:JJnfXL:>[,,c+-Wr%oN;S*M!7.*]eR.l.WJ@d'OV1=nc;RZ)>7:c#m0,aHhG9ElC58g(]"fc_&$8=c7g8g*uEn:Vg5
%AB,T;5hKK&'BoW@&B(:N]p1i^[iL67.0;XZ@h^U9mm;&n6[/mu0[3#i6kXjBq"V)\l%\;s!eEj!g;.0$^_50e)A#\1?"-kW0R78L
%;NUs2.LO<VSLC7)i]F$(!ee[LSV`a[VN%1`<$6S:1kR'fL$h',J4^q6Z05fR'Ldll(^M4,8$@qS[jqs3?WnJ9PA*g]Wuu!h0]D,X
%o5h:Ca$C7s/fk434[.`X%P!ZRWD:f_&7;"<pk2R]:kaM(3p8*FI<L&Ll3YfE;_sXKH]E2sSeL]^%a=!SoO5dr%aQZ[p]''Ue+idN
%DnZ_Q!<p(;rpNMtlUB-HgueVYR@mo`_g'gf'EuAV1LU+14`jo$HeY3C5uqYG77"`'LmO3R@Gj/Q)euVTkoso0]O%foU.tc1#';4+
%rVn2cs8*#Nm.DP>drHF3>Hk"b*\$3bJKb]H-NW65E@eYiM-pO^Zt,+FR+)JE5uJatSbnm_W9:#dg_>;@cL>Zc/:&2clGtp/^cXBm
%,'Cpr(!sm'!'n]RnBek'3^*UR/cld7+=U`l4.Vq],*3d>"9bl9*YOFt8$`:U#W2,n0&fP4j6%_]#$[-X3'eBB9H;/>O5iW>O^:Pk
%`3[)VB]7Gb&3.W:e6edCmP4i_(g9]<[!gN8NotL@8fc5F=i?>W,/fNC'/UoPNi33,9%sO_=U4rfgu6UkZ`m!#Us?6Z_WFU!J18o,
%&G@j1TE4h4NYkTMi["R1gG.Cobj2&dW+-uJ4C8VLF9i=@U]gF&)-*.].q-<s9p7M(fb@a*8/G)Gd.4REkj`?k%G>^;?,t=fh"/4E
%J93@r!aV.<g^NaCdlc;Cb^^jQRs$Or0BVBojPgYY0WH&"mfbu#&1&GI:B=3eNp0+K[S4s/F(/(j^PU^Hk6<FRj?Gg7b.(l7b8NG)
%$$3JQRQ)Y(K&F)"6]toAi#;Eg-.=1)L%cmUm=i\+1<GF[FO4H5H[I!SI(LA30u'adUrFc="JTe-40JKBL.8\]Q$?1_/R8RLBGc'#
%f+FslG2c(P==#,Pk!kCmmfbsLZP$&;b\E,F\r/@_a_q:.Lpr?tdu4;b]EMDYjL5`"q6<5#W6DcS">l7+4j/pn-QmLgq'6.W83jh+
%7JC8pUH8HTZ,DilC!4t;@b;QBO@??O/=MlP;KocUQRHdhM7np7bcjW#WL:$C/\Lm;hDtYQ?o/NmEpZX&Rcl)/b?.:7MOOr@P7=o@
%#5%E/$@m@hkj#E#1#SNP,68(ML1.BEMdAoK9fK`'P9r*b"JFf5m1kZZ3We+KBCr!0a)P!fNG$>9;q-b?,bFXN0*_'I*-A9)%gs!H
%DW45!0llI)lo$^q-63+m-h/=\D4-o[Y+o(9QJ^89G"YC(8XFAn&J3d`V@e125i6XqFb;<$MZGOB`:r>d,>`U/jHIE'('-!<O"#8/
%k%65%8`_=:SN1U4+LrYsf]tG!CVH'Y''6J/%&>]]0nb:P<2kBh8INCLU=Yt<)3dDFp#L9-knk945R1%$Z%LY_]o\Cb:mRk9K]l!s
%_OYcd(q^og[DB0doO5eE$?V9!Zu?7kbudpBob^^j5B*/)WtUuhkXe`QFj6#!_<WhWW#ssZ&/&#p"/@5d]Ns!,@nlLF@p!jYO$[q+
%X0=.L-T1O3E5@lc4ba^F(EN)j-*5Kl%3IDu;_hff%GmD5!X(Plb$>b$8+\'G*6=Om;uH;*<mP0m5:!=^9T,Kac)TpF)WEEjE4W";
%CUT1#&@9cJ(m>YD[IEQ#;V8H8f8_!h7"=hSYb`AX)8$s,M<BV>]VE>]'Kq;HmT_Fk?Y<L28kZ7[@[\!6Ble>F5eqq+<o?q=UkqZ_
%GPIuSc8#NmPa3:m:9fO_m9:G!`(/q[K,A;Y&"g3`>/u[_`F"[7`D\7WV+*jT71CJh'#Q&%/)Cti4bf47_0$WpW:bfS@]YF.)*RtB
%$n$A'd#fe$'fE8c8[O:1-f,Jc4bhKWT=l*]^Si2C:L]-[@E3orFVu\N`#5^2c]t<4L/7)V:Pqj2nF[W!Y`!>@QH:WAdG]]^#38l@
%Uqte?U_qOYa)Hp)IJBIlYn^FN.=XF6'4$a'.hL6g=W?=`(5<6EZ%i&.0r,LUC\]_`d/jZI`.LV*M)E6/Ak9i6!s@mYHko@4\?YdF
%]N(&u<9!"A7kkDm26FZrjR?8.40[V:rS(k,6VB[ALBqlLJO)ZU5+&h7RRJm;O(AqPn]-<S^6DlqWTR_M=ocGR)8$V"@m9r"0$RcB
%F=LEG!YZD<<<fsoK':SFp+[]YKq:1S6Pk7]"UooCY?[&=/m&^_B%`jc-$6Fk"UGDOD[1XI@bd'?9<I57P@g2&l`Ppo(31Xm%uClR
%q)6-I-,j]*q%jBjYYA$^UH[Z$PH+jS_Q`B$e_>c,7f>2`='<a+!,Z3H"?Y15%0*.59)p;GB37GonX3T2l71B+Y[]gb7Q'C?2<noH
%A\uQH-(&+>'Puafd6aA#aLi!;Ka:Ab:096DOs6:4SpF@@:$sI%7o4)Ud*q(!KG1^,+H.K<'L]]G(btSiTVCVg\t=A@@5Un'a*R%2
%q4VEC>m27nVP=fuX3%gW.A#Y5bR#&.eYBH0:$-.+p(NpQ[Rn9QlO59J]0#TUj3\uc1,8r@r/sft7YRulhaXF:^<[K/TrU4F%nDfi
%k\4_PgKk;UGb))(=R+0djfTM(,0Ysf<MpfD>O8BLD*huF0a0_k<O=nohirJAd_h4aRc81=PVP1,4iQ=m8lu[PMOF!h/hMRlgOp7c
%1hc[j*<jt(D!+ou0K[.V@Y@Lhc#D*FYp">@_FXCQUjAj4C=;BK]M1q6NL(RtH]%Nqm_gFjeOe)O=23a;L(t4dbns/0WJ-nG#[PDT
%f(KQPX3%gW.:$$BaZ[W64642C3X$]ndpn&+]ZkEL61g/`;%08P@f$bW9cC/ZdkpkY+iUN8c]7Z4"GLb5niHM96hY$G:VP,YqA9_a
%RspG?PhI8R'Wab7$\O@#9tj:\I1-XlAD-GI=QNcT'';KID@Dn[RGl*R'N^Tu5"9.OXtOu5dm8(#lmQGr.UFK6$e5eUQ[A"-4=>JV
%lk[T9=YcZcYEM5jP=%rZ'P5%5Nn'LfG?LN%,AAq>Ui]O,G+1Gk41=l/)r`=e4*EP&9`3isCR1eO72i!KMM;\P.02.je*)(C?on-Q
%m2k0#n25t4C92Y)>lq*+qKDqN/Lc4+cXtH6n`?^%@1s6/p#K.2%[t'"L`'2dbqU2e15b<q&StC!R@".,a)7^R_m`QR:MVPrCH])=
%qo3\QV=?N"Z$1]peTh&kHp9>_IqudT2tn57O5HQC'./W5XfT58=6',HDRcTfq"f74G'>$]Zc:kYHi&9*K-(U&o+'Zb=FrfNWTUbF
%VuM5D]P!;el]GMX8*k)l5AcEMcgKpXrkfcX.fpJjb&aWXO1udN3Z*QJKNroGNm$FKeZ\mu]_d$=Lc0t`A99O#U=1c>PI!&=c._Jb
%in:`ka03P'oBph_Y1\'eA;YUnYao8jV=17Cjo4r=^3RpEf!0UVY@g%G_W/Vgc^U!qFhdt'^_V,4c,RpSn$;Sc]&UZ.X,Y`CkPOCb
%j5jU,?&2@u)CuebF9>Z]@+#\/1b9qE70c3<V?k+B!fpg0L"DU*kk0G%g-8?4@5&1W3VWi92');d]sKEj/(X]c=CVs2ISR/&QEHF[
%p\[D>R\O;W&s'f40LPSgir!XhZN]9a#h1O;NZD(hY:G1Oli5,8J"0cMWs5$6s!4kHYuB&"`S1?r[YB>KG+.D3(Mc')g]&XZ2'+C9
%;-YJiQ==SJea>etXg'QL/5KYWgsEL/L-D'8L1Q%h2cZA9TPNf9"dm(C"Ao,XQt_U][U?4_R_rBGGX=h(4*4`&#>q;dO^`Q0]EQ._
%L./M7&a9'LbO:7^r0mfX>s.Fc^*(R5+^YIVnPfgQ#`FhSRjAj?lM>l8GUaN\0s\pWX'ngQMiL?$r2Tq8N+23KUO$)ZNPNQ>,SZhC
%q5"9;JaV.pUUHr("'-?Org4KA97sHfW$K['3<U/E]9tV1n>[DX+M^>d/G)4,m/Z@=HI_bH[rn/d'-deHmkGC)2sdN1&Em<a'F$^;
%%X3T2C-!&aD1Qk&/MMr#SuH1BOk:<W\g@*a@I#*K*SnG"ackrCEf;%MlmdX7hp=Nc@7Lk7/NM$0AG?kPJ6lu]*RYegKm!;7Cr+V_
%iM*S(Bi8#,!I=%CZ]t"H9@p,KR&S,-Z=gF0!Wm42+=rZ8YVc@C<@*aAr3)FZO41DU-YE=@Zn*bsA#-Y>r`-9'P*0D'<G$]gh@qDA
%kdU2i27!71-#4dQZWpB\:_MFk=G\r"D*BV;'`p<3O=n:)YuCo8Cdaq-Z'0>>fq<:=&+;O,fiapI9JhDh&#3V'Cs\o0GPk$R.4b[q
%2gdAa"/(;MZ^X*UT7l&.^a)[(Ng&*BZu2_.@..p3#=9-AHr)^2)^@GD,Gmc),1ntLnVP)T&Qa4(;h^A\QJj9jj3fq*ee,h7-?dJq
%H4gcTRSA,j*k#OO+;*[DiBo0,,m,0hf>'Gc+Z@mQUMePO![3B5BjoCjq)OpZ1.]J1OO.Y@`,1U-_pX1%5XZ?tTRCgY*-=gYZ4rc]
%5)4i*$t$jeJV7&mTT5;T6u3@q>j5.e*-=hQ\#mSiQ:\!1aOaO!:Bjsp/b2sfT]%tUO,Qg-2)j)9JQR\E7fq-(n8&U*6$ne\_H8$j
%3;jGtO@^)/Uf=;(RZ\CYAi.&<Tu`#,lmu+G.7MYB;4>XL3ipCpaaB\<pGW::Fq0dj6_G<m0\N,-g/]anO#$X7=GC0deg/M:_+GIm
%T(Klu?puQ=1;aVq.m"^f"LBSar[;@*Nhn;(Uhm=oNBl6Z,+K<lSEenN[%ouPJ9a8i;jg1Tb/$cn(H"(:LJZ[$,p\WDd#&s&<1W?S
%9LFJ1(^>2:g9)1OK/j.Z9uN\r57H.>VD_oJ<0%8,fnPua)&^b$:!)U!VIa6,4LPMLXHt:8.^M2-,QsTO;`"NRc*-C._>XE0!YYX"
%^#eDTrSd(u)s@P!%5`mKf=Uq["5e7&!qk.B:[m3(WSr3qYGbnn2EjtM)(SE./nt*Xs)A,l&/cTD0QnP%1/&r.#2j55<23;&9EaQF
%,s>@Ym':-U6@Uga%#t%RP($Zk.EN2\0Y`PJUBBF1!&:"4lE17T(R`M:G]>e%L1ModYf\ca:u@Q_+GRX`jMik]&W$=;gV[5\Y/)=%
%4tnJTM#b'q]'Kd>B8UZ54dH>nJNc+cfY5KHcm96G`$'L/0^SA:#RlG'2%^Hd6+u#rD,/kCXjdG^V;XFaoD/+XrKX+rG00<NIQ<,+
%cgA4(9B3Q7la+hZ'f`kU4]YW@LB6,K3"1@OW@(tD=2.8E%WY[FD3Dsg4Int=AC*F(CHJt<)ncYR;&u^d38"<KJL,'p=JIbH9]hsU
%M$A,O<b/J>3[7u$J9reP6EIM>?'^>6Lgi5B"4'$4ZEFab#X&:i\^C-/o:<Z?D`a0)<*Gj12JI4d>foRu0J&IM;6Vi'NZ&`n/:^RD
%qGcQ=!cjDC<7qV/=D6?0HD20KbUgSFYu+"X:gN:)#\<IdT$;Eo%eS.I:)[s$KF$RC6$r\em.@.\$jIM*&PsTA]/hmq`K'hs4"iug
%Ns]-F5hmP.1>$irUBh5((]f=S$:&^Ij6T91i&*8H9>Xpp]T6O:*Bq4t3`':>2fXHY8ANU\TP/d!TJ4,)O:NmW+WS3UQ$tF%$JMn2
%6"mihe\]Fc_E6+%.NG;NXPg>K@%&>V*jG-/!;q@?K(2's>@=?_n'3)+5R=-Rb9#d)\JPQIR^EbF^:gM]a;d+F=uF[!WP"g7Bp`F%
%++1Y8$C3HG`4AIjJmj`1")+VoWGu%3c*UU/C("s_p*hd'bp64(J=?TO;u%u&XgdeB,uAjb?\eJBcCp9p.9?!6#C4fNK,(3Xf;8I2
%l;H6=k_/?aMd%n)*"g-I5?a365]l$<nN[M37=gH;10CiXb:b.!^eGDs<tec=,\Zh]&fA=]Y=ST3M*rA+"=sWF%ha`#950NOs,+b0
%,ndK^1e<CL,*B%W0N5+6ItUAjmR0jH1d!g$oMLTlkq()t>#pl=*<8#E@&OYEDl[:)bPt2QJ"/oK=T.<1O?ga7VK>&X^B3qDKjA)g
%ClFY''mAP=ln62*Z9\'Gf[8YZ2qX/8C+Yh:k&ggbV>q;6=STH?.(oP_=Sp-q2:KPhU&QOGp93`X^S9n:2T??i9X)Ii)6ksG5?Y(9
%1JP&io@MUYSi*C4R2V?'&qQFCDI_<P`Zq_r=QkJR+0SUU\)p,P>EGC.h?5;mLR%e:qF-37!:a*.9-Op[$,--92Ct*gs0h[)4-gr.
%[GV_j44G>SZ8!ilrGqgo.d:>#;t^f6M_Hk&&=arH_jMuP+=6mRm3gMCaNXGQhUUoVY-pr#)%^%XSNCas7V"nt>Z*\CWmKQ@41j1k
%XC:gG^=N%-L)hY@8f-W/r9F:\S)=6bH8L]n-=(M%=\nYY!lN/%n+#9g;"\SolYjdgqXXMJ(r#`X_d@ihQ.:NSIB\KSbAFI%c+6lO
%\$rHjn25,TIf9.4Jq"$RdLMk6YY]M=8;7OG)&lhF;6Oc2YK],uis3,MEhnYS1al%U[G)jQ(B#"lD]@Dp@DI#OGAlfcmnjO*m+JLa
%HO[$bZaILub,DVO=3>aoPgS8_'?(i);hbJK/2ot"3T&)<B6('dqLLD`L<GDelY[M8E4?m6gX&!V(=][,Hd`XH7pV?fB=HU^26>Z[
%f(u*h6fa[78f9:71-Ak'ducBo37"m#:]iLOXV6aXj>$KUAY@2.\2\BKk]fR8#Kk\\To9H+ZYXrW-f0fn.DsAI[G,J!]q):u78X9S
%Smu?8PjoqG"''>5/k=&<i&o0``YBh2h3?<`m`1GF)B:3TTcL/HqZE6<ACJN;ej8.uXlI-Nggjij2VXW'bhgV]qNAoDYcP\rg!hNT
%r7T/#Qf7b8dCPI&^H90@=>3?eiiVPKl?-da>:Em?<Q.\EWFG>Q%&BY%<Le?E;1?LVk"mi]B05C3X=Cs=R5N4FcI_pl<"`Gt/m_QJ
%^J693lKNjT2Rk/F._GSr0;[<!`_rC&];]8/hDV_i_gq&(YMSu0?_^fI=L6cLp)6tMB5;ouPjtc2^EC\OlD^Hc$gLmOb3h=\>:DIp
%Z'AtNDQ;?d[gfGqC-b#+VRLj1c)@*ebj9Mb]nY(lfih_sA\>&&08_NNH>4nHJFb<FATsdAV%d.V=N[tDN2^8*b1MfLN"+(=]R*j1
%IZJ4lA']&%gM9p)SZVQR;9#Xdrh:fNBrI=Q$olT(dWZ.39YL3d),l#Cm8V1cA@@Ro(E6Q`H$-NUq\mnE`LbduB,31J4(%2E,)]N&
%r'cae,H<`a'uuJ3(1[or?r_2JUn"_jMA81Nik+#EYubiJdSUOT3)1SOH.h&k+Ks9*UFL@b`Fh9=L=t>W>!Kf1"Z%",GZD`_3iU&r
%Vj9(r\0ti;]CWr[V0Gpn;4^k$V./oM2RFpNJEncThU[P@UDh;-ZWlhj)HLchCOK?MnZ%J]+NcD'l)"jsl<1R<Y+Bm='JIV5b4BAW
%<:&GqL=R6MTUo`LS"=jdlCn\K]@Cf&@J+fPee^amYH%AUU5Z4G)Tjbl4Ng4ISL<8B`LAWAo"6A\WS![q2In4GKC^X`hWBYRUMe4.
%ZWlhj)HLchCOK'EnZ%J].*C0\WhBh'cEh?Zh*i2c0/f'"p#jkC.bU<8(:*16A*Y9+Y1@UM6Z01`;k*0u!bQB6$[kTWnZ%J].'e*a
%<P2ZLet%i$G[P9mA6!UpG,n.J[[#hY*E;RbDQ29h2tI$PUE3d]gN>u71Af(O4FH8c(9c(N'jp@P_Id`LC]+6c(!L'g]hNKq<Q5!$
%WPlLb)p2:@VMqA<XqSR8@RD#;H/@qSMS4Ak&)`p4%(OURIUc_4I_Wi@b1LY+X5.+7lKrDi08hSl<Ugkn)>9nO;2,,7=Z4Fj4Rkli
%hNVH5kM:$TfXnWk!5?aW"naG$2g.@Sp+:_jL4-C8mInCtDeEj6;3^UNMSCR^0JCD71,cYfnlBqcM;Lq1To?*9Dou03p83fI!,a2p
%KC^X`2thOVc!1+C%.e)Gg?jTrhTj^KU+#&%'n9)F@31=cASc=VjfRuhb#itpV2V68mrhXOhIO'$^c,P8C`VU8^qPj+IYcll@34cJ
%40ts?g\F0C&m;lIi\-0?[OQ0[nde;D2"ZBkqg@m#708r_BS!Vt0]HIR1dA_\Y+NJ+iHT?V36$[8*m5u'k:(J4,cpMn$]"ZV^Fm&n
%)Y@4u44XKT`*H/\lPGnA_f-`Z\cP&9\_7/s>g8W$fNIRfrqmtMIf@L??Fec?=8U2(C&s#U:k%[_KrYAVrs:&X9u3U+eq_mZ_MMB<
%$/@apj_Cu(m?OaN2/kERTRPjV+?'PZM'*60gR0$5(p7(7q8g?(K<L+S?b+l@=8QdmC-H!cs1N*CB'j\QjT)^"bm.k`:Pj#d-W8k*
%&,\3VlOXS`^FqnMVm!c(`UQR_!e7<>a(m<s^EI4bP[*-Tn:6nSgDg1'\Y[F&D<bNr>i;Ihecn)5g:t@T]iMsq_+]iV^`T\^nsTp`
%DhkAV.2@(u'ornZgKaJCX+oan,e/#lg.q,[Wo]q\LK]^Alt(/7r0=V%36h`Yp/-2-X)@gD_q:QXgST(`CO>%"g1EXI?FO*uor&XN
%?u'>XpR9j!K3\]5cX5AZMe$V,(;!YNp,&q<lZE\eU;H.fibJHR\PQ)3RY"%<XaqPYM-P31gcp;MC9Ln0Q)jj@E&E.4Ed696Qjj;S
%VDZ9,[WTfGrjno^NstA1phF&\j_Cu(mB;AIQ#uD`H[G#=5;uZM_%4jkD\%o$Y+HsT9]\<'Dj)'7H9K9RFmg)f87o*\XX"(V1P<c1
%LK"IlE8_dR-A.!He:,K20VLi\K@S8k?TU>RjTgGU`PN[&dhr"*7MqQ?IR=\dRhW-U"K[g$dg6kKfP(S6]9SmoFgdE$&I+_[G^$Pj
%qB"']`1G[t\*#t;4'gs+U57Fn"YYZU9M#2X#`HeJ2X(8)8N1>d2FX!T"2!A]9!CA2a?6%0P='/udZ\R(>SLVE[bC-Ecd#9eq3!/c
%2/U0fU50i4^F@$-HAHcKJ9B:aq>`kp43bR<Lm<p,;8bp^7;PX.Z0?"pF>N!T#W&m=DU3fUG.Ph_6kQWe$=4E8lmVj-&I-]O]JBV*
%MHH8K/4HWK"2!A_6a3M)!K/!W1f*W/B-$S,hBiI`YM%2p?9:5QiX6rcf/*XaMB!\Z(g,R9l1%0^0)iH$E(Jhm#&h]*MKTXo.+u5g
%;P.$/#1??ZC3K$s=nM=9>957[4<t>7jIg)1<dOkJX7M$s6B%pQf>#/0rh[**F`%)sXFKP%]A6ANG&J>RlegWlo]g:qC^k.1^ZMt.
%XTe'oc5)<1)o6Quhh!n!,Gi\.)/48thakGmh%G]kD];lD1#SS/ktP5k#$pORF'Gct!d7XX$g%5o(h)!6^cCF,PH8nDfu:%Bb;akI
%9+]hChiM"@!nX5lDf]K:d(TEA\(,4F@!?b%:p,<*)eT$QS29#gcsHa`XR,f8V7,.'Mf3Or6MB[\[V*7a>0C(om`"XObuT2bX/khl
%@e#L5_E>7?,^*RK3F+_nQt80i>eS1(+qm!k_VK)c\Cm@&FOVN[*+'ZWDgQP8'A^LE3M@ZJSF+N=AoHjJr;^P?80I<ep5i@Fj'T+%
%?nW0\)&lhFZ*0jHilu>J.DoD*X51Md<c8r2P[V@MQ?R95`:$P4AaJ*PG'a\!\$NKV/BW4F4h`&]Y[YVH$k)?'[K;>XGUpfcb-9mN
%C:Anke_>i0)7?-/A_W]GGWY2b$p2)ODQdLAG.,s<72`9ea;78_7KD8/@DI/SNT`E!]TI.lAJd^X;8sB<(M.F(:rW_&=Z3t<'5p@r
%P[S15g?gc!hTj^KU+#'P(AX[Q_e:Ee1(6.gZI*G'ASh%[:r_(L<kG2#/M^POVMgG9K=ng"a*eK/ahg_g[PJ;Y]q$hK-'?0I:%C`8
%`FCgJG+EsG-T9)_csp`i'd"?(cE%AaPi;ui<:Sd^)^&d3#1??ZWd(Mp;7-+8i@NSP[.nJE<Tp*5YBFLeZa]P6IK5Yo/mZ,iid[Lu
%@Z@mP1,cWj@k#%U`,DL):rZP-GIq^\?G12h;hb>)=l-UUFlKligec#!V6>&h%BHtE[D"37GZD^i&7nu8rh9f/l<-$fmQC#/.Gg:t
%Pipk?5?b/F2RLc."naG$<tRUcp@VrnL4*W9mIhH!DeEj6;3^UNMSCR^0FpC;1(6.gnlBqcM;Lq1To?*9Dp$_Y=c5$nA11r?o.6C*
%Z?bHS]@s+joDZ2Pm5;!%cIVid.-";BIo2G=?3N9!(iZ).Xm^/M=F.6KN28c-G3buGOkE&Z?#4<tjSb%KNr+9Ch.0rcAS4*2JD&]Q
%6=1@.]W0sEMC^A[0fc4G11V8u5E%u/:&,,9]Z-0nSgWI;\a*-[jZfV^/;I-=gkbs@Kf8^UX=-50QuU/sofBW%Y?H#!6cc6W`d&#A
%SEeh3F3<<(j7JBsO^c?h)jEaiC3O84*>H9D?lJ<X`_TZKn[b!Q%q@(GIVIq&gR/f#cH]JuMK@D"]AOt*.CSd8pqs#r3qfo"Z$G!-
%d`1E\W;mU7R8M5sfZ*%l],qi)[(Ff`fQeR"qpkPNcaZAeZSiXp4RE"Lp1>miX`!khpL"N@\&up02-X"OI@Vrd2TkjH,*#^+WFBpH
%p#@=>),&i<Jq&aS5Q508*rFKCUn%ac4`$JhFd[X`knu3hHRl]!irHT.fWsp!Po^GtgTGn,rilDAg=p4)?**EfGJoNQG0\BN[G,J!
%]q):ukgf5ITm(eG(hq@ccc6*jIBV9n!tIW?q*@5&H^Fi$i-oA4@;NsY']YRYC7q9la*uijO1$(WbI']M$^kMaLC5&ffXT&+G#tr8
%_.L^OfL%9)r,PMK[kk(R]q$hK6],_>l/GLqN<.GkrEWsR:h48no5]M^n0@84E'qdJ03]+iP-.?"ouZYo%BW,P(DhB_ENTWbm3mG9
%@=SZPP3NS`a([X:c[YrNEV`&kWR@3ffjB5Qs3pGNqt;Ro(s+^4jL:>MH:E<+gUPm4ij@<_g';25FZ_'1SpIg?QTm\3lSi1!rPO>1
%\OS\F7[G(J!:n\.I*<U`IGpQs<hKB\S$.>9a87O)s-#V!kj`j\PhO/JP1t^^i<J=m,iQbRlUCed6OI?"l3`!$5JZY2s-WA3^Z+("
%Ut@oFWM*TZ,kM"\C)-RN4hh'@,pmU%QH/Z'"t(KhE/!['MDYlE51nHE\@<?0.+I8oqM%4WM>I5Pb>9MGVkjca8k_WnS5>/3$G\;L
%Ph>1(Jb=ii:,O^Q7M2kb+,q?Q\Z<gKchPOeg=9iac>0aad-@^AcT/q*0[sPdmaf6D%#Q>FL5IaPK6A"MgW%IHkcmpmk98Me#LX/_
%RX2jIScb[+&']bpYp<W/\<PO'gnPe)`SSm0^#OR%G$0;5*Mtqe1U!C^.?*#b`ZZ_o3tt+bRc#DGobM\3Y,UGbD:c>G9k'&&1Y4\?
%eMoJ&n6JQY#pN[(=(@$7""<<#jYaP71Dp(gn`Q!<"S?9tMebBgYOB<8[t4Vb=FF.=UX7%McZX190neY/p#?ubY.C9$*3KhJ)c/%[
%?1gNM"nob99CY=1>C'l!E?%'<0!XFEa)RC(>W9`@"2aqAiqAC>EtRH.a2gs^&.M60&G=f\b,`Vp#NE<[X?e1]2+N`*nY'/&&)P.a
%_`3C$L<uVj/hR`VGtoRoc%&#!7sXT;!St9^Y5kEUFTi4m,6Jh39,(nnmlX,CXL/F<HE5J3r3J`:`s<F5h>q2SoV^565NdW7'Xq<M
%'G:KLb&o`a%/D40gC1<hPc6[aq/qK9+qep]?#iNON9aX?G9!u[eIC3D/A%<JRGOHB#k`jU;tmXu`gB(Lj#EA3FsS'YeU(^9[R-f-
%6j>6RqNGMK2*J#iogl$XU5(e<eE2$A%0/E<%Y5Uph-_hIfl=Yl<DMOWd:c(T!3i:V(mH/F&&K1\k(aqG41\)F9=M_R!Tb(R+?uR.
%!2(1M7adq1?TaXh_4dXt`l((G"F!Rm$Z_%u7Q2/?hUt_!2gPnZn9'Go!i(S-i%NNd=XG))30$,9J9XI#%\Lr@;rtdpCQt[,f'7iL
%U#=$q!>UH7JPF:2*C=*1YY1Q`MN)o/,G@f*!A[hu:u!'t7i33LP66T*&]PE)h"!.r7Xio"P;i9i%?Kf$^QX3;.cD0PJNRH!EVRi4
%717pV\dK[arGgV[6P]fcl`$WnKHJDgHi>a!*RXA3@Se&/fG:EanfqQ:a,TEONE\I;%$-ui!oquC8D`%?=6p7KA:aJnL:fM<,)^S]
%!dJT(l=9R@Rop#US%Sb&G^f\u%1Iu?[72"G#?OL.g(RW9SXK$Mmg"[G-lK,Yd@81e=9DZ=c0bXXIfOV*CP9+p$[]o"QT>DdJQ65>
%rW4HuPrDr83*FTk+igWsJ[Cp/aA(f.hG,2cB_OA$W+E2tqZDX'(O/@8&HWU'Q`E7["mull<H.Rg'`;t=P5T)8a"ZJpg&i0_-R,Fj
%$-J4q:G>q=).>/tI-9?j226'O*mJ\H0qHs8^:k\@s,W4SDU4PClj<9PBr1gj]C-iU]RR,T@dgk'-Y2QcB.c<4an(ToloeA]T"JXG
%DTF4h4dNItAeoa>%=7lp_Y\8(s00&J:O]SCR,tJ@iWd/:DpRj_C]cg,j*]PE`C*9,Eb1gVE2%&9C,eA;'&6?3<0XI5CHWZQ+n$['
%s6m*W.TcYJ!i`gC`Yi%587IVem%:UiW)MA_/]/Ra9S>rpK1h[WL3,P4J\Yj4"FWUkD*r+PTeVB^$cp;cl!g;mbG_7N3f[6SnA]iW
%?8FMCr6Ij=Ta?]m95d02C2=\ieJ',nD+sNLco%@nn?-_NK?d,^1EP-\:"4(G?=BdA=(D8b[ZFLC@W^bW)hLrH;MNs7*C?jjU/dl/
%o?`4f+Lp(ZnYbDF<IKUg)PEcoCW'`"P=k0)G.RE<r8SeRAI^l)WUT>.]LKCn?(2kA1q[Y33(#.t"D)jM.3db=AUq@Lf8cQ8BY`?K
%kh0+0%aYMRdr5#)_q,rYkTMe.Am%"[To-=Q)uuej?e%EE+c].Z*X0XG5_bfV"<+2)!O6Ufl]E=HD*!,+P`@NnHjEZt;MGqgKt@Zt
%8Jt&P:8<Plms^c3/;rt@Zn[Mn2EoH@9Zpub@uZ4r3(\[9LU<$W2;cC/,=8NUPYc+YhI*W,1\m0]8?CT?Uc3tD"K4CRc&<pFI)d2H
%]SSd_.%H.*$Up:.i&G+`b6::S-Pa4_3<GH;l(Hf+[PtW?7Wi&XjMi!%^V!.X-KtVBDJ_G9i4IrF0J":]5?(F(Y0=3HZ)9s%kD(,N
%RCi<4%7sQ?Z]77=ko&:cX`>3Q*L[^#$WqaH,g^+ld5=1VGg;uM]bM)@'_t.[CEW7h_>t,:<h1nU8g:@>"rY5:7Is"*`-P=`DsTlY
%G+S=0m3qk1r1IR@!3S26"c`K`S:`K!a;aD6nlS#!#[]N+cQ+[VK=dgZ*hT+fMeAR+`_#srWF@[o_cV?9N%3j\'QRVY@@2>S!ZC7\
%,ZuP1UUVe@;Q``X,@oGO`o9-f.k<LpVKqZ.5VZ-NX5gF=nS(0s45[*-'/O;D"8!_DX!53%1,ip;bp_G#j(uS;JBd^qNW9s47tXL6
%d3aag2KU')-S=Q8VaKk=)ge6`HqXQ"M1lWX)lm#`2f^U[XHJC[5b@!GjuQ44OMp4&P*SOF0H"sqph%lL=r:#'YgV7&9e!U)Q!8G[
%Fqmu4l<YMi2**FPX!]2[I`8.Z?M)V/%67PM\;bIkb+K5^8chRp\X,pd4_@qb`T_[8EXNH>?Ph#+O7IIaLYeEnZL2]S3F%,(?ebI*
%1N)3=!1W("hC.`)Ei_PVckR(-Cja]VFoEsVJ)m@BDD=])Fn%8T4Jfi!U7C]o(O]@JE-!F_1SS\Z),9D(*Om-H5\iI?MV*88+s"1+
%nd^8mOiodoJs-k#(\hrl@7rl?pdR,\'sR^!k)BqWK@[X8L6=T#6fR]V_?V0lrTA"JS;8#dpb[Fkh^?jlj\;J$0s&Poq7H]J/3;uS
%mPX-"BAeoYEd"<Z,g'9E%10/BSJS^tAs,Ll<u70[*PcN[Q.&.2C-@Zla-gY8TWTAui4VV)<_.Jr!j8J!IIpQ2;I_%k>-;?]2*tiQ
%1QK!,:25_VU=1@#-A33p<Z<CpflmY[2n2Xg-H7j1]g183Ee#r@EIjaPnXUV:gYg7XLDVD/E^tp8,e>>>ad?ZHg+).V"JfZ5c#E,:
%9H%`XeS2N'81jru.0eVc"QBOE6W1b-[7[J/,V6VG`g;E)PI@O7M^kQGp?0@f$YsK/1.::=(ohCA00bHHW?Jd4b>NUIr=25;CfP@r
%n!lRdN%^;-C6L*`XF*C/+E\J/GUmu,pM(]jf7(Iq4,';h"1E3('/Z:9jM([P-P+m\XDg_>_:)6&rZ09s/S(#s[u=6QYG6i8[ceOJ
%CIm\Ph%QSq%^MRX+Be1h"IPsQ+e]$IVdo/OZkDoX03dGg)lX6p2D0rih$:$ID&\jYd*"XNCdP>1(!jLf6%4uJ`[36j#3<u'^q,T!
%\k'D&OGU/@37)&]!^U7jQiJ'HcSSBK,dQ/tPIVF[Xs*IY6cW*`brPcB6-99?.Mue8><M;f;"b7r&76c%qO)RNY"L-O`'n+p9IQ%V
%q^V'+"h!P4)<d`.Ra).j`hNuS-mrIM).TNC;$54pmbXWSKD,j"8Ye2A$+3ehd'I#i'i<uEZ(g*fgshoH%gZLN4r8'5V?[81YD_4r
%ob<8g%CJOC_>TKX0_E=2&nn7Mg,Y0c%m;#e*V;C<Z@KkpqpgDLo]Wi<V3="DB,(qMJ?%D4%Jlu;AU(nN\*lV5QY!bSol=_W5'K;U
%I[HX$YC`GpnAd.B9gFjcFk8CP/l8q@?C=*Da"oh$,gkgNfY^L$k.OCl]YI`8PBJ7[6b<K-\j!\@%n28t7N#4G,E1iP6XWcQdL=Wq
%Wlf>'62@mWqJqNtZuh*;>reVM>Wa&/`VM8`DhV:N2SV>!lQU<bjjQ*.brrdR9Zk[EL#rETj>nHo;-qWm0ofnp;4FXqJCtZ?B^4'4
%&K@;8`cY15_%2@:.gXb;dKGV*5)[(h_V?lQ%=UCh]i"4'GdTu=MDjVIJeOP52QqIu;g@XE^Mqk-]FK9'$#oL,T.9C*]4d<;C1-u#
%e+)Zdq=Y?VHuf83QTolhmI1&MlTb<nn%Li-1L2Va5#u!_P/3ID+YhU(@B=M#AT0eLN=V!RJ+ZqboKOGtF&\d^,VP8di\Z>u]J]sg
%26K9acnYFA/=X?@lM.$OC:aTdOrI]G^=Alb<^J*C]r$SO&6)CRRPpSqYiF9od/7V.],Q[T[pos7g[/75hS6c-1#?/ibjoZnHStWP
%\.NHoVs*TQrc)+2J+8FmmdC)L0\r=:]Y`?d*o:.hq^m)%nfn)D&;Nfmcuc.1#Wu?(ASbp06Vi^L\s3LCGJOWV$^?/L>Xnqh/ngRT
%k.P!l:7gkri^uI0/.2Tm-g9MJT^/QrbC-OuX4VLm.@t*<Xag60=06uPkM+mCqTGr>G4i33f;HC]U6I>1rp$+H<:5[lIf,u*n),Gj
%^,dYaY#A3VE_m`cI)Fle93<3]&GX&s@b7Cc&UMBVr:.;KM@.+(hSFj,]o'=*jZU>90.u%+UA@<'HnE1MD"tHBp-Cunid6/'7?+Da
%0DY?\L=-D*eWdP$@,k@$c50dp6d>j[^9[W+5NL-8G&A;6GP[Kk+-Ss>&Df%4UaF(*l.&YE8@jgc<lC"-J5SIVQc>X`SoYX"dgROc
%-I:JMZjl^86JA:u!GMs=pYqDq#fE."gg$6&j%',`4'$c]*F-T+gI(.(@]:n4?<+r"jm7,]%;nf[Y9u1L-gDiTHNbA4aaaG?gpfQ\
%cN/]4kQ$j9Gd5Z;k,2Md117_o4'OcDg0gN<l4m-*S3Ng-Rt+(Z2cTT:OY3sW9&PACoD6Y]Z4>Q4gjNX:JZ&lB0?-fH"QWP"TXu1m
%RN\cVG4:P26L57RC7Pnu+pSg&dJ%t=kU?NdL>!uQ5>A*>ZeH)/IB/H+k5[;LIK=Qs1#N\]]*P&r[9P(aor$@9fa\W#gGM2cKjUVQ
%[-NkCE5\!5(8')T"L=37,<&'H?j3'=nSN`D*qbj4?NW!7UB;FOY3u*nMFf]CZ61<TTToE"d$0B4a$I&q[W2T28.EWfYO3ko/G#bF
%N/2d\MpI)aFXRE1H(Cb3o7R)<p&%4@$Lk7_Rd!e)IUV"t;ot>%aH2TJS^@a#6ucRC9G,a;<nVj[OJJmZD-J7.#9Aqlj67^[B3hU:
%=Y8PjDbe)&4F,;`,fEUjp6cQ4hb%7H.\-:uIjM*;N%V)ajW3L6eSs<b]GRq-C.s4Epc2QDQDa2FpYmmX`J4l*F\K:N-qq+k!ng3O
%&A'CJ[;$=5\6^!4aZ0Q,nWL$\k.%?rE$Zefm10r*F+hnP2V=^F$fk2a=4_Es(]C=V=)]eMni*5'S3GJ`D5_K^2/dD(i]-7<.+D;X
%q?8b8NO*;1AVWVAi0kh^R?;aLIiNP-5^d:En-HeoqE,1ihVJR(R+5#+0hqFCTQ_1/U%"HV'ob(n7J[p=<07Z.Ke_O)/$Bkq$1kde
%:idNiEeDR5IK>a29g^`/j*GigRZi3`dj+ispX+ae9HH*(*mkb]%,,rm_'J$iY)um&01#+ln$'_i:Orh/V.fB?b$rIf0&f^,m(n3$
%HZj]Eld^BqYA`<']%/OirF[m;p_Us&e;_`u=bLm`\->V:$PTGnX;2e2gI*%:6g3h2RAL4%Qb5Z;'Cq%PD0e+c-R(i:8l9WNQK&1+
%4>Adn\T36EO)sIRg_QfH;']Vj=8>/b*1(W%TE57[`F.9hfpbpebE)2(k'dHC<F^t?J>;<'+OJ]XRhaOP<MCM88@LLg.MkVfLB*^'
%@3iUlro^pneA)2F$59c$.Qp12Ul\dD,;(,VBU27O]c4Vio<Shbp<BF\AK7jV2>9"_SBH*j[<fO/*,i=XqsK\[L_Fs3;6bq=#R5m6
%Q(K,+&A%,8W`dbUMW2nl4_:qM%W_n"!IU7P,:i]J-$5jWW<kS@"WG$-4ZR9(i!%`1fcK)T'"h'%k(4HXDab'mkY7<o#'``/6Lo86
%e.If^BG[T(G`"k:qM`5u+_T>S,@Y']NV06`NA#P_?2t@t+_^&%kf9uVlc0Mc<=uh2a;8srph+7#\W5R&S$h@lEGBHlIN@@.Z8Wm.
%'@`%.9+m<Xe.rEcD0Hoh1V[#P]fi$YV",Lg)[mYbM$Gi[CK,o-dL5f-;%'2p(_^3E1HJAtWK^B[c9CHrY#8LGW^1e!"\;!C4M1fe
%Id,;%(guHm_(<"PbFhkYC;_'8QcQ/Ugbk/Q&H=hA)L\'X@OU.2,C,=S1G'3`j0Ym8[7VNjO-fKRjJP*=[$E.,'ta^4PNAsA&Y,gR
%81CjI1MQ!'b]?'*\fa5.93LH+f\N#i;VMB.mS!bJ5u/fG$hEAhgaVg%$WGb2SUi\,$hN>!N$.lYi#-85W@0/Ho<#,iP6\icn(XKW
%3l&Ud!PCC)n=`qK+!Pr<V;b0(i@PiiCHsHip7OuhWERFtF*DA"XM.>L6s]8>d5eH=\^9NgA.s)%Z@<0Q27[M7,'&>J@(j-:W/nN:
%5FIE<]e%We49SqP;*^]^E(>T:kA0D]A+6]jlV%K2KgClVS&If+;QJG#\jlSenNU?CJj6"Uic<Hh%h^0C\3(uJF.n@7l*hrR#oL*-
%#1-=;%5^^i!2mE,NJ^q+>?r("4KNjqCG3e^E.]@15u>[#UMEt9StT45$[XLgqMu_-`2C2L*#^:s-/0c61pSPG)@k\N=L<HaSV3G9
%nI$i<pnh3J9%m_<TpFA9R7Ng"C=!GVI?'/Y0L#d+'+I+8DWW.[":GCL_nmV7L]/QP=h`FDT5&BA*G+?]3Bb$c0_nod[ORYO=IRQ@
%aj#QfH_$g2I6V?\(-"\"R^c?/$sCF%k%5*BmZJAhM'23aS9jYik9<$K4#H$_$J\Qp$Z'VL\a>qPI#VdldS"k#rW/-a^O.pmn5eI1
%9n=nEonZI5AK4oo,E.9AnKr]8TI=:Qa*J%XVcG2P,(@O"4<FTZlCC@T*AUrs1M`\6!hge"%(:jkk^l&bhH[RH`jZoS@)q:BNJl6p
%@fH97_8\,16Q<mN!Q@HAKg?Fn'CDLsa:ZY#cSdb>"fa^^D/a#>jWXae*"*l]h/KWO@jD'q(cn<>Q3kkR"BfRV-V$FaDq]<3eK4uT
%@:<<U6X_B7n9?!*gp]+emhAS:F)+W.!!q9`e0?V\bgsW#WfB82#D<,fM,3QL-&*D=5957CHW:E#(^+8WNQ3./EqI6oR"P8&2$jsb
%Fr!Kc!>8B8Sg?*dQf6pQCXCl%,m.!Vf2Au.1k@r.j,NE`)c!TM7VDBDl!-i:S6^e<(7_./JIb1`"Slr:;][,4hq/-;/WkJpE-[-k
%.:<DqE#g-7a.B/I/]<ZSPDI'[P&$F]&.brIc']*jY/=`fmGNFh!JLHdi_'9UdWl3C4o><q)Fa]]!?!#j2ZQ;#VPLsjIu5M%%3g"Z
%CbP:[#m,BlR!/hZVptiVVPB3&#ZbH*Xs2m3N0V7K6"Fp+mpj^ON_:-13#o)46=TD7E!E<11DrIuWr^WL*Q!<eN=MlkD:[cj/b%lm
%Zrr$#/.ddqG^?.M9W[aS"8dfqLa<2/^EQF\&eJUZ\HId(fRd<ui1WNj1*d8nK?UssNQsKf.Nj+k*dVs!&:j\C>!D:KOGqP9:;X$0
%^ga>-!H#W1Jo!>,<=Cf!c4paAZmEP+<P[#oBp+uQ$/0>39e.^sVm&8^<98"JGV^O3+,Q]HB5%32E`+5F=H];k'OQ`R:l$C39]Al5
%TSE@JQu:"#TZO0OjJSE;iY)G40c&[adL42;T=Z+0Us2R3jQG]-!Zf+sXj\,4+Oc,.Q9B/E"M<ZYqN0(5XYK<Uee27rL$>8"?f,2T
%&u4ET18,@]/4=YGYg]DU5`m:bO;$!YQ`kQJKUa"@rq5Z4*]X]`R&SohJqOk)p!9(0,;q`/2X3Nd>AldjXj\i>TANu?P=$M7BH;j8
%Jb_StErCfL-OH]$/LHU_`YTI##p]UOLd6T4_g-0*Qq5(:[\-0<383=f;sY"PY[BY.Q%^F@F397>!I61%=LDF=m3X#f6\M@;h!]kl
%-)6h&%HO7SmGsQSbc*"=JRJTM25t[/Ta?1Fhhp<F+P^OIS!Q\mA&<5oj5VS3^a$jirQ0OjHj"?">g\j*i$<OID[#2h.6rZT=T&lD
%_]>=ECm?BtMK#&<`)TsELb/`Rej@_?]]LkpC:[HD1;dXaf;M6V?FXt)=c7Kd$9W-G3<@HT0'<S%n&men81qRY2m-,@A<FH:G*X];
%^FhogYd5B^+S_^pe-rI0hrgDqAPrMumH?cE8-RR7Z5SXlouM]OZ@uPti=XY'bp588;V8'E_bkNK-K;ZAn_t^lXT&.k;P1g=O>TYe
%'D>7tKC&D&D6GY8LpCk_3.82\*9t14%TS\q,9DWW(#&8a".5J=j452am$`uukMC`%?-5](*`i#A5HrU;BQl9T@#2mX:H%q4<BO+@
%IKH,6.75h<7QU&'K"%Y&4D#/'`L:Gm1b=dfLn/Z:CcY?bf;+0,&[gpOLSQk4>FP72SF^*_dsq-E6b-g'M[J>ILRYeAW`)'uU`t(:
%?pD0\bf%&>bSG(%Vr:l[Fi9DU9&`CaJFlZ8L$gD@ii8ndV\Oa@prrI7.k71cq;)G.*XfBjS>kGqDh%]UrgU)TC8-<(Rur3[N%QD*
%Ge_f(R1IXhjRQ(o.`b:^oaZfchIe:r.=7rX:5B`8O%nFW.<rT:HIA>##;#kRBAg\V'>2XBGCBT("n&XD5NX=1!o)Wtji-@0pt=!0
%+7#"JhU+Uc`t-;>MOWHidj5fh8Zj^$(sH6oi:`.kP$SgV,)9#7(I=m[!f6Gq=bSmnjCQSOgL(X3g(>C.FG,PG0shQ,E.g`<k?A;/
%!#m)FdjE#d@>O-:k-_</Z8j!i]0_<"^>j<VEV`<=cN";+0'`df>.hGNd^M>54R!e]XQ4F7<aFFB$=ciBA'H/N")9,lN?a$MO@t,h
%D=ItPbSNmmKJ(Bt+q=fpqha9@7<]\7g41$T`<Goci<kE5l[g\#_0$C(@4;7<\AgI>&9A15Ds3aj7pba>,;KB6mKcJ,7>Jr1$Zr]*
%BA5noj=tZdbBAGKD(&o=6/RODM.6QS`lcL>J/[b]d,N%t.T?sBI]!OJ="lMaWF-0$*ulK@QOQbe7IshA2k0`pVkt0d.nr=VM4A0M
%*dUlM6t2UQY)?>hKD&E!Ji)gj8>Yej)(cd23a(dTD.>lk%-X?dG(ac&TUHrJdKgL0JoMs0qN_CAa::f`I#2BHU#,;ni]/m<f&CD+
%g++H=U*EWND1H)^-)+"_E!&MOpR1e;MbsfB4(bp?3/_:jTi!;f$gA:FlTXSe4e-DoK#0c6N.AQS<u4p6I%(BWfSZcA_AN8;YVPAd
%[\k:2#*%rQq@<k"ZtYl10V'[-MZf[e`af5R)*(,?4j!'L4VS%Yj!!"&X"XVoD-W<J2^DnK#ii->1k[1$H%ZkHMGCI4Q`dn_q2Jmc
%2n38I+`^#5f(i49CDUj1IkpTu0=cl=%4;r$I>,I1i!+lO!aH2"[fsWhBps]\#3f@u`M0gFU(4hf*[)_X)"khm(g%!Q^QBCWm&(Q0
%N-K5QP((=q6?gBSirW*!4'k'pPjh*a](a8\eX0q`@.oBo)_9"H.)lh/"bD[AID1%T_1eZ-U0S,#X##Y\-AAD/_Fk($%8!7RfKIsJ
%Sa:./+dU:QH/jO/R>)TWM/tC<MR9:VW.:r\%OPY7`FB31mN\bR'$qobV3CA!a*6B%;i:iZ&j6d[>KQaDYgKVG@)<H&=/WV.CmiUn
%`P>c59Ot4a,%pn-RK,p8baIJ0Wnj(e#C52/^8;`SP!UeC4b:\=.,,*W<I7\`<JR4p)-RKS/BWR%`^(g8&B6ElCW:^Q(gVc3CMg_,
%SA%m?G6URfgIY;Fihmh.;f-,>iXc-F`!^@/^28P\%Cla2>^_NF?:hip#15F;(I/=J2@#fBF(`/=AVHj@m)/V_)eCg9[t,J//kG9t
%kfb9H-]l3c!M4%^\Ta8U`\B*OmKRS21!<%?#+mH:LPn_I5#7#TQ&dl@C>d*&]+a")8J$uY/hH\kmMJ?HH<IV-QhCNl4``+^Yb<ju
%q.t9l-A7j$2W1$^2Q@&%^D$3:bR3nM)#'eQruo?;,uR%AXOj`_;9CBXl*^g[rW-^Z0Rs;r?lr;*SV&c+Z<OQ"#/-I_e1j7^Di&N1
%aeL[RlaRhYQhbX((]'M.0$$;9!94;=7.Qls2CA,)jN`UBR=H2oh2'\bmRj5j(F_H*S_#;]9,+N8k0rE'$&T%^,(^@a;2k2\HSM?"
%:ZHW:?M#[p_*J=t?u@YboW#[dHp**s-u2,g"k5o)c8r0*o9DMs"TsepIaH)Z):CD!l0,i$@JGL]QTSJYPZtg2#X<8"aPhmrOOIYn
%9\:ONMd3g&=;)slX@#sCUhJj-.Ye0B4Dr59a/1*sX?8LYe25k2Md#oDN9"DRTjC.T:C'nW[0BbAdO#_F@B%0N6V`f"KTi5r+*W[J
%aB)Me*Q#MD\J(T)YWiT-9#.*0QI?/HA*9%kLf"c\1kSRIiI^DIA78fH&F:fS@'^^WNQ5YnjMlLleT]FOeM#%U>:*^r[HeR%2g/]&
%X.W:2ElCG')^E@mfROl=Z!`6D@sVR[cc7$a4jN=_A(<3Z=V&)1UJ!TN2;%;1e9>&,\*eJW2Yc3EX6T?&XN4bC@$\i]4R#id,2pJ5
%Q1M:NfH,FgT8)9g!'F"!L'W3JOT\kmY<O[%L5S[CI`PGZ_8a]NKuJANo[].$jhb2nD]?LnHW)p?iP,m+UXZ8pYQe/r0^58QAs"l9
%U;mkOC6@p]?s<JgE=Flk=,Hj0b8"sDV<JQN9i1&`k[d%+a^a0-$X`M0[lH;8#HD5PC34(P*4;'-:iDL;\Q!uD`(rO35/De!H6"1p
%$bW^pO)re2lRq21k%/c[<[BJUUN:dGX$L'h&=CQ)(XL2\.ccb!(QdFjN<_NPD\@?:PS#Bod)<ehjDln6<;iY+l7GV0Ge_'#SpAS#
%_:Q]=#;dG8l:iQ(1#IXlB,.qL+cKXP(D0Q7e3Z-%l181;a90H6DF[3-H(Tj^7b-m?9Z`EaClf4@n`bEhT50,b=TpY`Fr(nc1iGd<
%GC5rO&1GC%!Q@`ULa5u+31X.^<P3&Ps5EQ`$jq9*AbMQY##G^XrPK-q[4-,n9)qJ(3^iC1TTccIhb=3%\/`ICO!8Wq0\%$2r]i38
%_fenQ6SX8bOi2BHZ@#/"!(M6cVo'Fs)[R-`f)_&%0Uq-Y5sTU,I9R2NXH8`#%,dMK'Dk%A)#[E=dc4;a9)](saU5J>j:Z"J$MN%\
%&]_!53hL<qnMS;5%+7S,LZ4'/J$'%I"n*/<.ou>%A!$to*^(3k>g^08k/o/<V8Y/TcI2eDSEU&g5c"k?&n.nC_^>6f27#m&1>UIB
%Gj@&EVD`HijF.4e<-iG5cT'=`EY*.Wep4g;Yfc.@@,O>jTESk46Acq+C<_pIct1=;`@IY*Yq4m?$H5C(JN-cPoTl/DZ3oe-0@^p2
%jjaCZ6f8,I4e7[sa2s0VQP^1$XLkkc?8,?IKeGjN3>?fSMM#sB=ps=l29Y.P+e+cGlrcW#i!X=KrX7kNJsl1Krh2@*&7R#<8WeT\
%fl#)5QY;$2=-:Is#kg$rg'Af6=#Y@h7>=69!)K97ZrtR_)j0]@QW%)!3^,W-YWffY_.QB!7YWjM0b[<=BJrG6ZJ^""P9GlcX>_Tq
%$M2I^5hM`j8>RF98.s#_#>NueF<=cuR]t%JH3L@%-IP_fW#hGW6PDXT&j%N`RT4b\l-Qh#2">f93NS0p-?V-?l1E@sEB8;]+&0\q
%<ctIe;Z2BSAus*g*TRhHL8p0+368qp.0ao*>7P[5C$VfIECI"hhq9;9Rs:iWF^F[dDf.1URbJ?H_28Ag;Bs@>hgiA[_0q032Ub*_
%VG2C$3*7MtpbBf;^MNHlEC4068MSBL`sg'\P2OU15,U9m8J%1t!eX1'6h=g!/H3q^7gYBK0m;u>PH.G`TJKP4O`RP4blQfMFM=ms
%F[:%GBP@7(57mIMAe#diA^oXRUgCB<R]pkMKh#SV*E-GPFi\L'X/gZB"g]>;g8j6t^$'qkX7gCVd7:eG_\nh#Rs=#;e^MJnS;@Ru
%V\\-:S?QR@&0sF6JP%hBUl#\G?Q;j@P0D/oq-"T[hk_k41Tshfni7'KelF_JK[!T74KLVlJru;&%eKat):g]Q<9!FRFZ'NS5q`Mc
%OB[h/0?h$FI$&>5ip)?3(cV@%*NK%%q"]LNPsf)"d2/mN<*Xa=Q[b)^"sfk6;#h&V:&%hm:I0p#Sh>D'IX\Q6H4cj&mnJeH5uQD]
%BaO!Z``Vb*`J"N8JJrJ5;[cWPl8VkoIk%G-dNom[77fT<3TZMMn]5C!3^aZtlBIa3B-L2T#lNJ!R0B0(<>MDgOLB<=G+"9';9@D8
%]=_)tKfAOd"9_@7?ZV]/r@Nl,3M(+]>S.\bhE3WDh9----uJt#S1'UX>oRRp8`TlKeE!U^8+-u'A<uS]V)50FNegmu`ODGF>aIfh
%;Rqak=%C@),i6?VFSIDXT>`VD&1-G\-Y1k`UOM8*1%Ie%5?AT$@adRo7$1ZcAGnWA,VA6m$u2/BI.2%I\b]QWSOn$3?@!JB,a*SO
%+m\IthE98h4Z&<><K[.KiJg`n&,2pDHE3:t9[*PbAEagdEOej-<EitAqh\)Z:*NDulSN,o8]s)!Vgmc^\Z27M)$RokB'Oe5A?j4K
%G^`\QUX8cdR+E2IAE0kT>Y2ka)1MfM/4k+sNPG>S_@EM,<"^iI2]-]#V?PRt(%4[oklY%!9<j[7hFX7Fn:!c54K-/Og^tZA-]]W@
%UMLcrVsc(.kcIcMmITO1YHn&`$1`?#,\t&&KXADZMe/G</4>Rujr_Mi\M"8K$i<U4S"Ob5&jM,$FU<=s;.^6L:)YV%BJcD39oZBO
%f$8J@6Z75H+i>>L4<rs?.!7>-kAr@f9=D,Hn<767e6!ju#)SiuYCScc-m9,=$tPMLUI;;>3$F8N!pqq[r]CV"(Bp*4!W_7Yb)57p
%=_'r1C3I[V.rIG;',K2[:Mi9]QBpZ-VksOcY@fZDYq@ic9>($$_nNq=chTf<iWW^6h@!uhmTD;C6bEkle-d<o`Rc\VFC^U%^O.o%
%XKiIm,d/m7?u:LW"uab/^G8)GJ0\]X6m6^KV*n<U'N3;M-A`%!@"T!\djDJF&1)mJ(GokuYhXb\\6;aK%iSjgA!7/oZ$5f+N@ub(
%Kdi[u?j\hq%\kIl0qo)&<(<2VrQM>M:uUb[GA6+*77)L]\f='+Y,RsI8LQ,2A6[YEho=IG)2?0oD3p=t#Efte*17UM9'P7G+O!>e
%(:`F(/ed'h@$gPc5Z/Wl+k6hrAT%)tMgY!t;*)D7Opc<lAP?_TA:lp%Gr5dK1nKGg$C=/g>gW`T_QA.YaQ7bh8,rAHOh:PX`]oXq
%oKiF\JoF?9\05*@5fb`)BCc*M\ahCE2]&<`$dqoaQc$A`TV7)QGj-LbNj+5oFQXS&4Yu-@FFRfCdb0^@<+od]K0*E31apFTGk*&d
%7<,J_o)MJ&>QWbmjB^K+krb&k=Nb-FBQBYcogm4b#9o/HfX+YFX@3g.`"`R7+AAPk/1FTdm%LBT6ZbamH/AOB=^=L9S#IZ1RHY8Z
%8Zc?*+HS[N_tfCab1J.gEpenKM"=oXH1c)H9dNl_nk7#cg/W7cFo#FS76A=Sh3^T#MrHQ0&r3.C0W;-+i@rIJdH.)8XO)Of&VrVf
%J>u"q@hJ"6;8k5/X.[1=%&$<668'J%e\<EH&^o5qn9nrQU6@T#]X]`n>Bp`Qig\BTL)C\a/Z8m3n.m/j:q=l;%?Z;F3cQ_O=naBg
%P'n*o\ES7F'p'D>=IkZZ_DFVXQKXET;o"]fD@>@V1ak,Zk=D/+<\PrOmA#ls`h.X<kLnA.G0lM;U#U9aM-`6,L1(IrBDPrUO$*8p
%PO*+<s/i(*h!Zk]`uS:j*CfM^*AG["BLS+bbQoR9H\o>B@8ARBq9o>CZ[is$`G!Yn=oYc3E^a"SAoJZ[:7/$`;Hq4?bhrI^8WI^V
%mU1)E-c'd.eeH<1M.;/Y;)EY.,!?Ye@2#l"fM!_HD*_9Jdn.=nCnLY?6`+I5duI+Sfh>:,(lYH_2%fkGT#<2t_?n9t9IK@BZ-D!N
%(@4r=dme7R_@dI5`c&a&YLb!9Wjm)p._qS;phCsC@?:RnEgiD.Z[aUeh>@S8!/c+#oh:is$G%o)7:tAOo-6%9.^L,!*>&RV5n\m=
%G\l$!b/ngYVk407T63*q`%s'mPJBnB(6,jsmMnS^A+1knPil>p8:2TT=,1H]\Bi@1Nf=6u5Y-=K`kk'aCT$)nT/%+t%TsAGQbV1/
%jmBDspRVSc'*qb^6\Z%U_Ki%Pl6c\*NhXp_(KmQgobQ?5h00CE7p+<l%gWZVHMHnY>J]qRrqHm>Z1s:/(kuo`dTiZ59,)N2+>8rH
%"_M_9BjBXbQT<VC/pNdk?6Z>+UkcT"=Y`;_OGaN;C.87B-;$9!H]^_Dqrc$9k42*9kPN!A52].%=JS[gE8`!djN>kt6,ubV[(G<n
%^XLk$1[r%+5MZq>#dhs*n;n)'aGkJ$B$[ce6e)!)O#*$7`GWSe-,2mknMJ8gZAc5U'G9h.nG+?JqRk-YbluJ44(fTWn[)"g\^m:N
%_DIa[V[>U]+e4'qI86qc_Ef4q1'-5:SLZQf(!d'S2Jp7@1)jC,FFd@R$Y0!r0@A!O`!GaMR,METY*0H0!SsOsWqtR>lb=X/a?*Z>
%47D)g]eWK;B"'<k]cQ$PjIljq)mI5e7n;0aW";?p)$i6Ni7)fA`dg`p&["f?'kn<d6SX3gB`&L*H&7^YC'WWc8ZXp6gP?_gK55A:
%ZaGDVQ/8KKgc(\<LI;aLs'%dJ%g+f-6;[<.H5k([&atIu+fXT;$l-ZR"'uWk0D(/!7g^n9`D*!2"1!:oPGn-U=.@5aUsA't99a&s
%B!ND8/KC5`EUgA;B.fHo*;:XZ(g+jG1ZrPaAOW?V4E?.a^#T\oXou[0;6H9o6*=454J/7r5l:-l:eur4C`XlYkWX#5,2#5ekHH3=
%8>`QoQk:.C-FS8)dm%4%Z^`r_V$XO&Gq5R]+K@SC#2Ej,Hj;W^f#PROiX2u^b&cW-EOO[aEX(=>bD^i]gh6&lHCk/\A`P5#H3X#$
%mkD3ZKbR*XU&d%kUU8$"2I_&O$['Q%EqdS(GbN-8P3EE1e$'4L;("2L$59Z[=.\drA46NHosQ#"WWD;LG&M.*kA,L3K86/5A@J72
%6GV>6#35[nY_uHQXTbUm35@@XF"W%U!HJk#8\mt<ZK@RJbVgH]/b4E2YT`.q\O=["(I:#e6sf!l(A&3K*PBi=0k@g8Mrma#,%2;N
%4QW]8B<nGkdpca47)S:^R<<XR]8AG-jB8gqNL1kJ\7W02>LPfDk4<Q(_U<ksaR*As'fRPYm5AVpRm\15a2#[]i9)"O4E<O4DKEE!
%)TK5+^'GWpGJ9[35B@hUU+W#CFl9UcZ8O#'_6Hlf#FTHs7_[U7'Z3sY92sY5)Ng%K_;dhW_]r'!<i"K+'dFO)`Qcrd>/9qpT1>]0
%Gu[HV(m0ggIe?+)gRo/9i--f=P:p<:UdMffX9:4']%q*oF:0nAgE-&4BI(1\V&[h91N5>7"-GG9]ngIT+Aq3uO=G:,hS]Bt=\-Jd
%T]7mm"@=78/`FPR7<e<$.G;rOn1Le7Jp*iG79$3;"ci41!8JsdJ-E/4<<7QkPilWIqpDTZ##Fag1I"<[MU),*6\1`g99Is1R0<qT
%XYXLYV0%ic%Zk3?ATVD@R#%0-8m&\bXo`?90bS9<]6$>VYY6LD@["H`M)W#ITS$`m.4_HKV%J2"nCq@A\qYpec_03+MSYD)lof6<
%N\@NLoEBW2DS9:'T`k2l"&"2J)@;RPO"%(-$^VATJ]5:tZ!*JL2]*8QJOSsbZtYe.,>d[W5j0gOKO&_I)1Hu]2dU<(Bt(u1B@,Tg
%[>?(%e&9BN<K7?cC5l(&67BEMK88O_k5mm(+Q'_%FU?i^R:3C#f-R#d^t^(j<tWu<B9^9//G+P[/BF(\K[$EA&mbSh4_(\sTlHP_
%hK6!QZ>.W.@^imkFlD[OqN/)tKDkY1J,A-<q".q.pch"=orgUUio[_bq<V0PkKe*Ge`@tZUf(/dX,7Uk(PB80PWFrqh,*Ii6Q#Id
%?bV\dpac0iaF5i^+C%nrTccaEcpAf?[:ZD5P7UFm1'0ElAM:eC6"QFkS7Ef0#fqhqVj2-Y378AF])8q@J:+nZPSPOpB9O6+)3,8U
%r$"inV@Su)lUXCOKfq&%^$>g%@:mlP]Ro'IQgmuS]t!o>>Y?*<Jd]OC/Cop+Ggcsb]2,9H6D4NPV1j_="pgi,gj5&+.Ha5mZ>pR,
%Z;01$I=^E3-igMl<OGEcRDJV/)k6L&+AqA?'HS`8Q@,\\`g?kF:kSbSiTW5;Z!=E7"00!L1CI>$`<LTd4)p7@oo5[hk)j7&6*dVU
%3,"ODb]\43aJ]q!,0r4V\T>>9eO[NP0Jj4dWX_2UKDa.@XTI6K^1rT,X#'UUir75R6C2ej/PIiAq[,MfO7RJ2\a\n$JcAObl@JUQ
%8X9d8jot1XO&r^c"lpci^.sRtle.<)MDdcG>j'M-(kWq(U)-]pcqfFXRcGdumt*XO3;(n1M^#i+kLBP<eS>=^LaqgYF-91-#rjE:
%++b7@Mp_0I#Q(UXZ6;_.O*FfhOqc!"N%40+k3b&8UksFNm@rHI$&R:8BaXIS,[QTt*EQV\a9?m.FEgn[>$Xr6aqAe!S;>/kU)_4#
%5`#<ZH679/IDr/+a$<^!S:00dO:e6MP;1H_,LVh-\n>DfO%n\%"Z-#D.Mj8p*dVWuXR;<qs!9i1?s@PU*>p(__V&]8PH`&t$/oT`
%"jnHdc5b;R.3NX[iKj_nIsMih?UD23XZ3_'Gkh8H:mA&L1W^2#4j$dg"d:'FG.Q0_[2W0R5(OQ:HW.a+5Si`\l(+[[#:Tf39,\FD
%WXI$iNeMdf"E:Z`cJsNe&M4@NOW=/5M1:8C;=@%n4.#.BM)mg"!].7ENs(Tp=YH.#]o5gDZGs6)$oe:<Z*#S!,Ji1@eCu;%G_>ad
%baP%*!QE4PF,5jTW>m$cLeNS35R4Kog9n[)#4O&t"T1e6M4:J<kfuqLK(nj'Ej-[Zb^)s0L]bSpgq>H#SFla\S;Z,hX=ZEh^ILZO
%rab$<CWJb:8Y5dJYOBL<qXK[fN6dbP(";_L8tl)7hgPOojo'O;:jpY9q6suB2;(o\7,P[Fp=/h=7<nBhl+0_8&=:P3cCk$*)e<UT
%Ubo+?Ym^QKVYWJj<8V2O1Q-!YiThY$^.T6laCju:@^E#Yi`3W9kTr-i9R&i3SI6a%kUTfo&dAGjUdKhDg!#B>NgE,D/sFP?HP'"%
%ON(P2f^50R!h'\IZZtI;83L9dC29Pf+6>-t<RZ"eD@$rCX&>s?8/5E[NWO;:I@r[=)?$.7pYu+$aL&nO=TeI8ifOhSR31G.5Tu:q
%N^H3Zcj"ui9O)T'B%dj9MWCqo$U!/a=F59SGLiOBFG($UkN.8H1)"tP&1_3(<];.o^^plY;%CG^TEZ-o@ki\Zh4"f14U5t4lD[.c
%Vm$f7hOi)IG\-"lTfY?r$/Q>S/987M*8qdfipIo2C39D6[<(i/nn4]YA$:ecCsMItKrq,@;1tP8cM)\E><b731qrSWq2\1(jl%X6
%o$.L059B>oGZFibFFp<`r?*5?.Ak^LJB5chROhPjG%f$WPbBY8"@N?0!V$FnH8@o^):(uf$]&EC><i<n>-VK"-uJ#3#Sp;-E+<*5
%1tZ'cmX?bfI.'6m3.*ZIi`/$ePn%/t_e5,B*?QW`gBG=+8a3IpC<,YdLkkO:FT?@;i9@3sh3kge$F3eV0"HREembFXf4dO68=/o+
%iW[sSc1,!r/>u:8ZB58_UK;Ot,$h4uDV;8PIAQU_1'CL1Q>eSs"A#E==Yi-^3A0`IDjG?uJ'/iC.RlD9^'+Z&>2c\.8UWKn61#F&
%h,K%oRhY]r1qWf\Dp5[N75k4;[`ToQR;$KjcqJ]-L&boqhnOm4Nkr32J)j<>R:X_2$q").jjgG?Lh;nDbhCCPm5Y<e$Qo6(.4=Xk
%cd%#F3[bO-:)`SInh(<(cRKPc#9,JUC3)Ym>K)n.8GB&5Yeg2;<l?FE"4kP&(d-?I"VKGh6<8Ath*/aE%iE/L;($`%i)rPZ]rd,b
%kfuqKK(f@`Rb2\4K<$-^F>Q?eB[6#c]0B]70JgLLre8%t;l=Sq>c^016X8-0:4C3c05q?[nQ\=2C4^s[UP8O'_i0'M-u/Hr"1#LT
%fD[,\2;tMP!j4RT(h9G;d+r-Y$JnFYG1ID`5=QWFM!/U["6ic1J*dA]de>,^/C"YY\);Z6hHSDtFn>NuXS$4j[%B%U^B@+i9"sYQ
%.VV+UbGM)kU]TAmQF&ZY7gh9SD2R%U.*4j:IT/*aMV<F\GE8"THRY[I>R^QB"<"N2'(]*G2D'.g\!u6^SagIi_a@TfPI<!*B%)k)
%l.^noSsh&9F9CA<O:aOEiQh>`(I@Zaf;a?#[8m7`JQ3mQ:OTU_hOgY(++-$hI56("q"KmXrcncBE4U?3%N1po+<CAQk)cu`Xghfm
%g<fi!#ka[f:!E13p#Ctg.oUe+C/8JWO%C%h9^Q=E2:*u@U&<Fp[GS]ld.Z"ZZJOZ.dIi"%Qf5=qSXj;c@[TO.T^`K.^58c<HOG#X
%SO#"cU]?b:odEANif?XT=aMmMh%1Rd9EI>mqZ.n$hdViscbpBl,8b+>jR/!.kFCuO+S1ShX$$NsQsI<Zo2#Q*QSi3jA?!-m`U#Ks
%mh^.B&k[S.A6tC:,P\oAL+H(aFh:S]+)spmP=J]>pW)Y!T$6SU$&W<`ls0*H^AgB]MK%L&fE\5,/LT9QQV>MtBL(W@DuDB1o+""1
%]MSf3r'pFn&[S')B#q8O8$'QZ5.AG2cas!5Z\AXreo7"!UM"j5R:DX&1(8seRM*JGib(E'P_oDhmPR:(#Z7JXjIe?\&T1)M)7nmK
%B2/?8RDdcJ>QFV?O$8N3O4Ck4nmQ`UgII(>r;fU5CQf3GcR?eq$tiYWno]Wp$W:LkQIW<qF9VsS2!92Cku))s)4h>C*H*Qr'.S+^
%l4Z:-YmK,9dLe+ug9^AC3OEAa\llKaB1K9qTtBNL/:Gh(p<r"c2H)Q(0Y.&:K>l:uZoP^cp3Cj(S#;`i.oSB*<0k7\c-X_2cTD$V
%/DX!GnT6S/ajE&Sq72pfH%-p*UL3"`$a^o0b^B!Q%;g!skPb>6i@,36Z$J7qalF%8KAm[QAn)8=fIs-#i''gG)=N/XoKmBIpaF?o
%3W@6ZRtu<F:miCSn8Xj,NbM%?IAZKa[7>X<7sq4b4j@&PO$n,#,7uS1k:''n>XMpWM75DTl6acbJ,WD>8Jfs;[Y(5l-u'V?VLp7#
%L2kq(1CJ:bY4-7WQG3P9G1#%HDhYRoA+'u)aa7rXGfsVkO#LH684hrdM"j?U;PKGd.7?bJc_o/h9R:J6p]MTfmD1Y=F.,cr#j#es
%A3tK`aqMF#JiLdPh##+u^<41D+]//+*.lH-cG=kLDUr@+F(pHQ9(Q1c2W/uWT#5F)_Uj6]b)(N/'D*@_Nm#==W8q5[i%\'C?pc3I
%n5qDS'-0I3X&O(PP.q"eK$5tU<o-r2"j(8:rYTX.@-'sP+E$\7?t+@s7,i#n9`^KH;%O9O4<G0un:5F3Xh9D#U9c+BA99fd.2XPU
%_L<00)&Gh/!UaR8>CoRIBVXoCp(L8h3p!<ANHE\d6GRuFfWme*2ka]!XXmn2AYBgJO&r_Comb`;Qj>Hh1St#f+A/:hhr0nmV;R_/
%G]gbE1CXH3kotVcO4>iis$gp4]-BlBn!I&+lpsI_O_jcpZ4([]G1-o-^<H]=(IY46e.5lX3MFS`cfR2p+s:cIE^gmo`Y@5BX=2^l
%Vtu4.*Up-a:m!k(n=81!QWb-$ZP''_S/HE82tdMQ:i>Ua=PeH(\09fl94k=M%('WPYr1Lrfilreh&r/l,Psh8>%63P=D+qPFoZFe
%-Dlf2/S&At!0l`!'e)e83?03%$8Ip7I-DY/pUV&S"mI7&@4Wf1.=\JH%<LtaB"qI+/]#ZhL`s287bf8/?Y2/p5Qq227jnRu68ft7
%;+Iu\!FgLK#1d8r3GOPG"l2_.D<L/Ti%<F+GZ6CP59<FTUQ<V?_E`Gt#>h:VPblc-].fIo9DN+"&do2'j0#&46BpKKF%]AXU.KLr
%\a]l-hrfO3B1+pa8R9(p2@b*aaW-0W#3Rhh$4>pk+MWocl^8js.u%S5"WE=J*$CL;Q+1o<U&kXQcqSF];P)W?'tQDqA-Hsd_+UO$
%m6JfDcn6O[B[=VIF2khu\ZBl;\Y40t&f!SSKCNAFG<RWnPd81.mjVjo-6u\9Ke0Ob5j(Z4\J^4bm@oJ;-fFq(_uYQNQPfkQ4":c.
%W@2k4R'_I?57*7W^P-TFB[)QFTKTu0nGWF5[I"Rg#+Y-'?20L3NLkR!_[#>-*kH8SNe.N]ej3U"k\dU<aDui3hbdFj5U_1/oo%/4
%HOE/W7IcX+!YPM;MQU_A'=tMkT&;biZ5",iffqq-9:.fl!"1K%42^J<2OCgu?]./+3Gp7G[34QtBTQXCF(4/6m5Z*ST';<49(W1Q
%M`e?h;]^mq*$D%`Y9I,AJbKDR8D4;)6q+7aee2:fRF%LqoE=WNUjcRY[UhhkL`g&<%Ul"n^N8oD!7&RN+k@F!n))rXPWKX[P9e=(
%aE8\VUakC(X@p"ps2",.3Y)gDXL"Fn84H4Q_jDt0V57LXK(j2(5uEMG%63uS,V3QP"]3naAIX=Xk`m*6#%mS<_/Y_bl%^,Xa`GJQ
%R$f@CB;_i`4`d)Ncc\tdi_bLYS)+UKP<_mm,:7h5CbEm&5*p_,hqm+%[3@-l]D3->QTD64@:"Ei:9-QGP^1J?nX7$jT<Mt>E)ml*
%O%ns9]N1XYZbI6Y<S/&kHh!/OboPRU4IA*1`(P8\pr?/op&<j_ra1-lS7U'cJ,fN6YCHH:=5SuAr3+MeVr)srp&C3TrmsA^p\dnZ
%^VeSdich#BM_4qjb9&F%s6\&q]fE[05&,,OrPb8@qrH6(`NR#SlLrDn^Ae,p5F;EL`Rhm%k$'%BGin,JYL4.8XUTQ/"kTn4d+eT`
%c-Lk7oafsXmb=q[])'BA=.'!U^\Rp/rp'437p,)ls7>Vr5Q0]oJ%Jn!qr/DVIBe7q:Qdp@Mt,!<bj:P*qIKNmhuAn$:=d8ArQT()
%qt,As5Q9O@rTBGi=9![@J,S9ml73;=)nofYIE,(2';Ml!\.&g=&JjHYktoQcbFGQm$8Z_qTl6\_4O[.BcdG$7L9Qmrlu<$=P[X]]
%pfPBT,L!!ioJ$cIJ-lua4SglK=qdk+[K`+eaTir(6NW-#ius8RHn#_?U]_A>K1ZCnAL#$CLakZdH(AqF$7O-90f]r@U"oqP'X_ec
%]7psHS1`!@&qXXcW,#b".JNlX4OF$Haikcg:<;E>05#e=;*9@1.S0OY$+j?.KtXb>&0R2NPO;V/.M&Un.`(lk6eZ;/*MQU8<EA;E
%LHqgp^.tN!gQnjeRaWqg\3&_7alBR#J,)OT?bGLu<p&P/o7F?171N0bb0"Ha5YNt)KFqFB,u5mf`/Y#J[4Iu/<S$!hFsjPl",SSC
%$E0bdAUlh8a<]KXjD76FGjD^`d`_f(*:lW&g5$k&'+)`'%IDD0i:7]rknNqVHkQ+(OK9j9k9:*m?qiB,pgd_gB6-@0jB&0QL9ApZ
%-m'G&N*WZF1-G-m=]"aR?n:T(ojiW<0h:D`Y[ANGM"j1+<Zi.B#KM+UhQdbi&cVtB.X@]g-(![Sc0qXY*FD&P?SQ^c<bFs+Tj0*b
%[uOHJ!Th2pmf3IM1:[T;*4P:<oUoS\C2lL&Xj\tbbfS7Y>dQXU[HXfk(A\Y2+[I?[P<9E#5rk3#+Vh_Y(AW4MfKg[8Oo`^V[2T,^
%-F*a;n`C3-f"#?TF,>.pW;6O@QX?I2=OZ`W+nO'#K6@u;2%YSF`C%aA@Z*`Z8Zs9.ZXR:(4sCc5g_g%u;"/O<W)AJ]C?En)1uJea
%mc&A&F'5JWB1]g7]4QA$N#B<F#:VD>C<5L0QA!Ddm&Xlo54ZQ+VE[rAP>Ps\mGc1H,4it&;,ITqd:M9QetW+'(X&=@WS3tS3^3@m
%:%mAkncB).LG!u;-QJiTV\gM>CQ:hm%p3TQ"BA8*;o%+?!JJm6]7phg/lB<5KQY?^]:2ZsT?ZHjaFjDZ[aKpjJ:)#S=MWb/mkZc]
%"3N#Ia=ACYW?ih9]\uZ"hC(p[`2gQqXXg(lT94fJ[/CAqa.(/m3kHCVb?O._;-p$?-Vf%3/ch5_4*_k#iJo:Q+PboQFkMn17&bbt
%0D!9Vd2:Z7`E%(dEL]HONZhfo\n^JUZQ)3S'>Ad;gK2u>MO$+S.lcAK^klRI#/p0sWO^>N\=aCA+cq&gJiTj\Q*Yj<PS0c#'2c7a
%at?+.]p5W]asG(jZIk<pOi[DG+SNRmQ.(*-c#gXa\X?+pNF+Fc-b2[,qIMdh&X+E$Of%'I'QN?RI#82P!>-&VK*`il0'jQQ+XVsK
%'X8E^GX6QV+50B!P%V`_S`meYmI(_&TRY]4FSpM$\Nc;ED*]$Bq0YcP_$P]UEXTI1"u3q\Yk'W\Ns1[F6teM2fs2jWYo.XM,&3o9
%%u@Y]Sr)BBB,`R8DK*j;Fgb@j[aHO>UjMtZMGt%ukoi<4o`q(fj:<@=[(3>p"^+M0&BZ9mTL-X$LNn@/!4Fhr(H$JBStdd2&'<eW
%.LLC(I;R&a\\U/4g"2\mffJ#=$ZgeJ2gM4YfQfFCD;DjG0D4^cER:ZaiK#(\LVgSQpT/#^7Ck6bW02J?GPWBMc;<W.U?jN2*IQ4L
%I#(f#`!t!5HBGZ<`l&;A?%im)mTZK15&>*F#GHrW`ei6d0]$U)A%$i5#t'$M._eD]Xr8Acc**[Mep@NVo@Z@C"Cd(mSm\LQ;!H7[
%[\HPW1Bh[\f_/bsnH::T9)mTtCP<f"?(]l:IRUs#U(aO*o[COd3gn/9L[\q9=STXTWc7n(V"7X[Fe&#[EYQ2:IA=[$"#8+7d)=i]
%"%NJn93+Tl"s8CSKaHRlA"j7:],a:)Y9Pl/S/-_6MOr?-RWF/;)NR/GA5M29O+Ko&hOB*J0nG&oV6@._.$FR[`*]?6.2E$AEDm4n
%5alje>c1Y'JJ/EQkbfGSr;>]o(-gcj4Jp2JXRl!`WLr>WqGpX"2+Y$F,FICe9.2k:Y:B/q6;(:1LWBp7;?uZL#)"Mm&:Ura&[(0e
%'2Xt=LLuA^9p,Ya"5QQ0Wb[B%aB(fq.R64M</q;']kd?GFTZNkKG([O((e8Di/:G)7$\%f[):K\%fP<Ej-4L,\`RRu40C(@;d7M:
%kg1:m_i)f,$#7mNB+q(p%R26S*fjW*]8\tI:csdD)'>P%M)q""eV3JdK_t[%mGM]VOZEV/Hkq\PhW#<BOR%aG0IA-OaDFN",t$uf
%7>)_Ia*:^*\/ck!"5WJajW*$K*V*b*0+5)YT?lQF7.fZsnX-9RZ&&"R&h-88?bU5,UGtY&&Ej]OJJ)uX)$0u+Rnj7rD%<`&V&Ult
%@!/^m$AGO+$<-mLmD4K=MFtBM'OWRX*nj'4aD6N"RtKlq4HLtg(Kuh()F_OeK6]hZkUq^<VR2+56YQ9\U0*%Hl$(N'b3n>2T[=2d
%)Vs>G;7Nu8&uD(G%*)S*lfp>Ig>Ue26_bG]iOdQPH;*IM3fRU(6o/*ob"j=l^."d3Z<44UM=Mmh&e4(se3V=a'#gONHA/MFW,4Fa
%R5B4JO*;u!oU+q5O[q=B<QUUR$@@/'T=<6mCh'\(,::=gmAScLN&9i`e<=CtkI]2,mO0I,-Nb,G9p/!u2PKi%CgiS3[D;"ai[kam
%0PL2NYUs2Oa81WGK(-se'5W,(?O`i/3,.P-'jtl1V^&V9/Qg9K2JEnho?DXaXZVY$0!mC0buXf5UDbh=f6+7O`M>%3"KhamHNq:&
%^$lrpas2hEZG_P+6l&sA[pVV+NGrHU)iV#lE6U*POFoB&2HuUF7jpe)lG>TSYhtLU,9Mg^htdbeW"GVM<OMD]]B0Qm(i8e8ncA;N
%&.:Z;hXIBUI5VZ15AQNHdr'uADArP_[ggHPpuTMW,!O!sgDO>'no7K[,VS,HghO<bY^/B:kn?8:@uA+O4rk:]ap[C^kT78'Tet>Q
%RV0I]?d-hLK'VUg]WUE0C#Ak[^=>>-N[1-?>ms>H!KXT#XA`Uk._'G$okp3j(PoqJ;lo$6X0rH$W(42?eC"Z57o)Llb5DH"hkuI]
%?$Zp4"U0LpiTD#n\]cFK[)W=.O7^iZ>PZ?%p[VA@H3[!$6\&^TaTpYWMW1BA#8#4coF=-`ga3R%!QOPd'[:bM3HTJT6Af%b;VqaX
%2P]\L5I;>t:sE!ohrKh0R(_Q92B].@<3pDb*NI/Dcbaj!2d_FCp,XcPg9/;J7)au=*I?K+oTH<O`\-+(>I#LgmYK#BO+DB@DD,k*
%6q@7In5"GW9db8sf9T[K'BdnnktpFTZhL;rN@?rR5A7!sfogns[p,j)cjg41ohI-)+(-7(ZPSqHSn,GO]3.`d%&qV0)`tIXDU#qh
%3a]M1Y]e+=K.uq</9&>B9d,]-'Pf7U@WV&(mI^'3S,hd6^7LhpfI6;^]5[oMdM;TbP[Hq5IIIMS]Op%V)7F>Z%.eW+V?KsF+MB&6
%+nuPj=qe/a"%eo<Pa7ObmGM@bX!'Mh/NC-Qq8A/UQsEZ%VuglPT"<<iLu6onL>NDo.,r-"kmmE^Qjk?6Npi3;[]T7pO,jO,X:*qJ
%DP$)V92/=p%u`)/Vl_<SEi[VF&66XhR2n^cm)HGmQ,i\Y=NRS"q.\$UW3QhF#WLkls4KO&:<lpnB=V1TL+^?s-ps?p[Ac^`P($D!
%;GHR92!kXP:`SQcZ/@68*Jd@qCP@MKmSM,HncN`a)QYe7<bEQ]=Rrb0^a*J:1#\f@ko79*rZDU-n[D,Vp'j>%6JZ,5*Uh+?I7uW>
%GbbpF\AT?sm36RoBtFlNDL=!g)X+M@`]MZZ-_+,*ApVKn`Du]1bboVd]jR7"6(REV]WCI!'Z*i-?;RBtZ&2S>0!)nO@3JUUD2B49
%_$"DQc7'"K%Un=M?\X,r_-th&dT+A0"%&WE"G5QZbBt6?ZGCXX/&@AXK(>'G&r$`u3-(MO<CH4UI?3](.q+aN(gdAr8C\r)[Adk*
%8Gh;>JM<]^s1YCpG!40L4RLB[*)qAJ6$d_:/))#[6;'M$WmKQ@41j$\/R`dF\kiqbcuIrtKA9m$Gclm/f"jAJ4GKt"p-OhLB"+7q
%\gRTYhjMre3]q(N@pL\G$ol$@jSL0N$?)iH(^-Nd"?>EM99#TXTWoLY8I:)VYBKCS'oIOFDE8nZ47r1+1164LSm-f*l=%m"iK*53
%kOe@KZoFIF<%er>m^S)&S[[u+?+T[,V\Y=)N.k`a2P>iA'a0&HaO.:"1[8R"@s14LDhiKA7\.k)'Y<X7QdB<[rKX(D\^TSH5eZEB
%?q94%)-E7-X&R,Q^Y+8oB8!gY7TVZ&f@,Q]Z!1UQ(QQh$?@[4]n1cI>A-4HX%U]^q8p/dk<2WAEV)?IPpO8@l0M>a`U)mnaeHud=
%mZ*D)Sf8[@K+!h+%#'Jq%;?#H83Z4,ghO<b!8f1&_C+Y6$?h^44Ba30i;fV9DWI]QTJHG&a3urMFkr]#Zc))4TsAq-LNX+NdrDuM
%AiN4fFf.1VAgVWUI2"K8EW>eXk`J\sG9cm'S=\laH%:SOk7;+BS0e!lQ:<5l>-#13][u8"dZ2\9^0IAhT`OmKc9I+nP_!tuZOujO
%%\S^<'rJfRO-<)mo%$P_O89d8Ft<_uk7_#`JX..%"BFNcXR"a?)<gBP&?cY4rKMFR?t4X32Ck8,IR>b[l.Bm$Q]eHD$`Jo/mhWhr
%^R,cWM'.hEKANA3:DfhuBOh:j,Y')Ihf/s4)HQ2YS$$f,Ko\%OE,NB_;pH"9*1aO0P6&3oWD1D`r5*@9'Z;LTYin"m9<7nkUk1QK
%Vls`KJ?t(P"`]cXM>>4%(::.PW#sJTctefqL-Yp?mVPpg)UkAUE):5f]Z,^[`O8+?7o4n/A8hW&%G68IDI@,&>C*YdmSf.Fq/ea\
%#V^*oOQOfsQFZIt$#Q^ECZ;/`-tin^F=3u[@K45#1Mga^8!/LIJn:#Gnh(s8-kcI]CNkk'DD(fR1ZXqFo>[idpC3NbhOobb[PtT9
%QpI(,_9QmTgFH)^_qEI6/u&QIr"H&N@:m8O[\g\7(c]:g/T]%PFWTU*,M:fKKDLku\o[VF8PH%(OI%_#7SRGhcCfa^2B$P+C"&Om
%Ho't1O2P90dC.1A>T-3j$WW(s3NRZO_6a)FB.uV`Qk)jf>hJ>M`5_T^'8sk7^!&fi`<Mh;bk*fSTc%tp=![Ns\K9J``gAF$Eq[cS
%PX^[kecR4jI/\@34#=fYf\$J!0Z*0&5!t"G7#M2`d^n]^E)Na\TG4e:)1%RD<sh)-8CB"'+6#l(Xtg6R6/gj_X>DNoA+/>YF@dBY
%ajX5=PW`O_2"=!(b,?TK:.4Y8^/CI;@HnIMPKOT,:!3l`mM+G@LI@q&7mn2r@1a,5iYdk&Wb7U?$Na/7&c#D%a+f:Y0^a%cg)1'"
%5VWN2/>Gbjc)!(fP0mKS%pfTrrOZEdq7Ej1mJAQO\c;O'2o#7Kb9+L5qXWBZnLj>(n&N1JrU0QdJ,$p*hg^(I_uKZ&5CnccbiXEL
%GJEtrs8C4B&+[Gb>l~>
%AI9_PrivateDataEnd
