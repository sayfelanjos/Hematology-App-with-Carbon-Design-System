'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _typeof2 = require('babel-runtime/helpers/typeof');

var _typeof3 = _interopRequireDefault(_typeof2);

var _toConsumableArray2 = require('babel-runtime/helpers/toConsumableArray');

var _toConsumableArray3 = _interopRequireDefault(_toConsumableArray2);

var _keys = require('babel-runtime/core-js/object/keys');

var _keys2 = _interopRequireDefault(_keys);

exports.default = matchMock;

var _util = require('util');

var _util2 = _interopRequireDefault(_util);

var _isEqual = require('lodash/isEqual');

var _isEqual2 = _interopRequireDefault(_isEqual);

var _pathToRegexp = require('path-to-regexp');

var _pathToRegexp2 = _interopRequireDefault(_pathToRegexp);

var _logger = require('./logger');

var _logger2 = _interopRequireDefault(_logger);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/*
 * Copyright (c) 2018 American Express Travel Related Services Company, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */

function match(normalizedRequest) {
  return function (request) {
    return (0, _keys2.default)(request).every(function (property) {
      if (property === 'path') {
        return (0, _pathToRegexp2.default)(request.path).exec(normalizedRequest.path);
      } else if (property === 'headers') {
        return (0, _keys2.default)(request.headers).every(function (key) {
          return request.headers[key] === normalizedRequest.headers[key];
        });
      }

      return (0, _isEqual2.default)(normalizedRequest[property], request[property]);
    });
  };
}

function matchMock(normalizedRequest, platformRequest, mocks) {
  var matchedMock = void 0;
  for (var index = 0; index < mocks.length; index += 1) {
    var mock = mocks[index];
    if (typeof mock === 'function') {
      var response = mock.apply(undefined, [normalizedRequest, match(normalizedRequest)].concat((0, _toConsumableArray3.default)(platformRequest)));
      if (response) {
        matchedMock = { response: response };
        _logger2.default.info('Matched mock function.', normalizedRequest.path);
        break;
      }
    } else if (typeof mock.request === 'function' && mock.request(normalizedRequest, match(normalizedRequest))) {
      _logger2.default.info('Matched request function.', normalizedRequest.path);
      matchedMock = mock;
      break;
    } else if ((0, _typeof3.default)(mock.request) === 'object' && match(normalizedRequest)(mock.request)) {
      _logger2.default.info('Matched request object: ' + _util2.default.inspect(mock.request, {
        colors: true,
        breakLength: Infinity
      }), normalizedRequest.path);
      matchedMock = mock;
      break;
    }
  }

  return matchedMock;
}
module.exports = exports['default'];