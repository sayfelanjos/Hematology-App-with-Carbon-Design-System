{"version":3,"file":"angle-utils-6b17e95b.mjs","sources":["../../../node_modules/lodash-es/_trimmedEndIndex.js","../../../node_modules/lodash-es/_baseTrim.js","../../../node_modules/lodash-es/toNumber.js","../../../node_modules/lodash-es/now.js","../../../node_modules/lodash-es/debounce.js","../../../node_modules/html-to-image/es/util.js","../../../node_modules/html-to-image/es/clone-pseudos.js","../../../node_modules/html-to-image/es/mimes.js","../../../node_modules/html-to-image/es/dataurl.js","../../../node_modules/html-to-image/es/clone-node.js","../../../node_modules/html-to-image/es/embed-resources.js","../../../node_modules/html-to-image/es/embed-images.js","../../../node_modules/html-to-image/es/apply-style.js","../../../node_modules/html-to-image/es/embed-webfonts.js","../../../node_modules/html-to-image/es/index.js","../src/services/service.ts","../src/services/essentials/dom-utils.ts","../src/services/essentials/gradient-utils.ts","../src/services/angle-utils.ts"],"sourcesContent":["/** Used to match a single whitespace character. */\nvar reWhitespace = /\\s/;\n\n/**\n * Used by `_.trim` and `_.trimEnd` to get the index of the last non-whitespace\n * character of `string`.\n *\n * @private\n * @param {string} string The string to inspect.\n * @returns {number} Returns the index of the last non-whitespace character.\n */\nfunction trimmedEndIndex(string) {\n  var index = string.length;\n\n  while (index-- && reWhitespace.test(string.charAt(index))) {}\n  return index;\n}\n\nexport default trimmedEndIndex;\n","import trimmedEndIndex from './_trimmedEndIndex.js';\n\n/** Used to match leading whitespace. */\nvar reTrimStart = /^\\s+/;\n\n/**\n * The base implementation of `_.trim`.\n *\n * @private\n * @param {string} string The string to trim.\n * @returns {string} Returns the trimmed string.\n */\nfunction baseTrim(string) {\n  return string\n    ? string.slice(0, trimmedEndIndex(string) + 1).replace(reTrimStart, '')\n    : string;\n}\n\nexport default baseTrim;\n","import baseTrim from './_baseTrim.js';\nimport isObject from './isObject.js';\nimport isSymbol from './isSymbol.js';\n\n/** Used as references for various `Number` constants. */\nvar NAN = 0 / 0;\n\n/** Used to detect bad signed hexadecimal string values. */\nvar reIsBadHex = /^[-+]0x[0-9a-f]+$/i;\n\n/** Used to detect binary string values. */\nvar reIsBinary = /^0b[01]+$/i;\n\n/** Used to detect octal string values. */\nvar reIsOctal = /^0o[0-7]+$/i;\n\n/** Built-in method references without a dependency on `root`. */\nvar freeParseInt = parseInt;\n\n/**\n * Converts `value` to a number.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to process.\n * @returns {number} Returns the number.\n * @example\n *\n * _.toNumber(3.2);\n * // => 3.2\n *\n * _.toNumber(Number.MIN_VALUE);\n * // => 5e-324\n *\n * _.toNumber(Infinity);\n * // => Infinity\n *\n * _.toNumber('3.2');\n * // => 3.2\n */\nfunction toNumber(value) {\n  if (typeof value == 'number') {\n    return value;\n  }\n  if (isSymbol(value)) {\n    return NAN;\n  }\n  if (isObject(value)) {\n    var other = typeof value.valueOf == 'function' ? value.valueOf() : value;\n    value = isObject(other) ? (other + '') : other;\n  }\n  if (typeof value != 'string') {\n    return value === 0 ? value : +value;\n  }\n  value = baseTrim(value);\n  var isBinary = reIsBinary.test(value);\n  return (isBinary || reIsOctal.test(value))\n    ? freeParseInt(value.slice(2), isBinary ? 2 : 8)\n    : (reIsBadHex.test(value) ? NAN : +value);\n}\n\nexport default toNumber;\n","import root from './_root.js';\n\n/**\n * Gets the timestamp of the number of milliseconds that have elapsed since\n * the Unix epoch (1 January 1970 00:00:00 UTC).\n *\n * @static\n * @memberOf _\n * @since 2.4.0\n * @category Date\n * @returns {number} Returns the timestamp.\n * @example\n *\n * _.defer(function(stamp) {\n *   console.log(_.now() - stamp);\n * }, _.now());\n * // => Logs the number of milliseconds it took for the deferred invocation.\n */\nvar now = function() {\n  return root.Date.now();\n};\n\nexport default now;\n","import isObject from './isObject.js';\nimport now from './now.js';\nimport toNumber from './toNumber.js';\n\n/** Error message constants. */\nvar FUNC_ERROR_TEXT = 'Expected a function';\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeMax = Math.max,\n    nativeMin = Math.min;\n\n/**\n * Creates a debounced function that delays invoking `func` until after `wait`\n * milliseconds have elapsed since the last time the debounced function was\n * invoked. The debounced function comes with a `cancel` method to cancel\n * delayed `func` invocations and a `flush` method to immediately invoke them.\n * Provide `options` to indicate whether `func` should be invoked on the\n * leading and/or trailing edge of the `wait` timeout. The `func` is invoked\n * with the last arguments provided to the debounced function. Subsequent\n * calls to the debounced function return the result of the last `func`\n * invocation.\n *\n * **Note:** If `leading` and `trailing` options are `true`, `func` is\n * invoked on the trailing edge of the timeout only if the debounced function\n * is invoked more than once during the `wait` timeout.\n *\n * If `wait` is `0` and `leading` is `false`, `func` invocation is deferred\n * until to the next tick, similar to `setTimeout` with a timeout of `0`.\n *\n * See [David Corbacho's article](https://css-tricks.com/debouncing-throttling-explained-examples/)\n * for details over the differences between `_.debounce` and `_.throttle`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Function\n * @param {Function} func The function to debounce.\n * @param {number} [wait=0] The number of milliseconds to delay.\n * @param {Object} [options={}] The options object.\n * @param {boolean} [options.leading=false]\n *  Specify invoking on the leading edge of the timeout.\n * @param {number} [options.maxWait]\n *  The maximum time `func` is allowed to be delayed before it's invoked.\n * @param {boolean} [options.trailing=true]\n *  Specify invoking on the trailing edge of the timeout.\n * @returns {Function} Returns the new debounced function.\n * @example\n *\n * // Avoid costly calculations while the window size is in flux.\n * jQuery(window).on('resize', _.debounce(calculateLayout, 150));\n *\n * // Invoke `sendMail` when clicked, debouncing subsequent calls.\n * jQuery(element).on('click', _.debounce(sendMail, 300, {\n *   'leading': true,\n *   'trailing': false\n * }));\n *\n * // Ensure `batchLog` is invoked once after 1 second of debounced calls.\n * var debounced = _.debounce(batchLog, 250, { 'maxWait': 1000 });\n * var source = new EventSource('/stream');\n * jQuery(source).on('message', debounced);\n *\n * // Cancel the trailing debounced invocation.\n * jQuery(window).on('popstate', debounced.cancel);\n */\nfunction debounce(func, wait, options) {\n  var lastArgs,\n      lastThis,\n      maxWait,\n      result,\n      timerId,\n      lastCallTime,\n      lastInvokeTime = 0,\n      leading = false,\n      maxing = false,\n      trailing = true;\n\n  if (typeof func != 'function') {\n    throw new TypeError(FUNC_ERROR_TEXT);\n  }\n  wait = toNumber(wait) || 0;\n  if (isObject(options)) {\n    leading = !!options.leading;\n    maxing = 'maxWait' in options;\n    maxWait = maxing ? nativeMax(toNumber(options.maxWait) || 0, wait) : maxWait;\n    trailing = 'trailing' in options ? !!options.trailing : trailing;\n  }\n\n  function invokeFunc(time) {\n    var args = lastArgs,\n        thisArg = lastThis;\n\n    lastArgs = lastThis = undefined;\n    lastInvokeTime = time;\n    result = func.apply(thisArg, args);\n    return result;\n  }\n\n  function leadingEdge(time) {\n    // Reset any `maxWait` timer.\n    lastInvokeTime = time;\n    // Start the timer for the trailing edge.\n    timerId = setTimeout(timerExpired, wait);\n    // Invoke the leading edge.\n    return leading ? invokeFunc(time) : result;\n  }\n\n  function remainingWait(time) {\n    var timeSinceLastCall = time - lastCallTime,\n        timeSinceLastInvoke = time - lastInvokeTime,\n        timeWaiting = wait - timeSinceLastCall;\n\n    return maxing\n      ? nativeMin(timeWaiting, maxWait - timeSinceLastInvoke)\n      : timeWaiting;\n  }\n\n  function shouldInvoke(time) {\n    var timeSinceLastCall = time - lastCallTime,\n        timeSinceLastInvoke = time - lastInvokeTime;\n\n    // Either this is the first call, activity has stopped and we're at the\n    // trailing edge, the system time has gone backwards and we're treating\n    // it as the trailing edge, or we've hit the `maxWait` limit.\n    return (lastCallTime === undefined || (timeSinceLastCall >= wait) ||\n      (timeSinceLastCall < 0) || (maxing && timeSinceLastInvoke >= maxWait));\n  }\n\n  function timerExpired() {\n    var time = now();\n    if (shouldInvoke(time)) {\n      return trailingEdge(time);\n    }\n    // Restart the timer.\n    timerId = setTimeout(timerExpired, remainingWait(time));\n  }\n\n  function trailingEdge(time) {\n    timerId = undefined;\n\n    // Only invoke if we have `lastArgs` which means `func` has been\n    // debounced at least once.\n    if (trailing && lastArgs) {\n      return invokeFunc(time);\n    }\n    lastArgs = lastThis = undefined;\n    return result;\n  }\n\n  function cancel() {\n    if (timerId !== undefined) {\n      clearTimeout(timerId);\n    }\n    lastInvokeTime = 0;\n    lastArgs = lastCallTime = lastThis = timerId = undefined;\n  }\n\n  function flush() {\n    return timerId === undefined ? result : trailingEdge(now());\n  }\n\n  function debounced() {\n    var time = now(),\n        isInvoking = shouldInvoke(time);\n\n    lastArgs = arguments;\n    lastThis = this;\n    lastCallTime = time;\n\n    if (isInvoking) {\n      if (timerId === undefined) {\n        return leadingEdge(lastCallTime);\n      }\n      if (maxing) {\n        // Handle invocations in a tight loop.\n        clearTimeout(timerId);\n        timerId = setTimeout(timerExpired, wait);\n        return invokeFunc(lastCallTime);\n      }\n    }\n    if (timerId === undefined) {\n      timerId = setTimeout(timerExpired, wait);\n    }\n    return result;\n  }\n  debounced.cancel = cancel;\n  debounced.flush = flush;\n  return debounced;\n}\n\nexport default debounce;\n","export function resolveUrl(url, baseUrl) {\n    // url is absolute already\n    if (url.match(/^[a-z]+:\\/\\//i)) {\n        return url;\n    }\n    // url is absolute already, without protocol\n    if (url.match(/^\\/\\//)) {\n        return window.location.protocol + url;\n    }\n    // dataURI, mailto:, tel:, etc.\n    if (url.match(/^[a-z]+:/i)) {\n        return url;\n    }\n    const doc = document.implementation.createHTMLDocument();\n    const base = doc.createElement('base');\n    const a = doc.createElement('a');\n    doc.head.appendChild(base);\n    doc.body.appendChild(a);\n    if (baseUrl) {\n        base.href = baseUrl;\n    }\n    a.href = url;\n    return a.href;\n}\nexport const uuid = (() => {\n    // generate uuid for className of pseudo elements.\n    // We should not use GUIDs, otherwise pseudo elements sometimes cannot be captured.\n    let counter = 0;\n    // ref: http://stackoverflow.com/a/6248722/2519373\n    const random = () => \n    // eslint-disable-next-line no-bitwise\n    `0000${((Math.random() * 36 ** 4) << 0).toString(36)}`.slice(-4);\n    return () => {\n        counter += 1;\n        return `u${random()}${counter}`;\n    };\n})();\nexport function delay(ms) {\n    return (args) => new Promise((resolve) => {\n        setTimeout(() => resolve(args), ms);\n    });\n}\nexport function toArray(arrayLike) {\n    const arr = [];\n    for (let i = 0, l = arrayLike.length; i < l; i++) {\n        arr.push(arrayLike[i]);\n    }\n    return arr;\n}\nfunction px(node, styleProperty) {\n    const win = node.ownerDocument.defaultView || window;\n    const val = win.getComputedStyle(node).getPropertyValue(styleProperty);\n    return val ? parseFloat(val.replace('px', '')) : 0;\n}\nfunction getNodeWidth(node) {\n    const leftBorder = px(node, 'border-left-width');\n    const rightBorder = px(node, 'border-right-width');\n    return node.clientWidth + leftBorder + rightBorder;\n}\nfunction getNodeHeight(node) {\n    const topBorder = px(node, 'border-top-width');\n    const bottomBorder = px(node, 'border-bottom-width');\n    return node.clientHeight + topBorder + bottomBorder;\n}\nexport function getImageSize(targetNode, options = {}) {\n    const width = options.width || getNodeWidth(targetNode);\n    const height = options.height || getNodeHeight(targetNode);\n    return { width, height };\n}\nexport function getPixelRatio() {\n    let ratio;\n    let FINAL_PROCESS;\n    try {\n        FINAL_PROCESS = process;\n    }\n    catch (e) {\n        // pass\n    }\n    const val = FINAL_PROCESS && FINAL_PROCESS.env\n        ? FINAL_PROCESS.env.devicePixelRatio\n        : null;\n    if (val) {\n        ratio = parseInt(val, 10);\n        if (Number.isNaN(ratio)) {\n            ratio = 1;\n        }\n    }\n    return ratio || window.devicePixelRatio || 1;\n}\n// @see https://developer.mozilla.org/en-US/docs/Web/HTML/Element/canvas#maximum_canvas_size\nconst canvasDimensionLimit = 16384;\nexport function checkCanvasDimensions(canvas) {\n    if (canvas.width > canvasDimensionLimit ||\n        canvas.height > canvasDimensionLimit) {\n        if (canvas.width > canvasDimensionLimit &&\n            canvas.height > canvasDimensionLimit) {\n            if (canvas.width > canvas.height) {\n                canvas.height *= canvasDimensionLimit / canvas.width;\n                canvas.width = canvasDimensionLimit;\n            }\n            else {\n                canvas.width *= canvasDimensionLimit / canvas.height;\n                canvas.height = canvasDimensionLimit;\n            }\n        }\n        else if (canvas.width > canvasDimensionLimit) {\n            canvas.height *= canvasDimensionLimit / canvas.width;\n            canvas.width = canvasDimensionLimit;\n        }\n        else {\n            canvas.width *= canvasDimensionLimit / canvas.height;\n            canvas.height = canvasDimensionLimit;\n        }\n    }\n}\nexport function canvasToBlob(canvas, options = {}) {\n    if (canvas.toBlob) {\n        return new Promise((resolve) => {\n            canvas.toBlob(resolve, options.type ? options.type : 'image/png', options.quality ? options.quality : 1);\n        });\n    }\n    return new Promise((resolve) => {\n        const binaryString = window.atob(canvas\n            .toDataURL(options.type ? options.type : undefined, options.quality ? options.quality : undefined)\n            .split(',')[1]);\n        const len = binaryString.length;\n        const binaryArray = new Uint8Array(len);\n        for (let i = 0; i < len; i += 1) {\n            binaryArray[i] = binaryString.charCodeAt(i);\n        }\n        resolve(new Blob([binaryArray], {\n            type: options.type ? options.type : 'image/png',\n        }));\n    });\n}\nexport function createImage(url) {\n    return new Promise((resolve, reject) => {\n        const img = new Image();\n        img.decode = () => resolve(img);\n        img.onload = () => resolve(img);\n        img.onerror = reject;\n        img.crossOrigin = 'anonymous';\n        img.decoding = 'async';\n        img.src = url;\n    });\n}\nexport async function svgToDataURL(svg) {\n    return Promise.resolve()\n        .then(() => new XMLSerializer().serializeToString(svg))\n        .then(encodeURIComponent)\n        .then((html) => `data:image/svg+xml;charset=utf-8,${html}`);\n}\nexport async function nodeToDataURL(node, width, height) {\n    const xmlns = 'http://www.w3.org/2000/svg';\n    const svg = document.createElementNS(xmlns, 'svg');\n    const foreignObject = document.createElementNS(xmlns, 'foreignObject');\n    svg.setAttribute('width', `${width}`);\n    svg.setAttribute('height', `${height}`);\n    svg.setAttribute('viewBox', `0 0 ${width} ${height}`);\n    foreignObject.setAttribute('width', '100%');\n    foreignObject.setAttribute('height', '100%');\n    foreignObject.setAttribute('x', '0');\n    foreignObject.setAttribute('y', '0');\n    foreignObject.setAttribute('externalResourcesRequired', 'true');\n    svg.appendChild(foreignObject);\n    foreignObject.appendChild(node);\n    return svgToDataURL(svg);\n}\nexport const isInstanceOfElement = (node, instance) => {\n    if (node instanceof instance)\n        return true;\n    const nodePrototype = Object.getPrototypeOf(node);\n    if (nodePrototype === null)\n        return false;\n    return (nodePrototype.constructor.name === instance.name ||\n        isInstanceOfElement(nodePrototype, instance));\n};\n//# sourceMappingURL=util.js.map","import { uuid, toArray } from './util';\nfunction formatCSSText(style) {\n    const content = style.getPropertyValue('content');\n    return `${style.cssText} content: '${content.replace(/'|\"/g, '')}';`;\n}\nfunction formatCSSProperties(style) {\n    return toArray(style)\n        .map((name) => {\n        const value = style.getPropertyValue(name);\n        const priority = style.getPropertyPriority(name);\n        return `${name}: ${value}${priority ? ' !important' : ''};`;\n    })\n        .join(' ');\n}\nfunction getPseudoElementStyle(className, pseudo, style) {\n    const selector = `.${className}:${pseudo}`;\n    const cssText = style.cssText\n        ? formatCSSText(style)\n        : formatCSSProperties(style);\n    return document.createTextNode(`${selector}{${cssText}}`);\n}\nfunction clonePseudoElement(nativeNode, clonedNode, pseudo) {\n    const style = window.getComputedStyle(nativeNode, pseudo);\n    const content = style.getPropertyValue('content');\n    if (content === '' || content === 'none') {\n        return;\n    }\n    const className = uuid();\n    try {\n        clonedNode.className = `${clonedNode.className} ${className}`;\n    }\n    catch (err) {\n        return;\n    }\n    const styleElement = document.createElement('style');\n    styleElement.appendChild(getPseudoElementStyle(className, pseudo, style));\n    clonedNode.appendChild(styleElement);\n}\nexport function clonePseudoElements(nativeNode, clonedNode) {\n    clonePseudoElement(nativeNode, clonedNode, ':before');\n    clonePseudoElement(nativeNode, clonedNode, ':after');\n}\n//# sourceMappingURL=clone-pseudos.js.map","const WOFF = 'application/font-woff';\nconst JPEG = 'image/jpeg';\nconst mimes = {\n    woff: WOFF,\n    woff2: WOFF,\n    ttf: 'application/font-truetype',\n    eot: 'application/vnd.ms-fontobject',\n    png: 'image/png',\n    jpg: JPEG,\n    jpeg: JPEG,\n    gif: 'image/gif',\n    tiff: 'image/tiff',\n    svg: 'image/svg+xml',\n    webp: 'image/webp',\n};\nfunction getExtension(url) {\n    const match = /\\.([^./]*?)$/g.exec(url);\n    return match ? match[1] : '';\n}\nexport function getMimeType(url) {\n    const extension = getExtension(url).toLowerCase();\n    return mimes[extension] || '';\n}\n//# sourceMappingURL=mimes.js.map","function getContentFromDataUrl(dataURL) {\n    return dataURL.split(/,/)[1];\n}\nexport function isDataUrl(url) {\n    return url.search(/^(data:)/) !== -1;\n}\nexport function makeDataUrl(content, mimeType) {\n    return `data:${mimeType};base64,${content}`;\n}\nexport async function fetchAsDataURL(url, init, process) {\n    const res = await fetch(url, init);\n    if (res.status === 404) {\n        throw new Error(`Resource \"${res.url}\" not found`);\n    }\n    const blob = await res.blob();\n    return new Promise((resolve, reject) => {\n        const reader = new FileReader();\n        reader.onerror = reject;\n        reader.onloadend = () => {\n            try {\n                resolve(process({ res, result: reader.result }));\n            }\n            catch (error) {\n                reject(error);\n            }\n        };\n        reader.readAsDataURL(blob);\n    });\n}\nconst cache = {};\nfunction getCacheKey(url, contentType, includeQueryParams) {\n    let key = url.replace(/\\?.*/, '');\n    if (includeQueryParams) {\n        key = url;\n    }\n    // font resource\n    if (/ttf|otf|eot|woff2?/i.test(key)) {\n        key = key.replace(/.*\\//, '');\n    }\n    return contentType ? `[${contentType}]${key}` : key;\n}\nexport async function resourceToDataURL(resourceUrl, contentType, options) {\n    const cacheKey = getCacheKey(resourceUrl, contentType, options.includeQueryParams);\n    if (cache[cacheKey] != null) {\n        return cache[cacheKey];\n    }\n    // ref: https://developer.mozilla.org/en/docs/Web/API/XMLHttpRequest/Using_XMLHttpRequest#Bypassing_the_cache\n    if (options.cacheBust) {\n        // eslint-disable-next-line no-param-reassign\n        resourceUrl += (/\\?/.test(resourceUrl) ? '&' : '?') + new Date().getTime();\n    }\n    let dataURL;\n    try {\n        const content = await fetchAsDataURL(resourceUrl, options.fetchRequestInit, ({ res, result }) => {\n            if (!contentType) {\n                // eslint-disable-next-line no-param-reassign\n                contentType = res.headers.get('Content-Type') || '';\n            }\n            return getContentFromDataUrl(result);\n        });\n        dataURL = makeDataUrl(content, contentType);\n    }\n    catch (error) {\n        dataURL = options.imagePlaceholder || '';\n        let msg = `Failed to fetch resource: ${resourceUrl}`;\n        if (error) {\n            msg = typeof error === 'string' ? error : error.message;\n        }\n        if (msg) {\n            console.warn(msg);\n        }\n    }\n    cache[cacheKey] = dataURL;\n    return dataURL;\n}\n//# sourceMappingURL=dataurl.js.map","import { clonePseudoElements } from './clone-pseudos';\nimport { createImage, toArray, isInstanceOfElement } from './util';\nimport { getMimeType } from './mimes';\nimport { resourceToDataURL } from './dataurl';\nasync function cloneCanvasElement(canvas) {\n    const dataURL = canvas.toDataURL();\n    if (dataURL === 'data:,') {\n        return canvas.cloneNode(false);\n    }\n    return createImage(dataURL);\n}\nasync function cloneVideoElement(video, options) {\n    if (video.currentSrc) {\n        const canvas = document.createElement('canvas');\n        const ctx = canvas.getContext('2d');\n        canvas.width = video.clientWidth;\n        canvas.height = video.clientHeight;\n        ctx === null || ctx === void 0 ? void 0 : ctx.drawImage(video, 0, 0, canvas.width, canvas.height);\n        const dataURL = canvas.toDataURL();\n        return createImage(dataURL);\n    }\n    const poster = video.poster;\n    const contentType = getMimeType(poster);\n    const dataURL = await resourceToDataURL(poster, contentType, options);\n    return createImage(dataURL);\n}\nasync function cloneIFrameElement(iframe) {\n    var _a;\n    try {\n        if ((_a = iframe === null || iframe === void 0 ? void 0 : iframe.contentDocument) === null || _a === void 0 ? void 0 : _a.body) {\n            return (await cloneNode(iframe.contentDocument.body, {}, true));\n        }\n    }\n    catch (_b) {\n        // Failed to clone iframe\n    }\n    return iframe.cloneNode(false);\n}\nasync function cloneSingleNode(node, options) {\n    if (isInstanceOfElement(node, HTMLCanvasElement)) {\n        return cloneCanvasElement(node);\n    }\n    if (isInstanceOfElement(node, HTMLVideoElement)) {\n        return cloneVideoElement(node, options);\n    }\n    if (isInstanceOfElement(node, HTMLIFrameElement)) {\n        return cloneIFrameElement(node);\n    }\n    return node.cloneNode(false);\n}\nconst isSlotElement = (node) => node.tagName != null && node.tagName.toUpperCase() === 'SLOT';\nasync function cloneChildren(nativeNode, clonedNode, options) {\n    var _a, _b;\n    let children = [];\n    if (isSlotElement(nativeNode) && nativeNode.assignedNodes) {\n        children = toArray(nativeNode.assignedNodes());\n    }\n    else if (isInstanceOfElement(nativeNode, HTMLIFrameElement) &&\n        ((_a = nativeNode.contentDocument) === null || _a === void 0 ? void 0 : _a.body)) {\n        children = toArray(nativeNode.contentDocument.body.childNodes);\n    }\n    else {\n        children = toArray(((_b = nativeNode.shadowRoot) !== null && _b !== void 0 ? _b : nativeNode).childNodes);\n    }\n    if (children.length === 0 ||\n        isInstanceOfElement(nativeNode, HTMLVideoElement)) {\n        return clonedNode;\n    }\n    await children.reduce((deferred, child) => deferred\n        .then(() => cloneNode(child, options))\n        .then((clonedChild) => {\n        if (clonedChild) {\n            clonedNode.appendChild(clonedChild);\n        }\n    }), Promise.resolve());\n    return clonedNode;\n}\nfunction cloneCSSStyle(nativeNode, clonedNode) {\n    const targetStyle = clonedNode.style;\n    if (!targetStyle) {\n        return;\n    }\n    const sourceStyle = window.getComputedStyle(nativeNode);\n    if (sourceStyle.cssText) {\n        targetStyle.cssText = sourceStyle.cssText;\n        targetStyle.transformOrigin = sourceStyle.transformOrigin;\n    }\n    else {\n        toArray(sourceStyle).forEach((name) => {\n            let value = sourceStyle.getPropertyValue(name);\n            if (name === 'font-size' && value.endsWith('px')) {\n                const reducedFont = Math.floor(parseFloat(value.substring(0, value.length - 2))) - 0.1;\n                value = `${reducedFont}px`;\n            }\n            if (isInstanceOfElement(nativeNode, HTMLIFrameElement) &&\n                name === 'display' &&\n                value === 'inline') {\n                value = 'block';\n            }\n            if (name === 'd' && clonedNode.getAttribute('d')) {\n                value = `path(${clonedNode.getAttribute('d')})`;\n            }\n            targetStyle.setProperty(name, value, sourceStyle.getPropertyPriority(name));\n        });\n    }\n}\nfunction cloneInputValue(nativeNode, clonedNode) {\n    if (isInstanceOfElement(nativeNode, HTMLTextAreaElement)) {\n        clonedNode.innerHTML = nativeNode.value;\n    }\n    if (isInstanceOfElement(nativeNode, HTMLInputElement)) {\n        clonedNode.setAttribute('value', nativeNode.value);\n    }\n}\nfunction cloneSelectValue(nativeNode, clonedNode) {\n    if (isInstanceOfElement(nativeNode, HTMLSelectElement)) {\n        const clonedSelect = clonedNode;\n        const selectedOption = Array.from(clonedSelect.children).find((child) => nativeNode.value === child.getAttribute('value'));\n        if (selectedOption) {\n            selectedOption.setAttribute('selected', '');\n        }\n    }\n}\nfunction decorate(nativeNode, clonedNode) {\n    if (isInstanceOfElement(clonedNode, Element)) {\n        cloneCSSStyle(nativeNode, clonedNode);\n        clonePseudoElements(nativeNode, clonedNode);\n        cloneInputValue(nativeNode, clonedNode);\n        cloneSelectValue(nativeNode, clonedNode);\n    }\n    return clonedNode;\n}\nasync function ensureSVGSymbols(clone, options) {\n    const uses = clone.querySelectorAll ? clone.querySelectorAll('use') : [];\n    if (uses.length === 0) {\n        return clone;\n    }\n    const processedDefs = {};\n    for (let i = 0; i < uses.length; i++) {\n        const use = uses[i];\n        const id = use.getAttribute('xlink:href');\n        if (id) {\n            const exist = clone.querySelector(id);\n            const definition = document.querySelector(id);\n            if (!exist && definition && !processedDefs[id]) {\n                // eslint-disable-next-line no-await-in-loop\n                processedDefs[id] = (await cloneNode(definition, options, true));\n            }\n        }\n    }\n    const nodes = Object.values(processedDefs);\n    if (nodes.length) {\n        const ns = 'http://www.w3.org/1999/xhtml';\n        const svg = document.createElementNS(ns, 'svg');\n        svg.setAttribute('xmlns', ns);\n        svg.style.position = 'absolute';\n        svg.style.width = '0';\n        svg.style.height = '0';\n        svg.style.overflow = 'hidden';\n        svg.style.display = 'none';\n        const defs = document.createElementNS(ns, 'defs');\n        svg.appendChild(defs);\n        for (let i = 0; i < nodes.length; i++) {\n            defs.appendChild(nodes[i]);\n        }\n        clone.appendChild(svg);\n    }\n    return clone;\n}\nexport async function cloneNode(node, options, isRoot) {\n    if (!isRoot && options.filter && !options.filter(node)) {\n        return null;\n    }\n    return Promise.resolve(node)\n        .then((clonedNode) => cloneSingleNode(clonedNode, options))\n        .then((clonedNode) => cloneChildren(node, clonedNode, options))\n        .then((clonedNode) => decorate(node, clonedNode))\n        .then((clonedNode) => ensureSVGSymbols(clonedNode, options));\n}\n//# sourceMappingURL=clone-node.js.map","import { resolveUrl } from './util';\nimport { getMimeType } from './mimes';\nimport { isDataUrl, makeDataUrl, resourceToDataURL } from './dataurl';\nconst URL_REGEX = /url\\((['\"]?)([^'\"]+?)\\1\\)/g;\nconst URL_WITH_FORMAT_REGEX = /url\\([^)]+\\)\\s*format\\(([\"']?)([^\"']+)\\1\\)/g;\nconst FONT_SRC_REGEX = /src:\\s*(?:url\\([^)]+\\)\\s*format\\([^)]+\\)[,;]\\s*)+/g;\nfunction toRegex(url) {\n    // eslint-disable-next-line no-useless-escape\n    const escaped = url.replace(/([.*+?^${}()|\\[\\]\\/\\\\])/g, '\\\\$1');\n    return new RegExp(`(url\\\\(['\"]?)(${escaped})(['\"]?\\\\))`, 'g');\n}\nexport function parseURLs(cssText) {\n    const urls = [];\n    cssText.replace(URL_REGEX, (raw, quotation, url) => {\n        urls.push(url);\n        return raw;\n    });\n    return urls.filter((url) => !isDataUrl(url));\n}\nexport async function embed(cssText, resourceURL, baseURL, options, getContentFromUrl) {\n    try {\n        const resolvedURL = baseURL ? resolveUrl(resourceURL, baseURL) : resourceURL;\n        const contentType = getMimeType(resourceURL);\n        let dataURL;\n        if (getContentFromUrl) {\n            const content = await getContentFromUrl(resolvedURL);\n            dataURL = makeDataUrl(content, contentType);\n        }\n        else {\n            dataURL = await resourceToDataURL(resolvedURL, contentType, options);\n        }\n        return cssText.replace(toRegex(resourceURL), `$1${dataURL}$3`);\n    }\n    catch (error) {\n        // pass\n    }\n    return cssText;\n}\nfunction filterPreferredFontFormat(str, { preferredFontFormat }) {\n    return !preferredFontFormat\n        ? str\n        : str.replace(FONT_SRC_REGEX, (match) => {\n            // eslint-disable-next-line no-constant-condition\n            while (true) {\n                const [src, , format] = URL_WITH_FORMAT_REGEX.exec(match) || [];\n                if (!format) {\n                    return '';\n                }\n                if (format === preferredFontFormat) {\n                    return `src: ${src};`;\n                }\n            }\n        });\n}\nexport function shouldEmbed(url) {\n    return url.search(URL_REGEX) !== -1;\n}\nexport async function embedResources(cssText, baseUrl, options) {\n    if (!shouldEmbed(cssText)) {\n        return cssText;\n    }\n    const filteredCSSText = filterPreferredFontFormat(cssText, options);\n    const urls = parseURLs(filteredCSSText);\n    return urls.reduce((deferred, url) => deferred.then((css) => embed(css, url, baseUrl, options)), Promise.resolve(filteredCSSText));\n}\n//# sourceMappingURL=embed-resources.js.map","import { embedResources } from './embed-resources';\nimport { toArray, isInstanceOfElement } from './util';\nimport { isDataUrl, resourceToDataURL } from './dataurl';\nimport { getMimeType } from './mimes';\nasync function embedProp(propName, node, options) {\n    var _a;\n    const propValue = (_a = node.style) === null || _a === void 0 ? void 0 : _a.getPropertyValue(propName);\n    if (propValue) {\n        const cssString = await embedResources(propValue, null, options);\n        node.style.setProperty(propName, cssString, node.style.getPropertyPriority(propName));\n        return true;\n    }\n    return false;\n}\nasync function embedBackground(clonedNode, options) {\n    if (!(await embedProp('background', clonedNode, options))) {\n        await embedProp('background-image', clonedNode, options);\n    }\n    if (!(await embedProp('mask', clonedNode, options))) {\n        await embedProp('mask-image', clonedNode, options);\n    }\n}\nasync function embedImageNode(clonedNode, options) {\n    const isImageElement = isInstanceOfElement(clonedNode, HTMLImageElement);\n    if (!(isImageElement && !isDataUrl(clonedNode.src)) &&\n        !(isInstanceOfElement(clonedNode, SVGImageElement) &&\n            !isDataUrl(clonedNode.href.baseVal))) {\n        return;\n    }\n    const url = isImageElement ? clonedNode.src : clonedNode.href.baseVal;\n    const dataURL = await resourceToDataURL(url, getMimeType(url), options);\n    await new Promise((resolve, reject) => {\n        clonedNode.onload = resolve;\n        clonedNode.onerror = reject;\n        const image = clonedNode;\n        if (image.decode) {\n            image.decode = resolve;\n        }\n        if (image.loading === 'lazy') {\n            image.loading = 'eager';\n        }\n        if (isImageElement) {\n            clonedNode.srcset = '';\n            clonedNode.src = dataURL;\n        }\n        else {\n            clonedNode.href.baseVal = dataURL;\n        }\n    });\n}\nasync function embedChildren(clonedNode, options) {\n    const children = toArray(clonedNode.childNodes);\n    const deferreds = children.map((child) => embedImages(child, options));\n    await Promise.all(deferreds).then(() => clonedNode);\n}\nexport async function embedImages(clonedNode, options) {\n    if (isInstanceOfElement(clonedNode, Element)) {\n        await embedBackground(clonedNode, options);\n        await embedImageNode(clonedNode, options);\n        await embedChildren(clonedNode, options);\n    }\n}\n//# sourceMappingURL=embed-images.js.map","export function applyStyle(node, options) {\n    const { style } = node;\n    if (options.backgroundColor) {\n        style.backgroundColor = options.backgroundColor;\n    }\n    if (options.width) {\n        style.width = `${options.width}px`;\n    }\n    if (options.height) {\n        style.height = `${options.height}px`;\n    }\n    const manual = options.style;\n    if (manual != null) {\n        Object.keys(manual).forEach((key) => {\n            style[key] = manual[key];\n        });\n    }\n    return node;\n}\n//# sourceMappingURL=apply-style.js.map","import { toArray } from './util';\nimport { fetchAsDataURL } from './dataurl';\nimport { shouldEmbed, embedResources } from './embed-resources';\nconst cssFetchCache = {};\nasync function fetchCSS(url) {\n    let cache = cssFetchCache[url];\n    if (cache != null) {\n        return cache;\n    }\n    const res = await fetch(url);\n    const cssText = await res.text();\n    cache = { url, cssText };\n    cssFetchCache[url] = cache;\n    return cache;\n}\nasync function embedFonts(data, options) {\n    let cssText = data.cssText;\n    const regexUrl = /url\\([\"']?([^\"')]+)[\"']?\\)/g;\n    const fontLocs = cssText.match(/url\\([^)]+\\)/g) || [];\n    const loadFonts = fontLocs.map(async (loc) => {\n        let url = loc.replace(regexUrl, '$1');\n        if (!url.startsWith('https://')) {\n            url = new URL(url, data.url).href;\n        }\n        return fetchAsDataURL(url, options.fetchRequestInit, ({ result }) => {\n            cssText = cssText.replace(loc, `url(${result})`);\n            return [loc, result];\n        });\n    });\n    return Promise.all(loadFonts).then(() => cssText);\n}\nfunction parseCSS(source) {\n    if (source == null) {\n        return [];\n    }\n    const result = [];\n    const commentsRegex = /(\\/\\*[\\s\\S]*?\\*\\/)/gi;\n    // strip out comments\n    let cssText = source.replace(commentsRegex, '');\n    // eslint-disable-next-line prefer-regex-literals\n    const keyframesRegex = new RegExp('((@.*?keyframes [\\\\s\\\\S]*?){([\\\\s\\\\S]*?}\\\\s*?)})', 'gi');\n    // eslint-disable-next-line no-constant-condition\n    while (true) {\n        const matches = keyframesRegex.exec(cssText);\n        if (matches === null) {\n            break;\n        }\n        result.push(matches[0]);\n    }\n    cssText = cssText.replace(keyframesRegex, '');\n    const importRegex = /@import[\\s\\S]*?url\\([^)]*\\)[\\s\\S]*?;/gi;\n    // to match css & media queries together\n    const combinedCSSRegex = '((\\\\s*?(?:\\\\/\\\\*[\\\\s\\\\S]*?\\\\*\\\\/)?\\\\s*?@media[\\\\s\\\\S]' +\n        '*?){([\\\\s\\\\S]*?)}\\\\s*?})|(([\\\\s\\\\S]*?){([\\\\s\\\\S]*?)})';\n    // unified regex\n    const unifiedRegex = new RegExp(combinedCSSRegex, 'gi');\n    // eslint-disable-next-line no-constant-condition\n    while (true) {\n        let matches = importRegex.exec(cssText);\n        if (matches === null) {\n            matches = unifiedRegex.exec(cssText);\n            if (matches === null) {\n                break;\n            }\n            else {\n                importRegex.lastIndex = unifiedRegex.lastIndex;\n            }\n        }\n        else {\n            unifiedRegex.lastIndex = importRegex.lastIndex;\n        }\n        result.push(matches[0]);\n    }\n    return result;\n}\nasync function getCSSRules(styleSheets, options) {\n    const ret = [];\n    const deferreds = [];\n    // First loop inlines imports\n    styleSheets.forEach((sheet) => {\n        if ('cssRules' in sheet) {\n            try {\n                toArray(sheet.cssRules || []).forEach((item, index) => {\n                    if (item.type === CSSRule.IMPORT_RULE) {\n                        let importIndex = index + 1;\n                        const url = item.href;\n                        const deferred = fetchCSS(url)\n                            .then((metadata) => embedFonts(metadata, options))\n                            .then((cssText) => parseCSS(cssText).forEach((rule) => {\n                            try {\n                                sheet.insertRule(rule, rule.startsWith('@import')\n                                    ? (importIndex += 1)\n                                    : sheet.cssRules.length);\n                            }\n                            catch (error) {\n                                console.error('Error inserting rule from remote css', {\n                                    rule,\n                                    error,\n                                });\n                            }\n                        }))\n                            .catch((e) => {\n                            console.error('Error loading remote css', e.toString());\n                        });\n                        deferreds.push(deferred);\n                    }\n                });\n            }\n            catch (e) {\n                const inline = styleSheets.find((a) => a.href == null) || document.styleSheets[0];\n                if (sheet.href != null) {\n                    deferreds.push(fetchCSS(sheet.href)\n                        .then((metadata) => embedFonts(metadata, options))\n                        .then((cssText) => parseCSS(cssText).forEach((rule) => {\n                        inline.insertRule(rule, sheet.cssRules.length);\n                    }))\n                        .catch((err) => {\n                        console.error('Error loading remote stylesheet', err);\n                    }));\n                }\n                console.error('Error inlining remote css file', e);\n            }\n        }\n    });\n    return Promise.all(deferreds).then(() => {\n        // Second loop parses rules\n        styleSheets.forEach((sheet) => {\n            if ('cssRules' in sheet) {\n                try {\n                    toArray(sheet.cssRules || []).forEach((item) => {\n                        ret.push(item);\n                    });\n                }\n                catch (e) {\n                    console.error(`Error while reading CSS rules from ${sheet.href}`, e);\n                }\n            }\n        });\n        return ret;\n    });\n}\nfunction getWebFontRules(cssRules) {\n    return cssRules\n        .filter((rule) => rule.type === CSSRule.FONT_FACE_RULE)\n        .filter((rule) => shouldEmbed(rule.style.getPropertyValue('src')));\n}\nasync function parseWebFontRules(node, options) {\n    if (node.ownerDocument == null) {\n        throw new Error('Provided element is not within a Document');\n    }\n    const styleSheets = toArray(node.ownerDocument.styleSheets);\n    const cssRules = await getCSSRules(styleSheets, options);\n    return getWebFontRules(cssRules);\n}\nexport async function getWebFontCSS(node, options) {\n    const rules = await parseWebFontRules(node, options);\n    const cssTexts = await Promise.all(rules.map((rule) => {\n        const baseUrl = rule.parentStyleSheet ? rule.parentStyleSheet.href : null;\n        return embedResources(rule.cssText, baseUrl, options);\n    }));\n    return cssTexts.join('\\n');\n}\nexport async function embedWebFonts(clonedNode, options) {\n    const cssText = options.fontEmbedCSS != null\n        ? options.fontEmbedCSS\n        : options.skipFonts\n            ? null\n            : await getWebFontCSS(clonedNode, options);\n    if (cssText) {\n        const styleNode = document.createElement('style');\n        const sytleContent = document.createTextNode(cssText);\n        styleNode.appendChild(sytleContent);\n        if (clonedNode.firstChild) {\n            clonedNode.insertBefore(styleNode, clonedNode.firstChild);\n        }\n        else {\n            clonedNode.appendChild(styleNode);\n        }\n    }\n}\n//# sourceMappingURL=embed-webfonts.js.map","import { cloneNode } from './clone-node';\nimport { embedImages } from './embed-images';\nimport { applyStyle } from './apply-style';\nimport { embedWebFonts, getWebFontCSS } from './embed-webfonts';\nimport { getImageSize, getPixelRatio, createImage, canvasToBlob, nodeToDataURL, checkCanvasDimensions, } from './util';\nexport async function toSvg(node, options = {}) {\n    const { width, height } = getImageSize(node, options);\n    const clonedNode = (await cloneNode(node, options, true));\n    await embedWebFonts(clonedNode, options);\n    await embedImages(clonedNode, options);\n    applyStyle(clonedNode, options);\n    const datauri = await nodeToDataURL(clonedNode, width, height);\n    return datauri;\n}\nexport async function toCanvas(node, options = {}) {\n    const { width, height } = getImageSize(node, options);\n    const svg = await toSvg(node, options);\n    const img = await createImage(svg);\n    const canvas = document.createElement('canvas');\n    const context = canvas.getContext('2d');\n    const ratio = options.pixelRatio || getPixelRatio();\n    const canvasWidth = options.canvasWidth || width;\n    const canvasHeight = options.canvasHeight || height;\n    canvas.width = canvasWidth * ratio;\n    canvas.height = canvasHeight * ratio;\n    if (!options.skipAutoScale) {\n        checkCanvasDimensions(canvas);\n    }\n    canvas.style.width = `${canvasWidth}`;\n    canvas.style.height = `${canvasHeight}`;\n    if (options.backgroundColor) {\n        context.fillStyle = options.backgroundColor;\n        context.fillRect(0, 0, canvas.width, canvas.height);\n    }\n    context.drawImage(img, 0, 0, canvas.width, canvas.height);\n    return canvas;\n}\nexport async function toPixelData(node, options = {}) {\n    const { width, height } = getImageSize(node, options);\n    const canvas = await toCanvas(node, options);\n    const ctx = canvas.getContext('2d');\n    return ctx.getImageData(0, 0, width, height).data;\n}\nexport async function toPng(node, options = {}) {\n    const canvas = await toCanvas(node, options);\n    return canvas.toDataURL();\n}\nexport async function toJpeg(node, options = {}) {\n    const canvas = await toCanvas(node, options);\n    return canvas.toDataURL('image/jpeg', options.quality || 1);\n}\nexport async function toBlob(node, options = {}) {\n    const canvas = await toCanvas(node, options);\n    const blob = await canvasToBlob(canvas);\n    return blob;\n}\nexport async function getFontEmbedCSS(node, options = {}) {\n    return getWebFontCSS(node, options);\n}\n//# sourceMappingURL=index.js.map","import type { ChartModel } from '@/model/model'\nimport type { Services } from '@/interfaces/services'\n\nexport class Service {\n\tprotected model: ChartModel\n\tprotected services: Services\n\n\tconstructor(model: ChartModel, services: Services) {\n\t\tthis.model = model\n\t\tthis.services = services\n\n\t\tthis.init()\n\t}\n\n\tinit() {\n\t\t// do nothing.\n\t}\n\n\tupdate() {\n\t\t// do nothing.\n\t}\n\n\t// Used to pass down information to the components\n\tsetModel(newObj: ChartModel) {\n\t\tthis.model = newObj\n\t}\n\n\t// Used to pass down services to the components\n\tsetServices(newObj: Services) {\n\t\tthis.services = newObj\n\t}\n}\n","import { select, type Selection } from 'd3'\nimport { toPng, toJpeg } from 'html-to-image'\nimport { debounce } from 'lodash-es'\nimport { getProperty } from '@/tools'\nimport { carbonPrefix } from '@/configuration-non-customizable' // CSS prefix\nimport type { ChartModel } from '@/model/model'\nimport { Service } from '@/services/service'\nimport { Events } from '@/interfaces/enums'\n\nconst CSS_VERIFIER_ELEMENT_CLASSNAME = 'DONT_STYLE_ME_css_styles_verifier'\n\n// Functions like validateAndSetDimensions() may return strings or numbers\nexport interface Dimensions {\n  height: number\n  width: number\n}\n\nexport interface getSVGElementSizeOptions {\n\tuseAttrs?: boolean\n\tuseClientDimensions?: boolean\n\tuseBBox?: boolean\n\tuseBoundingRect?: boolean\n}\n\nexport class DOMUtils extends Service {\n\tprivate chartID = '' // initialized in initializeID() called by init()\n\n\tconstructor(model: ChartModel, services: any) {\n\t\tsuper(model, services)\n\t}\n\n\tstatic getHTMLElementSize(element: HTMLElement) {\n\t\treturn {\n\t\t\twidth: element.clientWidth,\n\t\t\theight: element.clientHeight\n\t\t}\n\t}\n\n\tstatic getSVGElementSize(\n\t\tsvgSelector: Selection<SVGGraphicsElement, any, Element, any>,\n\t\toptions: getSVGElementSizeOptions = {\n\t\t\tuseAttrs: false,\n\t\t\tuseClientDimensions: false,\n\t\t\tuseBBox: false,\n\t\t\tuseBoundingRect: false\n\t\t}\n\t) {\n\t\tif (!svgSelector.attr) {\n\t\t\tsvgSelector = select<SVGGraphicsElement, any>(svgSelector as any) // issue with @types/d3 - select can handle Selection parameters just fine\n\t\t}\n\n\t\tconst finalDimensions = {\n\t\t\twidth: 0,\n\t\t\theight: 0\n\t\t}\n\n\t\t// Dimensions can be width and height as numbers or strings\n\t\tconst validateAndSetDimensions = (dimensions: any) => {\n\t\t\tif (dimensions) {\n\t\t\t\tObject.keys(finalDimensions).forEach((dimensionKey: 'width' | 'height') => {\n\t\t\t\t\tif (dimensions[dimensionKey]) {\n\t\t\t\t\t\tconst dimension = dimensions[dimensionKey]\n\t\t\t\t\t\tconst dimensionNumber = parseFloat(dimension)\n\t\t\t\t\t\tif (\n\t\t\t\t\t\t\tdimension &&\n\t\t\t\t\t\t\tdimensionNumber > finalDimensions[dimensionKey] &&\n\t\t\t\t\t\t\t('' + dimension).indexOf('%') === -1\n\t\t\t\t\t\t) {\n\t\t\t\t\t\t\tfinalDimensions[dimensionKey] = dimensionNumber\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t}\n\t\t}\n\n\t\tconst attrDimensions = {\n\t\t\twidth: svgSelector.attr('width'),\n\t\t\theight: svgSelector.attr('height')\n\t\t}\n\n\t\tconst svgElement = svgSelector.node()\n\n\t\tlet bbox: DOMRect,\n\t\t\tbboxDimensions: Dimensions,\n\t\t\tboundingRect: DOMRect,\n\t\t\tboundingRectDimensions: Dimensions\n\n\t\ttry {\n\t\t\t// Not all SVG graphics elements have bounding boxes (eg <defs>, <title>, <styles>)\n\t\t\tif (typeof svgElement.getBBox === 'function') {\n\t\t\t\tbbox = svgElement.getBBox()\n\t\t\t\tbboxDimensions = {\n\t\t\t\t\twidth: bbox.width,\n\t\t\t\t\theight: bbox.height\n\t\t\t\t}\n\t\t\t}\n\t\t} catch (e) {\n\t\t\tconsole.error(e)\n\t\t}\n\n\t\ttry {\n\t\t\t// Not all SVG graphics elements have...\n\t\t\tif (typeof svgElement?.getBoundingClientRect === 'function') {\n\t\t\t\tboundingRect = svgElement.getBoundingClientRect()\n\t\t\t\tboundingRectDimensions = {\n\t\t\t\t\twidth: boundingRect.width,\n\t\t\t\t\theight: boundingRect.height\n\t\t\t\t}\n\t\t\t}\n\t\t} catch (e) {\n\t\t\tconsole.error(e)\n\t\t}\n\n\t\t// Not all SVG graphics elements have...\n\t\tlet clientDimensions: Dimensions\n\t\tif (svgElement instanceof SVGSVGElement) {\n\t\t\tclientDimensions = {\n\t\t\t\twidth: svgElement.clientWidth,\n\t\t\t\theight: svgElement.clientHeight\n\t\t\t}\n\t\t}\n\n\t\t// If both attribute values are numbers\n\t\t// And not percentages or NaN\n\t\tif (options) {\n\t\t\tif (options.useAttrs) {\n\t\t\t\tvalidateAndSetDimensions(attrDimensions)\n\n\t\t\t\tif (finalDimensions.width > 0 && finalDimensions.height > 0) {\n\t\t\t\t\treturn finalDimensions\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (options.useClientDimensions) {\n\t\t\t\tvalidateAndSetDimensions(clientDimensions)\n\n\t\t\t\tif (finalDimensions.width > 0 && finalDimensions.height > 0) {\n\t\t\t\t\treturn clientDimensions\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (options.useBBox) {\n\t\t\t\tvalidateAndSetDimensions(bboxDimensions)\n\n\t\t\t\tif (finalDimensions.width > 0 && finalDimensions.height > 0) {\n\t\t\t\t\treturn bboxDimensions\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (options.useBoundingRect) {\n\t\t\t\tvalidateAndSetDimensions(boundingRectDimensions)\n\n\t\t\t\tif (finalDimensions.width > 0 && finalDimensions.height > 0) {\n\t\t\t\t\treturn boundingRectDimensions\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\ttry {\n\t\t\tconst nativeDimensions = {\n\t\t\t\twidth: getProperty(svgSelector.node(), 'width', 'baseVal', 'value'),\n\t\t\t\theight: getProperty(svgSelector.node(), 'height', 'baseVal', 'value')\n\t\t\t}\n\n\t\t\tvalidateAndSetDimensions(nativeDimensions)\n\t\t} catch (e) {\n\t\t\tvalidateAndSetDimensions(clientDimensions)\n\t\t\tvalidateAndSetDimensions(bboxDimensions)\n\t\t\tvalidateAndSetDimensions(attrDimensions)\n\t\t}\n\t\treturn finalDimensions\n\t}\n\n\tstatic appendOrSelect(parent: Selection<SVGElement | HTMLDivElement, any, Element, any>, query: string) {\n\t\tconst selection = parent.select(`${query}`)\n\n\t\tif (selection.empty()) {\n\t\t\t// see if there is an id\n\t\t\tlet querySections = query.split('#')\n\t\t\tlet elementToAppend: any\n\t\t\tlet id: string\n\t\t\t// if there is an id\n\t\t\tif (querySections.length === 2) {\n\t\t\t\t// take out the element to append\n\t\t\t\telementToAppend = querySections[0]\n\t\t\t\t// split it by classes\n\t\t\t\tquerySections = querySections[1].split('.')\n\t\t\t\t// the first string is the id\n\t\t\t\tid = querySections[0]\n\t\t\t} else {\n\t\t\t\tquerySections = query.split('.')\n\t\t\t\telementToAppend = querySections[0]\n\t\t\t}\n\n\t\t\treturn parent\n\t\t\t\t.append(elementToAppend)\n\t\t\t\t.attr('id', id)\n\t\t\t\t.attr('class', querySections.slice(1).join(' '))\n\t\t}\n\n\t\treturn selection\n\t}\n\n\tprotected mainContainer: HTMLDivElement\n\tprotected width: string\n\tprotected height: string\n\n\tinit() {\n\t\t// Add width & height to the chart holder if necessary, and add a classname\n\t\tthis.styleHolderElement()\n\n\t\t// Initialize chart ID\n\t\tthis.initializeID()\n\n\t\tthis.addMainContainer()\n\n\t\tif (this.model.getOptions().resizable) {\n\t\t\tthis.addResizeListener()\n\t\t}\n\n\t\tthis.addHolderListeners()\n\n\t\tthis.handleFullscreenChange()\n\t}\n\n\tgetChartID() {\n\t\treturn this.chartID\n\t}\n\n\tgenerateElementIDString(originalID: string | number) {\n\t\treturn `chart-${this.chartID}-${originalID}`\n\t}\n\n\tprivate initializeID() {\n\t\tthis.chartID = Math.floor((1 + Math.random()) * 0x1000000000000).toString(16)\n\t}\n\n\taddMainContainer() {\n\t\tconst options = this.model.getOptions()\n\t\tconst chartsprefix = getProperty(options, 'style', 'prefix')\n\n\t\tconst mainContainer = select(this.getHolder())\n\t\t\t.append('div')\n\t\t\t.classed(`${carbonPrefix}--${chartsprefix}--chart-wrapper`, true)\n\t\t\t.attr('id', `chart-${this.getChartID()}`)\n\t\t\t.style('height', '100%')\n\t\t\t.style('width', '100%')\n\n\t\tmainContainer.append('g').attr('class', CSS_VERIFIER_ELEMENT_CLASSNAME)\n\n\t\tthis.mainContainer = mainContainer.node()\n\t}\n\n\tupdate() {\n\t\tthis.styleHolderElement()\n\t}\n\n\tstyleHolderElement() {\n\t\tconst holderElement = this.getHolder() as HTMLElement\n\n\t\t// In order for resize events to not clash with these updates\n\t\t// We'll check if the width & height values passed in options\n\t\t// Have changed, before setting them to the holder\n\t\tconst { width, height, theme } = this.model.getOptions()\n\t\tif (width !== this.width) {\n\t\t\t// Apply formatted width attribute to chart\n\t\t\tholderElement.style.width = width\n\n\t\t\tthis.width = width\n\t\t}\n\n\t\tif (height !== this.height) {\n\t\t\t// Apply formatted width attribute to chart\n\t\t\tholderElement.style.height = height\n\n\t\t\tthis.height = height\n\t\t}\n\n\t\t// Add class to chart holder\n\t\tselect(this.getHolder())\n\t\t\t.classed(`${carbonPrefix}--chart-holder`, true)\n\t\t\t.attr('data-carbon-theme', theme)\n\t}\n\n\tgetHolder() {\n\t\treturn this.model.get('holder')\n\t}\n\n\texportToJPG() {\n\t\tconst self = this\n\n\t\tconst holder = this.getHolder()\n\t\tconst holderSelection = select(holder)\n\t\tholderSelection.classed('filled', true)\n\n\t\ttoJpeg(this.getMainContainer(), {\n\t\t\t\tquality: 1,\n\t\t\t\t// Remove toolbar\n\t\t\t\tfilter: (node: any) => {\n\t\t\t\t\tif (node.classList && node.classList.contains('cds--cc--toolbar')) {\n\t\t\t\t\t\treturn false\n\t\t\t\t\t}\n\n\t\t\t\t\treturn true\n\t\t\t\t}\n\t\t\t})\n\t\t\t.then(function (dataUrl: string) {\n\t\t\t\tself.services.files?.downloadImage(dataUrl, 'myChart.jpg')\n\t\t\t\tholderSelection.classed('filled', false)\n\t\t\t})\n\t}\n\n\texportToPNG() {\n\t\tconst self = this\n\n\t\tconst holder = this.getHolder()\n\t\tconst holderSelection = select(holder)\n\t\tholderSelection.classed('filled', true)\n\n\t\t\ttoPng(this.getMainContainer(), {\n\t\t\t\tquality: 1,\n\t\t\t\t// Remove toolbar\n\t\t\t\tfilter: (node: HTMLElement) => {\n\t\t\t\t\tif (node.classList && node.classList.contains('cds--cc--toolbar')) {\n\t\t\t\t\t\treturn false\n\t\t\t\t\t}\n\n\t\t\t\t\treturn true\n\t\t\t\t}\n\t\t\t})\n\t\t\t.then(function (dataUrl: string) {\n\t\t\t\tself.services.files?.downloadImage(dataUrl, 'myChart.png')\n\t\t\t\tholderSelection.classed('filled', false)\n\t\t\t})\n\t\t\t.catch(function (error: Error) {\n\t\t\t\tconsole.error('oops, something went wrong!', error)\n\t\t\t})\n\t}\n\n\ttoggleFullscreen() {\n\t\tconst holder = this.getHolder()\n\t\tconst holderSelection = select(holder)\n\n\t\tconst isFullScreen = holderSelection.classed('fullscreen')\n\n\t\tif (\n\t\t\tisFullScreen &&\n\t\t\t(document.fullscreenElement ||\n\t\t\t\tdocument['webkitFullscreenElement'] ||\n\t\t\t\tdocument['mozFullScreenElement'] ||\n\t\t\t\tdocument['msFullscreenElement'])\n\t\t) {\n\t\t\t// Call the correct function depending on the browser\n\t\t\tif (document.exitFullscreen) {\n\t\t\t\tdocument.exitFullscreen()\n\t\t\t} else if (document['webkitExitFullscreen']) {\n\t\t\t\tdocument['webkitExitFullscreen']()\n\t\t\t} else if (document['mozCancelFullScreen']) {\n\t\t\t\tdocument['mozCancelFullScreen']()\n\t\t\t} else if (document['msExitFullscreen']) {\n\t\t\t\tdocument['msExitFullscreen']()\n\t\t\t}\n\t\t} else {\n\t\t\t// Call the correct function depending on the browser\n\t\t\tif (holder.requestFullscreen) {\n\t\t\t\tholder.requestFullscreen()\n\t\t\t} else if (holder.webkitRequestFullscreen) {\n\t\t\t\tholder.webkitRequestFullscreen()\n\t\t\t} else if (holder.mozRequestFullScreen) {\n\t\t\t\tholder.mozRequestFullScreen()\n\t\t\t} else if (holder.msRequestFullscreen) {\n\t\t\t\tholder.msRequestFullscreen()\n\t\t\t}\n\t\t}\n\t}\n\n\thandleFullscreenChange() {\n\t\tdocument.addEventListener('fullscreenchange', () => {\n\t\t\tconst holderSelection = select(this.getHolder())\n\t\t\tconst isFullScreen = holderSelection.classed('fullscreen')\n\n\t\t\t// Toggle the `fullscreen` classname\n\t\t\tholderSelection.classed('fullscreen', !isFullScreen)\n\t\t})\n\t}\n\n\tsetSVGMaxHeight() {\n\t\t// if there is a set height on the holder, leave the chart svg height at 100%\n\t\tif (!this.model.getOptions().height) {\n\t\t\tconst { height: chartHeight } = DOMUtils.getSVGElementSize(\n\t\t\t\tselect(this.mainContainer) as any,\n\t\t\t\t{\n\t\t\t\t\tuseBBox: true\n\t\t\t\t}\n\t\t\t)\n\t\t\tconst chartSVGSelector = select(this.mainContainer).attr('class')\n\t\t\tconst children = select(this.mainContainer).selectAll(`.${chartSVGSelector} > svg`)\n\n\t\t\t// get the height of the children SVGs (spacers, titles, etc)\n\t\t\tlet childrenHeight = 0\n\t\t\tchildren.nodes().forEach(function (childSVG) {\n\t\t\t\tchildrenHeight += Number(\n\t\t\t\t\tDOMUtils.getSVGElementSize(select<SVGGraphicsElement, any>(childSVG as any), {\n\t\t\t\t\t\tuseBBox: true\n\t\t\t\t\t}).height\n\t\t\t\t)\n\t\t\t})\n\n\t\t\t// set the chart svg height to the children height\n\t\t\t// forcing the chart not to take up any more space than it requires\n\t\t\tchildrenHeight <= chartHeight\n\t\t\t\t? select(this.mainContainer).attr('height', childrenHeight)\n\t\t\t\t: select(this.mainContainer).attr('height', '100%')\n\t\t}\n\t}\n\n\tgetMainContainer() {\n\t\treturn this.mainContainer\n\t}\n\n\taddHolderListeners() {\n\t\tconst holder = this.getHolder()\n\n\t\tif (!holder) {\n\t\t\treturn\n\t\t}\n\n\t\tselect(holder)\n\t\t\t.on('mouseover', () => {\n\t\t\t\t// Dispatch event\n\t\t\t\tthis.services.events?.dispatchEvent(Events.Chart.MOUSEOVER)\n\t\t\t})\n\t\t\t.on('mouseout', () => {\n\t\t\t\t// Dispatch event\n\t\t\t\tthis.services.events?.dispatchEvent(Events.Chart.MOUSEOUT)\n\t\t\t})\n\t}\n\n\taddResizeListener() {\n\t\tconst holder = this.getHolder()\n\n\t\tif (!holder) {\n\t\t\treturn\n\t\t}\n\n\t\t// Grab current dimensions of the chart holder\n\t\tlet containerWidth = holder.clientWidth\n\t\tlet containerHeight = holder.clientHeight\n\n\t\t// The resize callback function\n\t\tconst resizeCallback = debounce(() => {\n\t\t\tif (!holder) {\n\t\t\t\treturn\n\t\t\t}\n\n\t\t\tif (\n\t\t\t\tMath.abs(containerWidth - holder.clientWidth) > 1 ||\n\t\t\t\tMath.abs(containerHeight - holder.clientHeight) > 1\n\t\t\t) {\n\t\t\t\tcontainerWidth = holder.clientWidth\n\t\t\t\tcontainerHeight = holder.clientHeight\n\n\t\t\t\tthis.services.events?.dispatchEvent(Events.Chart.RESIZE)\n\t\t\t}\n\t\t}, 12.5)\n\n\t\t// Observe the behaviour of resizing on the holder\n\t\tconst resizeObserver = new ResizeObserver(resizeCallback)\n\t\tresizeObserver.observe(holder)\n\t}\n}\n","import { Service } from '@/services/service'\n\nexport class GradientUtils extends Service {\n\tstatic appendOrUpdateLinearGradient(configs: any) {\n\t\tlet lg = configs.svg.select(`defs linearGradient#${configs.id}`)\n\t\tif (lg.empty()) {\n\t\t\tlg = configs.svg\n\t\t\t\t.append('defs')\n\t\t\t\t.append('linearGradient')\n\t\t\t\t.attr('id', configs.id)\n\t\t\t\t.attr('x1', configs.x1)\n\t\t\t\t.attr('x2', configs.x2)\n\t\t\t\t.attr('y1', configs.y1)\n\t\t\t\t.attr('y2', configs.y2)\n\t\t}\n\n\t\tlg.selectAll('stop').remove()\n\t\tlg.selectAll('stop')\n\t\t\t.data(configs.stops)\n\t\t\t.enter()\n\t\t\t.append('stop')\n\t\t\t.attr('offset', (d: any) => d.offset)\n\t\t\t.style('stop-color', (d: any) => d.color)\n\t\t\t.style('stop-opacity', (d: any) => d.opacity)\n\t}\n\n\tstatic getOffsetRatio(domain: any) {\n\t\tconst offsetRatio =\n\t\t\t((Math.abs(domain[1]) * 100) / Math.abs(domain[0] - domain[1])).toFixed(2) + '%'\n\t\treturn offsetRatio\n\t}\n\n\tstatic getStops(domain: any, color: string) {\n\t\tconst need3Stops = domain[0] < 0 && domain[1] > 0\n\t\tlet stops: object[] = [\n\t\t\t{\n\t\t\t\toffset: '0%',\n\t\t\t\tcolor: color,\n\t\t\t\topacity: '0.6'\n\t\t\t},\n\t\t\t{\n\t\t\t\toffset: '80%',\n\t\t\t\tcolor: color,\n\t\t\t\topacity: '0'\n\t\t\t}\n\t\t]\n\n\t\tif (need3Stops) {\n\t\t\tstops = [\n\t\t\t\t{\n\t\t\t\t\toffset: '0%',\n\t\t\t\t\tcolor: color,\n\t\t\t\t\topacity: '0.6'\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\toffset: GradientUtils.getOffsetRatio(domain),\n\t\t\t\t\tcolor: color,\n\t\t\t\t\topacity: '0'\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\toffset: '100%',\n\t\t\t\t\tcolor: color,\n\t\t\t\t\topacity: '0.6'\n\t\t\t\t}\n\t\t\t]\n\t\t}\n\t\treturn stops\n\t}\n}\n","import { TextAnchor, DominantBaseline } from '@/interfaces/enums'\n\nexport interface Point {\n\tx: number\n\ty: number\n}\n\nexport type Angle = number\n\nexport interface LabelAlignment {\n\ttextAnchor: TextAnchor\n\tdominantBaseline: DominantBaseline\n}\n\nexport function radialLabelPlacement(angleRadians: Angle): LabelAlignment {\n\tconst angle = mod(radToDeg(angleRadians), 360)\n\n\tif (isInRange(angle, [0, 10]) || isInRange(angle, [350, 0])) {\n\t\treturn {\n\t\t\ttextAnchor: TextAnchor.START,\n\t\t\tdominantBaseline: DominantBaseline.MIDDLE\n\t\t}\n\t} else if (isInRange(angle, [10, 80])) {\n\t\treturn {\n\t\t\ttextAnchor: TextAnchor.START,\n\t\t\tdominantBaseline: DominantBaseline.HANGING\n\t\t}\n\t} else if (isInRange(angle, [80, 100])) {\n\t\treturn {\n\t\t\ttextAnchor: TextAnchor.MIDDLE,\n\t\t\tdominantBaseline: DominantBaseline.HANGING\n\t\t}\n\t} else if (isInRange(angle, [100, 170])) {\n\t\treturn {\n\t\t\ttextAnchor: TextAnchor.END,\n\t\t\tdominantBaseline: DominantBaseline.HANGING\n\t\t}\n\t} else if (isInRange(angle, [170, 190])) {\n\t\treturn {\n\t\t\ttextAnchor: TextAnchor.END,\n\t\t\tdominantBaseline: DominantBaseline.MIDDLE\n\t\t}\n\t} else if (isInRange(angle, [190, 260])) {\n\t\treturn {\n\t\t\ttextAnchor: TextAnchor.END,\n\t\t\tdominantBaseline: DominantBaseline.BASELINE\n\t\t}\n\t} else if (isInRange(angle, [260, 280])) {\n\t\treturn {\n\t\t\ttextAnchor: TextAnchor.MIDDLE,\n\t\t\tdominantBaseline: DominantBaseline.BASELINE\n\t\t}\n\t} else {\n\t\t// 280 - 350\n\t\treturn {\n\t\t\ttextAnchor: TextAnchor.START,\n\t\t\tdominantBaseline: DominantBaseline.BASELINE\n\t\t}\n\t}\n}\n\nfunction mod(n: number, m: number) {\n\treturn ((n % m) + m) % m\n}\n\nfunction isInRange(x: number, [min, max]: [number, number]) {\n\treturn x >= min && x <= max\n}\n\nexport function radToDeg(rad: Angle): Angle {\n\treturn rad * (180 / Math.PI)\n}\n\nexport function degToRad(deg: Angle): Angle {\n\treturn deg * (Math.PI / 180)\n}\n\nexport function polarToCartesianCoords(a: Angle, r: number, t: Point = { x: 0, y: 0 }): Point {\n\tconst x = r * Math.cos(a) + t.x\n\tconst y = r * Math.sin(a) + t.y\n\n\t// NaN is rendered at coordinate 0 in browsers\n\t// By setting it to 0, further operations can be performed\n\treturn { x: isNaN(x) ? 0 : x, y: isNaN(y) ? 0 : y }\n}\n\n// Return the distance between a point (described with polar coordinates)\n// on a circumference and the vertical diameter.\n// If the point is on the left if the diameter, its distance is positive,\n// if it is on the right of the diameter, its distance is negative.\nexport function distanceBetweenPointOnCircAndVerticalDiameter(a: Angle, r: number) {\n\treturn r * Math.sin(a - Math.PI / 2)\n}\n"],"names":["reWhitespace","trimmedEndIndex","string","index","reTrimStart","baseTrim","NAN","reIsBadHex","reIsBinary","reIsOctal","freeParseInt","toNumber","value","isSymbol","isObject","other","isBinary","now","root","now$1","FUNC_ERROR_TEXT","nativeMax","nativeMin","debounce","func","wait","options","lastArgs","lastThis","maxWait","result","timerId","lastCallTime","lastInvokeTime","leading","maxing","trailing","invokeFunc","time","args","thisArg","leadingEdge","timerExpired","remainingWait","timeSinceLastCall","timeSinceLastInvoke","timeWaiting","shouldInvoke","trailingEdge","cancel","flush","debounced","isInvoking","resolveUrl","url","baseUrl","doc","base","a","uuid","counter","random","toArray","arrayLike","arr","i","l","px","node","styleProperty","val","getNodeWidth","leftBorder","rightBorder","getNodeHeight","topBorder","bottomBorder","getImageSize","targetNode","width","height","getPixelRatio","ratio","FINAL_PROCESS","canvasDimensionLimit","checkCanvasDimensions","canvas","createImage","resolve","reject","img","svgToDataURL","svg","html","nodeToDataURL","xmlns","foreignObject","isInstanceOfElement","instance","nodePrototype","formatCSSText","style","content","formatCSSProperties","name","priority","getPseudoElementStyle","className","pseudo","selector","cssText","clonePseudoElement","nativeNode","clonedNode","styleElement","clonePseudoElements","WOFF","JPEG","mimes","getExtension","match","getMimeType","extension","getContentFromDataUrl","dataURL","isDataUrl","makeDataUrl","mimeType","fetchAsDataURL","init","process","res","blob","reader","error","cache","getCacheKey","contentType","includeQueryParams","key","resourceToDataURL","resourceUrl","cacheKey","msg","cloneCanvasElement","cloneVideoElement","video","ctx","poster","cloneIFrameElement","iframe","_a","cloneNode","cloneSingleNode","isSlotElement","cloneChildren","_b","children","deferred","child","clonedChild","cloneCSSStyle","targetStyle","sourceStyle","cloneInputValue","cloneSelectValue","clonedSelect","selectedOption","decorate","ensureSVGSymbols","clone","uses","processedDefs","id","exist","definition","nodes","ns","defs","isRoot","URL_REGEX","URL_WITH_FORMAT_REGEX","FONT_SRC_REGEX","toRegex","escaped","parseURLs","urls","raw","quotation","embed","resourceURL","baseURL","getContentFromUrl","resolvedURL","filterPreferredFontFormat","str","preferredFontFormat","src","format","shouldEmbed","embedResources","filteredCSSText","css","embedProp","propName","propValue","cssString","embedBackground","embedImageNode","isImageElement","image","embedChildren","deferreds","embedImages","applyStyle","manual","cssFetchCache","fetchCSS","embedFonts","data","regexUrl","loadFonts","loc","parseCSS","source","commentsRegex","keyframesRegex","matches","importRegex","combinedCSSRegex","unifiedRegex","getCSSRules","styleSheets","ret","sheet","item","importIndex","metadata","rule","e","inline","err","getWebFontRules","cssRules","parseWebFontRules","getWebFontCSS","rules","embedWebFonts","styleNode","sytleContent","toSvg","toCanvas","context","canvasWidth","canvasHeight","toPng","toJpeg","Service","model","services","newObj","CSS_VERIFIER_ELEMENT_CLASSNAME","DOMUtils","element","svgSelector","select","finalDimensions","validateAndSetDimensions","dimensions","dimensionKey","dimension","dimensionNumber","attrDimensions","svgElement","bbox","bboxDimensions","boundingRect","boundingRectDimensions","clientDimensions","nativeDimensions","getProperty","parent","query","selection","querySections","elementToAppend","originalID","chartsprefix","mainContainer","carbonPrefix","holderElement","theme","self","holder","holderSelection","dataUrl","isFullScreen","chartHeight","chartSVGSelector","childrenHeight","childSVG","Events","containerWidth","containerHeight","resizeCallback","GradientUtils","configs","lg","d","domain","color","need3Stops","stops","radialLabelPlacement","angleRadians","angle","mod","radToDeg","isInRange","TextAnchor","DominantBaseline","n","m","x","min","max","rad","degToRad","deg","polarToCartesianCoords","r","t","y","distanceBetweenPointOnCircAndVerticalDiameter"],"mappings":"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","x_google_ignoreList":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14]}