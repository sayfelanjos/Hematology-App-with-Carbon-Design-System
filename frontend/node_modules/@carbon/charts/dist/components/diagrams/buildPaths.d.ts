import { Coordinates } from '../../interfaces/layout';
/**
 * Returns a path string for a straight path
 * @param source - The source coordinates
 * @param source.x - The source's x coordinate
 * @param source.y - The source's y coordinate
 * @param target - The target coordinates
 * @param target.x - The target's x coordinate
 * @param target.y - The target's y coordinate
 * @return The path string
 */
declare const buildStraightPathString: (source: Coordinates, target: Coordinates) => string;
/**
 * Returns a path string for an elbow path with a bend point
 * @param  source - The source coordinates
 * @param  source.x - The source's x coordinate
 * @param  source.y - The source's y coordinate
 * @param  target - The target coordinates
 * @param  target.x - The target's x coordinate
 * @param  target.y - The target's y coordinate
 * @param  percent - Where the bend point should appear between the source and target
 * @return The path string
 */
declare const buildElbowPathString: (source: Coordinates, target: Coordinates, percent?: number) => string;
/**
 * Returns a path string for an path with a custom bezier curve
 * @param source - The source coordinates
 * @param source.x - The source's x coordinate
 * @param source.y - The source's y coordinate
 * @param target - The target coordinates
 * @param target.x - The target's x coordinate
 * @param target.y - The target's y coordinate
 * @param cpx1 - X coordinate for the first control point
 * @param cpy1 - Y coordinate for the first control point
 * @param cpx2 - X coordinate for the second control point
 * @param cpy2 - Y coordinate for the second control point
 * @return The path string
 */
declare const buildBezierPathString: (source: Coordinates, target: Coordinates, cpx1: number, cpy1: number, cpx2: number, cpy2: number) => string;
export { buildStraightPathString, buildElbowPathString, buildBezierPathString };
