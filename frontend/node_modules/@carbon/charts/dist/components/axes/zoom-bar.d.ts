import { Component } from '../../components/component';
import { ChartModelCartesian } from '../../model/cartesian-charts';
import { RenderTypes } from '../../interfaces/enums';
export declare class ZoomBar extends Component {
    type: string;
    renderType: RenderTypes;
    MIN_SELECTION_DIFF: number;
    brushSelector: string;
    maxSelectionRange: [
        0,
        0
    ];
    clipId: string;
    brush: import("d3-brush").BrushBehavior<unknown>;
    xScale: any;
    yScale: any;
    highlightStrokeWidth: number;
    protected model: ChartModelCartesian;
    init(): void;
    render(animate?: boolean): void;
    addBrushEventListener(zoomDomain: any, axesLeftMargin: any, width: any): void;
    handleBrushedEvent(event: any, zoomDomain: any, scale: any, selection: any): void;
    updateBrushHandle(svg: any, selection: any): void;
    updateSliderSelectedArea(selection: any): void;
    renderZoomBarArea(container: any, querySelector: any, data: any, clipId: any): void;
    updateClipPath(svg: any, clipId: string, x: number | string, y: number | string, width: number | string, height: number | string): void;
    compensateDataForDefaultDomain(data: any, defaultDomain: any): any;
    renderZoomBarBaseline(container: HTMLElement, startX: number, endX: number, skeletonClass?: boolean): void;
    renderSkeleton(container: any, startX: number, endX: number): void;
    destroy(): void;
}
