{"ast":null,"code":"import _defineProperty from \"/home/saymon/Backup/Portifolio/Hematology-App-with-Carbon-Design-System/frontend/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nimport _objectWithoutProperties from \"/home/saymon/Backup/Portifolio/Hematology-App-with-Carbon-Design-System/frontend/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js\";\nvar _defaultTranslations;\nvar _excluded = [\"clearSelection\", \"selectionCount\", \"translateWithId\", \"disabled\", \"onClearSelection\"];\n/**\n * Copyright IBM Corp. 2016, 2023\n *\n * This source code is licensed under the Apache-2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { extends as _extends } from '../../../_virtual/_rollupPluginBabelHelpers.js';\nimport cx from 'classnames';\nimport React__default from 'react';\nimport PropTypes from 'prop-types';\nimport { Close } from '@carbon/icons-react';\nimport { usePrefix } from '../../../internal/usePrefix.js';\nvar _Close, _Close2;\n\n/**\n * `ListBoxSelection` is used to provide controls for clearing a selection, in\n * addition to conditionally rendering a badge if the control has more than one\n * selection.\n */\nfunction ListBoxSelection(_ref) {\n  var _cx;\n  var clearSelection = _ref.clearSelection,\n    selectionCount = _ref.selectionCount,\n    t = _ref.translateWithId,\n    disabled = _ref.disabled,\n    onClearSelection = _ref.onClearSelection,\n    rest = _objectWithoutProperties(_ref, _excluded);\n  var prefix = usePrefix();\n  var className = cx(\"\".concat(prefix, \"--list-box__selection\"), (_cx = {}, _defineProperty(_cx, \"\".concat(prefix, \"--tag--filter\"), selectionCount), _defineProperty(_cx, \"\".concat(prefix, \"--list-box__selection--multi\"), selectionCount), _cx));\n  var description = selectionCount ? t('clear.all') : t('clear.selection');\n  var tagClasses = cx(\"\".concat(prefix, \"--tag\"), \"\".concat(prefix, \"--tag--filter\"), \"\".concat(prefix, \"--tag--high-contrast\"), _defineProperty({}, \"\".concat(prefix, \"--tag--disabled\"), disabled));\n  function onClick(event) {\n    event.stopPropagation();\n    if (disabled) {\n      return;\n    }\n    clearSelection(event);\n    if (onClearSelection) {\n      onClearSelection(event);\n    }\n  }\n  if (selectionCount) {\n    return /*#__PURE__*/React__default.createElement(\"div\", {\n      className: tagClasses\n    }, /*#__PURE__*/React__default.createElement(\"span\", {\n      className: \"\".concat(prefix, \"--tag__label\"),\n      title: selectionCount\n    }, selectionCount), /*#__PURE__*/React__default.createElement(\"button\", {\n      \"aria-label\": description,\n      className: \"\".concat(prefix, \"--tag__close-icon\"),\n      disabled: disabled,\n      onClick: onClick,\n      tabIndex: -1,\n      title: description,\n      type: \"button\"\n    }, _Close || (_Close = /*#__PURE__*/React__default.createElement(Close, null))));\n  }\n  return /*#__PURE__*/React__default.createElement(\"button\", _extends({}, rest, {\n    \"aria-label\": description,\n    className: className,\n    disabled: disabled,\n    onClick: onClick,\n    tabIndex: -1,\n    title: description,\n    type: \"button\"\n  }), _Close2 || (_Close2 = /*#__PURE__*/React__default.createElement(Close, null)));\n}\nvar translationIds = {\n  'clear.all': 'clear.all',\n  'clear.selection': 'clear.selection'\n};\nvar defaultTranslations = (_defaultTranslations = {}, _defineProperty(_defaultTranslations, translationIds['clear.all'], 'Clear all selected items'), _defineProperty(_defaultTranslations, translationIds['clear.selection'], 'Clear selected item'), _defaultTranslations);\nListBoxSelection.propTypes = {\n  /**\n   * Specify a function to be invoked when a user interacts with the clear\n   * selection element.\n   */\n  clearSelection: PropTypes.func.isRequired,\n  /**\n   * Specify whether or not the clear selection element should be disabled\n   */\n  disabled: PropTypes.bool,\n  /**\n   * Specify an optional `onClearSelection` handler that is called when the underlying\n   * element is cleared\n   */\n  onClearSelection: PropTypes.func,\n  /**\n   * Specify an optional `onClick` handler that is called when the underlying\n   * clear selection element is clicked\n   */\n  onClick: PropTypes.func,\n  /**\n   * Specify an optional `onKeyDown` handler that is called when the underlying\n   * clear selection element fires a keydown event\n   */\n  onKeyDown: PropTypes.func,\n  /**\n   * Specify an optional `selectionCount` value that will be used to determine\n   * whether the selection should display a badge or a single clear icon.\n   */\n  selectionCount: PropTypes.number,\n  /**\n   * i18n hook used to provide the appropriate description for the given menu\n   * icon. This function takes in an id defined in `translationIds` and should\n   * return a string message for that given message id.\n   */\n  translateWithId: PropTypes.func.isRequired\n};\nListBoxSelection.defaultProps = {\n  translateWithId: function translateWithId(id) {\n    return defaultTranslations[id];\n  }\n};\nexport { ListBoxSelection as default, translationIds };","map":{"version":3,"names":["extends","_extends","cx","React__default","PropTypes","Close","usePrefix","_Close","_Close2","ListBoxSelection","_ref","_cx","clearSelection","selectionCount","t","translateWithId","disabled","onClearSelection","rest","_objectWithoutProperties","_excluded","prefix","className","concat","_defineProperty","description","tagClasses","onClick","event","stopPropagation","createElement","title","tabIndex","type","translationIds","defaultTranslations","_defaultTranslations","propTypes","func","isRequired","bool","onKeyDown","number","defaultProps","id","default"],"sources":["/home/saymon/Backup/Portifolio/Hematology-App-with-Carbon-Design-System/frontend/node_modules/@carbon/react/es/components/ListBox/next/ListBoxSelection.js"],"sourcesContent":["/**\n * Copyright IBM Corp. 2016, 2023\n *\n * This source code is licensed under the Apache-2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { extends as _extends } from '../../../_virtual/_rollupPluginBabelHelpers.js';\nimport cx from 'classnames';\nimport React__default from 'react';\nimport PropTypes from 'prop-types';\nimport { Close } from '@carbon/icons-react';\nimport { usePrefix } from '../../../internal/usePrefix.js';\n\nvar _Close, _Close2;\n\n/**\n * `ListBoxSelection` is used to provide controls for clearing a selection, in\n * addition to conditionally rendering a badge if the control has more than one\n * selection.\n */\nfunction ListBoxSelection(_ref) {\n  let {\n    clearSelection,\n    selectionCount,\n    translateWithId: t,\n    disabled,\n    onClearSelection,\n    ...rest\n  } = _ref;\n  const prefix = usePrefix();\n  const className = cx(`${prefix}--list-box__selection`, {\n    [`${prefix}--tag--filter`]: selectionCount,\n    [`${prefix}--list-box__selection--multi`]: selectionCount\n  });\n  const description = selectionCount ? t('clear.all') : t('clear.selection');\n  const tagClasses = cx(`${prefix}--tag`, `${prefix}--tag--filter`, `${prefix}--tag--high-contrast`, {\n    [`${prefix}--tag--disabled`]: disabled\n  });\n  function onClick(event) {\n    event.stopPropagation();\n    if (disabled) {\n      return;\n    }\n    clearSelection(event);\n    if (onClearSelection) {\n      onClearSelection(event);\n    }\n  }\n  if (selectionCount) {\n    return /*#__PURE__*/React__default.createElement(\"div\", {\n      className: tagClasses\n    }, /*#__PURE__*/React__default.createElement(\"span\", {\n      className: `${prefix}--tag__label`,\n      title: selectionCount\n    }, selectionCount), /*#__PURE__*/React__default.createElement(\"button\", {\n      \"aria-label\": description,\n      className: `${prefix}--tag__close-icon`,\n      disabled: disabled,\n      onClick: onClick,\n      tabIndex: -1,\n      title: description,\n      type: \"button\"\n    }, _Close || (_Close = /*#__PURE__*/React__default.createElement(Close, null))));\n  }\n  return /*#__PURE__*/React__default.createElement(\"button\", _extends({}, rest, {\n    \"aria-label\": description,\n    className: className,\n    disabled: disabled,\n    onClick: onClick,\n    tabIndex: -1,\n    title: description,\n    type: \"button\"\n  }), _Close2 || (_Close2 = /*#__PURE__*/React__default.createElement(Close, null)));\n}\nconst translationIds = {\n  'clear.all': 'clear.all',\n  'clear.selection': 'clear.selection'\n};\nconst defaultTranslations = {\n  [translationIds['clear.all']]: 'Clear all selected items',\n  [translationIds['clear.selection']]: 'Clear selected item'\n};\nListBoxSelection.propTypes = {\n  /**\n   * Specify a function to be invoked when a user interacts with the clear\n   * selection element.\n   */\n  clearSelection: PropTypes.func.isRequired,\n  /**\n   * Specify whether or not the clear selection element should be disabled\n   */\n  disabled: PropTypes.bool,\n  /**\n   * Specify an optional `onClearSelection` handler that is called when the underlying\n   * element is cleared\n   */\n  onClearSelection: PropTypes.func,\n  /**\n   * Specify an optional `onClick` handler that is called when the underlying\n   * clear selection element is clicked\n   */\n  onClick: PropTypes.func,\n  /**\n   * Specify an optional `onKeyDown` handler that is called when the underlying\n   * clear selection element fires a keydown event\n   */\n  onKeyDown: PropTypes.func,\n  /**\n   * Specify an optional `selectionCount` value that will be used to determine\n   * whether the selection should display a badge or a single clear icon.\n   */\n  selectionCount: PropTypes.number,\n  /**\n   * i18n hook used to provide the appropriate description for the given menu\n   * icon. This function takes in an id defined in `translationIds` and should\n   * return a string message for that given message id.\n   */\n  translateWithId: PropTypes.func.isRequired\n};\nListBoxSelection.defaultProps = {\n  translateWithId: id => defaultTranslations[id]\n};\n\nexport { ListBoxSelection as default, translationIds };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}