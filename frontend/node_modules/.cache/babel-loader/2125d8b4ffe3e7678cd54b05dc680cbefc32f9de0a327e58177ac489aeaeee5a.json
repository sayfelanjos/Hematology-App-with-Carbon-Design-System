{"ast":null,"code":"/**\n * Copyright IBM Corp. 2016, 2023\n *\n * This source code is licensed under the Apache-2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { extends as _extends } from '../../_virtual/_rollupPluginBabelHelpers.js';\nimport cx from 'classnames';\nimport PropTypes from 'prop-types';\nimport React__default from 'react';\nimport { usePrefix } from '../../internal/usePrefix.js';\nvar _span, _span2, _span3, _span4;\nfunction CodeSnippetSkeleton(_ref) {\n  let {\n    className: containerClassName,\n    type = 'single',\n    ...rest\n  } = _ref;\n  const prefix = usePrefix();\n  const className = cx(containerClassName, {\n    [`${prefix}--snippet`]: true,\n    [`${prefix}--skeleton`]: true,\n    [`${prefix}--snippet--single`]: type === 'single',\n    [`${prefix}--snippet--multi`]: type === 'multi'\n  });\n  if (type === 'single') {\n    return /*#__PURE__*/React__default.createElement(\"div\", _extends({\n      className: className\n    }, rest), /*#__PURE__*/React__default.createElement(\"div\", {\n      className: `${prefix}--snippet-container`\n    }, _span || (_span = /*#__PURE__*/React__default.createElement(\"span\", null))));\n  }\n  if (type === 'multi') {\n    return /*#__PURE__*/React__default.createElement(\"div\", _extends({\n      className: className\n    }, rest), /*#__PURE__*/React__default.createElement(\"div\", {\n      className: `${prefix}--snippet-container`\n    }, _span2 || (_span2 = /*#__PURE__*/React__default.createElement(\"span\", null)), _span3 || (_span3 = /*#__PURE__*/React__default.createElement(\"span\", null)), _span4 || (_span4 = /*#__PURE__*/React__default.createElement(\"span\", null))));\n  }\n}\nCodeSnippetSkeleton.propTypes = {\n  /**\n   * Specify an optional className to be applied to the container node\n   */\n  className: PropTypes.string,\n  /**\n   * The type of the code snippet, including single or multi\n   */\n  type: PropTypes.oneOf(['single', 'multi'])\n};\nexport { CodeSnippetSkeleton, CodeSnippetSkeleton as default };","map":{"version":3,"names":["extends","_extends","cx","PropTypes","React__default","usePrefix","_span","_span2","_span3","_span4","CodeSnippetSkeleton","_ref","className","containerClassName","type","rest","prefix","createElement","propTypes","string","oneOf","default"],"sources":["/home/saymon/Backup/Portifolio/Hematology-App-with-Carbon-Design-System/frontend/node_modules/@carbon/react/es/components/CodeSnippet/CodeSnippet.Skeleton.js"],"sourcesContent":["/**\n * Copyright IBM Corp. 2016, 2023\n *\n * This source code is licensed under the Apache-2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { extends as _extends } from '../../_virtual/_rollupPluginBabelHelpers.js';\nimport cx from 'classnames';\nimport PropTypes from 'prop-types';\nimport React__default from 'react';\nimport { usePrefix } from '../../internal/usePrefix.js';\n\nvar _span, _span2, _span3, _span4;\nfunction CodeSnippetSkeleton(_ref) {\n  let {\n    className: containerClassName,\n    type = 'single',\n    ...rest\n  } = _ref;\n  const prefix = usePrefix();\n  const className = cx(containerClassName, {\n    [`${prefix}--snippet`]: true,\n    [`${prefix}--skeleton`]: true,\n    [`${prefix}--snippet--single`]: type === 'single',\n    [`${prefix}--snippet--multi`]: type === 'multi'\n  });\n  if (type === 'single') {\n    return /*#__PURE__*/React__default.createElement(\"div\", _extends({\n      className: className\n    }, rest), /*#__PURE__*/React__default.createElement(\"div\", {\n      className: `${prefix}--snippet-container`\n    }, _span || (_span = /*#__PURE__*/React__default.createElement(\"span\", null))));\n  }\n  if (type === 'multi') {\n    return /*#__PURE__*/React__default.createElement(\"div\", _extends({\n      className: className\n    }, rest), /*#__PURE__*/React__default.createElement(\"div\", {\n      className: `${prefix}--snippet-container`\n    }, _span2 || (_span2 = /*#__PURE__*/React__default.createElement(\"span\", null)), _span3 || (_span3 = /*#__PURE__*/React__default.createElement(\"span\", null)), _span4 || (_span4 = /*#__PURE__*/React__default.createElement(\"span\", null))));\n  }\n}\nCodeSnippetSkeleton.propTypes = {\n  /**\n   * Specify an optional className to be applied to the container node\n   */\n  className: PropTypes.string,\n  /**\n   * The type of the code snippet, including single or multi\n   */\n  type: PropTypes.oneOf(['single', 'multi'])\n};\n\nexport { CodeSnippetSkeleton, CodeSnippetSkeleton as default };\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;;AAEA,SAASA,OAAO,IAAIC,QAAQ,QAAQ,6CAA6C;AACjF,OAAOC,EAAE,MAAM,YAAY;AAC3B,OAAOC,SAAS,MAAM,YAAY;AAClC,OAAOC,cAAc,MAAM,OAAO;AAClC,SAASC,SAAS,QAAQ,6BAA6B;AAEvD,IAAIC,KAAK,EAAEC,MAAM,EAAEC,MAAM,EAAEC,MAAM;AACjC,SAASC,mBAAmBA,CAACC,IAAI,EAAE;EACjC,IAAI;IACFC,SAAS,EAAEC,kBAAkB;IAC7BC,IAAI,GAAG,QAAQ;IACf,GAAGC;EACL,CAAC,GAAGJ,IAAI;EACR,MAAMK,MAAM,GAAGX,SAAS,CAAC,CAAC;EAC1B,MAAMO,SAAS,GAAGV,EAAE,CAACW,kBAAkB,EAAE;IACvC,CAAE,GAAEG,MAAO,WAAU,GAAG,IAAI;IAC5B,CAAE,GAAEA,MAAO,YAAW,GAAG,IAAI;IAC7B,CAAE,GAAEA,MAAO,mBAAkB,GAAGF,IAAI,KAAK,QAAQ;IACjD,CAAE,GAAEE,MAAO,kBAAiB,GAAGF,IAAI,KAAK;EAC1C,CAAC,CAAC;EACF,IAAIA,IAAI,KAAK,QAAQ,EAAE;IACrB,OAAO,aAAaV,cAAc,CAACa,aAAa,CAAC,KAAK,EAAEhB,QAAQ,CAAC;MAC/DW,SAAS,EAAEA;IACb,CAAC,EAAEG,IAAI,CAAC,EAAE,aAAaX,cAAc,CAACa,aAAa,CAAC,KAAK,EAAE;MACzDL,SAAS,EAAG,GAAEI,MAAO;IACvB,CAAC,EAAEV,KAAK,KAAKA,KAAK,GAAG,aAAaF,cAAc,CAACa,aAAa,CAAC,MAAM,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC;EACjF;EACA,IAAIH,IAAI,KAAK,OAAO,EAAE;IACpB,OAAO,aAAaV,cAAc,CAACa,aAAa,CAAC,KAAK,EAAEhB,QAAQ,CAAC;MAC/DW,SAAS,EAAEA;IACb,CAAC,EAAEG,IAAI,CAAC,EAAE,aAAaX,cAAc,CAACa,aAAa,CAAC,KAAK,EAAE;MACzDL,SAAS,EAAG,GAAEI,MAAO;IACvB,CAAC,EAAET,MAAM,KAAKA,MAAM,GAAG,aAAaH,cAAc,CAACa,aAAa,CAAC,MAAM,EAAE,IAAI,CAAC,CAAC,EAAET,MAAM,KAAKA,MAAM,GAAG,aAAaJ,cAAc,CAACa,aAAa,CAAC,MAAM,EAAE,IAAI,CAAC,CAAC,EAAER,MAAM,KAAKA,MAAM,GAAG,aAAaL,cAAc,CAACa,aAAa,CAAC,MAAM,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC;EAC/O;AACF;AACAP,mBAAmB,CAACQ,SAAS,GAAG;EAC9B;AACF;AACA;EACEN,SAAS,EAAET,SAAS,CAACgB,MAAM;EAC3B;AACF;AACA;EACEL,IAAI,EAAEX,SAAS,CAACiB,KAAK,CAAC,CAAC,QAAQ,EAAE,OAAO,CAAC;AAC3C,CAAC;AAED,SAASV,mBAAmB,EAAEA,mBAAmB,IAAIW,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}