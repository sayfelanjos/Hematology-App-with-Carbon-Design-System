{"ast":null,"code":"/**\n * Copyright IBM Corp. 2016, 2023\n *\n * This source code is licensed under the Apache-2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { extends as _extends } from '../../_virtual/_rollupPluginBabelHelpers.js';\nimport React__default from 'react';\nimport PropTypes from 'prop-types';\nimport Button from '../Button/Button.js';\nimport '../Button/Button.Skeleton.js';\nimport ButtonSet from '../ButtonSet/ButtonSet.js';\nimport cx from 'classnames';\nimport { usePrefix } from '../../internal/usePrefix.js';\nfunction SecondaryButtonSet(_ref) {\n  let {\n    secondaryButtons,\n    secondaryButtonText,\n    secondaryClassName,\n    closeModal,\n    onRequestClose\n  } = _ref;\n  function handleRequestClose(evt) {\n    closeModal(evt);\n    onRequestClose(evt);\n  }\n  if (Array.isArray(secondaryButtons) && secondaryButtons.length <= 2) {\n    return secondaryButtons.map((_ref2, i) => {\n      let {\n        buttonText,\n        onClick: onButtonClick\n      } = _ref2;\n      return /*#__PURE__*/React__default.createElement(Button, {\n        key: `${buttonText}-${i}`,\n        className: secondaryClassName,\n        kind: \"secondary\",\n        onClick: onButtonClick || handleRequestClose\n      }, buttonText);\n    });\n  }\n  if (secondaryButtonText) {\n    return /*#__PURE__*/React__default.createElement(Button, {\n      className: secondaryClassName,\n      onClick: handleRequestClose,\n      kind: \"secondary\"\n    }, secondaryButtonText);\n  }\n  return null;\n}\nSecondaryButtonSet.propTypes = {\n  closeModal: PropTypes.func,\n  onRequestClose: PropTypes.func,\n  secondaryButtonText: PropTypes.string,\n  secondaryButtons: (props, propName, componentName) => {\n    if (props.secondaryButtons) {\n      if (!Array.isArray(props.secondaryButtons) || props.secondaryButtons.length !== 2) {\n        return new Error(`${propName} needs to be an array of two button config objects`);\n      }\n      const shape = {\n        buttonText: PropTypes.node,\n        onClick: PropTypes.func\n      };\n      props[propName].forEach(secondaryButton => {\n        PropTypes.checkPropTypes(shape, secondaryButton, propName, componentName);\n      });\n    }\n    return null;\n  },\n  secondaryClassName: PropTypes.string\n};\nconst ModalFooter = /*#__PURE__*/React__default.forwardRef(function ModalFooter(_ref3, ref) {\n  let {\n    children,\n    className: customClassName,\n    closeModal,\n    danger,\n    inputref,\n    onRequestClose,\n    onRequestSubmit,\n    primaryButtonDisabled,\n    primaryButtonText,\n    primaryClassName,\n    secondaryButtonText,\n    secondaryButtons,\n    secondaryClassName,\n    ...rest\n  } = _ref3;\n  const prefix = usePrefix();\n  const footerClass = cx(`${prefix}--modal-footer`, customClassName, Array.isArray(secondaryButtons) && secondaryButtons.length === 2 ? `${prefix}--modal-footer--three-button` : null);\n  const secondaryButtonProps = {\n    closeModal,\n    secondaryButtons,\n    secondaryButtonText,\n    secondaryClassName,\n    onRequestClose\n  };\n  return /*#__PURE__*/(\n    // @ts-expect-error: Invalid derived types, will be fine once explicit types are added\n    React__default.createElement(ButtonSet, _extends({\n      className: footerClass\n    }, rest, {\n      ref: ref\n    }), /*#__PURE__*/React__default.createElement(SecondaryButtonSet, secondaryButtonProps), primaryButtonText && /*#__PURE__*/React__default.createElement(Button, {\n      onClick: onRequestSubmit,\n      className: primaryClassName,\n      disabled: primaryButtonDisabled,\n      kind: danger ? 'danger' : 'primary',\n      ref: inputref\n    }, primaryButtonText), children)\n  );\n});\nModalFooter.propTypes = {\n  /**\n   * Pass in content that will be rendered in the Modal Footer\n   */\n  children: PropTypes.node,\n  /**\n   * Specify a custom className to be applied to the Modal Footer container\n   */\n  className: PropTypes.string,\n  /**\n   * Specify an optional function that is called whenever the modal is closed\n   */\n  closeModal: PropTypes.func,\n  /**\n   * Specify whether the primary button should be replaced with danger button.\n   * Note that this prop is not applied if you render primary/danger button by yourself\n   */\n  danger: PropTypes.bool,\n  /**\n   * The `ref` callback for the primary button.\n   */\n  // @ts-expect-error: Invalid derived type\n  inputref: PropTypes.oneOfType([PropTypes.func, PropTypes.shape({\n    current: PropTypes.any\n  })]),\n  /**\n   * Specify an optional function for when the modal is requesting to be\n   * closed\n   */\n  onRequestClose: PropTypes.func,\n  /**\n   * Specify an optional function for when the modal is requesting to be\n   * submitted\n   */\n  onRequestSubmit: PropTypes.func,\n  /**\n   * Specify whether the primary button should be disabled\n   */\n  primaryButtonDisabled: PropTypes.bool,\n  /**\n   * Specify the text for the primary button\n   */\n  primaryButtonText: PropTypes.string,\n  /**\n   * Specify a custom className to be applied to the primary button\n   */\n  primaryClassName: PropTypes.string,\n  /**\n   * Specify the text for the secondary button\n   */\n  secondaryButtonText: PropTypes.string,\n  /**\n   * Specify an array of config objects for secondary buttons\n   * (`Array<{\n   *   buttonText: string,\n   *   onClick: function,\n   * }>`).\n   */\n  secondaryButtons: (props, propName, componentName) => {\n    if (props.secondaryButtons) {\n      if (!Array.isArray(props.secondaryButtons) || props.secondaryButtons.length !== 2) {\n        return new Error(`${propName} needs to be an array of two button config objects`);\n      }\n      const shape = {\n        buttonText: PropTypes.node,\n        onClick: PropTypes.func\n      };\n      props[propName].forEach(secondaryButton => {\n        PropTypes.checkPropTypes(shape, secondaryButton, propName, componentName);\n      });\n    }\n    return null;\n  },\n  /**\n   * Specify a custom className to be applied to the secondary button\n   */\n  secondaryClassName: PropTypes.string\n};\nconst noop = () => {};\nModalFooter.defaultProps = {\n  onRequestClose: noop,\n  onRequestSubmit: noop,\n  closeModal: noop\n};\nexport { ModalFooter };","map":{"version":3,"names":["extends","_extends","React__default","PropTypes","Button","ButtonSet","cx","usePrefix","SecondaryButtonSet","_ref","secondaryButtons","secondaryButtonText","secondaryClassName","closeModal","onRequestClose","handleRequestClose","evt","Array","isArray","length","map","_ref2","i","buttonText","onClick","onButtonClick","createElement","key","className","kind","propTypes","func","string","props","propName","componentName","Error","shape","node","forEach","secondaryButton","checkPropTypes","ModalFooter","forwardRef","_ref3","ref","children","customClassName","danger","inputref","onRequestSubmit","primaryButtonDisabled","primaryButtonText","primaryClassName","rest","prefix","footerClass","secondaryButtonProps","disabled","bool","oneOfType","current","any","noop","defaultProps"],"sources":["/home/saymon/Backup/Portifolio/Hematology-App-with-Carbon-Design-System/frontend/node_modules/@carbon/react/es/components/ComposedModal/ModalFooter.js"],"sourcesContent":["/**\n * Copyright IBM Corp. 2016, 2023\n *\n * This source code is licensed under the Apache-2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { extends as _extends } from '../../_virtual/_rollupPluginBabelHelpers.js';\nimport React__default from 'react';\nimport PropTypes from 'prop-types';\nimport Button from '../Button/Button.js';\nimport '../Button/Button.Skeleton.js';\nimport ButtonSet from '../ButtonSet/ButtonSet.js';\nimport cx from 'classnames';\nimport { usePrefix } from '../../internal/usePrefix.js';\n\nfunction SecondaryButtonSet(_ref) {\n  let {\n    secondaryButtons,\n    secondaryButtonText,\n    secondaryClassName,\n    closeModal,\n    onRequestClose\n  } = _ref;\n  function handleRequestClose(evt) {\n    closeModal(evt);\n    onRequestClose(evt);\n  }\n  if (Array.isArray(secondaryButtons) && secondaryButtons.length <= 2) {\n    return secondaryButtons.map((_ref2, i) => {\n      let {\n        buttonText,\n        onClick: onButtonClick\n      } = _ref2;\n      return /*#__PURE__*/React__default.createElement(Button, {\n        key: `${buttonText}-${i}`,\n        className: secondaryClassName,\n        kind: \"secondary\",\n        onClick: onButtonClick || handleRequestClose\n      }, buttonText);\n    });\n  }\n  if (secondaryButtonText) {\n    return /*#__PURE__*/React__default.createElement(Button, {\n      className: secondaryClassName,\n      onClick: handleRequestClose,\n      kind: \"secondary\"\n    }, secondaryButtonText);\n  }\n  return null;\n}\nSecondaryButtonSet.propTypes = {\n  closeModal: PropTypes.func,\n  onRequestClose: PropTypes.func,\n  secondaryButtonText: PropTypes.string,\n  secondaryButtons: (props, propName, componentName) => {\n    if (props.secondaryButtons) {\n      if (!Array.isArray(props.secondaryButtons) || props.secondaryButtons.length !== 2) {\n        return new Error(`${propName} needs to be an array of two button config objects`);\n      }\n      const shape = {\n        buttonText: PropTypes.node,\n        onClick: PropTypes.func\n      };\n      props[propName].forEach(secondaryButton => {\n        PropTypes.checkPropTypes(shape, secondaryButton, propName, componentName);\n      });\n    }\n    return null;\n  },\n  secondaryClassName: PropTypes.string\n};\nconst ModalFooter = /*#__PURE__*/React__default.forwardRef(function ModalFooter(_ref3, ref) {\n  let {\n    children,\n    className: customClassName,\n    closeModal,\n    danger,\n    inputref,\n    onRequestClose,\n    onRequestSubmit,\n    primaryButtonDisabled,\n    primaryButtonText,\n    primaryClassName,\n    secondaryButtonText,\n    secondaryButtons,\n    secondaryClassName,\n    ...rest\n  } = _ref3;\n  const prefix = usePrefix();\n  const footerClass = cx(`${prefix}--modal-footer`, customClassName, Array.isArray(secondaryButtons) && secondaryButtons.length === 2 ? `${prefix}--modal-footer--three-button` : null);\n  const secondaryButtonProps = {\n    closeModal,\n    secondaryButtons,\n    secondaryButtonText,\n    secondaryClassName,\n    onRequestClose\n  };\n  return (\n    /*#__PURE__*/\n    // @ts-expect-error: Invalid derived types, will be fine once explicit types are added\n    React__default.createElement(ButtonSet, _extends({\n      className: footerClass\n    }, rest, {\n      ref: ref\n    }), /*#__PURE__*/React__default.createElement(SecondaryButtonSet, secondaryButtonProps), primaryButtonText && /*#__PURE__*/React__default.createElement(Button, {\n      onClick: onRequestSubmit,\n      className: primaryClassName,\n      disabled: primaryButtonDisabled,\n      kind: danger ? 'danger' : 'primary',\n      ref: inputref\n    }, primaryButtonText), children)\n  );\n});\nModalFooter.propTypes = {\n  /**\n   * Pass in content that will be rendered in the Modal Footer\n   */\n  children: PropTypes.node,\n  /**\n   * Specify a custom className to be applied to the Modal Footer container\n   */\n  className: PropTypes.string,\n  /**\n   * Specify an optional function that is called whenever the modal is closed\n   */\n  closeModal: PropTypes.func,\n  /**\n   * Specify whether the primary button should be replaced with danger button.\n   * Note that this prop is not applied if you render primary/danger button by yourself\n   */\n  danger: PropTypes.bool,\n  /**\n   * The `ref` callback for the primary button.\n   */\n  // @ts-expect-error: Invalid derived type\n  inputref: PropTypes.oneOfType([PropTypes.func, PropTypes.shape({\n    current: PropTypes.any\n  })]),\n  /**\n   * Specify an optional function for when the modal is requesting to be\n   * closed\n   */\n  onRequestClose: PropTypes.func,\n  /**\n   * Specify an optional function for when the modal is requesting to be\n   * submitted\n   */\n  onRequestSubmit: PropTypes.func,\n  /**\n   * Specify whether the primary button should be disabled\n   */\n  primaryButtonDisabled: PropTypes.bool,\n  /**\n   * Specify the text for the primary button\n   */\n  primaryButtonText: PropTypes.string,\n  /**\n   * Specify a custom className to be applied to the primary button\n   */\n  primaryClassName: PropTypes.string,\n  /**\n   * Specify the text for the secondary button\n   */\n  secondaryButtonText: PropTypes.string,\n  /**\n   * Specify an array of config objects for secondary buttons\n   * (`Array<{\n   *   buttonText: string,\n   *   onClick: function,\n   * }>`).\n   */\n  secondaryButtons: (props, propName, componentName) => {\n    if (props.secondaryButtons) {\n      if (!Array.isArray(props.secondaryButtons) || props.secondaryButtons.length !== 2) {\n        return new Error(`${propName} needs to be an array of two button config objects`);\n      }\n      const shape = {\n        buttonText: PropTypes.node,\n        onClick: PropTypes.func\n      };\n      props[propName].forEach(secondaryButton => {\n        PropTypes.checkPropTypes(shape, secondaryButton, propName, componentName);\n      });\n    }\n    return null;\n  },\n  /**\n   * Specify a custom className to be applied to the secondary button\n   */\n  secondaryClassName: PropTypes.string\n};\nconst noop = () => {};\nModalFooter.defaultProps = {\n  onRequestClose: noop,\n  onRequestSubmit: noop,\n  closeModal: noop\n};\n\nexport { ModalFooter };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}