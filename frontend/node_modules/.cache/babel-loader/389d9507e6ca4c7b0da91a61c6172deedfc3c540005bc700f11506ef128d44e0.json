{"ast":null,"code":"/**\n * Copyright IBM Corp. 2016, 2023\n *\n * This source code is licensed under the Apache-2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { extends as _extends } from '../../_virtual/_rollupPluginBabelHelpers.js';\nimport PropTypes from 'prop-types';\nimport React__default from 'react';\nimport cx from 'classnames';\nimport { usePrefix } from '../../internal/usePrefix.js';\nfunction UnorderedList(_ref) {\n  let {\n    className,\n    nested = false,\n    isExpressive = false,\n    ...other\n  } = _ref;\n  const prefix = usePrefix();\n  const classNames = cx(`${prefix}--list--unordered`, className, {\n    [`${prefix}--list--nested`]: nested,\n    [`${prefix}--list--expressive`]: isExpressive\n  });\n  return /*#__PURE__*/React__default.createElement(\"ul\", _extends({\n    className: classNames\n  }, other));\n}\nUnorderedList.propTypes = {\n  /**\n   * Specify a collection of ListItem's to be rendered in the UnorderedList\n   */\n  children: PropTypes.node,\n  /**\n   * Specify an optional className to be applied to the underlying `<ul>` node\n   */\n  className: PropTypes.string,\n  /**\n   * Specify whether this ordered list expressive or not\n   */\n  isExpressive: PropTypes.bool,\n  /**\n   * Specify whether the list is nested, or not\n   */\n  nested: PropTypes.bool\n};\nexport { UnorderedList as default };","map":{"version":3,"names":["extends","_extends","PropTypes","React__default","cx","usePrefix","UnorderedList","_ref","className","nested","isExpressive","other","prefix","classNames","createElement","propTypes","children","node","string","bool","default"],"sources":["/home/saymon/Backup/Portifolio/Hematology-App-with-Carbon-Design-System/frontend/node_modules/@carbon/react/es/components/UnorderedList/UnorderedList.js"],"sourcesContent":["/**\n * Copyright IBM Corp. 2016, 2023\n *\n * This source code is licensed under the Apache-2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { extends as _extends } from '../../_virtual/_rollupPluginBabelHelpers.js';\nimport PropTypes from 'prop-types';\nimport React__default from 'react';\nimport cx from 'classnames';\nimport { usePrefix } from '../../internal/usePrefix.js';\n\nfunction UnorderedList(_ref) {\n  let {\n    className,\n    nested = false,\n    isExpressive = false,\n    ...other\n  } = _ref;\n  const prefix = usePrefix();\n  const classNames = cx(`${prefix}--list--unordered`, className, {\n    [`${prefix}--list--nested`]: nested,\n    [`${prefix}--list--expressive`]: isExpressive\n  });\n  return /*#__PURE__*/React__default.createElement(\"ul\", _extends({\n    className: classNames\n  }, other));\n}\nUnorderedList.propTypes = {\n  /**\n   * Specify a collection of ListItem's to be rendered in the UnorderedList\n   */\n  children: PropTypes.node,\n  /**\n   * Specify an optional className to be applied to the underlying `<ul>` node\n   */\n  className: PropTypes.string,\n  /**\n   * Specify whether this ordered list expressive or not\n   */\n  isExpressive: PropTypes.bool,\n  /**\n   * Specify whether the list is nested, or not\n   */\n  nested: PropTypes.bool\n};\n\nexport { UnorderedList as default };\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;;AAEA,SAASA,OAAO,IAAIC,QAAQ,QAAQ,6CAA6C;AACjF,OAAOC,SAAS,MAAM,YAAY;AAClC,OAAOC,cAAc,MAAM,OAAO;AAClC,OAAOC,EAAE,MAAM,YAAY;AAC3B,SAASC,SAAS,QAAQ,6BAA6B;AAEvD,SAASC,aAAaA,CAACC,IAAI,EAAE;EAC3B,IAAI;IACFC,SAAS;IACTC,MAAM,GAAG,KAAK;IACdC,YAAY,GAAG,KAAK;IACpB,GAAGC;EACL,CAAC,GAAGJ,IAAI;EACR,MAAMK,MAAM,GAAGP,SAAS,CAAC,CAAC;EAC1B,MAAMQ,UAAU,GAAGT,EAAE,CAAE,GAAEQ,MAAO,mBAAkB,EAAEJ,SAAS,EAAE;IAC7D,CAAE,GAAEI,MAAO,gBAAe,GAAGH,MAAM;IACnC,CAAE,GAAEG,MAAO,oBAAmB,GAAGF;EACnC,CAAC,CAAC;EACF,OAAO,aAAaP,cAAc,CAACW,aAAa,CAAC,IAAI,EAAEb,QAAQ,CAAC;IAC9DO,SAAS,EAAEK;EACb,CAAC,EAAEF,KAAK,CAAC,CAAC;AACZ;AACAL,aAAa,CAACS,SAAS,GAAG;EACxB;AACF;AACA;EACEC,QAAQ,EAAEd,SAAS,CAACe,IAAI;EACxB;AACF;AACA;EACET,SAAS,EAAEN,SAAS,CAACgB,MAAM;EAC3B;AACF;AACA;EACER,YAAY,EAAER,SAAS,CAACiB,IAAI;EAC5B;AACF;AACA;EACEV,MAAM,EAAEP,SAAS,CAACiB;AACpB,CAAC;AAED,SAASb,aAAa,IAAIc,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}