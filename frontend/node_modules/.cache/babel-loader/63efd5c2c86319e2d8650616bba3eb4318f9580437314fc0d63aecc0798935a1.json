{"ast":null,"code":"/**\n * Copyright IBM Corp. 2016, 2023\n *\n * This source code is licensed under the Apache-2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React__default from 'react';\nimport { WarningFilled, WarningAltFilled } from '@carbon/icons-react';\nimport { usePrefix } from './usePrefix.js';\n\n/**\n * @typedef {object} InputProps\n * @property {string} id - The input's id\n * @property {boolean | undefined} readOnly - Whether the input should be readonly\n * @property {boolean} disabled - Whether the input should be disabled\n * @property {boolean} invalid - Whether the input should be marked as invalid\n * @property {React.ReactNode | undefined} invalidText - The validation message displayed in case the input is considered invalid\n * @property {boolean} warn - Whether the input should be in warning state\n * @property {React.ReactNode | undefined} warnText - The validation message displayed in case the input is in warning state\n */\n\n/**\n * @typedef {object} NormalizedInputProps\n * @property {boolean} disabled - Whether the input is disabled\n * @property {boolean} invalid - Whether the input is invalid (takes precedence over warn)\n * @property {string} invalidId - The invalid message's id\n * @property {string} helperId - id used for helper text\n * @property {boolean} warn - Whether the input is in warning state\n * @property {string} warnId - The warning message's id\n * @property {React.ReactNode | null} validation – React node rendering the appropriate validation message (if any)\n * @property {React.ReactNode | null} icon – React node rendering the appropriate accompanying icon (if any)\n */\n\n/**\n * Returns an object containing non-colliding props and additional, generated ones.\n * This hook ensures that only either \"invalid\" or \"warn\" is true but never both at\n * the same time. Regardless whether \"invalid\" or \"warn\", the appropriate validation\n * message is passed as \"validation\". If the input should be accompanied by an icon\n * (to visually represent a readonly, invalid or warning state), the appropriate icon\n * is passed as \"icon\".\n * It also ensure that neither \"invalid\", nor \"warn\", nor \"disabled\" are enabled when\n * \"readonly\" is passed as \"readonly\" takes precedence over these variants.\n *\n * @param {InputProps} props - The props passed to the component\n * @returns {NormalizedInputProps}\n */\nfunction useNormalizedInputProps(_ref) {\n  var id = _ref.id,\n    readOnly = _ref.readOnly,\n    disabled = _ref.disabled,\n    invalid = _ref.invalid,\n    invalidText = _ref.invalidText,\n    warn = _ref.warn,\n    warnText = _ref.warnText;\n  var prefix = usePrefix();\n  var normalizedProps = {\n    disabled: !readOnly && disabled,\n    invalid: !readOnly && invalid,\n    invalidId: \"\".concat(id, \"-error-msg\"),\n    warn: !readOnly && !invalid && warn,\n    warnId: \"\".concat(id, \"-warn-msg\"),\n    validation: null,\n    icon: null,\n    helperId: \"\".concat(id, \"-helper-text\")\n  };\n  if (normalizedProps.invalid) {\n    normalizedProps.icon = WarningFilled;\n    normalizedProps.validation = /*#__PURE__*/React__default.createElement(\"div\", {\n      className: \"\".concat(prefix, \"--form-requirement\"),\n      id: normalizedProps.invalidId\n    }, invalidText);\n  } else if (normalizedProps.warn) {\n    normalizedProps.icon = WarningAltFilled;\n    normalizedProps.validation = /*#__PURE__*/React__default.createElement(\"div\", {\n      className: \"\".concat(prefix, \"--form-requirement\"),\n      id: normalizedProps.warnId\n    }, warnText);\n  }\n  return normalizedProps;\n}\nexport { useNormalizedInputProps };","map":{"version":3,"names":["React__default","WarningFilled","WarningAltFilled","usePrefix","useNormalizedInputProps","_ref","id","readOnly","disabled","invalid","invalidText","warn","warnText","prefix","normalizedProps","invalidId","concat","warnId","validation","icon","helperId","createElement","className"],"sources":["/home/saymon/Backup/Portifolio/Hematology-App-with-Carbon-Design-System/frontend/node_modules/@carbon/react/es/internal/useNormalizedInputProps.js"],"sourcesContent":["/**\n * Copyright IBM Corp. 2016, 2023\n *\n * This source code is licensed under the Apache-2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React__default from 'react';\nimport { WarningFilled, WarningAltFilled } from '@carbon/icons-react';\nimport { usePrefix } from './usePrefix.js';\n\n/**\n * @typedef {object} InputProps\n * @property {string} id - The input's id\n * @property {boolean | undefined} readOnly - Whether the input should be readonly\n * @property {boolean} disabled - Whether the input should be disabled\n * @property {boolean} invalid - Whether the input should be marked as invalid\n * @property {React.ReactNode | undefined} invalidText - The validation message displayed in case the input is considered invalid\n * @property {boolean} warn - Whether the input should be in warning state\n * @property {React.ReactNode | undefined} warnText - The validation message displayed in case the input is in warning state\n */\n\n/**\n * @typedef {object} NormalizedInputProps\n * @property {boolean} disabled - Whether the input is disabled\n * @property {boolean} invalid - Whether the input is invalid (takes precedence over warn)\n * @property {string} invalidId - The invalid message's id\n * @property {string} helperId - id used for helper text\n * @property {boolean} warn - Whether the input is in warning state\n * @property {string} warnId - The warning message's id\n * @property {React.ReactNode | null} validation – React node rendering the appropriate validation message (if any)\n * @property {React.ReactNode | null} icon – React node rendering the appropriate accompanying icon (if any)\n */\n\n/**\n * Returns an object containing non-colliding props and additional, generated ones.\n * This hook ensures that only either \"invalid\" or \"warn\" is true but never both at\n * the same time. Regardless whether \"invalid\" or \"warn\", the appropriate validation\n * message is passed as \"validation\". If the input should be accompanied by an icon\n * (to visually represent a readonly, invalid or warning state), the appropriate icon\n * is passed as \"icon\".\n * It also ensure that neither \"invalid\", nor \"warn\", nor \"disabled\" are enabled when\n * \"readonly\" is passed as \"readonly\" takes precedence over these variants.\n *\n * @param {InputProps} props - The props passed to the component\n * @returns {NormalizedInputProps}\n */\nfunction useNormalizedInputProps(_ref) {\n  let {\n    id,\n    readOnly,\n    disabled,\n    invalid,\n    invalidText,\n    warn,\n    warnText\n  } = _ref;\n  const prefix = usePrefix();\n  const normalizedProps = {\n    disabled: !readOnly && disabled,\n    invalid: !readOnly && invalid,\n    invalidId: `${id}-error-msg`,\n    warn: !readOnly && !invalid && warn,\n    warnId: `${id}-warn-msg`,\n    validation: null,\n    icon: null,\n    helperId: `${id}-helper-text`\n  };\n  if (normalizedProps.invalid) {\n    normalizedProps.icon = WarningFilled;\n    normalizedProps.validation = /*#__PURE__*/React__default.createElement(\"div\", {\n      className: `${prefix}--form-requirement`,\n      id: normalizedProps.invalidId\n    }, invalidText);\n  } else if (normalizedProps.warn) {\n    normalizedProps.icon = WarningAltFilled;\n    normalizedProps.validation = /*#__PURE__*/React__default.createElement(\"div\", {\n      className: `${prefix}--form-requirement`,\n      id: normalizedProps.warnId\n    }, warnText);\n  }\n  return normalizedProps;\n}\n\nexport { useNormalizedInputProps };\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;;AAEA,OAAOA,cAAc,MAAM,OAAO;AAClC,SAASC,aAAa,EAAEC,gBAAgB,QAAQ,qBAAqB;AACrE,SAASC,SAAS,QAAQ,gBAAgB;;AAE1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASC,uBAAuBA,CAACC,IAAI,EAAE;EACrC,IACEC,EAAE,GAOAD,IAAI,CAPNC,EAAE;IACFC,QAAQ,GAMNF,IAAI,CANNE,QAAQ;IACRC,QAAQ,GAKNH,IAAI,CALNG,QAAQ;IACRC,OAAO,GAILJ,IAAI,CAJNI,OAAO;IACPC,WAAW,GAGTL,IAAI,CAHNK,WAAW;IACXC,IAAI,GAEFN,IAAI,CAFNM,IAAI;IACJC,QAAQ,GACNP,IAAI,CADNO,QAAQ;EAEV,IAAMC,MAAM,GAAGV,SAAS,CAAC,CAAC;EAC1B,IAAMW,eAAe,GAAG;IACtBN,QAAQ,EAAE,CAACD,QAAQ,IAAIC,QAAQ;IAC/BC,OAAO,EAAE,CAACF,QAAQ,IAAIE,OAAO;IAC7BM,SAAS,KAAAC,MAAA,CAAKV,EAAE,eAAY;IAC5BK,IAAI,EAAE,CAACJ,QAAQ,IAAI,CAACE,OAAO,IAAIE,IAAI;IACnCM,MAAM,KAAAD,MAAA,CAAKV,EAAE,cAAW;IACxBY,UAAU,EAAE,IAAI;IAChBC,IAAI,EAAE,IAAI;IACVC,QAAQ,KAAAJ,MAAA,CAAKV,EAAE;EACjB,CAAC;EACD,IAAIQ,eAAe,CAACL,OAAO,EAAE;IAC3BK,eAAe,CAACK,IAAI,GAAGlB,aAAa;IACpCa,eAAe,CAACI,UAAU,GAAG,aAAalB,cAAc,CAACqB,aAAa,CAAC,KAAK,EAAE;MAC5EC,SAAS,KAAAN,MAAA,CAAKH,MAAM,uBAAoB;MACxCP,EAAE,EAAEQ,eAAe,CAACC;IACtB,CAAC,EAAEL,WAAW,CAAC;EACjB,CAAC,MAAM,IAAII,eAAe,CAACH,IAAI,EAAE;IAC/BG,eAAe,CAACK,IAAI,GAAGjB,gBAAgB;IACvCY,eAAe,CAACI,UAAU,GAAG,aAAalB,cAAc,CAACqB,aAAa,CAAC,KAAK,EAAE;MAC5EC,SAAS,KAAAN,MAAA,CAAKH,MAAM,uBAAoB;MACxCP,EAAE,EAAEQ,eAAe,CAACG;IACtB,CAAC,EAAEL,QAAQ,CAAC;EACd;EACA,OAAOE,eAAe;AACxB;AAEA,SAASV,uBAAuB"},"metadata":{},"sourceType":"module","externalDependencies":[]}