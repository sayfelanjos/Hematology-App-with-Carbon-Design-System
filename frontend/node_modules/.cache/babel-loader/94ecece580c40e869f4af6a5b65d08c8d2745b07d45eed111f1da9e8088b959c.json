{"ast":null,"code":"/**\n * Copyright IBM Corp. 2016, 2023\n *\n * This source code is licensed under the Apache-2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n/**\n * Generic helper used to consolidate all call sites for getting a cell id into\n * one method. The strategy currently is that a \"cellId\" is just the combination\n * of the row id and the header key used to access this field in a row.\n *\n * @param {string} rowId\n * @param {string} header\n * @returns {string}\n */\nconst getCellId = (rowId, header) => `${rowId}:${header}`;\nexport { getCellId };","map":{"version":3,"names":["getCellId","rowId","header"],"sources":["/home/saymon/Backup/Portifolio/Hematology-App-with-Carbon-Design-System/frontend/node_modules/@carbon/react/es/components/DataTable/tools/cells.js"],"sourcesContent":["/**\n * Copyright IBM Corp. 2016, 2023\n *\n * This source code is licensed under the Apache-2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n/**\n * Generic helper used to consolidate all call sites for getting a cell id into\n * one method. The strategy currently is that a \"cellId\" is just the combination\n * of the row id and the header key used to access this field in a row.\n *\n * @param {string} rowId\n * @param {string} header\n * @returns {string}\n */\nconst getCellId = (rowId, header) => `${rowId}:${header}`;\n\nexport { getCellId };\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAMA,SAAS,GAAGA,CAACC,KAAK,EAAEC,MAAM,KAAM,GAAED,KAAM,IAAGC,MAAO,EAAC;AAEzD,SAASF,SAAS"},"metadata":{},"sourceType":"module","externalDependencies":[]}