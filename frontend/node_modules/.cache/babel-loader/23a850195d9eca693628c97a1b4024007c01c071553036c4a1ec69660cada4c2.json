{"ast":null,"code":"/**\n * Copyright IBM Corp. 2016, 2023\n *\n * This source code is licensed under the Apache-2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { extends as _extends } from '../../_virtual/_rollupPluginBabelHelpers.js';\nimport { ChevronRight } from '@carbon/icons-react';\nimport cx from 'classnames';\nimport PropTypes from 'prop-types';\nimport React__default from 'react';\nimport { usePrefix } from '../../internal/usePrefix.js';\nimport deprecate from '../../prop-types/deprecate.js';\nimport requiredIfGivenPropIsTruthy from '../../prop-types/requiredIfGivenPropIsTruthy.js';\nconst TableExpandHeader = _ref => {\n  let {\n    ariaLabel,\n    className: headerClassName,\n    enableExpando,\n    enableToggle,\n    id = 'expand',\n    isExpanded,\n    onExpand,\n    expandIconDescription,\n    children,\n    ...rest\n  } = _ref;\n  const prefix = usePrefix();\n  const className = cx(`${prefix}--table-expand`, headerClassName);\n  const previousValue = isExpanded ? 'collapsed' : undefined;\n  return /*#__PURE__*/React__default.createElement(\"th\", _extends({\n    scope: \"col\",\n    className: className,\n    \"data-previous-value\": previousValue,\n    id: id\n  }, rest), enableExpando || enableToggle ? /*#__PURE__*/React__default.createElement(\"button\", {\n    type: \"button\",\n    className: `${prefix}--table-expand__button`,\n    onClick: onExpand,\n    title: expandIconDescription,\n    \"aria-label\": ariaLabel\n  }, /*#__PURE__*/React__default.createElement(ChevronRight, {\n    className: `${prefix}--table-expand__svg`,\n    \"aria-label\": expandIconDescription\n  })) : null, children);\n};\nTableExpandHeader.propTypes = {\n  /**\n   * Specify the string read by a voice reader when the expand trigger is\n   * focused\n   */\n  ariaLabel: PropTypes.oneOfType([requiredIfGivenPropIsTruthy('enableExpando', PropTypes.string), requiredIfGivenPropIsTruthy('enableToggle', PropTypes.string)]),\n  children: PropTypes.node,\n  className: PropTypes.string,\n  /**\n   * The enableExpando prop is being replaced by enableToggle\n   */\n  enableExpando: deprecate(PropTypes.bool, 'The `enableExpando` prop has been deprecated in favor of `enableToggle`. This prop will be removed in the next major release.'),\n  /**\n   * Specify whether an expand all button should be displayed\n   */\n  enableToggle: PropTypes.bool,\n  /**\n   * The description of the chevron right icon, to be put in its SVG `<title>` element.\n   */\n  expandIconDescription: PropTypes.string,\n  /**\n   * Supply an id to the th element.\n   */\n  id: PropTypes.string,\n  /**\n   * Specify whether this row is expanded or not. This helps coordinate data\n   * attributes so that `TableExpandRow` and `TableExpandedRow` work together\n   */\n  isExpanded: requiredIfGivenPropIsTruthy('enableToggle', PropTypes.bool),\n  /**\n   * Hook for when a listener initiates a request to expand the given row\n   */\n  onExpand: PropTypes.oneOfType([requiredIfGivenPropIsTruthy('enableExpando', PropTypes.func), requiredIfGivenPropIsTruthy('enableToggle', PropTypes.func)])\n};\nexport { TableExpandHeader as default };","map":{"version":3,"names":["extends","_extends","ChevronRight","cx","PropTypes","React__default","usePrefix","deprecate","requiredIfGivenPropIsTruthy","TableExpandHeader","_ref","ariaLabel","className","headerClassName","enableExpando","enableToggle","id","isExpanded","onExpand","expandIconDescription","children","rest","prefix","previousValue","undefined","createElement","scope","type","onClick","title","propTypes","oneOfType","string","node","bool","func","default"],"sources":["/home/saymon/Backup/Portifolio/Hematology-App-with-Carbon-Design-System/frontend/node_modules/@carbon/react/es/components/DataTable/TableExpandHeader.js"],"sourcesContent":["/**\n * Copyright IBM Corp. 2016, 2023\n *\n * This source code is licensed under the Apache-2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { extends as _extends } from '../../_virtual/_rollupPluginBabelHelpers.js';\nimport { ChevronRight } from '@carbon/icons-react';\nimport cx from 'classnames';\nimport PropTypes from 'prop-types';\nimport React__default from 'react';\nimport { usePrefix } from '../../internal/usePrefix.js';\nimport deprecate from '../../prop-types/deprecate.js';\nimport requiredIfGivenPropIsTruthy from '../../prop-types/requiredIfGivenPropIsTruthy.js';\n\nconst TableExpandHeader = _ref => {\n  let {\n    ariaLabel,\n    className: headerClassName,\n    enableExpando,\n    enableToggle,\n    id = 'expand',\n    isExpanded,\n    onExpand,\n    expandIconDescription,\n    children,\n    ...rest\n  } = _ref;\n  const prefix = usePrefix();\n  const className = cx(`${prefix}--table-expand`, headerClassName);\n  const previousValue = isExpanded ? 'collapsed' : undefined;\n  return /*#__PURE__*/React__default.createElement(\"th\", _extends({\n    scope: \"col\",\n    className: className,\n    \"data-previous-value\": previousValue,\n    id: id\n  }, rest), enableExpando || enableToggle ? /*#__PURE__*/React__default.createElement(\"button\", {\n    type: \"button\",\n    className: `${prefix}--table-expand__button`,\n    onClick: onExpand,\n    title: expandIconDescription,\n    \"aria-label\": ariaLabel\n  }, /*#__PURE__*/React__default.createElement(ChevronRight, {\n    className: `${prefix}--table-expand__svg`,\n    \"aria-label\": expandIconDescription\n  })) : null, children);\n};\nTableExpandHeader.propTypes = {\n  /**\n   * Specify the string read by a voice reader when the expand trigger is\n   * focused\n   */\n  ariaLabel: PropTypes.oneOfType([requiredIfGivenPropIsTruthy('enableExpando', PropTypes.string), requiredIfGivenPropIsTruthy('enableToggle', PropTypes.string)]),\n  children: PropTypes.node,\n  className: PropTypes.string,\n  /**\n   * The enableExpando prop is being replaced by enableToggle\n   */\n  enableExpando: deprecate(PropTypes.bool, 'The `enableExpando` prop has been deprecated in favor of `enableToggle`. This prop will be removed in the next major release.'),\n  /**\n   * Specify whether an expand all button should be displayed\n   */\n  enableToggle: PropTypes.bool,\n  /**\n   * The description of the chevron right icon, to be put in its SVG `<title>` element.\n   */\n  expandIconDescription: PropTypes.string,\n  /**\n   * Supply an id to the th element.\n   */\n  id: PropTypes.string,\n  /**\n   * Specify whether this row is expanded or not. This helps coordinate data\n   * attributes so that `TableExpandRow` and `TableExpandedRow` work together\n   */\n  isExpanded: requiredIfGivenPropIsTruthy('enableToggle', PropTypes.bool),\n  /**\n   * Hook for when a listener initiates a request to expand the given row\n   */\n  onExpand: PropTypes.oneOfType([requiredIfGivenPropIsTruthy('enableExpando', PropTypes.func), requiredIfGivenPropIsTruthy('enableToggle', PropTypes.func)])\n};\n\nexport { TableExpandHeader as default };\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;;AAEA,SAASA,OAAO,IAAIC,QAAQ,QAAQ,6CAA6C;AACjF,SAASC,YAAY,QAAQ,qBAAqB;AAClD,OAAOC,EAAE,MAAM,YAAY;AAC3B,OAAOC,SAAS,MAAM,YAAY;AAClC,OAAOC,cAAc,MAAM,OAAO;AAClC,SAASC,SAAS,QAAQ,6BAA6B;AACvD,OAAOC,SAAS,MAAM,+BAA+B;AACrD,OAAOC,2BAA2B,MAAM,iDAAiD;AAEzF,MAAMC,iBAAiB,GAAGC,IAAI,IAAI;EAChC,IAAI;IACFC,SAAS;IACTC,SAAS,EAAEC,eAAe;IAC1BC,aAAa;IACbC,YAAY;IACZC,EAAE,GAAG,QAAQ;IACbC,UAAU;IACVC,QAAQ;IACRC,qBAAqB;IACrBC,QAAQ;IACR,GAAGC;EACL,CAAC,GAAGX,IAAI;EACR,MAAMY,MAAM,GAAGhB,SAAS,CAAC,CAAC;EAC1B,MAAMM,SAAS,GAAGT,EAAE,CAAE,GAAEmB,MAAO,gBAAe,EAAET,eAAe,CAAC;EAChE,MAAMU,aAAa,GAAGN,UAAU,GAAG,WAAW,GAAGO,SAAS;EAC1D,OAAO,aAAanB,cAAc,CAACoB,aAAa,CAAC,IAAI,EAAExB,QAAQ,CAAC;IAC9DyB,KAAK,EAAE,KAAK;IACZd,SAAS,EAAEA,SAAS;IACpB,qBAAqB,EAAEW,aAAa;IACpCP,EAAE,EAAEA;EACN,CAAC,EAAEK,IAAI,CAAC,EAAEP,aAAa,IAAIC,YAAY,GAAG,aAAaV,cAAc,CAACoB,aAAa,CAAC,QAAQ,EAAE;IAC5FE,IAAI,EAAE,QAAQ;IACdf,SAAS,EAAG,GAAEU,MAAO,wBAAuB;IAC5CM,OAAO,EAAEV,QAAQ;IACjBW,KAAK,EAAEV,qBAAqB;IAC5B,YAAY,EAAER;EAChB,CAAC,EAAE,aAAaN,cAAc,CAACoB,aAAa,CAACvB,YAAY,EAAE;IACzDU,SAAS,EAAG,GAAEU,MAAO,qBAAoB;IACzC,YAAY,EAAEH;EAChB,CAAC,CAAC,CAAC,GAAG,IAAI,EAAEC,QAAQ,CAAC;AACvB,CAAC;AACDX,iBAAiB,CAACqB,SAAS,GAAG;EAC5B;AACF;AACA;AACA;EACEnB,SAAS,EAAEP,SAAS,CAAC2B,SAAS,CAAC,CAACvB,2BAA2B,CAAC,eAAe,EAAEJ,SAAS,CAAC4B,MAAM,CAAC,EAAExB,2BAA2B,CAAC,cAAc,EAAEJ,SAAS,CAAC4B,MAAM,CAAC,CAAC,CAAC;EAC/JZ,QAAQ,EAAEhB,SAAS,CAAC6B,IAAI;EACxBrB,SAAS,EAAER,SAAS,CAAC4B,MAAM;EAC3B;AACF;AACA;EACElB,aAAa,EAAEP,SAAS,CAACH,SAAS,CAAC8B,IAAI,EAAE,+HAA+H,CAAC;EACzK;AACF;AACA;EACEnB,YAAY,EAAEX,SAAS,CAAC8B,IAAI;EAC5B;AACF;AACA;EACEf,qBAAqB,EAAEf,SAAS,CAAC4B,MAAM;EACvC;AACF;AACA;EACEhB,EAAE,EAAEZ,SAAS,CAAC4B,MAAM;EACpB;AACF;AACA;AACA;EACEf,UAAU,EAAET,2BAA2B,CAAC,cAAc,EAAEJ,SAAS,CAAC8B,IAAI,CAAC;EACvE;AACF;AACA;EACEhB,QAAQ,EAAEd,SAAS,CAAC2B,SAAS,CAAC,CAACvB,2BAA2B,CAAC,eAAe,EAAEJ,SAAS,CAAC+B,IAAI,CAAC,EAAE3B,2BAA2B,CAAC,cAAc,EAAEJ,SAAS,CAAC+B,IAAI,CAAC,CAAC;AAC3J,CAAC;AAED,SAAS1B,iBAAiB,IAAI2B,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}