{"ast":null,"code":"/**\n * Copyright IBM Corp. 2016, 2023\n *\n * This source code is licensed under the Apache-2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport PropTypes from 'prop-types';\nimport * as React from 'react';\n\n/**\n * Provides a grid context for communication the grid \"mode\" (flexbox or\n * css-grid) along with subgrid information.\n */\nvar GridSettingsContext = /*#__PURE__*/React.createContext({\n  mode: 'flexbox',\n  subgrid: false\n});\nvar GridSettings = function GridSettings(_ref) {\n  var children = _ref.children,\n    mode = _ref.mode,\n    _ref$subgrid = _ref.subgrid,\n    subgrid = _ref$subgrid === void 0 ? false : _ref$subgrid;\n  var value = React.useMemo(function () {\n    return {\n      mode: mode,\n      subgrid: subgrid\n    };\n  }, [mode, subgrid]);\n  return /*#__PURE__*/React.createElement(GridSettingsContext.Provider, {\n    value: value\n  }, children);\n};\nvar gridModes = ['flexbox', 'css-grid'];\nGridSettings.propTypes = {\n  /**\n   * Pass in components which will be rendered within the `GridSettings`\n   * component\n   */\n  children: PropTypes.node,\n  /**\n   * Specify the grid mode for the GridContext\n   */\n  mode: PropTypes.oneOf(gridModes).isRequired,\n  /**\n   * Specify whether subgrid should be enabled\n   */\n  subgrid: PropTypes.bool\n};\n\n/**\n * Helper function for accessing the GridContext value\n */\nvar useGridSettings = function useGridSettings() {\n  return React.useContext(GridSettingsContext);\n};\nexport { GridSettings, useGridSettings };","map":{"version":3,"names":["PropTypes","React","GridSettingsContext","createContext","mode","subgrid","GridSettings","_ref","children","_ref$subgrid","value","useMemo","createElement","Provider","gridModes","propTypes","node","oneOf","isRequired","bool","useGridSettings","useContext"],"sources":["/home/saymon/Backup/Portifolio/Hematology-App-with-Carbon-Design-System/frontend/node_modules/@carbon/react/es/components/Grid/GridContext.js"],"sourcesContent":["/**\n * Copyright IBM Corp. 2016, 2023\n *\n * This source code is licensed under the Apache-2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport PropTypes from 'prop-types';\nimport * as React from 'react';\n\n/**\n * Provides a grid context for communication the grid \"mode\" (flexbox or\n * css-grid) along with subgrid information.\n */\nconst GridSettingsContext = /*#__PURE__*/React.createContext({\n  mode: 'flexbox',\n  subgrid: false\n});\nconst GridSettings = _ref => {\n  let {\n    children,\n    mode,\n    subgrid = false\n  } = _ref;\n  const value = React.useMemo(() => {\n    return {\n      mode,\n      subgrid\n    };\n  }, [mode, subgrid]);\n  return /*#__PURE__*/React.createElement(GridSettingsContext.Provider, {\n    value: value\n  }, children);\n};\nconst gridModes = ['flexbox', 'css-grid'];\nGridSettings.propTypes = {\n  /**\n   * Pass in components which will be rendered within the `GridSettings`\n   * component\n   */\n  children: PropTypes.node,\n  /**\n   * Specify the grid mode for the GridContext\n   */\n  mode: PropTypes.oneOf(gridModes).isRequired,\n  /**\n   * Specify whether subgrid should be enabled\n   */\n  subgrid: PropTypes.bool\n};\n\n/**\n * Helper function for accessing the GridContext value\n */\nconst useGridSettings = () => {\n  return React.useContext(GridSettingsContext);\n};\n\nexport { GridSettings, useGridSettings };\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;;AAEA,OAAOA,SAAS,MAAM,YAAY;AAClC,OAAO,KAAKC,KAAK,MAAM,OAAO;;AAE9B;AACA;AACA;AACA;AACA,IAAMC,mBAAmB,GAAG,aAAaD,KAAK,CAACE,aAAa,CAAC;EAC3DC,IAAI,EAAE,SAAS;EACfC,OAAO,EAAE;AACX,CAAC,CAAC;AACF,IAAMC,YAAY,GAAG,SAAfA,YAAYA,CAAGC,IAAI,EAAI;EAC3B,IACEC,QAAQ,GAGND,IAAI,CAHNC,QAAQ;IACRJ,IAAI,GAEFG,IAAI,CAFNH,IAAI;IAAAK,YAAA,GAEFF,IAAI,CADNF,OAAO;IAAPA,OAAO,GAAAI,YAAA,cAAG,KAAK,GAAAA,YAAA;EAEjB,IAAMC,KAAK,GAAGT,KAAK,CAACU,OAAO,CAAC,YAAM;IAChC,OAAO;MACLP,IAAI,EAAJA,IAAI;MACJC,OAAO,EAAPA;IACF,CAAC;EACH,CAAC,EAAE,CAACD,IAAI,EAAEC,OAAO,CAAC,CAAC;EACnB,OAAO,aAAaJ,KAAK,CAACW,aAAa,CAACV,mBAAmB,CAACW,QAAQ,EAAE;IACpEH,KAAK,EAAEA;EACT,CAAC,EAAEF,QAAQ,CAAC;AACd,CAAC;AACD,IAAMM,SAAS,GAAG,CAAC,SAAS,EAAE,UAAU,CAAC;AACzCR,YAAY,CAACS,SAAS,GAAG;EACvB;AACF;AACA;AACA;EACEP,QAAQ,EAAER,SAAS,CAACgB,IAAI;EACxB;AACF;AACA;EACEZ,IAAI,EAAEJ,SAAS,CAACiB,KAAK,CAACH,SAAS,CAAC,CAACI,UAAU;EAC3C;AACF;AACA;EACEb,OAAO,EAAEL,SAAS,CAACmB;AACrB,CAAC;;AAED;AACA;AACA;AACA,IAAMC,eAAe,GAAG,SAAlBA,eAAeA,CAAA,EAAS;EAC5B,OAAOnB,KAAK,CAACoB,UAAU,CAACnB,mBAAmB,CAAC;AAC9C,CAAC;AAED,SAASI,YAAY,EAAEc,eAAe"},"metadata":{},"sourceType":"module","externalDependencies":[]}