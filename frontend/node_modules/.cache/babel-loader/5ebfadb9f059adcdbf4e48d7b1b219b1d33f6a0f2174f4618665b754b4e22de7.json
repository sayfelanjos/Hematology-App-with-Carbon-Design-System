{"ast":null,"code":"/**\n * Copyright IBM Corp. 2016, 2023\n *\n * This source code is licensed under the Apache-2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { extends as _extends } from '../../_virtual/_rollupPluginBabelHelpers.js';\nimport PropTypes from 'prop-types';\nimport React__default, { useContext } from 'react';\nimport { TextDirectionContext } from './TextDirectionContext.js';\nfunction Text(_ref) {\n  let {\n    as,\n    children,\n    dir = 'auto',\n    ...rest\n  } = _ref;\n  // TODO: Update with context typing once its been converted to TS\n  const context = useContext(TextDirectionContext);\n  const textProps = {};\n  const BaseComponent = as ?? 'span';\n  const value = {\n    ...context\n  };\n  if (!context) {\n    textProps.dir = dir;\n    value.direction = dir;\n  } else {\n    const {\n      direction: parentDirection,\n      getTextDirection\n    } = context;\n    if (getTextDirection && getTextDirection.current) {\n      const text = getTextFromChildren(children);\n      const override = getTextDirection.current(text);\n      if (parentDirection !== override) {\n        textProps.dir = override;\n        value.direction = override;\n      } else if (parentDirection === 'auto') {\n        textProps.dir = override;\n      }\n    } else if (parentDirection !== dir) {\n      textProps.dir = dir;\n      value.direction = dir;\n    } else if (parentDirection === 'auto') {\n      textProps.dir = dir;\n    }\n  }\n  return /*#__PURE__*/React__default.createElement(TextDirectionContext.Provider, {\n    value: value\n  }, /*#__PURE__*/React__default.createElement(BaseComponent, _extends({}, rest, textProps), children));\n}\nText.propTypes = {\n  /**\n   * Provide a custom element type used to render the outermost node\n   */\n  as: PropTypes.oneOfType([PropTypes.func, PropTypes.string, PropTypes.elementType]),\n  /**\n   * Provide child elements or text to be rendered inside of this component\n   */\n  children: PropTypes.node.isRequired,\n  /**\n   * Specify the text direction to be used for this component and any of its\n   * children\n   */\n  dir: PropTypes.oneOf(['ltr', 'rtl', 'auto'])\n};\nfunction getTextFromChildren(children) {\n  if (typeof children === 'string') {\n    return children;\n  }\n  const text = React__default.Children.map(children, child => {\n    if (typeof child === 'string') {\n      return child;\n    }\n    return null;\n  })?.filter(text => {\n    return text !== null;\n  });\n  if (text?.length === 1) {\n    return text[0];\n  }\n  return text;\n}\nexport { Text };","map":{"version":3,"names":["extends","_extends","PropTypes","React__default","useContext","TextDirectionContext","Text","_ref","as","children","dir","rest","context","textProps","BaseComponent","value","direction","parentDirection","getTextDirection","current","text","getTextFromChildren","override","createElement","Provider","propTypes","oneOfType","func","string","elementType","node","isRequired","oneOf","Children","map","child","filter","length"],"sources":["/home/saymon/Backup/Portifolio/Hematology-App-with-Carbon-Design-System/frontend/node_modules/@carbon/react/es/components/Text/Text.js"],"sourcesContent":["/**\n * Copyright IBM Corp. 2016, 2023\n *\n * This source code is licensed under the Apache-2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { extends as _extends } from '../../_virtual/_rollupPluginBabelHelpers.js';\nimport PropTypes from 'prop-types';\nimport React__default, { useContext } from 'react';\nimport { TextDirectionContext } from './TextDirectionContext.js';\n\nfunction Text(_ref) {\n  let {\n    as,\n    children,\n    dir = 'auto',\n    ...rest\n  } = _ref;\n  // TODO: Update with context typing once its been converted to TS\n  const context = useContext(TextDirectionContext);\n  const textProps = {};\n  const BaseComponent = as ?? 'span';\n  const value = {\n    ...context\n  };\n  if (!context) {\n    textProps.dir = dir;\n    value.direction = dir;\n  } else {\n    const {\n      direction: parentDirection,\n      getTextDirection\n    } = context;\n    if (getTextDirection && getTextDirection.current) {\n      const text = getTextFromChildren(children);\n      const override = getTextDirection.current(text);\n      if (parentDirection !== override) {\n        textProps.dir = override;\n        value.direction = override;\n      } else if (parentDirection === 'auto') {\n        textProps.dir = override;\n      }\n    } else if (parentDirection !== dir) {\n      textProps.dir = dir;\n      value.direction = dir;\n    } else if (parentDirection === 'auto') {\n      textProps.dir = dir;\n    }\n  }\n  return /*#__PURE__*/React__default.createElement(TextDirectionContext.Provider, {\n    value: value\n  }, /*#__PURE__*/React__default.createElement(BaseComponent, _extends({}, rest, textProps), children));\n}\nText.propTypes = {\n  /**\n   * Provide a custom element type used to render the outermost node\n   */\n  as: PropTypes.oneOfType([PropTypes.func, PropTypes.string, PropTypes.elementType]),\n  /**\n   * Provide child elements or text to be rendered inside of this component\n   */\n  children: PropTypes.node.isRequired,\n  /**\n   * Specify the text direction to be used for this component and any of its\n   * children\n   */\n  dir: PropTypes.oneOf(['ltr', 'rtl', 'auto'])\n};\nfunction getTextFromChildren(children) {\n  if (typeof children === 'string') {\n    return children;\n  }\n  const text = React__default.Children.map(children, child => {\n    if (typeof child === 'string') {\n      return child;\n    }\n    return null;\n  })?.filter(text => {\n    return text !== null;\n  });\n  if (text?.length === 1) {\n    return text[0];\n  }\n  return text;\n}\n\nexport { Text };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}