{"ast":null,"code":"/**\n * Copyright IBM Corp. 2016, 2023\n *\n * This source code is licensed under the Apache-2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { defineProperty as _defineProperty } from '../_virtual/_rollupPluginBabelHelpers.js';\nimport React__default, { useRef, useState, useCallback, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport isEqual from 'lodash.isequal';\nfunction callOnChangeHandler(_ref) {\n  let {\n    isControlled,\n    isMounted,\n    onChangeHandlerControlled,\n    onChangeHandlerUncontrolled,\n    selectedItems\n  } = _ref;\n  if (isControlled) {\n    if (isMounted && onChangeHandlerControlled) {\n      onChangeHandlerControlled({\n        selectedItems\n      });\n    }\n  } else {\n    onChangeHandlerUncontrolled(selectedItems);\n  }\n}\nfunction useSelection(_ref2) {\n  let {\n    disabled,\n    onChange,\n    initialSelectedItems = [],\n    selectedItems: controlledItems\n  } = _ref2;\n  const isMounted = useRef(false);\n  const savedOnChange = useRef(onChange);\n  const [uncontrolledItems, setUncontrolledItems] = useState(initialSelectedItems);\n  const isControlled = !!controlledItems;\n  const selectedItems = isControlled ? controlledItems : uncontrolledItems;\n  const onItemChange = useCallback(item => {\n    if (disabled) {\n      return;\n    }\n    let selectedIndex;\n    selectedItems.forEach((selectedItem, index) => {\n      if (isEqual(selectedItem, item)) {\n        selectedIndex = index;\n      }\n    });\n    let newSelectedItems;\n    if (selectedIndex === undefined) {\n      newSelectedItems = selectedItems.concat(item);\n      callOnChangeHandler({\n        isControlled,\n        isMounted: isMounted.current,\n        onChangeHandlerControlled: savedOnChange.current,\n        onChangeHandlerUncontrolled: setUncontrolledItems,\n        selectedItems: newSelectedItems\n      });\n      return;\n    }\n    newSelectedItems = removeAtIndex(selectedItems, selectedIndex);\n    callOnChangeHandler({\n      isControlled,\n      isMounted: isMounted.current,\n      onChangeHandlerControlled: savedOnChange.current,\n      onChangeHandlerUncontrolled: setUncontrolledItems,\n      selectedItems: newSelectedItems\n    });\n  }, [disabled, isControlled, selectedItems]);\n  const clearSelection = useCallback(() => {\n    if (disabled) {\n      return;\n    }\n    callOnChangeHandler({\n      isControlled,\n      isMounted: isMounted.current,\n      onChangeHandlerControlled: savedOnChange.current,\n      onChangeHandlerUncontrolled: setUncontrolledItems,\n      selectedItems: []\n    });\n  }, [disabled, isControlled]);\n  useEffect(() => {\n    savedOnChange.current = onChange;\n  }, [onChange]);\n  useEffect(() => {\n    if (isMounted.current && savedOnChange.current && !isControlled) {\n      savedOnChange.current({\n        selectedItems\n      });\n    }\n  }, [isControlled, selectedItems]);\n  useEffect(() => {\n    isMounted.current = true;\n    return () => {\n      isMounted.current = false;\n    };\n  }, []);\n  return {\n    selectedItems,\n    onItemChange,\n    clearSelection\n  };\n}\nclass Selection extends React__default.Component {\n  constructor(props) {\n    super(props);\n    _defineProperty(this, \"internalSetState\", (stateToSet, callback) => this.setState(stateToSet, () => {\n      if (callback) {\n        callback();\n      }\n      if (this.props.onChange) {\n        this.props.onChange(this.state);\n      }\n    }));\n    _defineProperty(this, \"handleClearSelection\", () => {\n      if (this.props.disabled) {\n        return;\n      }\n      this.internalSetState({\n        selectedItems: []\n      });\n    });\n    _defineProperty(this, \"handleSelectItem\", item => {\n      this.internalSetState(state => ({\n        selectedItems: state.selectedItems.concat(item)\n      }));\n    });\n    _defineProperty(this, \"handleRemoveItem\", index => {\n      this.internalSetState(state => ({\n        selectedItems: removeAtIndex(state.selectedItems, index)\n      }));\n    });\n    _defineProperty(this, \"handleOnItemChange\", item => {\n      if (this.props.disabled) {\n        return;\n      }\n      const {\n        selectedItems\n      } = this.state;\n      let selectedIndex;\n      selectedItems.forEach((selectedItem, index) => {\n        if (isEqual(selectedItem, item)) {\n          selectedIndex = index;\n        }\n      });\n      if (selectedIndex === undefined) {\n        this.handleSelectItem(item);\n        return;\n      }\n      this.handleRemoveItem(selectedIndex);\n    });\n    this.state = {\n      selectedItems: props.initialSelectedItems\n    };\n  }\n  render() {\n    const {\n      children,\n      render\n    } = this.props;\n    const {\n      selectedItems\n    } = this.state;\n    const renderProps = {\n      selectedItems,\n      onItemChange: this.handleOnItemChange,\n      clearSelection: this.handleClearSelection\n    };\n    if (render !== undefined) {\n      return render(renderProps);\n    }\n    if (children !== undefined) {\n      return children(renderProps);\n    }\n    return null;\n  }\n}\n\n// Generic utility for safely removing an element at a given index from an\n// array.\n_defineProperty(Selection, \"propTypes\", {\n  children: PropTypes.func,\n  disabled: PropTypes.bool,\n  initialSelectedItems: PropTypes.array.isRequired,\n  onChange: PropTypes.func,\n  render: PropTypes.func\n});\n_defineProperty(Selection, \"defaultProps\", {\n  initialSelectedItems: []\n});\nconst removeAtIndex = (array, index) => {\n  const result = array.slice();\n  result.splice(index, 1);\n  return result;\n};\nexport { Selection as default, useSelection };","map":{"version":3,"names":["defineProperty","_defineProperty","React__default","useRef","useState","useCallback","useEffect","PropTypes","isEqual","callOnChangeHandler","_ref","isControlled","isMounted","onChangeHandlerControlled","onChangeHandlerUncontrolled","selectedItems","useSelection","_ref2","disabled","onChange","initialSelectedItems","controlledItems","savedOnChange","uncontrolledItems","setUncontrolledItems","onItemChange","item","selectedIndex","forEach","selectedItem","index","newSelectedItems","undefined","concat","current","removeAtIndex","clearSelection","Selection","Component","constructor","props","stateToSet","callback","setState","state","internalSetState","handleSelectItem","handleRemoveItem","render","children","renderProps","handleOnItemChange","handleClearSelection","func","bool","array","isRequired","result","slice","splice","default"],"sources":["/home/saymon/Backup/Portifolio/Hematology-App-with-Carbon-Design-System/frontend/node_modules/@carbon/react/es/internal/Selection.js"],"sourcesContent":["/**\n * Copyright IBM Corp. 2016, 2023\n *\n * This source code is licensed under the Apache-2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { defineProperty as _defineProperty } from '../_virtual/_rollupPluginBabelHelpers.js';\nimport React__default, { useRef, useState, useCallback, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport isEqual from 'lodash.isequal';\n\nfunction callOnChangeHandler(_ref) {\n  let {\n    isControlled,\n    isMounted,\n    onChangeHandlerControlled,\n    onChangeHandlerUncontrolled,\n    selectedItems\n  } = _ref;\n  if (isControlled) {\n    if (isMounted && onChangeHandlerControlled) {\n      onChangeHandlerControlled({\n        selectedItems\n      });\n    }\n  } else {\n    onChangeHandlerUncontrolled(selectedItems);\n  }\n}\nfunction useSelection(_ref2) {\n  let {\n    disabled,\n    onChange,\n    initialSelectedItems = [],\n    selectedItems: controlledItems\n  } = _ref2;\n  const isMounted = useRef(false);\n  const savedOnChange = useRef(onChange);\n  const [uncontrolledItems, setUncontrolledItems] = useState(initialSelectedItems);\n  const isControlled = !!controlledItems;\n  const selectedItems = isControlled ? controlledItems : uncontrolledItems;\n  const onItemChange = useCallback(item => {\n    if (disabled) {\n      return;\n    }\n    let selectedIndex;\n    selectedItems.forEach((selectedItem, index) => {\n      if (isEqual(selectedItem, item)) {\n        selectedIndex = index;\n      }\n    });\n    let newSelectedItems;\n    if (selectedIndex === undefined) {\n      newSelectedItems = selectedItems.concat(item);\n      callOnChangeHandler({\n        isControlled,\n        isMounted: isMounted.current,\n        onChangeHandlerControlled: savedOnChange.current,\n        onChangeHandlerUncontrolled: setUncontrolledItems,\n        selectedItems: newSelectedItems\n      });\n      return;\n    }\n    newSelectedItems = removeAtIndex(selectedItems, selectedIndex);\n    callOnChangeHandler({\n      isControlled,\n      isMounted: isMounted.current,\n      onChangeHandlerControlled: savedOnChange.current,\n      onChangeHandlerUncontrolled: setUncontrolledItems,\n      selectedItems: newSelectedItems\n    });\n  }, [disabled, isControlled, selectedItems]);\n  const clearSelection = useCallback(() => {\n    if (disabled) {\n      return;\n    }\n    callOnChangeHandler({\n      isControlled,\n      isMounted: isMounted.current,\n      onChangeHandlerControlled: savedOnChange.current,\n      onChangeHandlerUncontrolled: setUncontrolledItems,\n      selectedItems: []\n    });\n  }, [disabled, isControlled]);\n  useEffect(() => {\n    savedOnChange.current = onChange;\n  }, [onChange]);\n  useEffect(() => {\n    if (isMounted.current && savedOnChange.current && !isControlled) {\n      savedOnChange.current({\n        selectedItems\n      });\n    }\n  }, [isControlled, selectedItems]);\n  useEffect(() => {\n    isMounted.current = true;\n    return () => {\n      isMounted.current = false;\n    };\n  }, []);\n  return {\n    selectedItems,\n    onItemChange,\n    clearSelection\n  };\n}\nclass Selection extends React__default.Component {\n  constructor(props) {\n    super(props);\n    _defineProperty(this, \"internalSetState\", (stateToSet, callback) => this.setState(stateToSet, () => {\n      if (callback) {\n        callback();\n      }\n      if (this.props.onChange) {\n        this.props.onChange(this.state);\n      }\n    }));\n    _defineProperty(this, \"handleClearSelection\", () => {\n      if (this.props.disabled) {\n        return;\n      }\n      this.internalSetState({\n        selectedItems: []\n      });\n    });\n    _defineProperty(this, \"handleSelectItem\", item => {\n      this.internalSetState(state => ({\n        selectedItems: state.selectedItems.concat(item)\n      }));\n    });\n    _defineProperty(this, \"handleRemoveItem\", index => {\n      this.internalSetState(state => ({\n        selectedItems: removeAtIndex(state.selectedItems, index)\n      }));\n    });\n    _defineProperty(this, \"handleOnItemChange\", item => {\n      if (this.props.disabled) {\n        return;\n      }\n      const {\n        selectedItems\n      } = this.state;\n      let selectedIndex;\n      selectedItems.forEach((selectedItem, index) => {\n        if (isEqual(selectedItem, item)) {\n          selectedIndex = index;\n        }\n      });\n      if (selectedIndex === undefined) {\n        this.handleSelectItem(item);\n        return;\n      }\n      this.handleRemoveItem(selectedIndex);\n    });\n    this.state = {\n      selectedItems: props.initialSelectedItems\n    };\n  }\n  render() {\n    const {\n      children,\n      render\n    } = this.props;\n    const {\n      selectedItems\n    } = this.state;\n    const renderProps = {\n      selectedItems,\n      onItemChange: this.handleOnItemChange,\n      clearSelection: this.handleClearSelection\n    };\n    if (render !== undefined) {\n      return render(renderProps);\n    }\n    if (children !== undefined) {\n      return children(renderProps);\n    }\n    return null;\n  }\n}\n\n// Generic utility for safely removing an element at a given index from an\n// array.\n_defineProperty(Selection, \"propTypes\", {\n  children: PropTypes.func,\n  disabled: PropTypes.bool,\n  initialSelectedItems: PropTypes.array.isRequired,\n  onChange: PropTypes.func,\n  render: PropTypes.func\n});\n_defineProperty(Selection, \"defaultProps\", {\n  initialSelectedItems: []\n});\nconst removeAtIndex = (array, index) => {\n  const result = array.slice();\n  result.splice(index, 1);\n  return result;\n};\n\nexport { Selection as default, useSelection };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}