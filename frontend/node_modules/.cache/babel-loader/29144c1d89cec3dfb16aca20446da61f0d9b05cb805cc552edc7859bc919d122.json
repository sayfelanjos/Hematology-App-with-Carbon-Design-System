{"ast":null,"code":"import _defineProperty from \"/home/saymon/Backup/Portifolio/Hematology-App-with-Carbon-Design-System/frontend/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nimport _slicedToArray from \"/home/saymon/Backup/Portifolio/Hematology-App-with-Carbon-Design-System/frontend/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport _objectWithoutProperties from \"/home/saymon/Backup/Portifolio/Hematology-App-with-Carbon-Design-System/frontend/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js\";\nvar _excluded = [\"children\", \"className\", \"light\"],\n  _excluded2 = [\"children\", \"className\", \"clicked\", \"disabled\", \"href\", \"light\", \"onClick\", \"onKeyDown\", \"renderIcon\"],\n  _excluded3 = [\"children\", \"className\", \"disabled\", \"id\", \"light\", \"onClick\", \"onChange\", \"onKeyDown\", \"selected\", \"tabIndex\", \"title\"],\n  _excluded4 = [\"tabIndex\", \"className\", \"children\", \"expanded\", \"tileMaxHeight\", \"tilePadding\", \"onClick\", \"onKeyUp\", \"tileCollapsedIconText\", \"tileExpandedIconText\", \"tileCollapsedLabel\", \"tileExpandedLabel\", \"light\"];\n/**\n * Copyright IBM Corp. 2016, 2023\n *\n * This source code is licensed under the Apache-2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { extends as _extends } from '../../_virtual/_rollupPluginBabelHelpers.js';\nimport React__default, { useState, useRef, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport cx from 'classnames';\nimport { CheckboxCheckedFilled, Checkbox, ChevronDown, ArrowRight, Error } from '@carbon/icons-react';\nimport Link from '../Link/Link.js';\nimport deprecate from '../../prop-types/deprecate.js';\nimport { composeEventHandlers } from '../../tools/events.js';\nimport { usePrefix } from '../../internal/usePrefix.js';\nimport useIsomorphicEffect from '../../internal/useIsomorphicEffect.js';\nimport { getInteractiveContent, getRoleContent } from '../../internal/useNoInteractiveChildren.js';\nimport { useMergedRefs } from '../../internal/useMergedRefs.js';\nimport { useFeatureFlag } from '../FeatureFlags/index.js';\nimport { useId } from '../../internal/useId.js';\nimport { matches } from '../../internal/keyboard/match.js';\nimport { Enter, Space } from '../../internal/keyboard/keys.js';\nvar _CheckboxCheckedFille, _Checkbox, _ChevronDown, _ChevronDown2;\nvar Tile = /*#__PURE__*/React__default.forwardRef(function Tile(_ref, ref) {\n  var children = _ref.children,\n    className = _ref.className,\n    _ref$light = _ref.light,\n    light = _ref$light === void 0 ? false : _ref$light,\n    rest = _objectWithoutProperties(_ref, _excluded);\n  var prefix = usePrefix();\n  var tileClasses = cx(\"\".concat(prefix, \"--tile\"), light && \"\".concat(prefix, \"--tile--light\"), className);\n  return /*#__PURE__*/React__default.createElement(\"div\", _extends({\n    className: tileClasses,\n    ref: ref\n  }, rest), children);\n});\nTile.displayName = 'Tile';\nTile.propTypes = {\n  /**\n   * The child nodes.\n   */\n  children: PropTypes.node,\n  /**\n   * The CSS class names.\n   */\n  className: PropTypes.string,\n  /**\n   * `true` to use the light version. For use on $ui-01 backgrounds only.\n   * Don't use this to make tile background color same as container background color.\n   *\n   * @deprecated\n   */\n  light: deprecate(PropTypes.bool, 'The `light` prop for `Tile` is no longer needed and has been deprecated. It will be removed in the next major release. Use the Layer component instead.')\n};\nvar ClickableTile = /*#__PURE__*/React__default.forwardRef(function ClickableTile(_ref2, ref) {\n  var _cx;\n  var children = _ref2.children,\n    className = _ref2.className,\n    _ref2$clicked = _ref2.clicked,\n    clicked = _ref2$clicked === void 0 ? false : _ref2$clicked,\n    disabled = _ref2.disabled,\n    href = _ref2.href,\n    light = _ref2.light,\n    _ref2$onClick = _ref2.onClick,\n    onClick = _ref2$onClick === void 0 ? function () {} : _ref2$onClick,\n    _ref2$onKeyDown = _ref2.onKeyDown,\n    onKeyDown = _ref2$onKeyDown === void 0 ? function () {} : _ref2$onKeyDown,\n    Icon = _ref2.renderIcon,\n    rest = _objectWithoutProperties(_ref2, _excluded2);\n  var prefix = usePrefix();\n  var classes = cx(\"\".concat(prefix, \"--tile\"), \"\".concat(prefix, \"--tile--clickable\"), clicked && \"\".concat(prefix, \"--tile--is-clicked\"), light && \"\".concat(prefix, \"--tile--light\"), className);\n  var _useState = useState(clicked),\n    _useState2 = _slicedToArray(_useState, 2),\n    isSelected = _useState2[0],\n    setIsSelected = _useState2[1];\n  function handleOnClick(evt) {\n    evt.persist();\n    setIsSelected(!isSelected);\n    onClick(evt);\n  }\n  function handleOnKeyDown(evt) {\n    evt.persist();\n    if (matches(evt, [Enter, Space])) {\n      evt.preventDefault();\n      setIsSelected(!isSelected);\n      onKeyDown(evt);\n    }\n    onKeyDown(evt);\n  }\n  var v12DefaultIcons = useFeatureFlag('enable-v12-tile-default-icons');\n  if (v12DefaultIcons) {\n    if (!Icon) {\n      Icon = ArrowRight;\n    }\n    if (disabled) {\n      Icon = Error;\n    }\n  }\n  var iconClasses = cx((_cx = {}, _defineProperty(_cx, \"\".concat(prefix, \"--tile--icon\"), !v12DefaultIcons || v12DefaultIcons && !disabled), _defineProperty(_cx, \"\".concat(prefix, \"--tile--disabled-icon\"), v12DefaultIcons && disabled), _cx));\n  return /*#__PURE__*/React__default.createElement(Link, _extends({\n    className: classes,\n    href: href,\n    onClick: !disabled ? handleOnClick : undefined,\n    onKeyDown: handleOnKeyDown,\n    ref: ref,\n    disabled: disabled\n  }, rest), children, Icon && /*#__PURE__*/React__default.createElement(Icon, {\n    className: iconClasses,\n    \"aria-hidden\": \"true\"\n  }));\n});\nClickableTile.displayName = 'ClickableTile';\nClickableTile.propTypes = {\n  /**\n   * The child nodes.\n   */\n  children: PropTypes.node,\n  /**\n   * The CSS class names.\n   */\n  className: PropTypes.string,\n  /**\n   * Boolean for whether a tile has been clicked.\n   */\n  clicked: PropTypes.bool,\n  /**\n   * Specify whether the ClickableTile should be disabled\n   */\n  disabled: PropTypes.bool,\n  /**\n   * The href for the link.\n   */\n  href: PropTypes.string,\n  /**\n   * `true` to use the light version. For use on $ui-01 backgrounds only.\n   * Don't use this to make tile background color same as container background color.\n   */\n  light: deprecate(PropTypes.bool, 'The `light` prop for `ClickableTile` is no longer needed and has been deprecated. It will be removed in the next major release. Use the Layer component instead.'),\n  /**\n   * Specify the function to run when the ClickableTile is clicked\n   */\n  onClick: PropTypes.func,\n  /**\n   * Specify the function to run when the ClickableTile is interacted with via a keyboard\n   */\n  onKeyDown: PropTypes.func,\n  /**\n   * The rel property for the link.\n   */\n  rel: PropTypes.string,\n  /**\n   * Optional prop to allow overriding the icon rendering.\n   * Can be a React component class\n   */\n  // @ts-expect-error: Invalid derived prop type, seemingly no real solution.\n  renderIcon: PropTypes.oneOfType([PropTypes.func, PropTypes.object])\n};\nvar SelectableTile = /*#__PURE__*/React__default.forwardRef(function SelectableTile(_ref3, ref) {\n  var children = _ref3.children,\n    className = _ref3.className,\n    disabled = _ref3.disabled,\n    id = _ref3.id,\n    light = _ref3.light,\n    _ref3$onClick = _ref3.onClick,\n    onClick = _ref3$onClick === void 0 ? function () {} : _ref3$onClick,\n    _ref3$onChange = _ref3.onChange,\n    onChange = _ref3$onChange === void 0 ? function () {} : _ref3$onChange,\n    _ref3$onKeyDown = _ref3.onKeyDown,\n    onKeyDown = _ref3$onKeyDown === void 0 ? function () {} : _ref3$onKeyDown,\n    _ref3$selected = _ref3.selected,\n    selected = _ref3$selected === void 0 ? false : _ref3$selected,\n    _ref3$tabIndex = _ref3.tabIndex,\n    tabIndex = _ref3$tabIndex === void 0 ? 0 : _ref3$tabIndex,\n    _ref3$title = _ref3.title,\n    title = _ref3$title === void 0 ? 'title' : _ref3$title,\n    rest = _objectWithoutProperties(_ref3, _excluded3);\n  var prefix = usePrefix();\n  var clickHandler = onClick;\n  var keyDownHandler = onKeyDown;\n  var _useState3 = useState(selected),\n    _useState4 = _slicedToArray(_useState3, 2),\n    isSelected = _useState4[0],\n    setIsSelected = _useState4[1];\n  var _useState5 = useState(selected),\n    _useState6 = _slicedToArray(_useState5, 2),\n    prevSelected = _useState6[0],\n    setPrevSelected = _useState6[1];\n  var classes = cx(\"\".concat(prefix, \"--tile\"), \"\".concat(prefix, \"--tile--selectable\"), isSelected && \"\".concat(prefix, \"--tile--is-selected\"), light && \"\".concat(prefix, \"--tile--light\"), disabled && \"\".concat(prefix, \"--tile--disabled\"), className);\n\n  // TODO: rename to handleClick when handleClick prop is deprecated\n  function handleOnClick(evt) {\n    evt.preventDefault();\n    evt.persist();\n    setIsSelected(!isSelected);\n    clickHandler(evt);\n    onChange(evt);\n  }\n\n  // TODO: rename to handleKeyDown when handleKeyDown prop is deprecated\n  function handleOnKeyDown(evt) {\n    evt.persist();\n    if (matches(evt, [Enter, Space])) {\n      evt.preventDefault();\n      setIsSelected(!isSelected);\n      onChange(evt);\n    }\n    keyDownHandler(evt);\n  }\n  function handleChange(event) {\n    setIsSelected(event.target.checked);\n    onChange(event);\n  }\n  if (selected !== prevSelected) {\n    setIsSelected(selected);\n    setPrevSelected(selected);\n  }\n  return /*#__PURE__*/(\n    // eslint-disable-next-line jsx-a11y/interactive-supports-focus\n    React__default.createElement(\"div\", _extends({\n      className: classes,\n      onClick: !disabled ? handleOnClick : undefined,\n      role: \"checkbox\",\n      \"aria-checked\": isSelected,\n      onKeyDown: !disabled ? handleOnKeyDown : undefined\n      // eslint-disable-next-line jsx-a11y/no-noninteractive-tabindex\n      ,\n\n      tabIndex: !disabled ? tabIndex : undefined,\n      ref: ref,\n      id: id,\n      onChange: !disabled ? handleChange : undefined,\n      title: title\n    }, rest), /*#__PURE__*/React__default.createElement(\"span\", {\n      className: \"\".concat(prefix, \"--tile__checkmark \").concat(prefix, \"--tile__checkmark--persistent\")\n    }, isSelected ? _CheckboxCheckedFille || (_CheckboxCheckedFille = /*#__PURE__*/React__default.createElement(CheckboxCheckedFilled, null)) : _Checkbox || (_Checkbox = /*#__PURE__*/React__default.createElement(Checkbox, null))), /*#__PURE__*/React__default.createElement(\"label\", {\n      htmlFor: id,\n      className: \"\".concat(prefix, \"--tile-content\")\n    }, children))\n  );\n});\nSelectableTile.displayName = 'SelectableTile';\nSelectableTile.propTypes = {\n  children: PropTypes.node,\n  className: PropTypes.string,\n  /**\n   * Specify whether the SelectableTile should be disabled\n   */\n  disabled: PropTypes.bool,\n  /**\n   * The ID of the `<input>`.\n   */\n  id: PropTypes.string,\n  /**\n   * `true` to use the light version. For use on $ui-01 backgrounds only.\n   * Don't use this to make tile background color same as container background color.\n   */\n  light: deprecate(PropTypes.bool, 'The `light` prop for `SelectableTile` is no longer needed and has been deprecated. It will be removed in the next major release. Use the Layer component instead.'),\n  /**\n   * The `name` of the `<input>`.\n   * @deprecated\n   */\n  name: PropTypes.string,\n  /**\n   * The empty handler of the `<input>`.\n   */\n  onChange: PropTypes.func,\n  /**\n   * Specify the function to run when the SelectableTile is clicked\n   */\n  onClick: PropTypes.func,\n  /**\n   * Specify the function to run when the SelectableTile is interacted with via a keyboard\n   */\n  onKeyDown: PropTypes.func,\n  /**\n   * `true` to select this tile.\n   */\n  selected: PropTypes.bool,\n  /**\n   * Specify the tab index of the wrapper element\n   */\n  tabIndex: PropTypes.number,\n  /**\n   * The `title` of the `<input>`.\n   */\n  title: PropTypes.string,\n  /**\n   * The value of the `<input>`.\n   * @deprecated\n   */\n  value: PropTypes.oneOfType([PropTypes.string, PropTypes.number]).isRequired\n};\nvar ExpandableTile = /*#__PURE__*/React__default.forwardRef(function ExpandableTile(_ref4, forwardRef) {\n  var _cx2;\n  var _ref4$tabIndex = _ref4.tabIndex,\n    tabIndex = _ref4$tabIndex === void 0 ? 0 : _ref4$tabIndex,\n    className = _ref4.className,\n    children = _ref4.children,\n    _ref4$expanded = _ref4.expanded,\n    expanded = _ref4$expanded === void 0 ? false : _ref4$expanded,\n    _ref4$tileMaxHeight = _ref4.tileMaxHeight,\n    tileMaxHeight = _ref4$tileMaxHeight === void 0 ? 0 : _ref4$tileMaxHeight,\n    _ref4$tilePadding = _ref4.tilePadding,\n    tilePadding = _ref4$tilePadding === void 0 ? 0 : _ref4$tilePadding,\n    onClick = _ref4.onClick,\n    onKeyUp = _ref4.onKeyUp,\n    _ref4$tileCollapsedIc = _ref4.tileCollapsedIconText,\n    tileCollapsedIconText = _ref4$tileCollapsedIc === void 0 ? 'Interact to expand Tile' : _ref4$tileCollapsedIc,\n    _ref4$tileExpandedIco = _ref4.tileExpandedIconText,\n    tileExpandedIconText = _ref4$tileExpandedIco === void 0 ? 'Interact to collapse Tile' : _ref4$tileExpandedIco,\n    tileCollapsedLabel = _ref4.tileCollapsedLabel,\n    tileExpandedLabel = _ref4.tileExpandedLabel,\n    light = _ref4.light,\n    rest = _objectWithoutProperties(_ref4, _excluded4);\n  var _useState7 = useState(tileMaxHeight),\n    _useState8 = _slicedToArray(_useState7, 2),\n    isTileMaxHeight = _useState8[0],\n    setIsTileMaxHeight = _useState8[1];\n  var _useState9 = useState(tilePadding),\n    _useState10 = _slicedToArray(_useState9, 2),\n    isTilePadding = _useState10[0],\n    setIsTilePadding = _useState10[1];\n  var _useState11 = useState(expanded),\n    _useState12 = _slicedToArray(_useState11, 2),\n    prevExpanded = _useState12[0],\n    setPrevExpanded = _useState12[1];\n  var _useState13 = useState(tileMaxHeight),\n    _useState14 = _slicedToArray(_useState13, 2),\n    prevTileMaxHeight = _useState14[0],\n    setPrevTileMaxHeight = _useState14[1];\n  var _useState15 = useState(tilePadding),\n    _useState16 = _slicedToArray(_useState15, 2),\n    prevTilePadding = _useState16[0],\n    setPrevTilePadding = _useState16[1];\n  var _useState17 = useState(expanded),\n    _useState18 = _slicedToArray(_useState17, 2),\n    isExpanded = _useState18[0],\n    setIsExpanded = _useState18[1];\n  var _useState19 = useState(true),\n    _useState20 = _slicedToArray(_useState19, 2),\n    interactive = _useState20[0],\n    setInteractive = _useState20[1];\n  var aboveTheFold = useRef(null);\n  var belowTheFold = useRef(null);\n  var tileContent = useRef(null);\n  var tile = useRef(null);\n  var ref = useMergedRefs([forwardRef, tile]);\n  var prefix = usePrefix();\n  if (expanded !== prevExpanded) {\n    setIsExpanded(expanded);\n    setPrevExpanded(expanded);\n    setMaxHeight();\n  }\n  if (tileMaxHeight !== prevTileMaxHeight) {\n    setIsTileMaxHeight(tileMaxHeight);\n    setPrevTileMaxHeight(tileMaxHeight);\n  }\n  if (tilePadding !== prevTilePadding) {\n    setIsTilePadding(tilePadding);\n    setPrevTilePadding(tilePadding);\n  }\n  function setMaxHeight() {\n    if (isExpanded && tileContent.current) {\n      var _tileContent$current$;\n      setIsTileMaxHeight((_tileContent$current$ = tileContent.current.getBoundingClientRect()) === null || _tileContent$current$ === void 0 ? void 0 : _tileContent$current$.height);\n    }\n    if (aboveTheFold.current) {\n      setIsTileMaxHeight(aboveTheFold.current.getBoundingClientRect().height);\n    }\n  }\n  function handleClick(evt) {\n    evt.persist();\n    setIsExpanded(!isExpanded);\n    setMaxHeight();\n  }\n  function handleKeyUp(evt) {\n    if (evt.target !== tile.current) {\n      if (matches(evt, [Enter, Space])) {\n        evt.preventDefault();\n      }\n    }\n  }\n  function getChildren() {\n    return React__default.Children.toArray(children);\n  }\n  var classNames = cx(\"\".concat(prefix, \"--tile\"), \"\".concat(prefix, \"--tile--expandable\"), (_cx2 = {}, _defineProperty(_cx2, \"\".concat(prefix, \"--tile--is-expanded\"), isExpanded), _defineProperty(_cx2, \"\".concat(prefix, \"--tile--light\"), light), _cx2), className);\n  var interactiveClassNames = cx(\"\".concat(prefix, \"--tile\"), \"\".concat(prefix, \"--tile--expandable\"), \"\".concat(prefix, \"--tile--expandable--interactive\"), isExpanded && \"\".concat(prefix, \"--tile--is-expanded\"), light && \"\".concat(prefix, \"--tile--light\"), className);\n  var chevronInteractiveClassNames = cx(\"\".concat(prefix, \"--tile__chevron\"), \"\".concat(prefix, \"--tile__chevron--interactive\"));\n  var childrenAsArray = getChildren();\n  useIsomorphicEffect(function () {\n    if (!tile.current || !aboveTheFold.current) {\n      return;\n    }\n    var getStyle = window.getComputedStyle(tile.current, null);\n    var node = aboveTheFold.current;\n    var _node$getBoundingClie = node.getBoundingClientRect(),\n      height = _node$getBoundingClie.height;\n    var paddingTop = parseInt(getStyle.getPropertyValue('padding-top'), 10);\n    var paddingBottom = parseInt(getStyle.getPropertyValue('padding-bottom'), 10);\n    setIsTileMaxHeight(height);\n    setIsTilePadding(paddingTop + paddingBottom);\n  }, [isTileMaxHeight]);\n  useIsomorphicEffect(function () {\n    if (!aboveTheFold.current || !belowTheFold.current) {\n      return;\n    }\n\n    // Interactive elements or elements that are given a role should be treated\n    // the same because elements with a role can not be rendered inside a `button`\n    if (!getInteractiveContent(belowTheFold.current) && !getRoleContent(belowTheFold.current) && !getInteractiveContent(aboveTheFold.current) && !getRoleContent(aboveTheFold.current)) {\n      setInteractive(false);\n    }\n  }, []);\n  useIsomorphicEffect(function () {\n    if (!tile.current) {\n      return;\n    }\n    if (isExpanded) {\n      tile.current.style.maxHeight = '';\n    } else {\n      tile.current.style.maxHeight = isTileMaxHeight + isTilePadding + 'px';\n    }\n  }, [isExpanded, isTileMaxHeight, isTilePadding]);\n  useEffect(function () {\n    if (!aboveTheFold.current) {\n      return;\n    }\n    var resizeObserver = new ResizeObserver(function (entries) {\n      var _entries = _slicedToArray(entries, 1),\n        aboveTheFold = _entries[0];\n      setIsTileMaxHeight(aboveTheFold.contentRect.height);\n    });\n    resizeObserver.observe(aboveTheFold.current);\n    return function () {\n      return resizeObserver.disconnect();\n    };\n  }, []);\n  var belowTheFoldId = useId('expandable-tile-interactive');\n  return interactive ? /*#__PURE__*/React__default.createElement(\"div\", _extends({\n    // @ts-expect-error: Needlesly strict & deep typing for the element type\n    ref: ref,\n    className: interactiveClassNames\n  }, rest), /*#__PURE__*/React__default.createElement(\"div\", {\n    ref: tileContent\n  }, /*#__PURE__*/React__default.createElement(\"div\", {\n    ref: aboveTheFold,\n    className: \"\".concat(prefix, \"--tile-content\")\n  }, childrenAsArray[0]), /*#__PURE__*/React__default.createElement(\"button\", {\n    type: \"button\",\n    \"aria-expanded\": isExpanded,\n    \"aria-controls\": belowTheFoldId,\n    onKeyUp: composeEventHandlers([onKeyUp, handleKeyUp]),\n    onClick: composeEventHandlers([onClick, handleClick]),\n    \"aria-label\": isExpanded ? tileExpandedIconText : tileCollapsedIconText,\n    className: chevronInteractiveClassNames\n  }, _ChevronDown || (_ChevronDown = /*#__PURE__*/React__default.createElement(ChevronDown, null))), /*#__PURE__*/React__default.createElement(\"div\", {\n    ref: belowTheFold,\n    className: \"\".concat(prefix, \"--tile-content\"),\n    id: belowTheFoldId\n  }, childrenAsArray[1]))) : /*#__PURE__*/React__default.createElement(\"button\", _extends({\n    type: \"button\"\n    // @ts-expect-error: Needlesly strict & deep typing for the element type\n    ,\n\n    ref: ref,\n    className: classNames,\n    \"aria-expanded\": isExpanded,\n    title: isExpanded ? tileExpandedIconText : tileCollapsedIconText\n  }, rest, {\n    onKeyUp: composeEventHandlers([onKeyUp, handleKeyUp]),\n    onClick: composeEventHandlers([onClick, handleClick]),\n    tabIndex: tabIndex\n  }), /*#__PURE__*/React__default.createElement(\"div\", {\n    ref: tileContent\n  }, /*#__PURE__*/React__default.createElement(\"div\", {\n    ref: aboveTheFold,\n    className: \"\".concat(prefix, \"--tile-content\")\n  }, childrenAsArray[0]), /*#__PURE__*/React__default.createElement(\"div\", {\n    className: \"\".concat(prefix, \"--tile__chevron\")\n  }, /*#__PURE__*/React__default.createElement(\"span\", null, isExpanded ? tileExpandedLabel : tileCollapsedLabel), _ChevronDown2 || (_ChevronDown2 = /*#__PURE__*/React__default.createElement(ChevronDown, null))), /*#__PURE__*/React__default.createElement(\"div\", {\n    ref: belowTheFold,\n    className: \"\".concat(prefix, \"--tile-content\")\n  }, childrenAsArray[1])));\n});\nExpandableTile.propTypes = {\n  children: PropTypes.node,\n  className: PropTypes.string,\n  /**\n   * `true` if the tile is expanded.\n   */\n  expanded: PropTypes.bool,\n  /**\n   * An ID that can be provided to aria-labelledby\n   */\n  id: PropTypes.string,\n  /**\n   * `true` to use the light version. For use on $ui-01 backgrounds only.\n   * Don't use this to make tile background color same as container background color.\n   */\n  light: deprecate(PropTypes.bool, 'The `light` prop for `ExpandableTile` is no longer needed and has been deprecated. It will be removed in the next major release. Use the Layer component instead.'),\n  /**\n   * Specify the function to run when the ExpandableTile is clicked\n   */\n  onClick: PropTypes.func,\n  /**\n   * optional handler to trigger a function when a key is pressed\n   */\n  onKeyUp: PropTypes.func,\n  /**\n   * The `tabindex` attribute.\n   */\n  tabIndex: PropTypes.number,\n  /**\n   * The description of the \"collapsed\" icon that can be read by screen readers.\n   */\n  tileCollapsedIconText: PropTypes.string,\n  /**\n   * When \"collapsed\", a label to appear next to the chevron (e.g., \"View more\").\n   */\n  tileCollapsedLabel: PropTypes.string,\n  /**\n   * The description of the \"expanded\" icon that can be read by screen readers.\n   */\n  tileExpandedIconText: PropTypes.string,\n  /**\n   * When \"expanded\", a label to appear next to the chevron (e.g., \"View less\").\n   */\n  tileExpandedLabel: PropTypes.string\n};\nExpandableTile.displayName = 'ExpandableTile';\nvar TileAboveTheFoldContent = /*#__PURE__*/React__default.forwardRef(function TilAboveTheFoldContent(_ref5, ref) {\n  var children = _ref5.children;\n  var prefix = usePrefix();\n  return /*#__PURE__*/React__default.createElement(\"span\", {\n    ref: ref,\n    className: \"\".concat(prefix, \"--tile-content__above-the-fold\")\n  }, children);\n});\nTileAboveTheFoldContent.propTypes = {\n  /**\n   * The child nodes.\n   */\n  children: PropTypes.node\n};\nTileAboveTheFoldContent.displayName = 'TileAboveTheFoldContent';\nvar TileBelowTheFoldContent = /*#__PURE__*/React__default.forwardRef(function TileBelowTheFoldContent(_ref6, ref) {\n  var children = _ref6.children;\n  var prefix = usePrefix();\n  return /*#__PURE__*/React__default.createElement(\"span\", {\n    ref: ref,\n    className: \"\".concat(prefix, \"--tile-content__below-the-fold\")\n  }, children);\n});\nTileBelowTheFoldContent.propTypes = {\n  /**\n   * The child nodes.\n   */\n  children: PropTypes.node\n};\nTileBelowTheFoldContent.displayName = 'TileBelowTheFoldContent';\nexport { ClickableTile, ExpandableTile, SelectableTile, Tile, TileAboveTheFoldContent, TileBelowTheFoldContent };","map":{"version":3,"names":["extends","_extends","React__default","useState","useRef","useEffect","PropTypes","cx","CheckboxCheckedFilled","Checkbox","ChevronDown","ArrowRight","Error","Link","deprecate","composeEventHandlers","usePrefix","useIsomorphicEffect","getInteractiveContent","getRoleContent","useMergedRefs","useFeatureFlag","useId","matches","Enter","Space","_CheckboxCheckedFille","_Checkbox","_ChevronDown","_ChevronDown2","Tile","forwardRef","_ref","ref","children","className","_ref$light","light","rest","_objectWithoutProperties","_excluded","prefix","tileClasses","concat","createElement","displayName","propTypes","node","string","bool","ClickableTile","_ref2","_cx","_ref2$clicked","clicked","disabled","href","_ref2$onClick","onClick","_ref2$onKeyDown","onKeyDown","Icon","renderIcon","_excluded2","classes","_useState","_useState2","_slicedToArray","isSelected","setIsSelected","handleOnClick","evt","persist","handleOnKeyDown","preventDefault","v12DefaultIcons","iconClasses","_defineProperty","undefined","func","rel","oneOfType","object","SelectableTile","_ref3","id","_ref3$onClick","_ref3$onChange","onChange","_ref3$onKeyDown","_ref3$selected","selected","_ref3$tabIndex","tabIndex","_ref3$title","title","_excluded3","clickHandler","keyDownHandler","_useState3","_useState4","_useState5","_useState6","prevSelected","setPrevSelected","handleChange","event","target","checked","role","htmlFor","name","number","value","isRequired","ExpandableTile","_ref4","_cx2","_ref4$tabIndex","_ref4$expanded","expanded","_ref4$tileMaxHeight","tileMaxHeight","_ref4$tilePadding","tilePadding","onKeyUp","_ref4$tileCollapsedIc","tileCollapsedIconText","_ref4$tileExpandedIco","tileExpandedIconText","tileCollapsedLabel","tileExpandedLabel","_excluded4","_useState7","_useState8","isTileMaxHeight","setIsTileMaxHeight","_useState9","_useState10","isTilePadding","setIsTilePadding","_useState11","_useState12","prevExpanded","setPrevExpanded","_useState13","_useState14","prevTileMaxHeight","setPrevTileMaxHeight","_useState15","_useState16","prevTilePadding","setPrevTilePadding","_useState17","_useState18","isExpanded","setIsExpanded","_useState19","_useState20","interactive","setInteractive","aboveTheFold","belowTheFold","tileContent","tile","setMaxHeight","current","_tileContent$current$","getBoundingClientRect","height","handleClick","handleKeyUp","getChildren","Children","toArray","classNames","interactiveClassNames","chevronInteractiveClassNames","childrenAsArray","getStyle","window","getComputedStyle","_node$getBoundingClie","paddingTop","parseInt","getPropertyValue","paddingBottom","style","maxHeight","resizeObserver","ResizeObserver","entries","_entries","contentRect","observe","disconnect","belowTheFoldId","type","TileAboveTheFoldContent","TilAboveTheFoldContent","_ref5","TileBelowTheFoldContent","_ref6"],"sources":["/home/saymon/Backup/Portifolio/Hematology-App-with-Carbon-Design-System/frontend/node_modules/@carbon/react/es/components/Tile/Tile.js"],"sourcesContent":["/**\n * Copyright IBM Corp. 2016, 2023\n *\n * This source code is licensed under the Apache-2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { extends as _extends } from '../../_virtual/_rollupPluginBabelHelpers.js';\nimport React__default, { useState, useRef, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport cx from 'classnames';\nimport { CheckboxCheckedFilled, Checkbox, ChevronDown, ArrowRight, Error } from '@carbon/icons-react';\nimport Link from '../Link/Link.js';\nimport deprecate from '../../prop-types/deprecate.js';\nimport { composeEventHandlers } from '../../tools/events.js';\nimport { usePrefix } from '../../internal/usePrefix.js';\nimport useIsomorphicEffect from '../../internal/useIsomorphicEffect.js';\nimport { getInteractiveContent, getRoleContent } from '../../internal/useNoInteractiveChildren.js';\nimport { useMergedRefs } from '../../internal/useMergedRefs.js';\nimport { useFeatureFlag } from '../FeatureFlags/index.js';\nimport { useId } from '../../internal/useId.js';\nimport { matches } from '../../internal/keyboard/match.js';\nimport { Enter, Space } from '../../internal/keyboard/keys.js';\n\nvar _CheckboxCheckedFille, _Checkbox, _ChevronDown, _ChevronDown2;\nconst Tile = /*#__PURE__*/React__default.forwardRef(function Tile(_ref, ref) {\n  let {\n    children,\n    className,\n    light = false,\n    ...rest\n  } = _ref;\n  const prefix = usePrefix();\n  const tileClasses = cx(`${prefix}--tile`, light && `${prefix}--tile--light`, className);\n  return /*#__PURE__*/React__default.createElement(\"div\", _extends({\n    className: tileClasses,\n    ref: ref\n  }, rest), children);\n});\nTile.displayName = 'Tile';\nTile.propTypes = {\n  /**\n   * The child nodes.\n   */\n  children: PropTypes.node,\n  /**\n   * The CSS class names.\n   */\n  className: PropTypes.string,\n  /**\n   * `true` to use the light version. For use on $ui-01 backgrounds only.\n   * Don't use this to make tile background color same as container background color.\n   *\n   * @deprecated\n   */\n  light: deprecate(PropTypes.bool, 'The `light` prop for `Tile` is no longer needed and has been deprecated. It will be removed in the next major release. Use the Layer component instead.')\n};\nconst ClickableTile = /*#__PURE__*/React__default.forwardRef(function ClickableTile(_ref2, ref) {\n  let {\n    children,\n    className,\n    clicked = false,\n    disabled,\n    href,\n    light,\n    onClick = () => {},\n    onKeyDown = () => {},\n    renderIcon: Icon,\n    ...rest\n  } = _ref2;\n  const prefix = usePrefix();\n  const classes = cx(`${prefix}--tile`, `${prefix}--tile--clickable`, clicked && `${prefix}--tile--is-clicked`, light && `${prefix}--tile--light`, className);\n  const [isSelected, setIsSelected] = useState(clicked);\n  function handleOnClick(evt) {\n    evt.persist();\n    setIsSelected(!isSelected);\n    onClick(evt);\n  }\n  function handleOnKeyDown(evt) {\n    evt.persist();\n    if (matches(evt, [Enter, Space])) {\n      evt.preventDefault();\n      setIsSelected(!isSelected);\n      onKeyDown(evt);\n    }\n    onKeyDown(evt);\n  }\n  const v12DefaultIcons = useFeatureFlag('enable-v12-tile-default-icons');\n  if (v12DefaultIcons) {\n    if (!Icon) {\n      Icon = ArrowRight;\n    }\n    if (disabled) {\n      Icon = Error;\n    }\n  }\n  const iconClasses = cx({\n    [`${prefix}--tile--icon`]: !v12DefaultIcons || v12DefaultIcons && !disabled,\n    [`${prefix}--tile--disabled-icon`]: v12DefaultIcons && disabled\n  });\n  return /*#__PURE__*/React__default.createElement(Link, _extends({\n    className: classes,\n    href: href,\n    onClick: !disabled ? handleOnClick : undefined,\n    onKeyDown: handleOnKeyDown,\n    ref: ref,\n    disabled: disabled\n  }, rest), children, Icon && /*#__PURE__*/React__default.createElement(Icon, {\n    className: iconClasses,\n    \"aria-hidden\": \"true\"\n  }));\n});\nClickableTile.displayName = 'ClickableTile';\nClickableTile.propTypes = {\n  /**\n   * The child nodes.\n   */\n  children: PropTypes.node,\n  /**\n   * The CSS class names.\n   */\n  className: PropTypes.string,\n  /**\n   * Boolean for whether a tile has been clicked.\n   */\n  clicked: PropTypes.bool,\n  /**\n   * Specify whether the ClickableTile should be disabled\n   */\n  disabled: PropTypes.bool,\n  /**\n   * The href for the link.\n   */\n  href: PropTypes.string,\n  /**\n   * `true` to use the light version. For use on $ui-01 backgrounds only.\n   * Don't use this to make tile background color same as container background color.\n   */\n  light: deprecate(PropTypes.bool, 'The `light` prop for `ClickableTile` is no longer needed and has been deprecated. It will be removed in the next major release. Use the Layer component instead.'),\n  /**\n   * Specify the function to run when the ClickableTile is clicked\n   */\n  onClick: PropTypes.func,\n  /**\n   * Specify the function to run when the ClickableTile is interacted with via a keyboard\n   */\n  onKeyDown: PropTypes.func,\n  /**\n   * The rel property for the link.\n   */\n  rel: PropTypes.string,\n  /**\n   * Optional prop to allow overriding the icon rendering.\n   * Can be a React component class\n   */\n  // @ts-expect-error: Invalid derived prop type, seemingly no real solution.\n  renderIcon: PropTypes.oneOfType([PropTypes.func, PropTypes.object])\n};\nconst SelectableTile = /*#__PURE__*/React__default.forwardRef(function SelectableTile(_ref3, ref) {\n  let {\n    children,\n    className,\n    disabled,\n    id,\n    light,\n    onClick = () => {},\n    onChange = () => {},\n    onKeyDown = () => {},\n    selected = false,\n    tabIndex = 0,\n    title = 'title',\n    ...rest\n  } = _ref3;\n  const prefix = usePrefix();\n  const clickHandler = onClick;\n  const keyDownHandler = onKeyDown;\n  const [isSelected, setIsSelected] = useState(selected);\n  const [prevSelected, setPrevSelected] = useState(selected);\n  const classes = cx(`${prefix}--tile`, `${prefix}--tile--selectable`, isSelected && `${prefix}--tile--is-selected`, light && `${prefix}--tile--light`, disabled && `${prefix}--tile--disabled`, className);\n\n  // TODO: rename to handleClick when handleClick prop is deprecated\n  function handleOnClick(evt) {\n    evt.preventDefault();\n    evt.persist();\n    setIsSelected(!isSelected);\n    clickHandler(evt);\n    onChange(evt);\n  }\n\n  // TODO: rename to handleKeyDown when handleKeyDown prop is deprecated\n  function handleOnKeyDown(evt) {\n    evt.persist();\n    if (matches(evt, [Enter, Space])) {\n      evt.preventDefault();\n      setIsSelected(!isSelected);\n      onChange(evt);\n    }\n    keyDownHandler(evt);\n  }\n  function handleChange(event) {\n    setIsSelected(event.target.checked);\n    onChange(event);\n  }\n  if (selected !== prevSelected) {\n    setIsSelected(selected);\n    setPrevSelected(selected);\n  }\n  return (\n    /*#__PURE__*/\n    // eslint-disable-next-line jsx-a11y/interactive-supports-focus\n    React__default.createElement(\"div\", _extends({\n      className: classes,\n      onClick: !disabled ? handleOnClick : undefined,\n      role: \"checkbox\",\n      \"aria-checked\": isSelected,\n      onKeyDown: !disabled ? handleOnKeyDown : undefined\n      // eslint-disable-next-line jsx-a11y/no-noninteractive-tabindex\n      ,\n      tabIndex: !disabled ? tabIndex : undefined,\n      ref: ref,\n      id: id,\n      onChange: !disabled ? handleChange : undefined,\n      title: title\n    }, rest), /*#__PURE__*/React__default.createElement(\"span\", {\n      className: `${prefix}--tile__checkmark ${prefix}--tile__checkmark--persistent`\n    }, isSelected ? _CheckboxCheckedFille || (_CheckboxCheckedFille = /*#__PURE__*/React__default.createElement(CheckboxCheckedFilled, null)) : _Checkbox || (_Checkbox = /*#__PURE__*/React__default.createElement(Checkbox, null))), /*#__PURE__*/React__default.createElement(\"label\", {\n      htmlFor: id,\n      className: `${prefix}--tile-content`\n    }, children))\n  );\n});\nSelectableTile.displayName = 'SelectableTile';\nSelectableTile.propTypes = {\n  children: PropTypes.node,\n  className: PropTypes.string,\n  /**\n   * Specify whether the SelectableTile should be disabled\n   */\n  disabled: PropTypes.bool,\n  /**\n   * The ID of the `<input>`.\n   */\n  id: PropTypes.string,\n  /**\n   * `true` to use the light version. For use on $ui-01 backgrounds only.\n   * Don't use this to make tile background color same as container background color.\n   */\n  light: deprecate(PropTypes.bool, 'The `light` prop for `SelectableTile` is no longer needed and has been deprecated. It will be removed in the next major release. Use the Layer component instead.'),\n  /**\n   * The `name` of the `<input>`.\n   * @deprecated\n   */\n  name: PropTypes.string,\n  /**\n   * The empty handler of the `<input>`.\n   */\n  onChange: PropTypes.func,\n  /**\n   * Specify the function to run when the SelectableTile is clicked\n   */\n  onClick: PropTypes.func,\n  /**\n   * Specify the function to run when the SelectableTile is interacted with via a keyboard\n   */\n  onKeyDown: PropTypes.func,\n  /**\n   * `true` to select this tile.\n   */\n  selected: PropTypes.bool,\n  /**\n   * Specify the tab index of the wrapper element\n   */\n  tabIndex: PropTypes.number,\n  /**\n   * The `title` of the `<input>`.\n   */\n  title: PropTypes.string,\n  /**\n   * The value of the `<input>`.\n   * @deprecated\n   */\n  value: PropTypes.oneOfType([PropTypes.string, PropTypes.number]).isRequired\n};\nconst ExpandableTile = /*#__PURE__*/React__default.forwardRef(function ExpandableTile(_ref4, forwardRef) {\n  let {\n    tabIndex = 0,\n    className,\n    children,\n    expanded = false,\n    tileMaxHeight = 0,\n    // eslint-disable-line\n    tilePadding = 0,\n    // eslint-disable-line\n    onClick,\n    onKeyUp,\n    tileCollapsedIconText = 'Interact to expand Tile',\n    tileExpandedIconText = 'Interact to collapse Tile',\n    tileCollapsedLabel,\n    tileExpandedLabel,\n    light,\n    ...rest\n  } = _ref4;\n  const [isTileMaxHeight, setIsTileMaxHeight] = useState(tileMaxHeight);\n  const [isTilePadding, setIsTilePadding] = useState(tilePadding);\n  const [prevExpanded, setPrevExpanded] = useState(expanded);\n  const [prevTileMaxHeight, setPrevTileMaxHeight] = useState(tileMaxHeight);\n  const [prevTilePadding, setPrevTilePadding] = useState(tilePadding);\n  const [isExpanded, setIsExpanded] = useState(expanded);\n  const [interactive, setInteractive] = useState(true);\n  const aboveTheFold = useRef(null);\n  const belowTheFold = useRef(null);\n  const tileContent = useRef(null);\n  const tile = useRef(null);\n  const ref = useMergedRefs([forwardRef, tile]);\n  const prefix = usePrefix();\n  if (expanded !== prevExpanded) {\n    setIsExpanded(expanded);\n    setPrevExpanded(expanded);\n    setMaxHeight();\n  }\n  if (tileMaxHeight !== prevTileMaxHeight) {\n    setIsTileMaxHeight(tileMaxHeight);\n    setPrevTileMaxHeight(tileMaxHeight);\n  }\n  if (tilePadding !== prevTilePadding) {\n    setIsTilePadding(tilePadding);\n    setPrevTilePadding(tilePadding);\n  }\n  function setMaxHeight() {\n    if (isExpanded && tileContent.current) {\n      setIsTileMaxHeight(tileContent.current.getBoundingClientRect()?.height);\n    }\n    if (aboveTheFold.current) {\n      setIsTileMaxHeight(aboveTheFold.current.getBoundingClientRect().height);\n    }\n  }\n  function handleClick(evt) {\n    evt.persist();\n    setIsExpanded(!isExpanded);\n    setMaxHeight();\n  }\n  function handleKeyUp(evt) {\n    if (evt.target !== tile.current) {\n      if (matches(evt, [Enter, Space])) {\n        evt.preventDefault();\n      }\n    }\n  }\n  function getChildren() {\n    return React__default.Children.toArray(children);\n  }\n  const classNames = cx(`${prefix}--tile`, `${prefix}--tile--expandable`, {\n    [`${prefix}--tile--is-expanded`]: isExpanded,\n    [`${prefix}--tile--light`]: light\n  }, className);\n  const interactiveClassNames = cx(`${prefix}--tile`, `${prefix}--tile--expandable`, `${prefix}--tile--expandable--interactive`, isExpanded && `${prefix}--tile--is-expanded`, light && `${prefix}--tile--light`, className);\n  const chevronInteractiveClassNames = cx(`${prefix}--tile__chevron`, `${prefix}--tile__chevron--interactive`);\n  const childrenAsArray = getChildren();\n  useIsomorphicEffect(() => {\n    if (!tile.current || !aboveTheFold.current) {\n      return;\n    }\n    const getStyle = window.getComputedStyle(tile.current, null);\n    const {\n      current: node\n    } = aboveTheFold;\n    const {\n      height\n    } = node.getBoundingClientRect();\n    const paddingTop = parseInt(getStyle.getPropertyValue('padding-top'), 10);\n    const paddingBottom = parseInt(getStyle.getPropertyValue('padding-bottom'), 10);\n    setIsTileMaxHeight(height);\n    setIsTilePadding(paddingTop + paddingBottom);\n  }, [isTileMaxHeight]);\n  useIsomorphicEffect(() => {\n    if (!aboveTheFold.current || !belowTheFold.current) {\n      return;\n    }\n\n    // Interactive elements or elements that are given a role should be treated\n    // the same because elements with a role can not be rendered inside a `button`\n    if (!getInteractiveContent(belowTheFold.current) && !getRoleContent(belowTheFold.current) && !getInteractiveContent(aboveTheFold.current) && !getRoleContent(aboveTheFold.current)) {\n      setInteractive(false);\n    }\n  }, []);\n  useIsomorphicEffect(() => {\n    if (!tile.current) {\n      return;\n    }\n    if (isExpanded) {\n      tile.current.style.maxHeight = '';\n    } else {\n      tile.current.style.maxHeight = isTileMaxHeight + isTilePadding + 'px';\n    }\n  }, [isExpanded, isTileMaxHeight, isTilePadding]);\n  useEffect(() => {\n    if (!aboveTheFold.current) {\n      return;\n    }\n    const resizeObserver = new ResizeObserver(entries => {\n      const [aboveTheFold] = entries;\n      setIsTileMaxHeight(aboveTheFold.contentRect.height);\n    });\n    resizeObserver.observe(aboveTheFold.current);\n    return () => resizeObserver.disconnect();\n  }, []);\n  const belowTheFoldId = useId('expandable-tile-interactive');\n  return interactive ? /*#__PURE__*/React__default.createElement(\"div\", _extends({\n    // @ts-expect-error: Needlesly strict & deep typing for the element type\n    ref: ref,\n    className: interactiveClassNames\n  }, rest), /*#__PURE__*/React__default.createElement(\"div\", {\n    ref: tileContent\n  }, /*#__PURE__*/React__default.createElement(\"div\", {\n    ref: aboveTheFold,\n    className: `${prefix}--tile-content`\n  }, childrenAsArray[0]), /*#__PURE__*/React__default.createElement(\"button\", {\n    type: \"button\",\n    \"aria-expanded\": isExpanded,\n    \"aria-controls\": belowTheFoldId,\n    onKeyUp: composeEventHandlers([onKeyUp, handleKeyUp]),\n    onClick: composeEventHandlers([onClick, handleClick]),\n    \"aria-label\": isExpanded ? tileExpandedIconText : tileCollapsedIconText,\n    className: chevronInteractiveClassNames\n  }, _ChevronDown || (_ChevronDown = /*#__PURE__*/React__default.createElement(ChevronDown, null))), /*#__PURE__*/React__default.createElement(\"div\", {\n    ref: belowTheFold,\n    className: `${prefix}--tile-content`,\n    id: belowTheFoldId\n  }, childrenAsArray[1]))) : /*#__PURE__*/React__default.createElement(\"button\", _extends({\n    type: \"button\"\n    // @ts-expect-error: Needlesly strict & deep typing for the element type\n    ,\n    ref: ref,\n    className: classNames,\n    \"aria-expanded\": isExpanded,\n    title: isExpanded ? tileExpandedIconText : tileCollapsedIconText\n  }, rest, {\n    onKeyUp: composeEventHandlers([onKeyUp, handleKeyUp]),\n    onClick: composeEventHandlers([onClick, handleClick]),\n    tabIndex: tabIndex\n  }), /*#__PURE__*/React__default.createElement(\"div\", {\n    ref: tileContent\n  }, /*#__PURE__*/React__default.createElement(\"div\", {\n    ref: aboveTheFold,\n    className: `${prefix}--tile-content`\n  }, childrenAsArray[0]), /*#__PURE__*/React__default.createElement(\"div\", {\n    className: `${prefix}--tile__chevron`\n  }, /*#__PURE__*/React__default.createElement(\"span\", null, isExpanded ? tileExpandedLabel : tileCollapsedLabel), _ChevronDown2 || (_ChevronDown2 = /*#__PURE__*/React__default.createElement(ChevronDown, null))), /*#__PURE__*/React__default.createElement(\"div\", {\n    ref: belowTheFold,\n    className: `${prefix}--tile-content`\n  }, childrenAsArray[1])));\n});\nExpandableTile.propTypes = {\n  children: PropTypes.node,\n  className: PropTypes.string,\n  /**\n   * `true` if the tile is expanded.\n   */\n  expanded: PropTypes.bool,\n  /**\n   * An ID that can be provided to aria-labelledby\n   */\n  id: PropTypes.string,\n  /**\n   * `true` to use the light version. For use on $ui-01 backgrounds only.\n   * Don't use this to make tile background color same as container background color.\n   */\n  light: deprecate(PropTypes.bool, 'The `light` prop for `ExpandableTile` is no longer needed and has been deprecated. It will be removed in the next major release. Use the Layer component instead.'),\n  /**\n   * Specify the function to run when the ExpandableTile is clicked\n   */\n  onClick: PropTypes.func,\n  /**\n   * optional handler to trigger a function when a key is pressed\n   */\n  onKeyUp: PropTypes.func,\n  /**\n   * The `tabindex` attribute.\n   */\n  tabIndex: PropTypes.number,\n  /**\n   * The description of the \"collapsed\" icon that can be read by screen readers.\n   */\n  tileCollapsedIconText: PropTypes.string,\n  /**\n   * When \"collapsed\", a label to appear next to the chevron (e.g., \"View more\").\n   */\n  tileCollapsedLabel: PropTypes.string,\n  /**\n   * The description of the \"expanded\" icon that can be read by screen readers.\n   */\n  tileExpandedIconText: PropTypes.string,\n  /**\n   * When \"expanded\", a label to appear next to the chevron (e.g., \"View less\").\n   */\n  tileExpandedLabel: PropTypes.string\n};\nExpandableTile.displayName = 'ExpandableTile';\nconst TileAboveTheFoldContent = /*#__PURE__*/React__default.forwardRef(function TilAboveTheFoldContent(_ref5, ref) {\n  let {\n    children\n  } = _ref5;\n  const prefix = usePrefix();\n  return /*#__PURE__*/React__default.createElement(\"span\", {\n    ref: ref,\n    className: `${prefix}--tile-content__above-the-fold`\n  }, children);\n});\nTileAboveTheFoldContent.propTypes = {\n  /**\n   * The child nodes.\n   */\n  children: PropTypes.node\n};\nTileAboveTheFoldContent.displayName = 'TileAboveTheFoldContent';\nconst TileBelowTheFoldContent = /*#__PURE__*/React__default.forwardRef(function TileBelowTheFoldContent(_ref6, ref) {\n  let {\n    children\n  } = _ref6;\n  const prefix = usePrefix();\n  return /*#__PURE__*/React__default.createElement(\"span\", {\n    ref: ref,\n    className: `${prefix}--tile-content__below-the-fold`\n  }, children);\n});\nTileBelowTheFoldContent.propTypes = {\n  /**\n   * The child nodes.\n   */\n  children: PropTypes.node\n};\nTileBelowTheFoldContent.displayName = 'TileBelowTheFoldContent';\n\nexport { ClickableTile, ExpandableTile, SelectableTile, Tile, TileAboveTheFoldContent, TileBelowTheFoldContent };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}