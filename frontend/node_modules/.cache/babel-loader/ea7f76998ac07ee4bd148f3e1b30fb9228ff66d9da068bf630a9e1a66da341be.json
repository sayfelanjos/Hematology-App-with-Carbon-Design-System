{"ast":null,"code":"import _defineProperty from \"/home/saymon/Backup/Portifolio/Hematology-App-with-Carbon-Design-System/frontend/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nimport _objectWithoutProperties from \"/home/saymon/Backup/Portifolio/Hematology-App-with-Carbon-Design-System/frontend/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js\";\nvar _excluded = [\"className\", \"isPassword\"];\n/**\n * Copyright IBM Corp. 2016, 2023\n *\n * This source code is licensed under the Apache-2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { extends as _extends } from '../../_virtual/_rollupPluginBabelHelpers.js';\nimport PropTypes from 'prop-types';\nimport React__default from 'react';\nimport cx from 'classnames';\nimport '../TextInput/index.js';\nimport '../TextInput/ControlledPasswordInput.js';\nimport PasswordInput from '../TextInput/PasswordInput.js';\nimport { usePrefix } from '../../internal/usePrefix.js';\nimport { FormContext } from '../FluidForm/FormContext.js';\nimport TextInput from '../TextInput/TextInput.js';\nfunction FluidTextInput(_ref) {\n  var className = _ref.className,\n    isPassword = _ref.isPassword,\n    other = _objectWithoutProperties(_ref, _excluded);\n  var prefix = usePrefix();\n  var classNames = cx(className, _defineProperty({}, \"\".concat(prefix, \"--text-input--fluid\"), !isPassword));\n  return /*#__PURE__*/React__default.createElement(FormContext.Provider, {\n    value: {\n      isFluid: true\n    }\n  }, isPassword ? /*#__PURE__*/React__default.createElement(PasswordInput, _extends({\n    className: classNames\n  }, other)) : /*#__PURE__*/React__default.createElement(TextInput, _extends({\n    className: classNames\n  }, other)));\n}\nFluidTextInput.propTypes = {\n  /**\n   * Specify an optional className to be applied to the outer FluidForm wrapper\n   */\n  className: PropTypes.string,\n  /**\n   * Optionally provide the default value of the `<input>`\n   */\n  defaultValue: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  /**\n   * Specify whether the `<input>` should be disabled\n   */\n  disabled: PropTypes.bool,\n  /**\n   * Specify a custom `id` for the `<input>`\n   */\n  id: PropTypes.string.isRequired,\n  /**\n   * Specify whether the control is currently invalid\n   */\n  invalid: PropTypes.bool,\n  /**\n   * Provide the text that is displayed when the control is in an invalid state\n   */\n  invalidText: PropTypes.node,\n  /**\n   * Specify whether the control is a password input\n   */\n  isPassword: PropTypes.bool,\n  /**\n   * Provide the text that will be read by a screen reader when visiting this\n   * control\n   */\n  labelText: PropTypes.node.isRequired,\n  /**\n   * Optionally provide an `onChange` handler that is called whenever `<input>`\n   * is updated\n   */\n  onChange: PropTypes.func,\n  /**\n   * Optionally provide an `onClick` handler that is called whenever the\n   * `<input>` is clicked\n   */\n  onClick: PropTypes.func,\n  /**\n   * Specify the placeholder attribute for the `<input>`\n   */\n  placeholder: PropTypes.string,\n  /**\n   * Specify the value of the `<input>`\n   */\n  value: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  /**\n   * Specify whether the control is currently in warning state\n   */\n  warn: PropTypes.bool,\n  /**\n   * Provide the text that is displayed when the control is in warning state\n   */\n  warnText: PropTypes.node\n};\nexport { FluidTextInput as default };","map":{"version":3,"names":["extends","_extends","PropTypes","React__default","cx","PasswordInput","usePrefix","FormContext","TextInput","FluidTextInput","_ref","className","isPassword","other","_objectWithoutProperties","_excluded","prefix","classNames","_defineProperty","concat","createElement","Provider","value","isFluid","propTypes","string","defaultValue","oneOfType","number","disabled","bool","id","isRequired","invalid","invalidText","node","labelText","onChange","func","onClick","placeholder","warn","warnText","default"],"sources":["/home/saymon/Backup/Portifolio/Hematology-App-with-Carbon-Design-System/frontend/node_modules/@carbon/react/es/components/FluidTextInput/FluidTextInput.js"],"sourcesContent":["/**\n * Copyright IBM Corp. 2016, 2023\n *\n * This source code is licensed under the Apache-2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { extends as _extends } from '../../_virtual/_rollupPluginBabelHelpers.js';\nimport PropTypes from 'prop-types';\nimport React__default from 'react';\nimport cx from 'classnames';\nimport '../TextInput/index.js';\nimport '../TextInput/ControlledPasswordInput.js';\nimport PasswordInput from '../TextInput/PasswordInput.js';\nimport { usePrefix } from '../../internal/usePrefix.js';\nimport { FormContext } from '../FluidForm/FormContext.js';\nimport TextInput from '../TextInput/TextInput.js';\n\nfunction FluidTextInput(_ref) {\n  let {\n    className,\n    isPassword,\n    ...other\n  } = _ref;\n  const prefix = usePrefix();\n  const classNames = cx(className, {\n    [`${prefix}--text-input--fluid`]: !isPassword\n  });\n  return /*#__PURE__*/React__default.createElement(FormContext.Provider, {\n    value: {\n      isFluid: true\n    }\n  }, isPassword ? /*#__PURE__*/React__default.createElement(PasswordInput, _extends({\n    className: classNames\n  }, other)) : /*#__PURE__*/React__default.createElement(TextInput, _extends({\n    className: classNames\n  }, other)));\n}\nFluidTextInput.propTypes = {\n  /**\n   * Specify an optional className to be applied to the outer FluidForm wrapper\n   */\n  className: PropTypes.string,\n  /**\n   * Optionally provide the default value of the `<input>`\n   */\n  defaultValue: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  /**\n   * Specify whether the `<input>` should be disabled\n   */\n  disabled: PropTypes.bool,\n  /**\n   * Specify a custom `id` for the `<input>`\n   */\n  id: PropTypes.string.isRequired,\n  /**\n   * Specify whether the control is currently invalid\n   */\n  invalid: PropTypes.bool,\n  /**\n   * Provide the text that is displayed when the control is in an invalid state\n   */\n  invalidText: PropTypes.node,\n  /**\n   * Specify whether the control is a password input\n   */\n  isPassword: PropTypes.bool,\n  /**\n   * Provide the text that will be read by a screen reader when visiting this\n   * control\n   */\n  labelText: PropTypes.node.isRequired,\n  /**\n   * Optionally provide an `onChange` handler that is called whenever `<input>`\n   * is updated\n   */\n  onChange: PropTypes.func,\n  /**\n   * Optionally provide an `onClick` handler that is called whenever the\n   * `<input>` is clicked\n   */\n  onClick: PropTypes.func,\n  /**\n   * Specify the placeholder attribute for the `<input>`\n   */\n  placeholder: PropTypes.string,\n  /**\n   * Specify the value of the `<input>`\n   */\n  value: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  /**\n   * Specify whether the control is currently in warning state\n   */\n  warn: PropTypes.bool,\n  /**\n   * Provide the text that is displayed when the control is in warning state\n   */\n  warnText: PropTypes.node\n};\n\nexport { FluidTextInput as default };\n"],"mappings":";;;AAAA;AACA;AACA;AACA;AACA;AACA;;AAEA,SAASA,OAAO,IAAIC,QAAQ,QAAQ,6CAA6C;AACjF,OAAOC,SAAS,MAAM,YAAY;AAClC,OAAOC,cAAc,MAAM,OAAO;AAClC,OAAOC,EAAE,MAAM,YAAY;AAC3B,OAAO,uBAAuB;AAC9B,OAAO,yCAAyC;AAChD,OAAOC,aAAa,MAAM,+BAA+B;AACzD,SAASC,SAAS,QAAQ,6BAA6B;AACvD,SAASC,WAAW,QAAQ,6BAA6B;AACzD,OAAOC,SAAS,MAAM,2BAA2B;AAEjD,SAASC,cAAcA,CAACC,IAAI,EAAE;EAC5B,IACEC,SAAS,GAGPD,IAAI,CAHNC,SAAS;IACTC,UAAU,GAERF,IAAI,CAFNE,UAAU;IACPC,KAAK,GAAAC,wBAAA,CACNJ,IAAI,EAAAK,SAAA;EACR,IAAMC,MAAM,GAAGV,SAAS,CAAC,CAAC;EAC1B,IAAMW,UAAU,GAAGb,EAAE,CAACO,SAAS,EAAAO,eAAA,QAAAC,MAAA,CACzBH,MAAM,0BAAwB,CAACJ,UAAU,CAC9C,CAAC;EACF,OAAO,aAAaT,cAAc,CAACiB,aAAa,CAACb,WAAW,CAACc,QAAQ,EAAE;IACrEC,KAAK,EAAE;MACLC,OAAO,EAAE;IACX;EACF,CAAC,EAAEX,UAAU,GAAG,aAAaT,cAAc,CAACiB,aAAa,CAACf,aAAa,EAAEJ,QAAQ,CAAC;IAChFU,SAAS,EAAEM;EACb,CAAC,EAAEJ,KAAK,CAAC,CAAC,GAAG,aAAaV,cAAc,CAACiB,aAAa,CAACZ,SAAS,EAAEP,QAAQ,CAAC;IACzEU,SAAS,EAAEM;EACb,CAAC,EAAEJ,KAAK,CAAC,CAAC,CAAC;AACb;AACAJ,cAAc,CAACe,SAAS,GAAG;EACzB;AACF;AACA;EACEb,SAAS,EAAET,SAAS,CAACuB,MAAM;EAC3B;AACF;AACA;EACEC,YAAY,EAAExB,SAAS,CAACyB,SAAS,CAAC,CAACzB,SAAS,CAACuB,MAAM,EAAEvB,SAAS,CAAC0B,MAAM,CAAC,CAAC;EACvE;AACF;AACA;EACEC,QAAQ,EAAE3B,SAAS,CAAC4B,IAAI;EACxB;AACF;AACA;EACEC,EAAE,EAAE7B,SAAS,CAACuB,MAAM,CAACO,UAAU;EAC/B;AACF;AACA;EACEC,OAAO,EAAE/B,SAAS,CAAC4B,IAAI;EACvB;AACF;AACA;EACEI,WAAW,EAAEhC,SAAS,CAACiC,IAAI;EAC3B;AACF;AACA;EACEvB,UAAU,EAAEV,SAAS,CAAC4B,IAAI;EAC1B;AACF;AACA;AACA;EACEM,SAAS,EAAElC,SAAS,CAACiC,IAAI,CAACH,UAAU;EACpC;AACF;AACA;AACA;EACEK,QAAQ,EAAEnC,SAAS,CAACoC,IAAI;EACxB;AACF;AACA;AACA;EACEC,OAAO,EAAErC,SAAS,CAACoC,IAAI;EACvB;AACF;AACA;EACEE,WAAW,EAAEtC,SAAS,CAACuB,MAAM;EAC7B;AACF;AACA;EACEH,KAAK,EAAEpB,SAAS,CAACyB,SAAS,CAAC,CAACzB,SAAS,CAACuB,MAAM,EAAEvB,SAAS,CAAC0B,MAAM,CAAC,CAAC;EAChE;AACF;AACA;EACEa,IAAI,EAAEvC,SAAS,CAAC4B,IAAI;EACpB;AACF;AACA;EACEY,QAAQ,EAAExC,SAAS,CAACiC;AACtB,CAAC;AAED,SAAS1B,cAAc,IAAIkC,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}