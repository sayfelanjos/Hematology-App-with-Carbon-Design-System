{"ast":null,"code":"/**\n * Copyright IBM Corp. 2016, 2023\n *\n * This source code is licensed under the Apache-2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { extends as _extends } from '../../_virtual/_rollupPluginBabelHelpers.js';\nimport { ChevronLeft, ChevronRight, Close } from '@carbon/icons-react';\nimport { breakpoints } from '@carbon/layout';\nimport cx from 'classnames';\nimport debounce from 'lodash.debounce';\nimport PropTypes from 'prop-types';\nimport React__default, { useState, useRef, useCallback, useEffect, forwardRef } from 'react';\nimport { isElement } from 'react-is';\nimport '../Tooltip/DefinitionTooltip.js';\nimport { Tooltip } from '../Tooltip/Tooltip.js';\nimport { useControllableState } from '../../internal/useControllableState.js';\nimport { useEffectOnce } from '../../internal/useEffectOnce.js';\nimport { useId } from '../../internal/useId.js';\nimport useIsomorphicEffect from '../../internal/useIsomorphicEffect.js';\nimport { useMergedRefs } from '../../internal/useMergedRefs.js';\nimport { getInteractiveContent } from '../../internal/useNoInteractiveChildren.js';\nimport { usePrefix } from '../../internal/usePrefix.js';\nimport { usePressable } from './usePressable.js';\nimport deprecate from '../../prop-types/deprecate.js';\nimport { useEvent } from '../../internal/useEvent.js';\nimport { useMatchMedia } from '../../internal/useMatchMedia.js';\nimport { matches, match } from '../../internal/keyboard/match.js';\nimport { ArrowRight, ArrowLeft, Home, End, Delete } from '../../internal/keyboard/keys.js';\nvar _ChevronLeft, _ChevronRight, _Close;\n\n// Used to manage the overall state of the Tabs\n\nconst TabsContext = /*#__PURE__*/React__default.createContext({\n  baseId: '',\n  activeIndex: 0,\n  defaultSelectedIndex: 0,\n  dismissable: false,\n  onTabCloseRequest() {},\n  setActiveIndex() {},\n  selectedIndex: 0,\n  setSelectedIndex() {}\n});\n\n// Used to keep track of position in a tablist\nconst TabContext = /*#__PURE__*/React__default.createContext({\n  index: 0,\n  hasSecondaryLabel: false\n});\nconst lgMediaQuery = `(min-width: ${breakpoints.lg.width})`;\n\n// Used to keep track of position in a list of tab panels\nconst TabPanelContext = /*#__PURE__*/React__default.createContext(0);\n\n/**\n * Tabs\n */\n\nfunction Tabs(_ref) {\n  let {\n    children,\n    defaultSelectedIndex = 0,\n    onChange,\n    selectedIndex: controlledSelectedIndex,\n    dismissable,\n    onTabCloseRequest\n  } = _ref;\n  const baseId = useId('ccs');\n  // The active index is used to track the element which has focus in our tablist\n  const [activeIndex, setActiveIndex] = useState(defaultSelectedIndex);\n  // The selected index is used for the tab/panel pairing which is \"visible\"\n  const [selectedIndex, setSelectedIndex] = useControllableState({\n    value: controlledSelectedIndex,\n    defaultValue: defaultSelectedIndex,\n    onChange: value => onChange?.({\n      selectedIndex: value\n    })\n  });\n  const value = {\n    baseId,\n    activeIndex,\n    defaultSelectedIndex,\n    dismissable,\n    onTabCloseRequest,\n    setActiveIndex,\n    selectedIndex,\n    setSelectedIndex\n  };\n  return /*#__PURE__*/React__default.createElement(TabsContext.Provider, {\n    value: value\n  }, children);\n}\nTabs.propTypes = {\n  /**\n   * Provide child elements to be rendered inside the `Tabs`.\n   * These elements should render either `TabsList` or `TabsPanels`\n   */\n  children: PropTypes.node,\n  /**\n   * Specify which content tab should be initially selected when the component\n   * is first rendered\n   */\n  defaultSelectedIndex: PropTypes.number,\n  /**\n   * Whether the render Tab children should be dismissable.\n   */\n  dismissable: PropTypes.bool,\n  /**\n   * Provide an optional function which is called whenever the state of the\n   * `Tabs` changes\n   */\n  onChange: PropTypes.func,\n  /**\n   * If specifying the `onTabCloseRequest` prop, provide a callback function\n   * responsible for removing the tab when close button is pressed on one of the Tab elements\n   */\n  onTabCloseRequest: props => {\n    if (props.dismissable && !props.onTabCloseRequest) {\n      return new Error('dismissable property specified without also providing an onTabCloseRequest property.');\n    }\n    return undefined;\n  },\n  /**\n   * Control which content panel is currently selected. This puts the component\n   * in a controlled mode and should be used along with `onChange`\n   */\n  selectedIndex: PropTypes.number\n};\n\n/**\n * Get the next index for a given keyboard event\n * given a count of the total items and the current index\n */\nfunction getNextIndex(event, total, index) {\n  switch (true) {\n    case match(event, ArrowRight):\n      return (index + 1) % total;\n    case match(event, ArrowLeft):\n      return (total + index - 1) % total;\n    case match(event, Home):\n      return 0;\n    case match(event, End):\n      return total - 1;\n    default:\n      return index;\n  }\n}\n\n/**\n * TabList\n */\n\nfunction TabList(_ref2) {\n  let {\n    activation = 'automatic',\n    'aria-label': label,\n    children,\n    className: customClassName,\n    contained = false,\n    fullWidth = false,\n    iconSize,\n    leftOverflowButtonProps,\n    light,\n    rightOverflowButtonProps,\n    scrollDebounceWait = 200,\n    scrollIntoView,\n    ...rest\n  } = _ref2;\n  const {\n    activeIndex,\n    selectedIndex,\n    setSelectedIndex,\n    setActiveIndex,\n    dismissable\n  } = React__default.useContext(TabsContext);\n  const prefix = usePrefix();\n  const ref = useRef(null);\n  const previousButton = useRef(null);\n  const nextButton = useRef(null);\n  const [isScrollable, setIsScrollable] = useState(false);\n  const [scrollLeft, setScrollLeft] = useState(0);\n  let hasSecondaryLabelTabs = false;\n  if (contained) {\n    hasSecondaryLabelTabs = React__default.Children.toArray(children).some(child => {\n      return isElement(child) && !!child.props.secondaryLabel;\n    });\n  }\n  const isLg = useMatchMedia(lgMediaQuery);\n  const distributeWidth = fullWidth && contained && isLg && React__default.Children.toArray(children).length < 9;\n  const className = cx(`${prefix}--tabs`, {\n    [`${prefix}--tabs--contained`]: contained,\n    [`${prefix}--tabs--light`]: light,\n    [`${prefix}--tabs__icon--default`]: iconSize === 'default',\n    [`${prefix}--tabs__icon--lg`]: iconSize === 'lg',\n    // TODO: V12 - Remove this class\n    [`${prefix}--layout--size-lg`]: iconSize === 'lg',\n    [`${prefix}--tabs--tall`]: hasSecondaryLabelTabs,\n    [`${prefix}--tabs--full-width`]: distributeWidth\n  }, customClassName);\n\n  // Previous Button\n  // VISIBLE IF:\n  //   SCROLLABLE\n  //   AND SCROLL_LEFT > 0\n  const buttonWidth = 44;\n  // Next Button\n  // VISIBLE IF:\n  //   SCROLLABLE\n  //   AND SCROLL_LEFT + CLIENT_WIDTH < SCROLL_WIDTH\n  const [isNextButtonVisible, setIsNextButtonVisible] = useState(ref.current ? scrollLeft + buttonWidth + ref.current.clientWidth < ref.current.scrollWidth : false);\n  const isPreviousButtonVisible = ref.current ? isScrollable && scrollLeft > 0 : false;\n  const previousButtonClasses = cx(`${prefix}--tab--overflow-nav-button`, `${prefix}--tab--overflow-nav-button--previous`, {\n    [`${prefix}--tab--overflow-nav-button--hidden`]: !isPreviousButtonVisible\n  });\n  const nextButtonClasses = cx(`${prefix}--tab--overflow-nav-button`, `${prefix}--tab--overflow-nav-button--next`, {\n    [`${prefix}--tab--overflow-nav-button--hidden`]: !isNextButtonVisible\n  });\n  const tabs = useRef([]);\n  const debouncedOnScroll = useCallback(() => {\n    return debounce(event => {\n      setScrollLeft(event.target.scrollLeft);\n    }, scrollDebounceWait);\n  }, [scrollDebounceWait]);\n  function onKeyDown(event) {\n    if (matches(event, [ArrowRight, ArrowLeft, Home, End])) {\n      event.preventDefault();\n      const activeTabs = tabs.current.filter(tab => !tab.disabled);\n      const currentIndex = activeTabs.indexOf(tabs.current[activation === 'automatic' ? selectedIndex : activeIndex]);\n      const nextIndex = tabs.current.indexOf(activeTabs[getNextIndex(event, activeTabs.length, currentIndex)]);\n      if (activation === 'automatic') {\n        setSelectedIndex(nextIndex);\n      } else if (activation === 'manual') {\n        setActiveIndex(nextIndex);\n      }\n      tabs.current[nextIndex]?.focus();\n    }\n  }\n  useEffectOnce(() => {\n    const tab = tabs.current[selectedIndex];\n    if (scrollIntoView && tab) {\n      tab.scrollIntoView({\n        block: 'nearest',\n        inline: 'nearest'\n      });\n    }\n  });\n  useEffect(() => {\n    setIsNextButtonVisible(ref.current ? scrollLeft + buttonWidth + ref.current.clientWidth < ref.current.scrollWidth : false);\n    if (dismissable) {\n      if (ref.current) {\n        setIsScrollable(ref.current.scrollWidth > ref.current.clientWidth);\n      }\n    }\n  }, [scrollLeft, children, dismissable]);\n  useEffectOnce(() => {\n    if (tabs.current[selectedIndex].disabled) {\n      const activeTabs = tabs.current.filter(tab => {\n        return !tab.disabled;\n      });\n      if (activeTabs.length > 0) {\n        const tab = activeTabs[0];\n        setSelectedIndex(tabs.current.indexOf(tab));\n      }\n    }\n  });\n  useIsomorphicEffect(() => {\n    if (ref.current) {\n      setIsScrollable(ref.current.scrollWidth > ref.current.clientWidth);\n    }\n    function handler() {\n      if (ref.current) {\n        setIsScrollable(ref.current.scrollWidth > ref.current.clientWidth);\n      }\n    }\n    const debouncedHandler = debounce(handler, 200);\n    window.addEventListener('resize', debouncedHandler);\n    return () => {\n      debouncedHandler.cancel();\n      window.removeEventListener('resize', debouncedHandler);\n    };\n  }, []);\n\n  // updates scroll location for all scroll behavior.\n  useIsomorphicEffect(() => {\n    if (scrollLeft !== null && ref.current) {\n      ref.current.scrollLeft = scrollLeft;\n    }\n  }, [scrollLeft]);\n  useIsomorphicEffect(() => {\n    if (!isScrollable || !ref.current) {\n      return;\n    }\n    const tab = activation === 'manual' ? tabs.current[activeIndex] : tabs.current[selectedIndex];\n    if (tab) {\n      // The width of the \"scroll buttons\"\n\n      // The start and end position of the selected tab\n      const {\n        width: tabWidth\n      } = tab.getBoundingClientRect();\n      const start = tab.offsetLeft;\n      const end = tab.offsetLeft + tabWidth;\n\n      // The start and end of the visible area for the tabs\n      const visibleStart = ref.current.scrollLeft + buttonWidth;\n      const visibleEnd = ref.current.scrollLeft + ref.current.clientWidth - buttonWidth;\n\n      // The beginning of the tab is clipped and not visible\n      if (start < visibleStart) {\n        setScrollLeft(start - buttonWidth);\n      }\n\n      // The end of the tab is clipped and not visible\n      if (end > visibleEnd) {\n        setScrollLeft(end + buttonWidth - ref.current.clientWidth);\n      }\n    }\n  }, [activation, activeIndex, selectedIndex, isScrollable, children]);\n  usePressable(previousButton, {\n    onPress(_ref3) {\n      let {\n        longPress\n      } = _ref3;\n      if (!longPress && ref.current) {\n        setScrollLeft(Math.max(scrollLeft - ref.current.scrollWidth / tabs.current.length * 1.5, 0));\n      }\n    },\n    onLongPress() {\n      return createLongPressBehavior(ref, 'backward', setScrollLeft);\n    }\n  });\n  usePressable(nextButton, {\n    onPress(_ref4) {\n      let {\n        longPress\n      } = _ref4;\n      if (!longPress && ref.current) {\n        setScrollLeft(Math.min(scrollLeft + ref.current.scrollWidth / tabs.current.length * 1.5, ref.current.scrollWidth - ref.current.clientWidth));\n      }\n    },\n    onLongPress() {\n      return createLongPressBehavior(ref, 'forward', setScrollLeft);\n    }\n  });\n  return /*#__PURE__*/React__default.createElement(\"div\", {\n    className: className\n  }, /*#__PURE__*/React__default.createElement(\"button\", _extends({\n    \"aria-hidden\": \"true\",\n    tabIndex: -1,\n    \"aria-label\": \"Scroll left\",\n    ref: previousButton,\n    className: previousButtonClasses,\n    type: \"button\"\n  }, leftOverflowButtonProps), _ChevronLeft || (_ChevronLeft = /*#__PURE__*/React__default.createElement(ChevronLeft, null))), /*#__PURE__*/React__default.createElement(\"div\", _extends({}, rest, {\n    \"aria-label\": label,\n    ref: ref,\n    role: \"tablist\",\n    className: `${prefix}--tab--list`,\n    onScroll: debouncedOnScroll,\n    onKeyDown: onKeyDown\n  }), React__default.Children.map(children, (child, index) => {\n    return !isElement(child) ? null : /*#__PURE__*/React__default.createElement(TabContext.Provider, {\n      value: {\n        index,\n        hasSecondaryLabel: hasSecondaryLabelTabs,\n        contained\n      }\n    }, /*#__PURE__*/React__default.cloneElement(child, {\n      ref: node => {\n        tabs.current[index] = node;\n      }\n    }));\n  })), /*#__PURE__*/React__default.createElement(\"button\", _extends({\n    \"aria-hidden\": \"true\",\n    tabIndex: -1,\n    \"aria-label\": \"Scroll right\",\n    ref: nextButton,\n    className: nextButtonClasses,\n    type: \"button\"\n  }, rightOverflowButtonProps), _ChevronRight || (_ChevronRight = /*#__PURE__*/React__default.createElement(ChevronRight, null))));\n}\nTabList.propTypes = {\n  /**\n   * Specify whether the content tab should be activated automatically or\n   * manually\n   */\n  activation: PropTypes.oneOf(['automatic', 'manual']),\n  /**\n   * Provide an accessible label to be read when a user interacts with this\n   * component\n   */\n  'aria-label': PropTypes.string.isRequired,\n  /**\n   * Provide child elements to be rendered inside `ContentTabs`.\n   * These elements should render a `ContentTab`\n   */\n  children: PropTypes.node,\n  /**\n   * Specify an optional className to be added to the container node\n   */\n  className: PropTypes.string,\n  /**\n   * Specify whether component is contained type\n   */\n  contained: PropTypes.bool,\n  /**\n   * Used for tabs within a grid, this makes it so tabs span the full container width and have the same width. Only available on contained tabs with <9 children\n   */\n  fullWidth: PropTypes.bool,\n  /**\n   * If using `IconTab`, specify the size of the icon being used.\n   */\n  iconSize: PropTypes.oneOf(['default', 'lg']),\n  /**\n   * Provide the props that describe the left overflow button\n   */\n  leftOverflowButtonProps: PropTypes.object,\n  /**\n   * Specify whether to use the light component variant\n   */\n  light: deprecate(PropTypes.bool, 'The `light` prop for `TabList` has ' + 'been deprecated in favor of the new `Layer` component. It will be removed in the next major release.'),\n  /**\n   * Provide the props that describe the right overflow button\n   */\n  rightOverflowButtonProps: PropTypes.object,\n  /**\n   * Optionally provide a delay (in milliseconds) passed to the lodash\n   * debounce of the onScroll handler. This will impact the responsiveness\n   * of scroll arrow buttons rendering when scrolling to the first or last tab.\n   */\n  scrollDebounceWait: PropTypes.number,\n  /**\n   * Choose whether to automatically scroll\n   * to newly selected tabs on component rerender\n   */\n  scrollIntoView: PropTypes.bool\n};\n\n/**\n * Helper function to set up the behavior when a button is \"long pressed\".\n * This function will take a ref to the tablist, a direction, and a setter\n * for scrollLeft and will update the scroll position within a requestAnimationFrame.\n *\n * It returns a cleanup function to be run\n * when the long press is deactivated\n */\nfunction createLongPressBehavior(ref, direction, setScrollLeft) {\n  const node = ref.current;\n  if (!node) {\n    return () => {};\n  }\n\n  // We manually override the scroll behavior to be \"auto\".\n  // If it is set as smooth, this animation does not update correctly\n  const defaultScrollBehavior = node?.style['scroll-behavior'];\n  node.style['scroll-behavior'] = 'auto';\n  const scrollDelta = direction === 'forward' ? 5 : -5;\n  let frameId = null;\n  function tick() {\n    if (!node) {\n      return;\n    }\n    node.scrollLeft = node.scrollLeft + scrollDelta;\n    frameId = requestAnimationFrame(tick);\n  }\n  frameId = requestAnimationFrame(tick);\n  return () => {\n    // Restore the previous scroll behavior\n    node.style['scroll-behavior'] = defaultScrollBehavior;\n\n    // Make sure that our `scrollLeft` value is in sync with the existing\n    // `ref` after our requestAnimationFrame loop above\n    setScrollLeft(node.scrollLeft);\n    if (frameId) {\n      cancelAnimationFrame(frameId);\n    }\n  };\n}\n\n/**\n * Tab\n */\n\nconst Tab = /*#__PURE__*/forwardRef(function Tab(_ref5, forwardRef) {\n  let {\n    as = 'button',\n    children,\n    className: customClassName,\n    disabled,\n    onClick,\n    onKeyDown,\n    secondaryLabel,\n    renderIcon: Icon,\n    ...rest\n  } = _ref5;\n  const prefix = usePrefix();\n  const {\n    selectedIndex,\n    setSelectedIndex,\n    baseId,\n    dismissable,\n    onTabCloseRequest\n  } = React__default.useContext(TabsContext);\n  const {\n    index,\n    hasSecondaryLabel,\n    contained\n  } = React__default.useContext(TabContext);\n  const dismissIconRef = useRef(null);\n  const tabRef = useRef(null);\n  const ref = useMergedRefs([forwardRef, tabRef]);\n  const [ignoreHover, setIgnoreHover] = useState(false);\n  const id = `${baseId}-tab-${index}`;\n  const panelId = `${baseId}-tabpanel-${index}`;\n  const className = cx(`${prefix}--tabs__nav-item`, `${prefix}--tabs__nav-link`, {\n    [`${prefix}--tabs__nav-item--selected`]: selectedIndex === index,\n    [`${prefix}--tabs__nav-item--disabled`]: disabled,\n    [`${prefix}--tabs__nav-item--hover-off`]: ignoreHover\n  }, customClassName);\n  const BaseComponent = as;\n  const onDismissIconMouseEnter = evt => {\n    if (contained && tabRef.current) {\n      evt.stopPropagation();\n      setIgnoreHover(true);\n      tabRef.current.classList.add(`${prefix}--tabs__nav-item--hover-off`);\n    }\n  };\n  const onDismissIconMouseLeave = () => {\n    if (contained && tabRef.current) {\n      tabRef.current.classList.remove(`${prefix}--tabs__nav-item--hover-off`);\n      setIgnoreHover(false);\n    }\n  };\n  useEvent(dismissIconRef, 'mouseover', onDismissIconMouseEnter);\n  useEvent(dismissIconRef, 'mouseleave', onDismissIconMouseLeave);\n  const handleClose = evt => {\n    evt.stopPropagation();\n    onTabCloseRequest?.(index);\n  };\n  const handleKeyDown = event => {\n    if (dismissable && match(event, Delete)) {\n      handleClose(event);\n    }\n    onKeyDown?.(event);\n  };\n  const DismissIcon = /*#__PURE__*/\n  // eslint-disable-next-line jsx-a11y/click-events-have-key-events\n  React__default.createElement(\"div\", {\n    role: \"button\",\n    tabIndex: -1,\n    \"aria-hidden\": true,\n    className: cx(`${prefix}--tabs__nav-item--close-icon`, {\n      [`${prefix}--visually-hidden`]: !dismissable\n    }),\n    onClick: handleClose,\n    \"aria-label\": \"Close tab\",\n    title: \"Close tab\",\n    ref: dismissIconRef\n  }, _Close || (_Close = /*#__PURE__*/React__default.createElement(Close, null)));\n  const hasIcon = Icon ?? dismissable;\n  return /*#__PURE__*/React__default.createElement(BaseComponent, _extends({}, rest, {\n    \"aria-controls\": panelId,\n    \"aria-disabled\": disabled,\n    \"aria-selected\": selectedIndex === index,\n    ref: ref,\n    id: id,\n    role: \"tab\",\n    className: className,\n    disabled: disabled,\n    onClick: evt => {\n      if (disabled) {\n        return;\n      }\n      setSelectedIndex(index);\n      onClick?.(evt);\n    },\n    onKeyDown: handleKeyDown,\n    tabIndex: selectedIndex === index ? '0' : '-1',\n    type: \"button\"\n  }), /*#__PURE__*/React__default.createElement(\"div\", {\n    className: `${prefix}--tabs__nav-item-label-wrapper`\n  }, dismissable && Icon && /*#__PURE__*/React__default.createElement(\"div\", {\n    className: `${prefix}--tabs__nav-item--icon-left`\n  }, /*#__PURE__*/React__default.createElement(Icon, {\n    size: 16\n  })), /*#__PURE__*/React__default.createElement(\"span\", {\n    className: `${prefix}--tabs__nav-item-label`,\n    title: children\n  }, children), /*#__PURE__*/React__default.createElement(\"div\", {\n    className: cx(`${prefix}--tabs__nav-item--icon`, {\n      [`${prefix}--visually-hidden`]: !hasIcon\n    })\n  }, DismissIcon, !dismissable && Icon && /*#__PURE__*/React__default.createElement(Icon, {\n    size: 16\n  }))), hasSecondaryLabel && /*#__PURE__*/React__default.createElement(\"div\", {\n    className: `${prefix}--tabs__nav-item-secondary-label`,\n    title: secondaryLabel\n  }, secondaryLabel));\n});\nTab.propTypes = {\n  /**\n   * Provide a custom element to render instead of the default button\n   */\n  // @ts-expect-error: Invalid prop type derivation\n  as: PropTypes.oneOfType([PropTypes.string, PropTypes.elementType]),\n  /**\n   * Provide child elements to be rendered inside `Tab`.\n   */\n  children: PropTypes.node,\n  /**\n   * Specify an optional className to be added to your Tab\n   */\n  className: PropTypes.string,\n  /**\n   * Whether your Tab is disabled.\n   */\n  disabled: PropTypes.bool,\n  /**\n   * Provide a handler that is invoked when a user clicks on the control\n   */\n  onClick: PropTypes.func,\n  /**\n   * Provide a handler that is invoked on the key down event for the control\n   */\n  onKeyDown: PropTypes.func,\n  /*\n   * An optional parameter to allow overriding the anchor rendering.\n   * Useful for using Tab along with react-router or other client\n   * side router libraries.\n   **/\n  renderButton: PropTypes.func,\n  /**\n   * Optional prop to render an icon next to the label.\n   * Can be a React component class\n   */\n  // @ts-expect-error: Invalid prop type derivation\n  renderIcon: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\n  /*\n   * An optional label to render under the primary tab label.\n  /* This prop is only useful for conained tabs\n   **/\n  secondaryLabel: PropTypes.string\n};\n\n/**\n * IconTab\n */\n\nconst IconTab = /*#__PURE__*/React__default.forwardRef(function IconTab(_ref6, ref) {\n  let {\n    children,\n    className: customClassName,\n    defaultOpen = false,\n    enterDelayMs,\n    leaveDelayMs,\n    label,\n    ...rest\n  } = _ref6;\n  const prefix = usePrefix();\n  const classNames = cx(`${prefix}--tabs__nav-item--icon-only`, customClassName);\n  return /*#__PURE__*/React__default.createElement(Tooltip, {\n    align: \"bottom\",\n    defaultOpen: defaultOpen,\n    className: `${prefix}--icon-tooltip`,\n    enterDelayMs: enterDelayMs,\n    label: label,\n    leaveDelayMs: leaveDelayMs\n  }, /*#__PURE__*/React__default.createElement(Tab, _extends({\n    className: classNames,\n    ref: ref\n  }, rest), children));\n});\nIconTab.propTypes = {\n  /**\n   * Provide an icon to be rendered inside `IconTab` as the visual label for Tab.\n   */\n  children: PropTypes.node,\n  /**\n   * Specify an optional className to be added to your Tab\n   */\n  className: PropTypes.string,\n  /**\n   * Specify whether the tooltip for the icon should be open when it first renders\n   */\n  defaultOpen: PropTypes.bool,\n  /**\n   * Specify the duration in milliseconds to delay before displaying the tooltip for the icon.\n   */\n  enterDelayMs: PropTypes.number,\n  /**\n   * Provide the label to be rendered inside the Tooltip. The label will use\n   * `aria-labelledby` and will fully describe the child node that is provided.\n   * This means that if you have text in the child node it will not be\n   * announced to the screen reader.\n   */\n  label: PropTypes.node.isRequired,\n  /**\n   * Specify the duration in milliseconds to delay before hiding the tooltip\n   */\n  leaveDelayMs: PropTypes.number\n};\n\n/**\n * TabPanel\n */\n\nconst TabPanel = /*#__PURE__*/React__default.forwardRef(function TabPanel(_ref7, forwardRef) {\n  let {\n    children,\n    className: customClassName,\n    ...rest\n  } = _ref7;\n  const prefix = usePrefix();\n  const panel = useRef(null);\n  const ref = useMergedRefs([forwardRef, panel]);\n  const [tabIndex, setTabIndex] = useState(0);\n  const [interactiveContent, setInteractiveContent] = useState(false);\n  const {\n    selectedIndex,\n    baseId\n  } = React__default.useContext(TabsContext);\n  const index = React__default.useContext(TabPanelContext);\n  const id = `${baseId}-tabpanel-${index}`;\n  const tabId = `${baseId}-tab-${index}`;\n  const className = cx(`${prefix}--tab-content`, customClassName, {\n    [`${prefix}--tab-content--interactive`]: interactiveContent\n  });\n  useEffectOnce(() => {\n    if (!panel.current) {\n      return;\n    }\n    const content = getInteractiveContent(panel.current);\n    if (content) {\n      setInteractiveContent(true);\n      setTabIndex(-1);\n    }\n  });\n\n  // tabindex should only be 0 if no interactive content in children\n  useEffect(() => {\n    const node = panel.current;\n    if (!node) {\n      return;\n    }\n    function callback() {\n      const content = getInteractiveContent(node);\n      if (content) {\n        setInteractiveContent(true);\n        setTabIndex(-1);\n      } else {\n        setInteractiveContent(false);\n        setTabIndex(0);\n      }\n    }\n    const observer = new MutationObserver(callback);\n    observer.observe(node, {\n      childList: true,\n      subtree: true\n    });\n    return () => observer.disconnect();\n  }, []);\n  return /*#__PURE__*/React__default.createElement(\"div\", _extends({}, rest, {\n    \"aria-labelledby\": tabId,\n    id: id,\n    className: className,\n    ref: ref,\n    role: \"tabpanel\",\n    tabIndex: tabIndex,\n    hidden: selectedIndex !== index\n  }), children);\n});\nTabPanel.propTypes = {\n  /**\n   * Provide child elements to be rendered inside `TabPanel`.\n   */\n  children: PropTypes.node,\n  /**\n   * Specify an optional className to be added to TabPanel.\n   */\n  className: PropTypes.string\n};\n\n/**\n * TabPanels\n */\n\nfunction TabPanels(_ref8) {\n  let {\n    children\n  } = _ref8;\n  return /*#__PURE__*/React__default.createElement(React__default.Fragment, null, React__default.Children.map(children, (child, index) => {\n    return /*#__PURE__*/React__default.createElement(TabPanelContext.Provider, {\n      value: index\n    }, child);\n  }));\n}\nTabPanels.propTypes = {\n  /**\n   * Provide child elements to be rendered inside `TabPanels`.\n   */\n  children: PropTypes.node\n};\nexport { IconTab, Tab, TabList, TabPanel, TabPanels, Tabs };","map":{"version":3,"names":["extends","_extends","ChevronLeft","ChevronRight","Close","breakpoints","cx","debounce","PropTypes","React__default","useState","useRef","useCallback","useEffect","forwardRef","isElement","Tooltip","useControllableState","useEffectOnce","useId","useIsomorphicEffect","useMergedRefs","getInteractiveContent","usePrefix","usePressable","deprecate","useEvent","useMatchMedia","matches","match","ArrowRight","ArrowLeft","Home","End","Delete","_ChevronLeft","_ChevronRight","_Close","TabsContext","createContext","baseId","activeIndex","defaultSelectedIndex","dismissable","onTabCloseRequest","setActiveIndex","selectedIndex","setSelectedIndex","TabContext","index","hasSecondaryLabel","lgMediaQuery","lg","width","TabPanelContext","Tabs","_ref","children","onChange","controlledSelectedIndex","value","defaultValue","createElement","Provider","propTypes","node","number","bool","func","props","Error","undefined","getNextIndex","event","total","TabList","_ref2","activation","label","className","customClassName","contained","fullWidth","iconSize","leftOverflowButtonProps","light","rightOverflowButtonProps","scrollDebounceWait","scrollIntoView","rest","useContext","prefix","ref","previousButton","nextButton","isScrollable","setIsScrollable","scrollLeft","setScrollLeft","hasSecondaryLabelTabs","Children","toArray","some","child","secondaryLabel","isLg","distributeWidth","length","buttonWidth","isNextButtonVisible","setIsNextButtonVisible","current","clientWidth","scrollWidth","isPreviousButtonVisible","previousButtonClasses","nextButtonClasses","tabs","debouncedOnScroll","target","onKeyDown","preventDefault","activeTabs","filter","tab","disabled","currentIndex","indexOf","nextIndex","focus","block","inline","handler","debouncedHandler","window","addEventListener","cancel","removeEventListener","tabWidth","getBoundingClientRect","start","offsetLeft","end","visibleStart","visibleEnd","onPress","_ref3","longPress","Math","max","onLongPress","createLongPressBehavior","_ref4","min","tabIndex","type","role","onScroll","map","cloneElement","oneOf","string","isRequired","object","direction","defaultScrollBehavior","style","scrollDelta","frameId","tick","requestAnimationFrame","cancelAnimationFrame","Tab","_ref5","as","onClick","renderIcon","Icon","dismissIconRef","tabRef","ignoreHover","setIgnoreHover","id","panelId","BaseComponent","onDismissIconMouseEnter","evt","stopPropagation","classList","add","onDismissIconMouseLeave","remove","handleClose","handleKeyDown","DismissIcon","title","hasIcon","size","oneOfType","elementType","renderButton","IconTab","_ref6","defaultOpen","enterDelayMs","leaveDelayMs","classNames","align","TabPanel","_ref7","panel","setTabIndex","interactiveContent","setInteractiveContent","tabId","content","callback","observer","MutationObserver","observe","childList","subtree","disconnect","hidden","TabPanels","_ref8","Fragment"],"sources":["/home/saymon/Backup/Portifolio/Hematology-App-with-Carbon-Design-System/frontend/node_modules/@carbon/react/es/components/Tabs/Tabs.js"],"sourcesContent":["/**\n * Copyright IBM Corp. 2016, 2023\n *\n * This source code is licensed under the Apache-2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { extends as _extends } from '../../_virtual/_rollupPluginBabelHelpers.js';\nimport { ChevronLeft, ChevronRight, Close } from '@carbon/icons-react';\nimport { breakpoints } from '@carbon/layout';\nimport cx from 'classnames';\nimport debounce from 'lodash.debounce';\nimport PropTypes from 'prop-types';\nimport React__default, { useState, useRef, useCallback, useEffect, forwardRef } from 'react';\nimport { isElement } from 'react-is';\nimport '../Tooltip/DefinitionTooltip.js';\nimport { Tooltip } from '../Tooltip/Tooltip.js';\nimport { useControllableState } from '../../internal/useControllableState.js';\nimport { useEffectOnce } from '../../internal/useEffectOnce.js';\nimport { useId } from '../../internal/useId.js';\nimport useIsomorphicEffect from '../../internal/useIsomorphicEffect.js';\nimport { useMergedRefs } from '../../internal/useMergedRefs.js';\nimport { getInteractiveContent } from '../../internal/useNoInteractiveChildren.js';\nimport { usePrefix } from '../../internal/usePrefix.js';\nimport { usePressable } from './usePressable.js';\nimport deprecate from '../../prop-types/deprecate.js';\nimport { useEvent } from '../../internal/useEvent.js';\nimport { useMatchMedia } from '../../internal/useMatchMedia.js';\nimport { matches, match } from '../../internal/keyboard/match.js';\nimport { ArrowRight, ArrowLeft, Home, End, Delete } from '../../internal/keyboard/keys.js';\n\nvar _ChevronLeft, _ChevronRight, _Close;\n\n// Used to manage the overall state of the Tabs\n\nconst TabsContext = /*#__PURE__*/React__default.createContext({\n  baseId: '',\n  activeIndex: 0,\n  defaultSelectedIndex: 0,\n  dismissable: false,\n  onTabCloseRequest() {},\n  setActiveIndex() {},\n  selectedIndex: 0,\n  setSelectedIndex() {}\n});\n\n// Used to keep track of position in a tablist\nconst TabContext = /*#__PURE__*/React__default.createContext({\n  index: 0,\n  hasSecondaryLabel: false\n});\nconst lgMediaQuery = `(min-width: ${breakpoints.lg.width})`;\n\n// Used to keep track of position in a list of tab panels\nconst TabPanelContext = /*#__PURE__*/React__default.createContext(0);\n\n/**\n * Tabs\n */\n\nfunction Tabs(_ref) {\n  let {\n    children,\n    defaultSelectedIndex = 0,\n    onChange,\n    selectedIndex: controlledSelectedIndex,\n    dismissable,\n    onTabCloseRequest\n  } = _ref;\n  const baseId = useId('ccs');\n  // The active index is used to track the element which has focus in our tablist\n  const [activeIndex, setActiveIndex] = useState(defaultSelectedIndex);\n  // The selected index is used for the tab/panel pairing which is \"visible\"\n  const [selectedIndex, setSelectedIndex] = useControllableState({\n    value: controlledSelectedIndex,\n    defaultValue: defaultSelectedIndex,\n    onChange: value => onChange?.({\n      selectedIndex: value\n    })\n  });\n  const value = {\n    baseId,\n    activeIndex,\n    defaultSelectedIndex,\n    dismissable,\n    onTabCloseRequest,\n    setActiveIndex,\n    selectedIndex,\n    setSelectedIndex\n  };\n  return /*#__PURE__*/React__default.createElement(TabsContext.Provider, {\n    value: value\n  }, children);\n}\nTabs.propTypes = {\n  /**\n   * Provide child elements to be rendered inside the `Tabs`.\n   * These elements should render either `TabsList` or `TabsPanels`\n   */\n  children: PropTypes.node,\n  /**\n   * Specify which content tab should be initially selected when the component\n   * is first rendered\n   */\n  defaultSelectedIndex: PropTypes.number,\n  /**\n   * Whether the render Tab children should be dismissable.\n   */\n  dismissable: PropTypes.bool,\n  /**\n   * Provide an optional function which is called whenever the state of the\n   * `Tabs` changes\n   */\n  onChange: PropTypes.func,\n  /**\n   * If specifying the `onTabCloseRequest` prop, provide a callback function\n   * responsible for removing the tab when close button is pressed on one of the Tab elements\n   */\n  onTabCloseRequest: props => {\n    if (props.dismissable && !props.onTabCloseRequest) {\n      return new Error('dismissable property specified without also providing an onTabCloseRequest property.');\n    }\n    return undefined;\n  },\n  /**\n   * Control which content panel is currently selected. This puts the component\n   * in a controlled mode and should be used along with `onChange`\n   */\n  selectedIndex: PropTypes.number\n};\n\n/**\n * Get the next index for a given keyboard event\n * given a count of the total items and the current index\n */\nfunction getNextIndex(event, total, index) {\n  switch (true) {\n    case match(event, ArrowRight):\n      return (index + 1) % total;\n    case match(event, ArrowLeft):\n      return (total + index - 1) % total;\n    case match(event, Home):\n      return 0;\n    case match(event, End):\n      return total - 1;\n    default:\n      return index;\n  }\n}\n\n/**\n * TabList\n */\n\nfunction TabList(_ref2) {\n  let {\n    activation = 'automatic',\n    'aria-label': label,\n    children,\n    className: customClassName,\n    contained = false,\n    fullWidth = false,\n    iconSize,\n    leftOverflowButtonProps,\n    light,\n    rightOverflowButtonProps,\n    scrollDebounceWait = 200,\n    scrollIntoView,\n    ...rest\n  } = _ref2;\n  const {\n    activeIndex,\n    selectedIndex,\n    setSelectedIndex,\n    setActiveIndex,\n    dismissable\n  } = React__default.useContext(TabsContext);\n  const prefix = usePrefix();\n  const ref = useRef(null);\n  const previousButton = useRef(null);\n  const nextButton = useRef(null);\n  const [isScrollable, setIsScrollable] = useState(false);\n  const [scrollLeft, setScrollLeft] = useState(0);\n  let hasSecondaryLabelTabs = false;\n  if (contained) {\n    hasSecondaryLabelTabs = React__default.Children.toArray(children).some(child => {\n      return isElement(child) && !!child.props.secondaryLabel;\n    });\n  }\n  const isLg = useMatchMedia(lgMediaQuery);\n  const distributeWidth = fullWidth && contained && isLg && React__default.Children.toArray(children).length < 9;\n  const className = cx(`${prefix}--tabs`, {\n    [`${prefix}--tabs--contained`]: contained,\n    [`${prefix}--tabs--light`]: light,\n    [`${prefix}--tabs__icon--default`]: iconSize === 'default',\n    [`${prefix}--tabs__icon--lg`]: iconSize === 'lg',\n    // TODO: V12 - Remove this class\n    [`${prefix}--layout--size-lg`]: iconSize === 'lg',\n    [`${prefix}--tabs--tall`]: hasSecondaryLabelTabs,\n    [`${prefix}--tabs--full-width`]: distributeWidth\n  }, customClassName);\n\n  // Previous Button\n  // VISIBLE IF:\n  //   SCROLLABLE\n  //   AND SCROLL_LEFT > 0\n  const buttonWidth = 44;\n  // Next Button\n  // VISIBLE IF:\n  //   SCROLLABLE\n  //   AND SCROLL_LEFT + CLIENT_WIDTH < SCROLL_WIDTH\n  const [isNextButtonVisible, setIsNextButtonVisible] = useState(ref.current ? scrollLeft + buttonWidth + ref.current.clientWidth < ref.current.scrollWidth : false);\n  const isPreviousButtonVisible = ref.current ? isScrollable && scrollLeft > 0 : false;\n  const previousButtonClasses = cx(`${prefix}--tab--overflow-nav-button`, `${prefix}--tab--overflow-nav-button--previous`, {\n    [`${prefix}--tab--overflow-nav-button--hidden`]: !isPreviousButtonVisible\n  });\n  const nextButtonClasses = cx(`${prefix}--tab--overflow-nav-button`, `${prefix}--tab--overflow-nav-button--next`, {\n    [`${prefix}--tab--overflow-nav-button--hidden`]: !isNextButtonVisible\n  });\n  const tabs = useRef([]);\n  const debouncedOnScroll = useCallback(() => {\n    return debounce(event => {\n      setScrollLeft(event.target.scrollLeft);\n    }, scrollDebounceWait);\n  }, [scrollDebounceWait]);\n  function onKeyDown(event) {\n    if (matches(event, [ArrowRight, ArrowLeft, Home, End])) {\n      event.preventDefault();\n      const activeTabs = tabs.current.filter(tab => !tab.disabled);\n      const currentIndex = activeTabs.indexOf(tabs.current[activation === 'automatic' ? selectedIndex : activeIndex]);\n      const nextIndex = tabs.current.indexOf(activeTabs[getNextIndex(event, activeTabs.length, currentIndex)]);\n      if (activation === 'automatic') {\n        setSelectedIndex(nextIndex);\n      } else if (activation === 'manual') {\n        setActiveIndex(nextIndex);\n      }\n      tabs.current[nextIndex]?.focus();\n    }\n  }\n  useEffectOnce(() => {\n    const tab = tabs.current[selectedIndex];\n    if (scrollIntoView && tab) {\n      tab.scrollIntoView({\n        block: 'nearest',\n        inline: 'nearest'\n      });\n    }\n  });\n  useEffect(() => {\n    setIsNextButtonVisible(ref.current ? scrollLeft + buttonWidth + ref.current.clientWidth < ref.current.scrollWidth : false);\n    if (dismissable) {\n      if (ref.current) {\n        setIsScrollable(ref.current.scrollWidth > ref.current.clientWidth);\n      }\n    }\n  }, [scrollLeft, children, dismissable]);\n  useEffectOnce(() => {\n    if (tabs.current[selectedIndex].disabled) {\n      const activeTabs = tabs.current.filter(tab => {\n        return !tab.disabled;\n      });\n      if (activeTabs.length > 0) {\n        const tab = activeTabs[0];\n        setSelectedIndex(tabs.current.indexOf(tab));\n      }\n    }\n  });\n  useIsomorphicEffect(() => {\n    if (ref.current) {\n      setIsScrollable(ref.current.scrollWidth > ref.current.clientWidth);\n    }\n    function handler() {\n      if (ref.current) {\n        setIsScrollable(ref.current.scrollWidth > ref.current.clientWidth);\n      }\n    }\n    const debouncedHandler = debounce(handler, 200);\n    window.addEventListener('resize', debouncedHandler);\n    return () => {\n      debouncedHandler.cancel();\n      window.removeEventListener('resize', debouncedHandler);\n    };\n  }, []);\n\n  // updates scroll location for all scroll behavior.\n  useIsomorphicEffect(() => {\n    if (scrollLeft !== null && ref.current) {\n      ref.current.scrollLeft = scrollLeft;\n    }\n  }, [scrollLeft]);\n  useIsomorphicEffect(() => {\n    if (!isScrollable || !ref.current) {\n      return;\n    }\n    const tab = activation === 'manual' ? tabs.current[activeIndex] : tabs.current[selectedIndex];\n    if (tab) {\n      // The width of the \"scroll buttons\"\n\n      // The start and end position of the selected tab\n      const {\n        width: tabWidth\n      } = tab.getBoundingClientRect();\n      const start = tab.offsetLeft;\n      const end = tab.offsetLeft + tabWidth;\n\n      // The start and end of the visible area for the tabs\n      const visibleStart = ref.current.scrollLeft + buttonWidth;\n      const visibleEnd = ref.current.scrollLeft + ref.current.clientWidth - buttonWidth;\n\n      // The beginning of the tab is clipped and not visible\n      if (start < visibleStart) {\n        setScrollLeft(start - buttonWidth);\n      }\n\n      // The end of the tab is clipped and not visible\n      if (end > visibleEnd) {\n        setScrollLeft(end + buttonWidth - ref.current.clientWidth);\n      }\n    }\n  }, [activation, activeIndex, selectedIndex, isScrollable, children]);\n  usePressable(previousButton, {\n    onPress(_ref3) {\n      let {\n        longPress\n      } = _ref3;\n      if (!longPress && ref.current) {\n        setScrollLeft(Math.max(scrollLeft - ref.current.scrollWidth / tabs.current.length * 1.5, 0));\n      }\n    },\n    onLongPress() {\n      return createLongPressBehavior(ref, 'backward', setScrollLeft);\n    }\n  });\n  usePressable(nextButton, {\n    onPress(_ref4) {\n      let {\n        longPress\n      } = _ref4;\n      if (!longPress && ref.current) {\n        setScrollLeft(Math.min(scrollLeft + ref.current.scrollWidth / tabs.current.length * 1.5, ref.current.scrollWidth - ref.current.clientWidth));\n      }\n    },\n    onLongPress() {\n      return createLongPressBehavior(ref, 'forward', setScrollLeft);\n    }\n  });\n  return /*#__PURE__*/React__default.createElement(\"div\", {\n    className: className\n  }, /*#__PURE__*/React__default.createElement(\"button\", _extends({\n    \"aria-hidden\": \"true\",\n    tabIndex: -1,\n    \"aria-label\": \"Scroll left\",\n    ref: previousButton,\n    className: previousButtonClasses,\n    type: \"button\"\n  }, leftOverflowButtonProps), _ChevronLeft || (_ChevronLeft = /*#__PURE__*/React__default.createElement(ChevronLeft, null))), /*#__PURE__*/React__default.createElement(\"div\", _extends({}, rest, {\n    \"aria-label\": label,\n    ref: ref,\n    role: \"tablist\",\n    className: `${prefix}--tab--list`,\n    onScroll: debouncedOnScroll,\n    onKeyDown: onKeyDown\n  }), React__default.Children.map(children, (child, index) => {\n    return !isElement(child) ? null : /*#__PURE__*/React__default.createElement(TabContext.Provider, {\n      value: {\n        index,\n        hasSecondaryLabel: hasSecondaryLabelTabs,\n        contained\n      }\n    }, /*#__PURE__*/React__default.cloneElement(child, {\n      ref: node => {\n        tabs.current[index] = node;\n      }\n    }));\n  })), /*#__PURE__*/React__default.createElement(\"button\", _extends({\n    \"aria-hidden\": \"true\",\n    tabIndex: -1,\n    \"aria-label\": \"Scroll right\",\n    ref: nextButton,\n    className: nextButtonClasses,\n    type: \"button\"\n  }, rightOverflowButtonProps), _ChevronRight || (_ChevronRight = /*#__PURE__*/React__default.createElement(ChevronRight, null))));\n}\nTabList.propTypes = {\n  /**\n   * Specify whether the content tab should be activated automatically or\n   * manually\n   */\n  activation: PropTypes.oneOf(['automatic', 'manual']),\n  /**\n   * Provide an accessible label to be read when a user interacts with this\n   * component\n   */\n  'aria-label': PropTypes.string.isRequired,\n  /**\n   * Provide child elements to be rendered inside `ContentTabs`.\n   * These elements should render a `ContentTab`\n   */\n  children: PropTypes.node,\n  /**\n   * Specify an optional className to be added to the container node\n   */\n  className: PropTypes.string,\n  /**\n   * Specify whether component is contained type\n   */\n  contained: PropTypes.bool,\n  /**\n   * Used for tabs within a grid, this makes it so tabs span the full container width and have the same width. Only available on contained tabs with <9 children\n   */\n  fullWidth: PropTypes.bool,\n  /**\n   * If using `IconTab`, specify the size of the icon being used.\n   */\n  iconSize: PropTypes.oneOf(['default', 'lg']),\n  /**\n   * Provide the props that describe the left overflow button\n   */\n  leftOverflowButtonProps: PropTypes.object,\n  /**\n   * Specify whether to use the light component variant\n   */\n  light: deprecate(PropTypes.bool, 'The `light` prop for `TabList` has ' + 'been deprecated in favor of the new `Layer` component. It will be removed in the next major release.'),\n  /**\n   * Provide the props that describe the right overflow button\n   */\n  rightOverflowButtonProps: PropTypes.object,\n  /**\n   * Optionally provide a delay (in milliseconds) passed to the lodash\n   * debounce of the onScroll handler. This will impact the responsiveness\n   * of scroll arrow buttons rendering when scrolling to the first or last tab.\n   */\n  scrollDebounceWait: PropTypes.number,\n  /**\n   * Choose whether to automatically scroll\n   * to newly selected tabs on component rerender\n   */\n  scrollIntoView: PropTypes.bool\n};\n\n/**\n * Helper function to set up the behavior when a button is \"long pressed\".\n * This function will take a ref to the tablist, a direction, and a setter\n * for scrollLeft and will update the scroll position within a requestAnimationFrame.\n *\n * It returns a cleanup function to be run\n * when the long press is deactivated\n */\nfunction createLongPressBehavior(ref, direction, setScrollLeft) {\n  const node = ref.current;\n  if (!node) {\n    return () => {};\n  }\n\n  // We manually override the scroll behavior to be \"auto\".\n  // If it is set as smooth, this animation does not update correctly\n  const defaultScrollBehavior = node?.style['scroll-behavior'];\n  node.style['scroll-behavior'] = 'auto';\n  const scrollDelta = direction === 'forward' ? 5 : -5;\n  let frameId = null;\n  function tick() {\n    if (!node) {\n      return;\n    }\n    node.scrollLeft = node.scrollLeft + scrollDelta;\n    frameId = requestAnimationFrame(tick);\n  }\n  frameId = requestAnimationFrame(tick);\n  return () => {\n    // Restore the previous scroll behavior\n    node.style['scroll-behavior'] = defaultScrollBehavior;\n\n    // Make sure that our `scrollLeft` value is in sync with the existing\n    // `ref` after our requestAnimationFrame loop above\n    setScrollLeft(node.scrollLeft);\n    if (frameId) {\n      cancelAnimationFrame(frameId);\n    }\n  };\n}\n\n/**\n * Tab\n */\n\nconst Tab = /*#__PURE__*/forwardRef(function Tab(_ref5, forwardRef) {\n  let {\n    as = 'button',\n    children,\n    className: customClassName,\n    disabled,\n    onClick,\n    onKeyDown,\n    secondaryLabel,\n    renderIcon: Icon,\n    ...rest\n  } = _ref5;\n  const prefix = usePrefix();\n  const {\n    selectedIndex,\n    setSelectedIndex,\n    baseId,\n    dismissable,\n    onTabCloseRequest\n  } = React__default.useContext(TabsContext);\n  const {\n    index,\n    hasSecondaryLabel,\n    contained\n  } = React__default.useContext(TabContext);\n  const dismissIconRef = useRef(null);\n  const tabRef = useRef(null);\n  const ref = useMergedRefs([forwardRef, tabRef]);\n  const [ignoreHover, setIgnoreHover] = useState(false);\n  const id = `${baseId}-tab-${index}`;\n  const panelId = `${baseId}-tabpanel-${index}`;\n  const className = cx(`${prefix}--tabs__nav-item`, `${prefix}--tabs__nav-link`, {\n    [`${prefix}--tabs__nav-item--selected`]: selectedIndex === index,\n    [`${prefix}--tabs__nav-item--disabled`]: disabled,\n    [`${prefix}--tabs__nav-item--hover-off`]: ignoreHover\n  }, customClassName);\n  const BaseComponent = as;\n  const onDismissIconMouseEnter = evt => {\n    if (contained && tabRef.current) {\n      evt.stopPropagation();\n      setIgnoreHover(true);\n      tabRef.current.classList.add(`${prefix}--tabs__nav-item--hover-off`);\n    }\n  };\n  const onDismissIconMouseLeave = () => {\n    if (contained && tabRef.current) {\n      tabRef.current.classList.remove(`${prefix}--tabs__nav-item--hover-off`);\n      setIgnoreHover(false);\n    }\n  };\n  useEvent(dismissIconRef, 'mouseover', onDismissIconMouseEnter);\n  useEvent(dismissIconRef, 'mouseleave', onDismissIconMouseLeave);\n  const handleClose = evt => {\n    evt.stopPropagation();\n    onTabCloseRequest?.(index);\n  };\n  const handleKeyDown = event => {\n    if (dismissable && match(event, Delete)) {\n      handleClose(event);\n    }\n    onKeyDown?.(event);\n  };\n  const DismissIcon =\n  /*#__PURE__*/\n  // eslint-disable-next-line jsx-a11y/click-events-have-key-events\n  React__default.createElement(\"div\", {\n    role: \"button\",\n    tabIndex: -1,\n    \"aria-hidden\": true,\n    className: cx(`${prefix}--tabs__nav-item--close-icon`, {\n      [`${prefix}--visually-hidden`]: !dismissable\n    }),\n    onClick: handleClose,\n    \"aria-label\": \"Close tab\",\n    title: \"Close tab\",\n    ref: dismissIconRef\n  }, _Close || (_Close = /*#__PURE__*/React__default.createElement(Close, null)));\n  const hasIcon = Icon ?? dismissable;\n  return /*#__PURE__*/React__default.createElement(BaseComponent, _extends({}, rest, {\n    \"aria-controls\": panelId,\n    \"aria-disabled\": disabled,\n    \"aria-selected\": selectedIndex === index,\n    ref: ref,\n    id: id,\n    role: \"tab\",\n    className: className,\n    disabled: disabled,\n    onClick: evt => {\n      if (disabled) {\n        return;\n      }\n      setSelectedIndex(index);\n      onClick?.(evt);\n    },\n    onKeyDown: handleKeyDown,\n    tabIndex: selectedIndex === index ? '0' : '-1',\n    type: \"button\"\n  }), /*#__PURE__*/React__default.createElement(\"div\", {\n    className: `${prefix}--tabs__nav-item-label-wrapper`\n  }, dismissable && Icon && /*#__PURE__*/React__default.createElement(\"div\", {\n    className: `${prefix}--tabs__nav-item--icon-left`\n  }, /*#__PURE__*/React__default.createElement(Icon, {\n    size: 16\n  })), /*#__PURE__*/React__default.createElement(\"span\", {\n    className: `${prefix}--tabs__nav-item-label`,\n    title: children\n  }, children), /*#__PURE__*/React__default.createElement(\"div\", {\n    className: cx(`${prefix}--tabs__nav-item--icon`, {\n      [`${prefix}--visually-hidden`]: !hasIcon\n    })\n  }, DismissIcon, !dismissable && Icon && /*#__PURE__*/React__default.createElement(Icon, {\n    size: 16\n  }))), hasSecondaryLabel && /*#__PURE__*/React__default.createElement(\"div\", {\n    className: `${prefix}--tabs__nav-item-secondary-label`,\n    title: secondaryLabel\n  }, secondaryLabel));\n});\nTab.propTypes = {\n  /**\n   * Provide a custom element to render instead of the default button\n   */\n  // @ts-expect-error: Invalid prop type derivation\n  as: PropTypes.oneOfType([PropTypes.string, PropTypes.elementType]),\n  /**\n   * Provide child elements to be rendered inside `Tab`.\n   */\n  children: PropTypes.node,\n  /**\n   * Specify an optional className to be added to your Tab\n   */\n  className: PropTypes.string,\n  /**\n   * Whether your Tab is disabled.\n   */\n  disabled: PropTypes.bool,\n  /**\n   * Provide a handler that is invoked when a user clicks on the control\n   */\n  onClick: PropTypes.func,\n  /**\n   * Provide a handler that is invoked on the key down event for the control\n   */\n  onKeyDown: PropTypes.func,\n  /*\n   * An optional parameter to allow overriding the anchor rendering.\n   * Useful for using Tab along with react-router or other client\n   * side router libraries.\n   **/\n  renderButton: PropTypes.func,\n  /**\n   * Optional prop to render an icon next to the label.\n   * Can be a React component class\n   */\n  // @ts-expect-error: Invalid prop type derivation\n  renderIcon: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\n  /*\n   * An optional label to render under the primary tab label.\n  /* This prop is only useful for conained tabs\n   **/\n  secondaryLabel: PropTypes.string\n};\n\n/**\n * IconTab\n */\n\nconst IconTab = /*#__PURE__*/React__default.forwardRef(function IconTab(_ref6, ref) {\n  let {\n    children,\n    className: customClassName,\n    defaultOpen = false,\n    enterDelayMs,\n    leaveDelayMs,\n    label,\n    ...rest\n  } = _ref6;\n  const prefix = usePrefix();\n  const classNames = cx(`${prefix}--tabs__nav-item--icon-only`, customClassName);\n  return /*#__PURE__*/React__default.createElement(Tooltip, {\n    align: \"bottom\",\n    defaultOpen: defaultOpen,\n    className: `${prefix}--icon-tooltip`,\n    enterDelayMs: enterDelayMs,\n    label: label,\n    leaveDelayMs: leaveDelayMs\n  }, /*#__PURE__*/React__default.createElement(Tab, _extends({\n    className: classNames,\n    ref: ref\n  }, rest), children));\n});\nIconTab.propTypes = {\n  /**\n   * Provide an icon to be rendered inside `IconTab` as the visual label for Tab.\n   */\n  children: PropTypes.node,\n  /**\n   * Specify an optional className to be added to your Tab\n   */\n  className: PropTypes.string,\n  /**\n   * Specify whether the tooltip for the icon should be open when it first renders\n   */\n  defaultOpen: PropTypes.bool,\n  /**\n   * Specify the duration in milliseconds to delay before displaying the tooltip for the icon.\n   */\n  enterDelayMs: PropTypes.number,\n  /**\n   * Provide the label to be rendered inside the Tooltip. The label will use\n   * `aria-labelledby` and will fully describe the child node that is provided.\n   * This means that if you have text in the child node it will not be\n   * announced to the screen reader.\n   */\n  label: PropTypes.node.isRequired,\n  /**\n   * Specify the duration in milliseconds to delay before hiding the tooltip\n   */\n  leaveDelayMs: PropTypes.number\n};\n\n/**\n * TabPanel\n */\n\nconst TabPanel = /*#__PURE__*/React__default.forwardRef(function TabPanel(_ref7, forwardRef) {\n  let {\n    children,\n    className: customClassName,\n    ...rest\n  } = _ref7;\n  const prefix = usePrefix();\n  const panel = useRef(null);\n  const ref = useMergedRefs([forwardRef, panel]);\n  const [tabIndex, setTabIndex] = useState(0);\n  const [interactiveContent, setInteractiveContent] = useState(false);\n  const {\n    selectedIndex,\n    baseId\n  } = React__default.useContext(TabsContext);\n  const index = React__default.useContext(TabPanelContext);\n  const id = `${baseId}-tabpanel-${index}`;\n  const tabId = `${baseId}-tab-${index}`;\n  const className = cx(`${prefix}--tab-content`, customClassName, {\n    [`${prefix}--tab-content--interactive`]: interactiveContent\n  });\n  useEffectOnce(() => {\n    if (!panel.current) {\n      return;\n    }\n    const content = getInteractiveContent(panel.current);\n    if (content) {\n      setInteractiveContent(true);\n      setTabIndex(-1);\n    }\n  });\n\n  // tabindex should only be 0 if no interactive content in children\n  useEffect(() => {\n    const node = panel.current;\n    if (!node) {\n      return;\n    }\n    function callback() {\n      const content = getInteractiveContent(node);\n      if (content) {\n        setInteractiveContent(true);\n        setTabIndex(-1);\n      } else {\n        setInteractiveContent(false);\n        setTabIndex(0);\n      }\n    }\n    const observer = new MutationObserver(callback);\n    observer.observe(node, {\n      childList: true,\n      subtree: true\n    });\n    return () => observer.disconnect();\n  }, []);\n  return /*#__PURE__*/React__default.createElement(\"div\", _extends({}, rest, {\n    \"aria-labelledby\": tabId,\n    id: id,\n    className: className,\n    ref: ref,\n    role: \"tabpanel\",\n    tabIndex: tabIndex,\n    hidden: selectedIndex !== index\n  }), children);\n});\nTabPanel.propTypes = {\n  /**\n   * Provide child elements to be rendered inside `TabPanel`.\n   */\n  children: PropTypes.node,\n  /**\n   * Specify an optional className to be added to TabPanel.\n   */\n  className: PropTypes.string\n};\n\n/**\n * TabPanels\n */\n\nfunction TabPanels(_ref8) {\n  let {\n    children\n  } = _ref8;\n  return /*#__PURE__*/React__default.createElement(React__default.Fragment, null, React__default.Children.map(children, (child, index) => {\n    return /*#__PURE__*/React__default.createElement(TabPanelContext.Provider, {\n      value: index\n    }, child);\n  }));\n}\nTabPanels.propTypes = {\n  /**\n   * Provide child elements to be rendered inside `TabPanels`.\n   */\n  children: PropTypes.node\n};\n\nexport { IconTab, Tab, TabList, TabPanel, TabPanels, Tabs };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}