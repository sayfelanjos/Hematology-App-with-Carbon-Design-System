{"ast":null,"code":"export const rowData = [{\n  id: \"a\",\n  name: \"Load Balancer 3\",\n  protocol: \"HTTP\",\n  port: 3000,\n  rule: \"Round robin\",\n  attached_groups: \"Kevin’s VM Groups\",\n  status: \"Disabled\"\n}, {\n  id: \"b\",\n  name: \"Load Balancer 1\",\n  protocol: \"HTTP\",\n  port: 443,\n  rule: \"Round robin\",\n  attached_groups: \"Maureen’s VM Groups\",\n  status: \"Starting\"\n}, {\n  id: \"c\",\n  name: \"Load Balancer 2\",\n  protocol: \"HTTP\",\n  port: 80,\n  rule: \"DNS delegation\",\n  attached_groups: \"Andrew’s VM Groups\",\n  status: \"Active\"\n}, {\n  id: \"d\",\n  name: \"Load Balancer 6\",\n  protocol: \"HTTP\",\n  port: 3000,\n  rule: \"Round robin\",\n  attached_groups: \"Marc’s VM Groups\",\n  status: \"Disabled\"\n}, {\n  id: \"e\",\n  name: \"Load Balancer 4\",\n  protocol: \"HTTP\",\n  port: 443,\n  rule: \"Round robin\",\n  attached_groups: \"Mel’s VM Groups\",\n  status: \"Starting\"\n}, {\n  id: \"f\",\n  name: \"Load Balancer 5\",\n  protocol: \"HTTP\",\n  port: 80,\n  rule: \"DNS delegation\",\n  attached_groups: \"Ronja’s VM Groups\",\n  status: \"Active\"\n}, {\n  id: \"a\",\n  name: \"Load Balancer 3\",\n  protocol: \"HTTP\",\n  port: 3000,\n  rule: \"Round robin\",\n  attached_groups: \"Kevin’s VM Groups\",\n  status: \"Disabled\"\n}, {\n  id: \"b\",\n  name: \"Load Balancer 1\",\n  protocol: \"HTTP\",\n  port: 443,\n  rule: \"Round robin\",\n  attached_groups: \"Maureen’s VM Groups\",\n  status: \"Starting\"\n}, {\n  id: \"c\",\n  name: \"Load Balancer 2\",\n  protocol: \"HTTP\",\n  port: 80,\n  rule: \"DNS delegation\",\n  attached_groups: \"Andrew’s VM Groups\",\n  status: \"Active\"\n}, {\n  id: \"d\",\n  name: \"Load Balancer 6\",\n  protocol: \"HTTP\",\n  port: 3000,\n  rule: \"Round robin\",\n  attached_groups: \"Marc’s VM Groups\",\n  status: \"Disabled\"\n}, {\n  id: \"e\",\n  name: \"Load Balancer 4\",\n  protocol: \"HTTP\",\n  port: 443,\n  rule: \"Round robin\",\n  attached_groups: \"Mel’s VM Groups\",\n  status: \"Starting\"\n}, {\n  id: \"f\",\n  name: \"Load Balancer 5\",\n  protocol: \"HTTP\",\n  port: 80,\n  rule: \"DNS delegation\",\n  attached_groups: \"Ronja’s VM Groups\",\n  status: \"Active\"\n}];\nexport const headerData = [{\n  key: \"name\",\n  header: \"Name\"\n}, {\n  key: \"protocol\",\n  header: \"Protocol\"\n}, {\n  key: \"port\",\n  header: \"Port\"\n}, {\n  key: \"rule\",\n  header: \"Rule\"\n}, {\n  key: \"attached_groups\",\n  header: \"Attached Groups\"\n}, {\n  key: \"status\",\n  header: \"Status\"\n}];","map":{"version":3,"names":["rowData","id","name","protocol","port","rule","attached_groups","status","headerData","key","header"],"sources":["/home/saymon/Backup/Portifolio/Hematology-App-with-Carbon-Design-System/frontend/src/pages/supplies/components/supply-table/SupplyData.js"],"sourcesContent":["export const rowData = [\n  {\n    id: \"a\",\n    name: \"Load Balancer 3\",\n    protocol: \"HTTP\",\n    port: 3000,\n    rule: \"Round robin\",\n    attached_groups: \"Kevin’s VM Groups\",\n    status: \"Disabled\",\n  },\n  {\n    id: \"b\",\n    name: \"Load Balancer 1\",\n    protocol: \"HTTP\",\n    port: 443,\n    rule: \"Round robin\",\n    attached_groups: \"Maureen’s VM Groups\",\n    status: \"Starting\",\n  },\n  {\n    id: \"c\",\n    name: \"Load Balancer 2\",\n    protocol: \"HTTP\",\n    port: 80,\n    rule: \"DNS delegation\",\n    attached_groups: \"Andrew’s VM Groups\",\n    status: \"Active\",\n  },\n  {\n    id: \"d\",\n    name: \"Load Balancer 6\",\n    protocol: \"HTTP\",\n    port: 3000,\n    rule: \"Round robin\",\n    attached_groups: \"Marc’s VM Groups\",\n    status: \"Disabled\",\n  },\n  {\n    id: \"e\",\n    name: \"Load Balancer 4\",\n    protocol: \"HTTP\",\n    port: 443,\n    rule: \"Round robin\",\n    attached_groups: \"Mel’s VM Groups\",\n    status: \"Starting\",\n  },\n  {\n    id: \"f\",\n    name: \"Load Balancer 5\",\n    protocol: \"HTTP\",\n    port: 80,\n    rule: \"DNS delegation\",\n    attached_groups: \"Ronja’s VM Groups\",\n    status: \"Active\",\n  },\n  {\n    id: \"a\",\n    name: \"Load Balancer 3\",\n    protocol: \"HTTP\",\n    port: 3000,\n    rule: \"Round robin\",\n    attached_groups: \"Kevin’s VM Groups\",\n    status: \"Disabled\",\n  },\n  {\n    id: \"b\",\n    name: \"Load Balancer 1\",\n    protocol: \"HTTP\",\n    port: 443,\n    rule: \"Round robin\",\n    attached_groups: \"Maureen’s VM Groups\",\n    status: \"Starting\",\n  },\n  {\n    id: \"c\",\n    name: \"Load Balancer 2\",\n    protocol: \"HTTP\",\n    port: 80,\n    rule: \"DNS delegation\",\n    attached_groups: \"Andrew’s VM Groups\",\n    status: \"Active\",\n  },\n  {\n    id: \"d\",\n    name: \"Load Balancer 6\",\n    protocol: \"HTTP\",\n    port: 3000,\n    rule: \"Round robin\",\n    attached_groups: \"Marc’s VM Groups\",\n    status: \"Disabled\",\n  },\n  {\n    id: \"e\",\n    name: \"Load Balancer 4\",\n    protocol: \"HTTP\",\n    port: 443,\n    rule: \"Round robin\",\n    attached_groups: \"Mel’s VM Groups\",\n    status: \"Starting\",\n  },\n  {\n    id: \"f\",\n    name: \"Load Balancer 5\",\n    protocol: \"HTTP\",\n    port: 80,\n    rule: \"DNS delegation\",\n    attached_groups: \"Ronja’s VM Groups\",\n    status: \"Active\",\n  },\n];\n\nexport const headerData = [\n  {\n    key: \"name\",\n    header: \"Name\",\n  },\n  {\n    key: \"protocol\",\n    header: \"Protocol\",\n  },\n  {\n    key: \"port\",\n    header: \"Port\",\n  },\n  {\n    key: \"rule\",\n    header: \"Rule\",\n  },\n  {\n    key: \"attached_groups\",\n    header: \"Attached Groups\",\n  },\n  {\n    key: \"status\",\n    header: \"Status\",\n  },\n];\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}