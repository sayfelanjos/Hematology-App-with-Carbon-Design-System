{"ast":null,"code":"/**\n * Copyright IBM Corp. 2016, 2023\n *\n * This source code is licensed under the Apache-2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport PropTypes from 'prop-types';\nimport React__default, { useRef, useEffect } from 'react';\nimport deprecate from '../../prop-types/deprecate.js';\nimport { usePrefix } from '../../internal/usePrefix.js';\nimport { useMergedRefs } from '../../internal/useMergedRefs.js';\n\n/** @type any */\nconst InlineCheckbox = /*#__PURE__*/React__default.forwardRef(function InlineCheckbox(props, forwardRef) {\n  const {\n    ['aria-label']: ariaLabel,\n    ariaLabel: deprecatedAriaLabel,\n    checked = false,\n    disabled,\n    id,\n    indeterminate,\n    name,\n    onChange = () => {},\n    onClick,\n    onKeyDown,\n    title\n  } = props;\n  const prefix = usePrefix();\n  const inputRef = useRef(null);\n  const ref = useMergedRefs([inputRef, forwardRef]);\n  const inputProps = {\n    checked,\n    className: `${prefix}--checkbox`,\n    disabled,\n    id,\n    name,\n    onClick,\n    onChange: evt => {\n      onChange(evt.target.checked, id, evt);\n    },\n    onKeyDown,\n    ref,\n    type: 'checkbox'\n  };\n  if (indeterminate) {\n    inputProps.checked = false;\n  }\n  useEffect(() => {\n    if (inputRef?.current) {\n      inputRef.current.indeterminate = indeterminate;\n    }\n  }, [indeterminate]);\n  return /*#__PURE__*/React__default.createElement(\"div\", {\n    className: `${prefix}--checkbox--inline`\n  }, /*#__PURE__*/React__default.createElement(\"input\", inputProps), /*#__PURE__*/\n  /* eslint-disable jsx-a11y/label-has-for,jsx-a11y/label-has-associated-control,jsx-a11y/click-events-have-key-events,jsx-a11y/no-noninteractive-element-interactions */\n  React__default.createElement(\"label\", {\n    htmlFor: id,\n    className: `${prefix}--checkbox-label`,\n    title: title,\n    onClick: evt => {\n      evt.stopPropagation();\n    }\n  }, /*#__PURE__*/React__default.createElement(\"span\", {\n    className: `${prefix}--visually-hidden`\n  }, deprecatedAriaLabel || ariaLabel)));\n});\nInlineCheckbox.propTypes = {\n  /**\n   * Specify the label for the control\n   */\n  ['aria-label']: PropTypes.string.isRequired,\n  /**\n   * Deprecated, please use `aria-label` instead.\n   * Specify the label for the control\n   */\n  ariaLabel: deprecate(PropTypes.string.isRequired, 'The `ariaLabel` prop has been deprecated in favor of `aria-label`. This prop will be removed in the next major release.'),\n  /**\n   * Specify whether the underlying control is checked, or not\n   */\n  checked: PropTypes.bool,\n  /**\n   * Specify whether the underlying input control should be disabled\n   */\n  disabled: PropTypes.bool,\n  /**\n   * Provide an `id` for the underlying input control\n   */\n  id: PropTypes.string.isRequired,\n  /**\n   * Specify whether the control is in an indterminate state\n   */\n  indeterminate: PropTypes.bool,\n  /**\n   * Provide a `name` for the underlying input control\n   */\n  name: PropTypes.string.isRequired,\n  /**\n   * Provide an optional hook that is called each time the input is updated\n   */\n  onChange: PropTypes.func,\n  /**\n   * Provide a handler that is invoked when a user clicks on the control\n   */\n  onClick: PropTypes.func,\n  /**\n   * Provide a handler that is invoked on the key down event for the control\n   */\n  onKeyDown: PropTypes.func,\n  /**\n   * Provide an optional tooltip for the InlineCheckbox\n   */\n  title: PropTypes.string\n};\nvar InlineCheckbox$1 = InlineCheckbox;\nexport { InlineCheckbox$1 as default };","map":{"version":3,"names":["PropTypes","React__default","useRef","useEffect","deprecate","usePrefix","useMergedRefs","InlineCheckbox","forwardRef","props","ariaLabel","deprecatedAriaLabel","checked","disabled","id","indeterminate","name","onChange","onClick","onKeyDown","title","prefix","inputRef","ref","inputProps","className","evt","target","type","current","createElement","htmlFor","stopPropagation","propTypes","string","isRequired","bool","func","InlineCheckbox$1","default"],"sources":["/home/saymon/Backup/Portifolio/Hematology-App-with-Carbon-Design-System/frontend/node_modules/@carbon/react/es/components/InlineCheckbox/InlineCheckbox.js"],"sourcesContent":["/**\n * Copyright IBM Corp. 2016, 2023\n *\n * This source code is licensed under the Apache-2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport PropTypes from 'prop-types';\nimport React__default, { useRef, useEffect } from 'react';\nimport deprecate from '../../prop-types/deprecate.js';\nimport { usePrefix } from '../../internal/usePrefix.js';\nimport { useMergedRefs } from '../../internal/useMergedRefs.js';\n\n/** @type any */\nconst InlineCheckbox = /*#__PURE__*/React__default.forwardRef(function InlineCheckbox(props, forwardRef) {\n  const {\n    ['aria-label']: ariaLabel,\n    ariaLabel: deprecatedAriaLabel,\n    checked = false,\n    disabled,\n    id,\n    indeterminate,\n    name,\n    onChange = () => {},\n    onClick,\n    onKeyDown,\n    title\n  } = props;\n  const prefix = usePrefix();\n  const inputRef = useRef(null);\n  const ref = useMergedRefs([inputRef, forwardRef]);\n  const inputProps = {\n    checked,\n    className: `${prefix}--checkbox`,\n    disabled,\n    id,\n    name,\n    onClick,\n    onChange: evt => {\n      onChange(evt.target.checked, id, evt);\n    },\n    onKeyDown,\n    ref,\n    type: 'checkbox'\n  };\n  if (indeterminate) {\n    inputProps.checked = false;\n  }\n  useEffect(() => {\n    if (inputRef?.current) {\n      inputRef.current.indeterminate = indeterminate;\n    }\n  }, [indeterminate]);\n  return /*#__PURE__*/React__default.createElement(\"div\", {\n    className: `${prefix}--checkbox--inline`\n  }, /*#__PURE__*/React__default.createElement(\"input\", inputProps),\n  /*#__PURE__*/\n  /* eslint-disable jsx-a11y/label-has-for,jsx-a11y/label-has-associated-control,jsx-a11y/click-events-have-key-events,jsx-a11y/no-noninteractive-element-interactions */\n  React__default.createElement(\"label\", {\n    htmlFor: id,\n    className: `${prefix}--checkbox-label`,\n    title: title,\n    onClick: evt => {\n      evt.stopPropagation();\n    }\n  }, /*#__PURE__*/React__default.createElement(\"span\", {\n    className: `${prefix}--visually-hidden`\n  }, deprecatedAriaLabel || ariaLabel)));\n});\nInlineCheckbox.propTypes = {\n  /**\n   * Specify the label for the control\n   */\n  ['aria-label']: PropTypes.string.isRequired,\n  /**\n   * Deprecated, please use `aria-label` instead.\n   * Specify the label for the control\n   */\n  ariaLabel: deprecate(PropTypes.string.isRequired, 'The `ariaLabel` prop has been deprecated in favor of `aria-label`. This prop will be removed in the next major release.'),\n  /**\n   * Specify whether the underlying control is checked, or not\n   */\n  checked: PropTypes.bool,\n  /**\n   * Specify whether the underlying input control should be disabled\n   */\n  disabled: PropTypes.bool,\n  /**\n   * Provide an `id` for the underlying input control\n   */\n  id: PropTypes.string.isRequired,\n  /**\n   * Specify whether the control is in an indterminate state\n   */\n  indeterminate: PropTypes.bool,\n  /**\n   * Provide a `name` for the underlying input control\n   */\n  name: PropTypes.string.isRequired,\n  /**\n   * Provide an optional hook that is called each time the input is updated\n   */\n  onChange: PropTypes.func,\n  /**\n   * Provide a handler that is invoked when a user clicks on the control\n   */\n  onClick: PropTypes.func,\n  /**\n   * Provide a handler that is invoked on the key down event for the control\n   */\n  onKeyDown: PropTypes.func,\n  /**\n   * Provide an optional tooltip for the InlineCheckbox\n   */\n  title: PropTypes.string\n};\nvar InlineCheckbox$1 = InlineCheckbox;\n\nexport { InlineCheckbox$1 as default };\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;;AAEA,OAAOA,SAAS,MAAM,YAAY;AAClC,OAAOC,cAAc,IAAIC,MAAM,EAAEC,SAAS,QAAQ,OAAO;AACzD,OAAOC,SAAS,MAAM,+BAA+B;AACrD,SAASC,SAAS,QAAQ,6BAA6B;AACvD,SAASC,aAAa,QAAQ,iCAAiC;;AAE/D;AACA,MAAMC,cAAc,GAAG,aAAaN,cAAc,CAACO,UAAU,CAAC,SAASD,cAAcA,CAACE,KAAK,EAAED,UAAU,EAAE;EACvG,MAAM;IACJ,CAAC,YAAY,GAAGE,SAAS;IACzBA,SAAS,EAAEC,mBAAmB;IAC9BC,OAAO,GAAG,KAAK;IACfC,QAAQ;IACRC,EAAE;IACFC,aAAa;IACbC,IAAI;IACJC,QAAQ,GAAGA,CAAA,KAAM,CAAC,CAAC;IACnBC,OAAO;IACPC,SAAS;IACTC;EACF,CAAC,GAAGX,KAAK;EACT,MAAMY,MAAM,GAAGhB,SAAS,CAAC,CAAC;EAC1B,MAAMiB,QAAQ,GAAGpB,MAAM,CAAC,IAAI,CAAC;EAC7B,MAAMqB,GAAG,GAAGjB,aAAa,CAAC,CAACgB,QAAQ,EAAEd,UAAU,CAAC,CAAC;EACjD,MAAMgB,UAAU,GAAG;IACjBZ,OAAO;IACPa,SAAS,EAAG,GAAEJ,MAAO,YAAW;IAChCR,QAAQ;IACRC,EAAE;IACFE,IAAI;IACJE,OAAO;IACPD,QAAQ,EAAES,GAAG,IAAI;MACfT,QAAQ,CAACS,GAAG,CAACC,MAAM,CAACf,OAAO,EAAEE,EAAE,EAAEY,GAAG,CAAC;IACvC,CAAC;IACDP,SAAS;IACTI,GAAG;IACHK,IAAI,EAAE;EACR,CAAC;EACD,IAAIb,aAAa,EAAE;IACjBS,UAAU,CAACZ,OAAO,GAAG,KAAK;EAC5B;EACAT,SAAS,CAAC,MAAM;IACd,IAAImB,QAAQ,EAAEO,OAAO,EAAE;MACrBP,QAAQ,CAACO,OAAO,CAACd,aAAa,GAAGA,aAAa;IAChD;EACF,CAAC,EAAE,CAACA,aAAa,CAAC,CAAC;EACnB,OAAO,aAAad,cAAc,CAAC6B,aAAa,CAAC,KAAK,EAAE;IACtDL,SAAS,EAAG,GAAEJ,MAAO;EACvB,CAAC,EAAE,aAAapB,cAAc,CAAC6B,aAAa,CAAC,OAAO,EAAEN,UAAU,CAAC,EACjE;EACA;EACAvB,cAAc,CAAC6B,aAAa,CAAC,OAAO,EAAE;IACpCC,OAAO,EAAEjB,EAAE;IACXW,SAAS,EAAG,GAAEJ,MAAO,kBAAiB;IACtCD,KAAK,EAAEA,KAAK;IACZF,OAAO,EAAEQ,GAAG,IAAI;MACdA,GAAG,CAACM,eAAe,CAAC,CAAC;IACvB;EACF,CAAC,EAAE,aAAa/B,cAAc,CAAC6B,aAAa,CAAC,MAAM,EAAE;IACnDL,SAAS,EAAG,GAAEJ,MAAO;EACvB,CAAC,EAAEV,mBAAmB,IAAID,SAAS,CAAC,CAAC,CAAC;AACxC,CAAC,CAAC;AACFH,cAAc,CAAC0B,SAAS,GAAG;EACzB;AACF;AACA;EACE,CAAC,YAAY,GAAGjC,SAAS,CAACkC,MAAM,CAACC,UAAU;EAC3C;AACF;AACA;AACA;EACEzB,SAAS,EAAEN,SAAS,CAACJ,SAAS,CAACkC,MAAM,CAACC,UAAU,EAAE,yHAAyH,CAAC;EAC5K;AACF;AACA;EACEvB,OAAO,EAAEZ,SAAS,CAACoC,IAAI;EACvB;AACF;AACA;EACEvB,QAAQ,EAAEb,SAAS,CAACoC,IAAI;EACxB;AACF;AACA;EACEtB,EAAE,EAAEd,SAAS,CAACkC,MAAM,CAACC,UAAU;EAC/B;AACF;AACA;EACEpB,aAAa,EAAEf,SAAS,CAACoC,IAAI;EAC7B;AACF;AACA;EACEpB,IAAI,EAAEhB,SAAS,CAACkC,MAAM,CAACC,UAAU;EACjC;AACF;AACA;EACElB,QAAQ,EAAEjB,SAAS,CAACqC,IAAI;EACxB;AACF;AACA;EACEnB,OAAO,EAAElB,SAAS,CAACqC,IAAI;EACvB;AACF;AACA;EACElB,SAAS,EAAEnB,SAAS,CAACqC,IAAI;EACzB;AACF;AACA;EACEjB,KAAK,EAAEpB,SAAS,CAACkC;AACnB,CAAC;AACD,IAAII,gBAAgB,GAAG/B,cAAc;AAErC,SAAS+B,gBAAgB,IAAIC,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}