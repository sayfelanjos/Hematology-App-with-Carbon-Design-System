{"ast":null,"code":"/**\n * Copyright IBM Corp. 2016, 2023\n *\n * This source code is licensed under the Apache-2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { extends as _extends } from '../../_virtual/_rollupPluginBabelHelpers.js';\nimport cx from 'classnames';\nimport React__default from 'react';\nimport PropTypes from 'prop-types';\nimport Link, { LinkPropTypes } from './Link.js';\nimport { usePrefix } from '../../internal/usePrefix.js';\nfunction HeaderName(_ref) {\n  let {\n    children,\n    className: customClassName,\n    prefix = 'IBM',\n    ...rest\n  } = _ref;\n  const selectorPrefix = usePrefix();\n  const className = cx(`${selectorPrefix}--header__name`, customClassName);\n  return /*#__PURE__*/React__default.createElement(Link, _extends({}, rest, {\n    className: className\n  }), prefix && /*#__PURE__*/React__default.createElement(React__default.Fragment, null, /*#__PURE__*/React__default.createElement(\"span\", {\n    className: `${selectorPrefix}--header__name--prefix`\n  }, prefix), \"\\xA0\"), children);\n}\nHeaderName.propTypes = {\n  /**\n   * Pass in a valid `element` to replace the underlying `<a>` tag with a\n   * custom `Link` element\n   */\n  ...LinkPropTypes,\n  /**\n   * Pass in children that are either a string or can be read as a string by\n   * screen readers\n   */\n  children: PropTypes.node.isRequired,\n  /**\n   * Optionally provide a custom class to apply to the underlying `<li>` node\n   */\n  className: PropTypes.string,\n  /**\n   * Provide an href for the name to link to\n   */\n  href: PropTypes.string,\n  /**\n   * Optionally specify a prefix to your header name. Useful for companies, for\n   * example: IBM [Product Name] versus solely [Product Name]\n   */\n  prefix: PropTypes.string\n};\nexport { HeaderName as default };","map":{"version":3,"names":["extends","_extends","cx","React__default","PropTypes","Link","LinkPropTypes","usePrefix","HeaderName","_ref","children","className","customClassName","prefix","rest","selectorPrefix","createElement","Fragment","propTypes","node","isRequired","string","href","default"],"sources":["/home/saymon/Backup/Portifolio/Hematology-App-with-Carbon-Design-System/frontend/node_modules/@carbon/react/es/components/UIShell/HeaderName.js"],"sourcesContent":["/**\n * Copyright IBM Corp. 2016, 2023\n *\n * This source code is licensed under the Apache-2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { extends as _extends } from '../../_virtual/_rollupPluginBabelHelpers.js';\nimport cx from 'classnames';\nimport React__default from 'react';\nimport PropTypes from 'prop-types';\nimport Link, { LinkPropTypes } from './Link.js';\nimport { usePrefix } from '../../internal/usePrefix.js';\n\nfunction HeaderName(_ref) {\n  let {\n    children,\n    className: customClassName,\n    prefix = 'IBM',\n    ...rest\n  } = _ref;\n  const selectorPrefix = usePrefix();\n  const className = cx(`${selectorPrefix}--header__name`, customClassName);\n  return /*#__PURE__*/React__default.createElement(Link, _extends({}, rest, {\n    className: className\n  }), prefix && /*#__PURE__*/React__default.createElement(React__default.Fragment, null, /*#__PURE__*/React__default.createElement(\"span\", {\n    className: `${selectorPrefix}--header__name--prefix`\n  }, prefix), \"\\xA0\"), children);\n}\nHeaderName.propTypes = {\n  /**\n   * Pass in a valid `element` to replace the underlying `<a>` tag with a\n   * custom `Link` element\n   */\n  ...LinkPropTypes,\n  /**\n   * Pass in children that are either a string or can be read as a string by\n   * screen readers\n   */\n  children: PropTypes.node.isRequired,\n  /**\n   * Optionally provide a custom class to apply to the underlying `<li>` node\n   */\n  className: PropTypes.string,\n  /**\n   * Provide an href for the name to link to\n   */\n  href: PropTypes.string,\n  /**\n   * Optionally specify a prefix to your header name. Useful for companies, for\n   * example: IBM [Product Name] versus solely [Product Name]\n   */\n  prefix: PropTypes.string\n};\n\nexport { HeaderName as default };\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;;AAEA,SAASA,OAAO,IAAIC,QAAQ,QAAQ,6CAA6C;AACjF,OAAOC,EAAE,MAAM,YAAY;AAC3B,OAAOC,cAAc,MAAM,OAAO;AAClC,OAAOC,SAAS,MAAM,YAAY;AAClC,OAAOC,IAAI,IAAIC,aAAa,QAAQ,WAAW;AAC/C,SAASC,SAAS,QAAQ,6BAA6B;AAEvD,SAASC,UAAUA,CAACC,IAAI,EAAE;EACxB,IAAI;IACFC,QAAQ;IACRC,SAAS,EAAEC,eAAe;IAC1BC,MAAM,GAAG,KAAK;IACd,GAAGC;EACL,CAAC,GAAGL,IAAI;EACR,MAAMM,cAAc,GAAGR,SAAS,CAAC,CAAC;EAClC,MAAMI,SAAS,GAAGT,EAAE,CAAE,GAAEa,cAAe,gBAAe,EAAEH,eAAe,CAAC;EACxE,OAAO,aAAaT,cAAc,CAACa,aAAa,CAACX,IAAI,EAAEJ,QAAQ,CAAC,CAAC,CAAC,EAAEa,IAAI,EAAE;IACxEH,SAAS,EAAEA;EACb,CAAC,CAAC,EAAEE,MAAM,IAAI,aAAaV,cAAc,CAACa,aAAa,CAACb,cAAc,CAACc,QAAQ,EAAE,IAAI,EAAE,aAAad,cAAc,CAACa,aAAa,CAAC,MAAM,EAAE;IACvIL,SAAS,EAAG,GAAEI,cAAe;EAC/B,CAAC,EAAEF,MAAM,CAAC,EAAE,MAAM,CAAC,EAAEH,QAAQ,CAAC;AAChC;AACAF,UAAU,CAACU,SAAS,GAAG;EACrB;AACF;AACA;AACA;EACE,GAAGZ,aAAa;EAChB;AACF;AACA;AACA;EACEI,QAAQ,EAAEN,SAAS,CAACe,IAAI,CAACC,UAAU;EACnC;AACF;AACA;EACET,SAAS,EAAEP,SAAS,CAACiB,MAAM;EAC3B;AACF;AACA;EACEC,IAAI,EAAElB,SAAS,CAACiB,MAAM;EACtB;AACF;AACA;AACA;EACER,MAAM,EAAET,SAAS,CAACiB;AACpB,CAAC;AAED,SAASb,UAAU,IAAIe,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}