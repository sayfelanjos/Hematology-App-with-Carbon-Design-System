{"ast":null,"code":"/**\n * Copyright IBM Corp. 2016, 2023\n *\n * This source code is licensed under the Apache-2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React__default from 'react';\nimport PropTypes from 'prop-types';\nimport cx from 'classnames';\nimport { LayoutConstraint } from '../Layout/index.js';\nimport { useId } from '../../internal/useId.js';\nimport { usePrefix } from '../../internal/usePrefix.js';\nconst variants = ['on-page', 'disclosed'];\nfunction filterChildren(children) {\n  if (Array.isArray(children)) {\n    return children?.filter(child => !['Search', 'ExpandableSearch'].includes(child?.type?.displayName));\n  }\n  if (children && !['Search', 'ExpandableSearch'].includes(children?.type?.displayName)) {\n    return children;\n  }\n  return null;\n}\nfunction renderChildren(children) {\n  if (Array.isArray(children)) {\n    children.map((child, index) => {\n      if (index === 0 && child.type?.displayName === 'Search') {\n        return child;\n      }\n      return child;\n    });\n  }\n  if (children && children.type?.displayName === 'Search') {\n    return children;\n  }\n  return children;\n}\nfunction ContainedList(_ref) {\n  let {\n    action,\n    children,\n    className,\n    isInset,\n    kind = variants[0],\n    label,\n    size\n  } = _ref;\n  const labelId = `${useId('contained-list')}-header`;\n  const prefix = usePrefix();\n  const classes = cx(`${prefix}--contained-list`, {\n    [`${prefix}--contained-list--inset-rulers`]: isInset,\n    [`${prefix}--contained-list--${size}`]: size,\n    // TODO: V12 - Remove this class\n    [`${prefix}--layout--size-${size}`]: size\n  }, `${prefix}--contained-list--${kind}`, className);\n  const filteredChildren = filterChildren(children);\n  const isActionSearch = ['Search', 'ExpandableSearch'].includes(action?.type?.displayName);\n  const renderedChildren = renderChildren(children);\n  return /*#__PURE__*/React__default.createElement(\"div\", {\n    className: classes\n  }, /*#__PURE__*/React__default.createElement(\"div\", {\n    className: `${prefix}--contained-list__header`\n  }, /*#__PURE__*/React__default.createElement(\"div\", {\n    id: labelId,\n    className: `${prefix}--contained-list__label`\n  }, label), /*#__PURE__*/React__default.createElement(LayoutConstraint, {\n    size: {\n      min: 'sm',\n      max: 'xl'\n    },\n    className: `${prefix}--contained-list__action`\n  }, action)), children && /*#__PURE__*/\n  /**\n   * Webkit removes implicit \"list\" semantics when \"list-style-type: none\" is set.\n   * Explicitly setting the \"list\" role ensures assistive technology in webkit\n   * browsers correctly announce the semantics.\n   *\n   * Ref https://bugs.webkit.org/show_bug.cgi?id=170179#c1\n   */\n  // eslint-disable-next-line jsx-a11y/no-redundant-roles\n  React__default.createElement(\"ul\", {\n    role: \"list\",\n    \"aria-labelledby\": labelId\n  }, isActionSearch ? filteredChildren : renderedChildren));\n}\nContainedList.propTypes = {\n  /**\n   * A slot for a possible interactive element to render.\n   */\n  action: PropTypes.node,\n  /**\n   * A collection of ContainedListItems to be rendered in the ContainedList\n   */\n  children: PropTypes.node,\n  /**\n   * Additional CSS class names.\n   */\n  className: PropTypes.string,\n  /**\n   * Specify whether the dividing lines in between list items should be inset.\n   */\n  isInset: PropTypes.bool,\n  /**\n   * The kind of ContainedList you want to display\n   */\n  kind: PropTypes.oneOf(variants),\n  /**\n   * A label describing the contained list.\n   */\n  label: PropTypes.oneOfType([PropTypes.string, PropTypes.node]).isRequired,\n  /**\n   * Specify the size of the contained list.\n   */\n  size: PropTypes.oneOf(['sm', 'md', 'lg', 'xl'])\n};\nexport { ContainedList as default };","map":{"version":3,"names":["React__default","PropTypes","cx","LayoutConstraint","useId","usePrefix","variants","filterChildren","children","Array","isArray","filter","child","includes","type","displayName","renderChildren","map","index","ContainedList","_ref","action","className","isInset","kind","label","size","labelId","prefix","classes","filteredChildren","isActionSearch","renderedChildren","createElement","id","min","max","role","propTypes","node","string","bool","oneOf","oneOfType","isRequired","default"],"sources":["/home/saymon/Backup/Portifolio/Hematology-App-with-Carbon-Design-System/frontend/node_modules/@carbon/react/es/components/ContainedList/ContainedList.js"],"sourcesContent":["/**\n * Copyright IBM Corp. 2016, 2023\n *\n * This source code is licensed under the Apache-2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React__default from 'react';\nimport PropTypes from 'prop-types';\nimport cx from 'classnames';\nimport { LayoutConstraint } from '../Layout/index.js';\nimport { useId } from '../../internal/useId.js';\nimport { usePrefix } from '../../internal/usePrefix.js';\n\nconst variants = ['on-page', 'disclosed'];\nfunction filterChildren(children) {\n  if (Array.isArray(children)) {\n    return children?.filter(child => !['Search', 'ExpandableSearch'].includes(child?.type?.displayName));\n  }\n  if (children && !['Search', 'ExpandableSearch'].includes(children?.type?.displayName)) {\n    return children;\n  }\n  return null;\n}\nfunction renderChildren(children) {\n  if (Array.isArray(children)) {\n    children.map((child, index) => {\n      if (index === 0 && child.type?.displayName === 'Search') {\n        return child;\n      }\n      return child;\n    });\n  }\n  if (children && children.type?.displayName === 'Search') {\n    return children;\n  }\n  return children;\n}\nfunction ContainedList(_ref) {\n  let {\n    action,\n    children,\n    className,\n    isInset,\n    kind = variants[0],\n    label,\n    size\n  } = _ref;\n  const labelId = `${useId('contained-list')}-header`;\n  const prefix = usePrefix();\n  const classes = cx(`${prefix}--contained-list`, {\n    [`${prefix}--contained-list--inset-rulers`]: isInset,\n    [`${prefix}--contained-list--${size}`]: size,\n    // TODO: V12 - Remove this class\n    [`${prefix}--layout--size-${size}`]: size\n  }, `${prefix}--contained-list--${kind}`, className);\n  const filteredChildren = filterChildren(children);\n  const isActionSearch = ['Search', 'ExpandableSearch'].includes(action?.type?.displayName);\n  const renderedChildren = renderChildren(children);\n  return /*#__PURE__*/React__default.createElement(\"div\", {\n    className: classes\n  }, /*#__PURE__*/React__default.createElement(\"div\", {\n    className: `${prefix}--contained-list__header`\n  }, /*#__PURE__*/React__default.createElement(\"div\", {\n    id: labelId,\n    className: `${prefix}--contained-list__label`\n  }, label), /*#__PURE__*/React__default.createElement(LayoutConstraint, {\n    size: {\n      min: 'sm',\n      max: 'xl'\n    },\n    className: `${prefix}--contained-list__action`\n  }, action)), children &&\n  /*#__PURE__*/\n  /**\n   * Webkit removes implicit \"list\" semantics when \"list-style-type: none\" is set.\n   * Explicitly setting the \"list\" role ensures assistive technology in webkit\n   * browsers correctly announce the semantics.\n   *\n   * Ref https://bugs.webkit.org/show_bug.cgi?id=170179#c1\n   */\n  // eslint-disable-next-line jsx-a11y/no-redundant-roles\n  React__default.createElement(\"ul\", {\n    role: \"list\",\n    \"aria-labelledby\": labelId\n  }, isActionSearch ? filteredChildren : renderedChildren));\n}\nContainedList.propTypes = {\n  /**\n   * A slot for a possible interactive element to render.\n   */\n  action: PropTypes.node,\n  /**\n   * A collection of ContainedListItems to be rendered in the ContainedList\n   */\n  children: PropTypes.node,\n  /**\n   * Additional CSS class names.\n   */\n  className: PropTypes.string,\n  /**\n   * Specify whether the dividing lines in between list items should be inset.\n   */\n  isInset: PropTypes.bool,\n  /**\n   * The kind of ContainedList you want to display\n   */\n  kind: PropTypes.oneOf(variants),\n  /**\n   * A label describing the contained list.\n   */\n  label: PropTypes.oneOfType([PropTypes.string, PropTypes.node]).isRequired,\n  /**\n   * Specify the size of the contained list.\n   */\n  size: PropTypes.oneOf(['sm', 'md', 'lg', 'xl'])\n};\n\nexport { ContainedList as default };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}