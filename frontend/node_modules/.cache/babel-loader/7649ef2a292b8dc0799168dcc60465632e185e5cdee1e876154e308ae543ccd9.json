{"ast":null,"code":"/**\n * Copyright IBM Corp. 2016, 2023\n *\n * This source code is licensed under the Apache-2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { extends as _extends } from '../../_virtual/_rollupPluginBabelHelpers.js';\nimport React__default, { useState, useRef, useEffect } from 'react';\nimport { isElement } from 'react-is';\nimport PropTypes from 'prop-types';\nimport { ModalHeader } from './ModalHeader.js';\nimport { ModalFooter } from './ModalFooter.js';\nimport cx from 'classnames';\nimport toggleClass from '../../tools/toggleClass.js';\nimport requiredIfGivenPropIsTruthy from '../../prop-types/requiredIfGivenPropIsTruthy.js';\nimport wrapFocus from '../../internal/wrapFocus.js';\nimport { usePrefix } from '../../internal/usePrefix.js';\nimport { match } from '../../internal/keyboard/match.js';\nimport { Escape } from '../../internal/keyboard/keys.js';\nconst ModalBody = /*#__PURE__*/React__default.forwardRef(function ModalBody(_ref, ref) {\n  let {\n    className: customClassName,\n    children,\n    hasForm,\n    hasScrollingContent,\n    ...rest\n  } = _ref;\n  const prefix = usePrefix();\n  const contentClass = cx(`${prefix}--modal-content`, hasForm && `${prefix}--modal-content--with-form`, hasScrollingContent && `${prefix}--modal-scroll-content`, customClassName);\n  const hasScrollingContentProps = hasScrollingContent ? {\n    tabIndex: 0,\n    role: 'region'\n  } : {};\n  return /*#__PURE__*/React__default.createElement(React__default.Fragment, null, /*#__PURE__*/React__default.createElement(\"div\", _extends({\n    className: contentClass\n  }, hasScrollingContentProps, rest, {\n    ref: ref\n  }), children), hasScrollingContent && /*#__PURE__*/React__default.createElement(\"div\", {\n    className: `${prefix}--modal-content--overflow-indicator`\n  }));\n});\nModalBody.propTypes = {\n  /**\n   * Required props for the accessibility label of the header\n   */\n  // @ts-expect-error: Built-in prop-types > TS logic doesn't jive well with custom validators\n  ['aria-label']: requiredIfGivenPropIsTruthy('hasScrollingContent', PropTypes.string),\n  /**\n   * Specify the content to be placed in the ModalBody\n   */\n  children: PropTypes.node,\n  /**\n   * Specify an optional className to be added to the Modal Body node\n   */\n  className: PropTypes.string,\n  /**\n   * Provide whether the modal content has a form element.\n   * If `true` is used here, non-form child content should have `bx--modal-content__regular-content` class.\n   */\n  hasForm: PropTypes.bool,\n  /**\n   * Specify whether the modal contains scrolling content\n   */\n  hasScrollingContent: PropTypes.bool\n};\nconst ComposedModal = /*#__PURE__*/React__default.forwardRef(function ComposedModal(_ref2, ref) {\n  let {\n    ['aria-labelledby']: ariaLabelledBy,\n    ['aria-label']: ariaLabel,\n    children,\n    className: customClassName,\n    containerClassName,\n    danger,\n    isFullWidth,\n    onClose,\n    onKeyDown,\n    open,\n    preventCloseOnClickOutside,\n    selectorPrimaryFocus,\n    selectorsFloatingMenus,\n    size,\n    launcherButtonRef,\n    ...rest\n  } = _ref2;\n  const prefix = usePrefix();\n  const [isOpen, setIsOpen] = useState(!!open);\n  const [wasOpen, setWasOpen] = useState(!!open);\n  const innerModal = useRef(null);\n  const button = useRef(null);\n  const startSentinel = useRef(null);\n  const endSentinel = useRef(null);\n\n  // Kepp track of modal open/close state\n  // and propagate it to the document.body\n  useEffect(() => {\n    if (open !== wasOpen) {\n      setIsOpen(!!open);\n      setWasOpen(!!open);\n      toggleClass(document.body, `${prefix}--body--with-modal-open`, !!open);\n    }\n  }, [open, wasOpen, prefix]);\n  // Remove the document.body className on unmount\n  useEffect(() => {\n    return () => {\n      toggleClass(document.body, `${prefix}--body--with-modal-open`, false);\n    };\n  }, []); // eslint-disable-line react-hooks/exhaustive-deps\n\n  function handleKeyDown(evt) {\n    if (match(evt, Escape)) {\n      closeModal(evt);\n    }\n    onKeyDown?.(evt);\n  }\n  function handleMousedown(evt) {\n    const isInside = innerModal.current?.contains(evt.target);\n    if (!isInside && !preventCloseOnClickOutside) {\n      closeModal(evt);\n    }\n  }\n  function handleBlur(_ref3) {\n    let {\n      target: oldActiveNode,\n      relatedTarget: currentActiveNode\n    } = _ref3;\n    if (open && currentActiveNode && oldActiveNode && innerModal.current) {\n      const {\n        current: bodyNode\n      } = innerModal;\n      const {\n        current: startSentinelNode\n      } = startSentinel;\n      const {\n        current: endSentinelNode\n      } = endSentinel;\n      wrapFocus({\n        bodyNode,\n        startTrapNode: startSentinelNode,\n        endTrapNode: endSentinelNode,\n        currentActiveNode,\n        oldActiveNode,\n        selectorsFloatingMenus: selectorsFloatingMenus?.filter(Boolean)\n      });\n    }\n  }\n  function closeModal(evt) {\n    if (!onClose || onClose(evt) !== false) {\n      setIsOpen(false);\n    }\n  }\n  const modalClass = cx(`${prefix}--modal`, isOpen && 'is-visible', danger && `${prefix}--modal--danger`, customClassName);\n  const containerClass = cx(`${prefix}--modal-container`, size && `${prefix}--modal-container--${size}`, isFullWidth && `${prefix}--modal-container--full-width`, containerClassName);\n\n  // Generate aria-label based on Modal Header label if one is not provided (L253)\n  let generatedAriaLabel;\n  const childrenWithProps = React__default.Children.toArray(children).map(child => {\n    switch (true) {\n      case isElement(child) && child.type === React__default.createElement(ModalHeader).type:\n        {\n          const el = child;\n          generatedAriaLabel = el.props.label;\n          return /*#__PURE__*/React__default.cloneElement(el, {\n            closeModal\n          });\n        }\n      case isElement(child) && child.type === React__default.createElement(ModalFooter).type:\n        {\n          const el = child;\n          return /*#__PURE__*/React__default.cloneElement(el, {\n            closeModal,\n            inputref: button\n          });\n        }\n      default:\n        return child;\n    }\n  });\n  useEffect(() => {\n    if (!open && launcherButtonRef) {\n      setTimeout(() => {\n        launcherButtonRef?.current?.focus();\n      });\n    }\n  }, [open, launcherButtonRef]);\n  useEffect(() => {\n    const initialFocus = focusContainerElement => {\n      const containerElement = focusContainerElement || innerModal.current;\n      const primaryFocusElement = containerElement ? containerElement.querySelector(selectorPrimaryFocus) : null;\n      if (primaryFocusElement) {\n        return primaryFocusElement;\n      }\n      return button && button.current;\n    };\n    const focusButton = focusContainerElement => {\n      const target = initialFocus(focusContainerElement);\n      if (target) {\n        target.focus();\n      }\n    };\n    if (open && isOpen) {\n      focusButton(innerModal.current);\n    }\n  }, [open, selectorPrimaryFocus, isOpen]);\n  return /*#__PURE__*/React__default.createElement(\"div\", _extends({}, rest, {\n    role: \"presentation\",\n    ref: ref,\n    \"aria-hidden\": !open,\n    onBlur: handleBlur,\n    onMouseDown: handleMousedown,\n    onKeyDown: handleKeyDown,\n    className: modalClass\n  }), /*#__PURE__*/React__default.createElement(\"div\", {\n    className: containerClass,\n    role: \"dialog\",\n    \"aria-modal\": \"true\",\n    \"aria-label\": ariaLabel ? ariaLabel : generatedAriaLabel,\n    \"aria-labelledby\": ariaLabelledBy\n  }, /*#__PURE__*/React__default.createElement(\"button\", {\n    type: \"button\",\n    ref: startSentinel,\n    className: `${prefix}--visually-hidden`\n  }, \"Focus sentinel\"), /*#__PURE__*/React__default.createElement(\"div\", {\n    ref: innerModal,\n    className: `${prefix}--modal-container-body`\n  }, childrenWithProps), /*#__PURE__*/React__default.createElement(\"button\", {\n    type: \"button\",\n    ref: endSentinel,\n    className: `${prefix}--visually-hidden`\n  }, \"Focus sentinel\")));\n});\nComposedModal.propTypes = {\n  /**\n   * Specify the aria-label for bx--modal-container\n   */\n  ['aria-label']: PropTypes.string,\n  /**\n   * Specify the aria-labelledby for bx--modal-container\n   */\n  ['aria-labelledby']: PropTypes.string,\n  /**\n   * Specify the content to be placed in the ComposedModal\n   */\n  children: PropTypes.node,\n  /**\n   * Specify an optional className to be applied to the modal root node\n   */\n  className: PropTypes.string,\n  /**\n   * Specify an optional className to be applied to the modal node\n   */\n  containerClassName: PropTypes.string,\n  /**\n   * Specify whether the primary button should be replaced with danger button.\n   * Note that this prop is not applied if you render primary/danger button by yourself\n   */\n  danger: PropTypes.bool,\n  /**\n   * Specify whether the Modal content should have any inner padding.\n   */\n  isFullWidth: PropTypes.bool,\n  /**\n   * Provide a ref to return focus to once the modal is closed.\n   */\n  // @ts-expect-error: Invalid derived type\n  launcherButtonRef: PropTypes.oneOfType([PropTypes.func, PropTypes.shape({\n    current: PropTypes.any\n  })]),\n  /**\n   * Specify an optional handler for closing modal.\n   * Returning `false` here prevents closing modal.\n   */\n  onClose: PropTypes.func,\n  /**\n   * Specify an optional handler for the `onKeyDown` event. Called for all\n   * `onKeyDown` events that do not close the modal\n   */\n  onKeyDown: PropTypes.func,\n  /**\n   * Specify whether the Modal is currently open\n   */\n  open: PropTypes.bool,\n  preventCloseOnClickOutside: PropTypes.bool,\n  /**\n   * Specify a CSS selector that matches the DOM element that should be\n   * focused when the Modal opens\n   */\n  selectorPrimaryFocus: PropTypes.string,\n  /**\n   * Specify the CSS selectors that match the floating menus\n   */\n  selectorsFloatingMenus: PropTypes.arrayOf(PropTypes.string),\n  /**\n   * Specify the size variant.\n   */\n  size: PropTypes.oneOf(['xs', 'sm', 'md', 'lg'])\n};\nComposedModal.defaultProps = {\n  selectorPrimaryFocus: '[data-modal-primary-focus]'\n};\nexport { ModalBody, ComposedModal as default };","map":{"version":3,"names":["extends","_extends","React__default","useState","useRef","useEffect","isElement","PropTypes","ModalHeader","ModalFooter","cx","toggleClass","requiredIfGivenPropIsTruthy","wrapFocus","usePrefix","match","Escape","ModalBody","forwardRef","_ref","ref","className","customClassName","children","hasForm","hasScrollingContent","rest","prefix","contentClass","hasScrollingContentProps","tabIndex","role","createElement","Fragment","propTypes","string","node","bool","ComposedModal","_ref2","ariaLabelledBy","ariaLabel","containerClassName","danger","isFullWidth","onClose","onKeyDown","open","preventCloseOnClickOutside","selectorPrimaryFocus","selectorsFloatingMenus","size","launcherButtonRef","isOpen","setIsOpen","wasOpen","setWasOpen","innerModal","button","startSentinel","endSentinel","document","body","handleKeyDown","evt","closeModal","handleMousedown","isInside","current","contains","target","handleBlur","_ref3","oldActiveNode","relatedTarget","currentActiveNode","bodyNode","startSentinelNode","endSentinelNode","startTrapNode","endTrapNode","filter","Boolean","modalClass","containerClass","generatedAriaLabel","childrenWithProps","Children","toArray","map","child","type","el","props","label","cloneElement","inputref","setTimeout","focus","initialFocus","focusContainerElement","containerElement","primaryFocusElement","querySelector","focusButton","onBlur","onMouseDown","oneOfType","func","shape","any","arrayOf","oneOf","defaultProps","default"],"sources":["/home/saymon/Backup/Portifolio/Hematology-App-with-Carbon-Design-System/frontend/node_modules/@carbon/react/es/components/ComposedModal/ComposedModal.js"],"sourcesContent":["/**\n * Copyright IBM Corp. 2016, 2023\n *\n * This source code is licensed under the Apache-2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { extends as _extends } from '../../_virtual/_rollupPluginBabelHelpers.js';\nimport React__default, { useState, useRef, useEffect } from 'react';\nimport { isElement } from 'react-is';\nimport PropTypes from 'prop-types';\nimport { ModalHeader } from './ModalHeader.js';\nimport { ModalFooter } from './ModalFooter.js';\nimport cx from 'classnames';\nimport toggleClass from '../../tools/toggleClass.js';\nimport requiredIfGivenPropIsTruthy from '../../prop-types/requiredIfGivenPropIsTruthy.js';\nimport wrapFocus from '../../internal/wrapFocus.js';\nimport { usePrefix } from '../../internal/usePrefix.js';\nimport { match } from '../../internal/keyboard/match.js';\nimport { Escape } from '../../internal/keyboard/keys.js';\n\nconst ModalBody = /*#__PURE__*/React__default.forwardRef(function ModalBody(_ref, ref) {\n  let {\n    className: customClassName,\n    children,\n    hasForm,\n    hasScrollingContent,\n    ...rest\n  } = _ref;\n  const prefix = usePrefix();\n  const contentClass = cx(`${prefix}--modal-content`, hasForm && `${prefix}--modal-content--with-form`, hasScrollingContent && `${prefix}--modal-scroll-content`, customClassName);\n  const hasScrollingContentProps = hasScrollingContent ? {\n    tabIndex: 0,\n    role: 'region'\n  } : {};\n  return /*#__PURE__*/React__default.createElement(React__default.Fragment, null, /*#__PURE__*/React__default.createElement(\"div\", _extends({\n    className: contentClass\n  }, hasScrollingContentProps, rest, {\n    ref: ref\n  }), children), hasScrollingContent && /*#__PURE__*/React__default.createElement(\"div\", {\n    className: `${prefix}--modal-content--overflow-indicator`\n  }));\n});\nModalBody.propTypes = {\n  /**\n   * Required props for the accessibility label of the header\n   */\n  // @ts-expect-error: Built-in prop-types > TS logic doesn't jive well with custom validators\n  ['aria-label']: requiredIfGivenPropIsTruthy('hasScrollingContent', PropTypes.string),\n  /**\n   * Specify the content to be placed in the ModalBody\n   */\n  children: PropTypes.node,\n  /**\n   * Specify an optional className to be added to the Modal Body node\n   */\n  className: PropTypes.string,\n  /**\n   * Provide whether the modal content has a form element.\n   * If `true` is used here, non-form child content should have `bx--modal-content__regular-content` class.\n   */\n  hasForm: PropTypes.bool,\n  /**\n   * Specify whether the modal contains scrolling content\n   */\n  hasScrollingContent: PropTypes.bool\n};\nconst ComposedModal = /*#__PURE__*/React__default.forwardRef(function ComposedModal(_ref2, ref) {\n  let {\n    ['aria-labelledby']: ariaLabelledBy,\n    ['aria-label']: ariaLabel,\n    children,\n    className: customClassName,\n    containerClassName,\n    danger,\n    isFullWidth,\n    onClose,\n    onKeyDown,\n    open,\n    preventCloseOnClickOutside,\n    selectorPrimaryFocus,\n    selectorsFloatingMenus,\n    size,\n    launcherButtonRef,\n    ...rest\n  } = _ref2;\n  const prefix = usePrefix();\n  const [isOpen, setIsOpen] = useState(!!open);\n  const [wasOpen, setWasOpen] = useState(!!open);\n  const innerModal = useRef(null);\n  const button = useRef(null);\n  const startSentinel = useRef(null);\n  const endSentinel = useRef(null);\n\n  // Kepp track of modal open/close state\n  // and propagate it to the document.body\n  useEffect(() => {\n    if (open !== wasOpen) {\n      setIsOpen(!!open);\n      setWasOpen(!!open);\n      toggleClass(document.body, `${prefix}--body--with-modal-open`, !!open);\n    }\n  }, [open, wasOpen, prefix]);\n  // Remove the document.body className on unmount\n  useEffect(() => {\n    return () => {\n      toggleClass(document.body, `${prefix}--body--with-modal-open`, false);\n    };\n  }, []); // eslint-disable-line react-hooks/exhaustive-deps\n\n  function handleKeyDown(evt) {\n    if (match(evt, Escape)) {\n      closeModal(evt);\n    }\n    onKeyDown?.(evt);\n  }\n  function handleMousedown(evt) {\n    const isInside = innerModal.current?.contains(evt.target);\n    if (!isInside && !preventCloseOnClickOutside) {\n      closeModal(evt);\n    }\n  }\n  function handleBlur(_ref3) {\n    let {\n      target: oldActiveNode,\n      relatedTarget: currentActiveNode\n    } = _ref3;\n    if (open && currentActiveNode && oldActiveNode && innerModal.current) {\n      const {\n        current: bodyNode\n      } = innerModal;\n      const {\n        current: startSentinelNode\n      } = startSentinel;\n      const {\n        current: endSentinelNode\n      } = endSentinel;\n      wrapFocus({\n        bodyNode,\n        startTrapNode: startSentinelNode,\n        endTrapNode: endSentinelNode,\n        currentActiveNode,\n        oldActiveNode,\n        selectorsFloatingMenus: selectorsFloatingMenus?.filter(Boolean)\n      });\n    }\n  }\n  function closeModal(evt) {\n    if (!onClose || onClose(evt) !== false) {\n      setIsOpen(false);\n    }\n  }\n  const modalClass = cx(`${prefix}--modal`, isOpen && 'is-visible', danger && `${prefix}--modal--danger`, customClassName);\n  const containerClass = cx(`${prefix}--modal-container`, size && `${prefix}--modal-container--${size}`, isFullWidth && `${prefix}--modal-container--full-width`, containerClassName);\n\n  // Generate aria-label based on Modal Header label if one is not provided (L253)\n  let generatedAriaLabel;\n  const childrenWithProps = React__default.Children.toArray(children).map(child => {\n    switch (true) {\n      case isElement(child) && child.type === React__default.createElement(ModalHeader).type:\n        {\n          const el = child;\n          generatedAriaLabel = el.props.label;\n          return /*#__PURE__*/React__default.cloneElement(el, {\n            closeModal\n          });\n        }\n      case isElement(child) && child.type === React__default.createElement(ModalFooter).type:\n        {\n          const el = child;\n          return /*#__PURE__*/React__default.cloneElement(el, {\n            closeModal,\n            inputref: button\n          });\n        }\n      default:\n        return child;\n    }\n  });\n  useEffect(() => {\n    if (!open && launcherButtonRef) {\n      setTimeout(() => {\n        launcherButtonRef?.current?.focus();\n      });\n    }\n  }, [open, launcherButtonRef]);\n  useEffect(() => {\n    const initialFocus = focusContainerElement => {\n      const containerElement = focusContainerElement || innerModal.current;\n      const primaryFocusElement = containerElement ? containerElement.querySelector(selectorPrimaryFocus) : null;\n      if (primaryFocusElement) {\n        return primaryFocusElement;\n      }\n      return button && button.current;\n    };\n    const focusButton = focusContainerElement => {\n      const target = initialFocus(focusContainerElement);\n      if (target) {\n        target.focus();\n      }\n    };\n    if (open && isOpen) {\n      focusButton(innerModal.current);\n    }\n  }, [open, selectorPrimaryFocus, isOpen]);\n  return /*#__PURE__*/React__default.createElement(\"div\", _extends({}, rest, {\n    role: \"presentation\",\n    ref: ref,\n    \"aria-hidden\": !open,\n    onBlur: handleBlur,\n    onMouseDown: handleMousedown,\n    onKeyDown: handleKeyDown,\n    className: modalClass\n  }), /*#__PURE__*/React__default.createElement(\"div\", {\n    className: containerClass,\n    role: \"dialog\",\n    \"aria-modal\": \"true\",\n    \"aria-label\": ariaLabel ? ariaLabel : generatedAriaLabel,\n    \"aria-labelledby\": ariaLabelledBy\n  }, /*#__PURE__*/React__default.createElement(\"button\", {\n    type: \"button\",\n    ref: startSentinel,\n    className: `${prefix}--visually-hidden`\n  }, \"Focus sentinel\"), /*#__PURE__*/React__default.createElement(\"div\", {\n    ref: innerModal,\n    className: `${prefix}--modal-container-body`\n  }, childrenWithProps), /*#__PURE__*/React__default.createElement(\"button\", {\n    type: \"button\",\n    ref: endSentinel,\n    className: `${prefix}--visually-hidden`\n  }, \"Focus sentinel\")));\n});\nComposedModal.propTypes = {\n  /**\n   * Specify the aria-label for bx--modal-container\n   */\n  ['aria-label']: PropTypes.string,\n  /**\n   * Specify the aria-labelledby for bx--modal-container\n   */\n  ['aria-labelledby']: PropTypes.string,\n  /**\n   * Specify the content to be placed in the ComposedModal\n   */\n  children: PropTypes.node,\n  /**\n   * Specify an optional className to be applied to the modal root node\n   */\n  className: PropTypes.string,\n  /**\n   * Specify an optional className to be applied to the modal node\n   */\n  containerClassName: PropTypes.string,\n  /**\n   * Specify whether the primary button should be replaced with danger button.\n   * Note that this prop is not applied if you render primary/danger button by yourself\n   */\n  danger: PropTypes.bool,\n  /**\n   * Specify whether the Modal content should have any inner padding.\n   */\n  isFullWidth: PropTypes.bool,\n  /**\n   * Provide a ref to return focus to once the modal is closed.\n   */\n  // @ts-expect-error: Invalid derived type\n  launcherButtonRef: PropTypes.oneOfType([PropTypes.func, PropTypes.shape({\n    current: PropTypes.any\n  })]),\n  /**\n   * Specify an optional handler for closing modal.\n   * Returning `false` here prevents closing modal.\n   */\n  onClose: PropTypes.func,\n  /**\n   * Specify an optional handler for the `onKeyDown` event. Called for all\n   * `onKeyDown` events that do not close the modal\n   */\n  onKeyDown: PropTypes.func,\n  /**\n   * Specify whether the Modal is currently open\n   */\n  open: PropTypes.bool,\n  preventCloseOnClickOutside: PropTypes.bool,\n  /**\n   * Specify a CSS selector that matches the DOM element that should be\n   * focused when the Modal opens\n   */\n  selectorPrimaryFocus: PropTypes.string,\n  /**\n   * Specify the CSS selectors that match the floating menus\n   */\n  selectorsFloatingMenus: PropTypes.arrayOf(PropTypes.string),\n  /**\n   * Specify the size variant.\n   */\n  size: PropTypes.oneOf(['xs', 'sm', 'md', 'lg'])\n};\nComposedModal.defaultProps = {\n  selectorPrimaryFocus: '[data-modal-primary-focus]'\n};\n\nexport { ModalBody, ComposedModal as default };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}