{"ast":null,"code":"import _defineProperty from \"/home/saymon/Backup/Portifolio/Hematology-App-with-Carbon-Design-System/frontend/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nimport _slicedToArray from \"/home/saymon/Backup/Portifolio/Hematology-App-with-Carbon-Design-System/frontend/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport _objectWithoutProperties from \"/home/saymon/Backup/Portifolio/Hematology-App-with-Carbon-Design-System/frontend/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js\";\nvar _excluded = [\"className\", \"children\", \"shouldShowBatchActions\", \"totalSelected\", \"onCancel\", \"translateWithId\"];\n/**\n * Copyright IBM Corp. 2016, 2023\n *\n * This source code is licensed under the Apache-2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { extends as _extends } from '../../_virtual/_rollupPluginBabelHelpers.js';\nimport cx from 'classnames';\nimport PropTypes from 'prop-types';\nimport React__default from 'react';\nimport Button from '../Button/Button.js';\nimport '../Button/Button.Skeleton.js';\nimport TableActionList from './TableActionList.js';\nimport '../Text/index.js';\nimport { usePrefix } from '../../internal/usePrefix.js';\nimport { Text } from '../Text/Text.js';\nvar translationKeys = {\n  'carbon.table.batch.cancel': 'Cancel',\n  'carbon.table.batch.items.selected': 'items selected',\n  'carbon.table.batch.item.selected': 'item selected'\n};\nvar translateWithId = function translateWithId(id, state) {\n  if (id === 'carbon.table.batch.cancel') {\n    return translationKeys[id];\n  }\n  return \"\".concat(state.totalSelected, \" \").concat(translationKeys[id]);\n};\nvar TableBatchActions = function TableBatchActions(_ref) {\n  var _cx;\n  var className = _ref.className,\n    children = _ref.children,\n    shouldShowBatchActions = _ref.shouldShowBatchActions,\n    totalSelected = _ref.totalSelected,\n    onCancel = _ref.onCancel,\n    t = _ref.translateWithId,\n    rest = _objectWithoutProperties(_ref, _excluded);\n  var _React__default$useSt = React__default.useState(),\n    _React__default$useSt2 = _slicedToArray(_React__default$useSt, 2),\n    isScrolling = _React__default$useSt2[0],\n    setIsScrolling = _React__default$useSt2[1];\n  var prefix = usePrefix();\n  var batchActionsClasses = cx((_cx = {}, _defineProperty(_cx, \"\".concat(prefix, \"--batch-actions\"), true), _defineProperty(_cx, \"\".concat(prefix, \"--batch-actions--active\"), shouldShowBatchActions), _cx), className);\n  var batchSummaryClasses = cx(\"\".concat(prefix, \"--batch-summary\"), _defineProperty({}, \"\".concat(prefix, \"--batch-summary__scroll\"), isScrolling));\n  return /*#__PURE__*/React__default.createElement(\"div\", _extends({\n    onScroll: function onScroll() {\n      setIsScrolling(!isScrolling);\n    },\n    \"aria-hidden\": !shouldShowBatchActions,\n    className: batchActionsClasses\n  }, rest), /*#__PURE__*/React__default.createElement(\"div\", {\n    className: batchSummaryClasses\n  }, /*#__PURE__*/React__default.createElement(\"p\", {\n    className: \"\".concat(prefix, \"--batch-summary__para\")\n  }, /*#__PURE__*/React__default.createElement(Text, {\n    as: \"span\"\n  }, totalSelected > 1 || totalSelected === 0 ? t('carbon.table.batch.items.selected', {\n    totalSelected: totalSelected\n  }) : t('carbon.table.batch.item.selected', {\n    totalSelected: totalSelected\n  })))), /*#__PURE__*/React__default.createElement(TableActionList, null, children, /*#__PURE__*/React__default.createElement(Button, {\n    className: \"\".concat(prefix, \"--batch-summary__cancel\"),\n    tabIndex: shouldShowBatchActions ? 0 : -1,\n    onClick: onCancel\n  }, t('carbon.table.batch.cancel'))));\n};\nTableBatchActions.translationKeys = Object.keys(translationKeys);\nTableBatchActions.propTypes = {\n  children: PropTypes.node,\n  className: PropTypes.string,\n  /**\n   * Hook required to listen for when the user initiates a cancel request\n   * through this component\n   */\n  onCancel: PropTypes.func.isRequired,\n  /**\n   * Boolean specifier for whether or not the batch action bar should be\n   * displayed\n   */\n  shouldShowBatchActions: PropTypes.bool,\n  /**\n   * Numeric representation of the total number of items selected in a table.\n   * This number is used to derive the selection message\n   */\n  totalSelected: PropTypes.number.isRequired,\n  /**\n   * Supply a method to translate internal strings with your i18n tool of\n   * choice. Translation keys are available on the `translationKeys` field for\n   * this component.\n   */\n  translateWithId: PropTypes.func\n};\nTableBatchActions.defaultProps = {\n  translateWithId: translateWithId\n};\nvar TableBatchActions$1 = TableBatchActions;\nexport { TableBatchActions$1 as default };","map":{"version":3,"names":["extends","_extends","cx","PropTypes","React__default","Button","TableActionList","usePrefix","Text","translationKeys","translateWithId","id","state","concat","totalSelected","TableBatchActions","_ref","_cx","className","children","shouldShowBatchActions","onCancel","t","rest","_objectWithoutProperties","_excluded","_React__default$useSt","useState","_React__default$useSt2","_slicedToArray","isScrolling","setIsScrolling","prefix","batchActionsClasses","_defineProperty","batchSummaryClasses","createElement","onScroll","as","tabIndex","onClick","Object","keys","propTypes","node","string","func","isRequired","bool","number","defaultProps","TableBatchActions$1","default"],"sources":["/home/saymon/Backup/Portifolio/Hematology-App-with-Carbon-Design-System/frontend/node_modules/@carbon/react/es/components/DataTable/TableBatchActions.js"],"sourcesContent":["/**\n * Copyright IBM Corp. 2016, 2023\n *\n * This source code is licensed under the Apache-2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { extends as _extends } from '../../_virtual/_rollupPluginBabelHelpers.js';\nimport cx from 'classnames';\nimport PropTypes from 'prop-types';\nimport React__default from 'react';\nimport Button from '../Button/Button.js';\nimport '../Button/Button.Skeleton.js';\nimport TableActionList from './TableActionList.js';\nimport '../Text/index.js';\nimport { usePrefix } from '../../internal/usePrefix.js';\nimport { Text } from '../Text/Text.js';\n\nconst translationKeys = {\n  'carbon.table.batch.cancel': 'Cancel',\n  'carbon.table.batch.items.selected': 'items selected',\n  'carbon.table.batch.item.selected': 'item selected'\n};\nconst translateWithId = (id, state) => {\n  if (id === 'carbon.table.batch.cancel') {\n    return translationKeys[id];\n  }\n  return `${state.totalSelected} ${translationKeys[id]}`;\n};\nconst TableBatchActions = _ref => {\n  let {\n    className,\n    children,\n    shouldShowBatchActions,\n    totalSelected,\n    onCancel,\n    translateWithId: t,\n    ...rest\n  } = _ref;\n  const [isScrolling, setIsScrolling] = React__default.useState();\n  const prefix = usePrefix();\n  const batchActionsClasses = cx({\n    [`${prefix}--batch-actions`]: true,\n    [`${prefix}--batch-actions--active`]: shouldShowBatchActions\n  }, className);\n  const batchSummaryClasses = cx(`${prefix}--batch-summary`, {\n    [`${prefix}--batch-summary__scroll`]: isScrolling\n  });\n  return /*#__PURE__*/React__default.createElement(\"div\", _extends({\n    onScroll: () => {\n      setIsScrolling(!isScrolling);\n    },\n    \"aria-hidden\": !shouldShowBatchActions,\n    className: batchActionsClasses\n  }, rest), /*#__PURE__*/React__default.createElement(\"div\", {\n    className: batchSummaryClasses\n  }, /*#__PURE__*/React__default.createElement(\"p\", {\n    className: `${prefix}--batch-summary__para`\n  }, /*#__PURE__*/React__default.createElement(Text, {\n    as: \"span\"\n  }, totalSelected > 1 || totalSelected === 0 ? t('carbon.table.batch.items.selected', {\n    totalSelected\n  }) : t('carbon.table.batch.item.selected', {\n    totalSelected\n  })))), /*#__PURE__*/React__default.createElement(TableActionList, null, children, /*#__PURE__*/React__default.createElement(Button, {\n    className: `${prefix}--batch-summary__cancel`,\n    tabIndex: shouldShowBatchActions ? 0 : -1,\n    onClick: onCancel\n  }, t('carbon.table.batch.cancel'))));\n};\nTableBatchActions.translationKeys = Object.keys(translationKeys);\nTableBatchActions.propTypes = {\n  children: PropTypes.node,\n  className: PropTypes.string,\n  /**\n   * Hook required to listen for when the user initiates a cancel request\n   * through this component\n   */\n  onCancel: PropTypes.func.isRequired,\n  /**\n   * Boolean specifier for whether or not the batch action bar should be\n   * displayed\n   */\n  shouldShowBatchActions: PropTypes.bool,\n  /**\n   * Numeric representation of the total number of items selected in a table.\n   * This number is used to derive the selection message\n   */\n  totalSelected: PropTypes.number.isRequired,\n  /**\n   * Supply a method to translate internal strings with your i18n tool of\n   * choice. Translation keys are available on the `translationKeys` field for\n   * this component.\n   */\n  translateWithId: PropTypes.func\n};\nTableBatchActions.defaultProps = {\n  translateWithId\n};\nvar TableBatchActions$1 = TableBatchActions;\n\nexport { TableBatchActions$1 as default };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}