{"ast":null,"code":"import _objectSpread from \"/home/saymon/Backup/Portifolio/Hematology-App-with-Carbon-Design-System/frontend/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _defineProperty2 from \"/home/saymon/Backup/Portifolio/Hematology-App-with-Carbon-Design-System/frontend/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nimport _objectWithoutProperties from \"/home/saymon/Backup/Portifolio/Hematology-App-with-Carbon-Design-System/frontend/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js\";\nimport _classCallCheck from \"/home/saymon/Backup/Portifolio/Hematology-App-with-Carbon-Design-System/frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/home/saymon/Backup/Portifolio/Hematology-App-with-Carbon-Design-System/frontend/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _assertThisInitialized from \"/home/saymon/Backup/Portifolio/Hematology-App-with-Carbon-Design-System/frontend/node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js\";\nimport _inherits from \"/home/saymon/Backup/Portifolio/Hematology-App-with-Carbon-Design-System/frontend/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"/home/saymon/Backup/Portifolio/Hematology-App-with-Carbon-Design-System/frontend/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nvar _excluded = [\"isActive\", \"isCurrentPage\", \"aria-label\", \"aria-labelledby\", \"className\", \"children\", \"renderMenuContent\", \"menuLinkName\", \"focusRef\", \"onBlur\", \"onClick\", \"onKeyDown\"];\n/**\n * Copyright IBM Corp. 2016, 2023\n *\n * This source code is licensed under the Apache-2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { defineProperty as _defineProperty, extends as _extends } from '../../_virtual/_rollupPluginBabelHelpers.js';\nimport { ChevronDown } from '@carbon/icons-react';\nimport cx from 'classnames';\nimport React__default from 'react';\nimport PropTypes from 'prop-types';\nimport { AriaLabelPropType } from '../../prop-types/AriaPropTypes.js';\nimport { PrefixContext } from '../../internal/usePrefix.js';\nimport deprecate from '../../prop-types/deprecate.js';\nimport { composeEventHandlers } from '../../tools/events.js';\nimport { matches } from '../../internal/keyboard/match.js';\nimport { Enter, Space, Escape } from '../../internal/keyboard/keys.js';\n\n/**\n * `HeaderMenu` is used to render submenu's in the `Header`. Most often children\n * will be a `HeaderMenuItem`. It handles certain keyboard events to help\n * with managing focus. It also passes along refs to each child so that it can\n * help manage focus state of its children.\n */\nvar HeaderMenu = /*#__PURE__*/function (_React__default$Compo) {\n  _inherits(HeaderMenu, _React__default$Compo);\n  var _super = _createSuper(HeaderMenu);\n  function HeaderMenu(props) {\n    var _this;\n    _classCallCheck(this, HeaderMenu);\n    _this = _super.call(this, props);\n    _defineProperty(_assertThisInitialized(_this), \"_subMenus\", /*#__PURE__*/React__default.createRef());\n    /**\n     * Toggle the expanded state of the menu on click.\n     */\n    _defineProperty(_assertThisInitialized(_this), \"handleOnClick\", function (e) {\n      var subMenusNode = _this._subMenus.current;\n      if (!subMenusNode || !subMenusNode.contains(e.target)) {\n        e.preventDefault();\n      }\n      _this.setState(function (prevState) {\n        return {\n          expanded: !prevState.expanded\n        };\n      });\n    });\n    /**\n     * Keyboard event handler for the entire menu.\n     */\n    _defineProperty(_assertThisInitialized(_this), \"handleOnKeyDown\", function (event) {\n      // Handle enter or space key for toggling the expanded state of the menu.\n      if (matches(event, [Enter, Space])) {\n        event.stopPropagation();\n        event.preventDefault();\n        _this.setState(function (prevState) {\n          return {\n            expanded: !prevState.expanded\n          };\n        });\n        return;\n      }\n    });\n    /**\n     * Handle our blur event from our underlying menuitems. Will mostly be used\n     * for toggling the expansion status of our menu in response to a user\n     * clicking off of the menu or menubar.\n     */\n    _defineProperty(_assertThisInitialized(_this), \"handleOnBlur\", function (event) {\n      // Rough guess for a blur event that is triggered outside of our menu or\n      // menubar context\n      var itemTriggeredBlur = _this.items.find(function (element) {\n        return element === event.relatedTarget;\n      });\n      if (event.relatedTarget && (event.relatedTarget.getAttribute('href') && event.relatedTarget.getAttribute('href') !== '#' || itemTriggeredBlur)) {\n        return;\n      }\n      _this.setState({\n        expanded: false,\n        selectedIndex: null\n      });\n    });\n    /**\n     * ref handler for our menu button. If we are supplied a `focusRef` prop, we also\n     * forward along the node.\n     *\n     * This is useful when this component is a child in a\n     * menu or menubar as it will allow the parent to explicitly focus the menu\n     * button node when that child should receive focus.\n     */\n    _defineProperty(_assertThisInitialized(_this), \"handleMenuButtonRef\", function (node) {\n      if (_this.props.focusRef) {\n        _this.props.focusRef(node);\n      }\n      _this.menuButtonRef = node;\n    });\n    /**\n     * Handles individual menuitem refs. We assign them to a class instance\n     * property so that we can properly manage focus of our children.\n     */\n    _defineProperty(_assertThisInitialized(_this), \"handleItemRef\", function (index) {\n      return function (node) {\n        _this.items[index] = node;\n      };\n    });\n    _defineProperty(_assertThisInitialized(_this), \"handleMenuClose\", function (event) {\n      // Handle ESC keydown for closing the expanded menu.\n      if (matches(event, [Escape]) && _this.state.expanded) {\n        event.stopPropagation();\n        event.preventDefault();\n        _this.setState(function () {\n          return {\n            expanded: false,\n            selectedIndex: null\n          };\n        });\n\n        // Return focus to menu button when the user hits ESC.\n        _this.menuButtonRef.focus();\n        return;\n      }\n    });\n    /**\n     * We capture the `ref` for each child inside of `this.items` to properly\n     * manage focus. In addition to this focus management, all items receive a\n     * `tabIndex: -1` so the user won't hit a large number of items in their tab\n     * sequence when they might not want to go through all the items.\n     */\n    _defineProperty(_assertThisInitialized(_this), \"_renderMenuItem\", function (item, index) {\n      if ( /*#__PURE__*/React__default.isValidElement(item)) {\n        return /*#__PURE__*/React__default.cloneElement(item, {\n          ref: _this.handleItemRef(index)\n        });\n      }\n    });\n    _this.state = {\n      // Used to manage the expansion state of the menu\n      expanded: false,\n      // Refers to the menuitem that is currently focused\n      // Note: children should have `role=\"menuitem\"` on node consuming ref\n      selectedIndex: null\n    };\n    _this.items = [];\n    return _this;\n  }\n  _createClass(HeaderMenu, [{\n    key: \"render\",\n    value: function render() {\n      var _cx, _cx2;\n      var prefix = this.context;\n      var _this$props = this.props,\n        isActive = _this$props.isActive,\n        isCurrentPage = _this$props.isCurrentPage,\n        ariaLabel = _this$props['aria-label'],\n        ariaLabelledBy = _this$props['aria-labelledby'],\n        customClassName = _this$props.className,\n        children = _this$props.children,\n        MenuContent = _this$props.renderMenuContent,\n        menuLinkName = _this$props.menuLinkName,\n        focusRef = _this$props.focusRef,\n        onBlur = _this$props.onBlur,\n        onClick = _this$props.onClick,\n        onKeyDown = _this$props.onKeyDown,\n        rest = _objectWithoutProperties(_this$props, _excluded);\n      var hasActiveChildren = React__default.Children.toArray(children).some(function (child) {\n        return child.props.isActive || child.props.isCurrentPage;\n      });\n      var accessibilityLabel = {\n        'aria-label': ariaLabel,\n        'aria-labelledby': ariaLabelledBy\n      };\n      var itemClassName = cx((_cx = {}, _defineProperty2(_cx, \"\".concat(prefix, \"--header__submenu\"), true), _defineProperty2(_cx, customClassName, !!customClassName), _cx));\n      var isActivePage = isActive ? isActive : isCurrentPage;\n      var linkClassName = cx((_cx2 = {}, _defineProperty2(_cx2, \"\".concat(prefix, \"--header__menu-item\"), true), _defineProperty2(_cx2, \"\".concat(prefix, \"--header__menu-title\"), true), _defineProperty2(_cx2, \"\".concat(prefix, \"--header__menu-item--current\"), isActivePage || hasActiveChildren && !this.state.expanded), _cx2));\n\n      // Notes on eslint comments and based on the examples in:\n      // https://www.w3.org/TR/wai-aria-practices/examples/menubar/menubar-1/menubar-1.html#\n      // - The focus is handled by the <a> menuitem, onMouseOver is for mouse\n      // users\n      // - aria-haspopup can definitely have the value \"menu\"\n      // - aria-expanded is on their example node with role=\"menuitem\"\n      // - href can be set to javascript:void(0), ideally this will be a button\n      return /*#__PURE__*/React__default.createElement(\"li\", _extends({}, rest, {\n        className: itemClassName,\n        onKeyDown: composeEventHandlers([onKeyDown, this.handleMenuClose]),\n        onClick: composeEventHandlers([onClick, this.handleOnClick]),\n        onBlur: composeEventHandlers([onBlur, this.handleOnBlur])\n      }), /*#__PURE__*/React__default.createElement(\"a\", _extends({\n        // eslint-disable-line jsx-a11y/role-supports-aria-props,jsx-a11y/anchor-is-valid\n        \"aria-haspopup\": \"menu\" // eslint-disable-line jsx-a11y/aria-proptypes\n        ,\n\n        \"aria-expanded\": this.state.expanded,\n        className: linkClassName,\n        href: \"#\",\n        onKeyDown: this.handleOnKeyDown,\n        ref: this.handleMenuButtonRef,\n        tabIndex: 0\n      }, accessibilityLabel), menuLinkName, MenuContent ? /*#__PURE__*/React__default.createElement(MenuContent, null) : /*#__PURE__*/React__default.createElement(ChevronDown, {\n        className: \"\".concat(this.context, \"--header__menu-arrow\")\n      })), /*#__PURE__*/React__default.createElement(\"ul\", _extends({}, accessibilityLabel, {\n        ref: this._subMenus,\n        className: \"\".concat(prefix, \"--header__menu\")\n      }), React__default.Children.map(children, this._renderMenuItem)));\n    }\n  }]);\n  return HeaderMenu;\n}(React__default.Component);\n_defineProperty(HeaderMenu, \"propTypes\", _objectSpread(_objectSpread({}, AriaLabelPropType), {}, {\n  /**\n   * Optionally provide a custom class to apply to the underlying `<li>` node\n   */\n  className: PropTypes.string,\n  /**\n   * Provide a custom ref handler for the menu button\n   */\n  focusRef: PropTypes.func,\n  /**\n   * Applies selected styles to the item if a user sets this to true and `aria-current !== 'page'`.\n   */\n  isActive: PropTypes.bool,\n  /**\n   * Applies selected styles to the item if a user sets this to true and `aria-current !== 'page'`.\n   * @deprecated Please use `isActive` instead. This will be removed in the next major release.\n   */\n  isCurrentPage: deprecate(PropTypes.bool, 'The `isCurrentPage` prop for `HeaderMenu` has ' + 'been deprecated. Please use `isActive` instead. This will be removed in the next major release.'),\n  /**\n   * Provide a label for the link text\n   */\n  menuLinkName: PropTypes.string.isRequired,\n  /**\n   * Optionally provide an onBlur handler that is called when the underlying\n   * button fires it's onblur event\n   */\n  onBlur: PropTypes.func,\n  /**\n   * Optionally provide an onClick handler that is called when the underlying\n   * button fires it's onclick event\n   */\n  onClick: PropTypes.func,\n  /**\n   * Optionally provide an onKeyDown handler that is called when the underlying\n   * button fires it's onkeydown event\n   */\n  onKeyDown: PropTypes.func,\n  /**\n   * Optional component to render instead of string\n   */\n  renderMenuContent: PropTypes.func,\n  /**\n   * Optionally provide a tabIndex for the underlying menu button\n   */\n  tabIndex: PropTypes.number\n}));\n_defineProperty(HeaderMenu, \"contextType\", PrefixContext);\nvar HeaderMenuForwardRef = /*#__PURE__*/React__default.forwardRef(function (props, ref) {\n  return /*#__PURE__*/React__default.createElement(HeaderMenu, _extends({}, props, {\n    focusRef: ref\n  }));\n});\nHeaderMenuForwardRef.displayName = 'HeaderMenu';\nvar HeaderMenuForwardRef$1 = HeaderMenuForwardRef;\nexport { HeaderMenu, HeaderMenuForwardRef$1 as default };","map":{"version":3,"names":["defineProperty","_defineProperty","extends","_extends","ChevronDown","cx","React__default","PropTypes","AriaLabelPropType","PrefixContext","deprecate","composeEventHandlers","matches","Enter","Space","Escape","HeaderMenu","_React__default$Compo","_inherits","_super","_createSuper","props","_this","_classCallCheck","call","_assertThisInitialized","createRef","e","subMenusNode","_subMenus","current","contains","target","preventDefault","setState","prevState","expanded","event","stopPropagation","itemTriggeredBlur","items","find","element","relatedTarget","getAttribute","selectedIndex","node","focusRef","menuButtonRef","index","state","focus","item","isValidElement","cloneElement","ref","handleItemRef","_createClass","key","value","render","_cx","_cx2","prefix","context","_this$props","isActive","isCurrentPage","ariaLabel","ariaLabelledBy","customClassName","className","children","MenuContent","renderMenuContent","menuLinkName","onBlur","onClick","onKeyDown","rest","_objectWithoutProperties","_excluded","hasActiveChildren","Children","toArray","some","child","accessibilityLabel","itemClassName","_defineProperty2","concat","isActivePage","linkClassName","createElement","handleMenuClose","handleOnClick","handleOnBlur","href","handleOnKeyDown","handleMenuButtonRef","tabIndex","map","_renderMenuItem","Component","_objectSpread","string","func","bool","isRequired","number","HeaderMenuForwardRef","forwardRef","displayName","HeaderMenuForwardRef$1","default"],"sources":["/home/saymon/Backup/Portifolio/Hematology-App-with-Carbon-Design-System/frontend/node_modules/@carbon/react/es/components/UIShell/HeaderMenu.js"],"sourcesContent":["/**\n * Copyright IBM Corp. 2016, 2023\n *\n * This source code is licensed under the Apache-2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { defineProperty as _defineProperty, extends as _extends } from '../../_virtual/_rollupPluginBabelHelpers.js';\nimport { ChevronDown } from '@carbon/icons-react';\nimport cx from 'classnames';\nimport React__default from 'react';\nimport PropTypes from 'prop-types';\nimport { AriaLabelPropType } from '../../prop-types/AriaPropTypes.js';\nimport { PrefixContext } from '../../internal/usePrefix.js';\nimport deprecate from '../../prop-types/deprecate.js';\nimport { composeEventHandlers } from '../../tools/events.js';\nimport { matches } from '../../internal/keyboard/match.js';\nimport { Enter, Space, Escape } from '../../internal/keyboard/keys.js';\n\n/**\n * `HeaderMenu` is used to render submenu's in the `Header`. Most often children\n * will be a `HeaderMenuItem`. It handles certain keyboard events to help\n * with managing focus. It also passes along refs to each child so that it can\n * help manage focus state of its children.\n */\nclass HeaderMenu extends React__default.Component {\n  constructor(props) {\n    super(props);\n    _defineProperty(this, \"_subMenus\", /*#__PURE__*/React__default.createRef());\n    /**\n     * Toggle the expanded state of the menu on click.\n     */\n    _defineProperty(this, \"handleOnClick\", e => {\n      const {\n        current: subMenusNode\n      } = this._subMenus;\n      if (!subMenusNode || !subMenusNode.contains(e.target)) {\n        e.preventDefault();\n      }\n      this.setState(prevState => ({\n        expanded: !prevState.expanded\n      }));\n    });\n    /**\n     * Keyboard event handler for the entire menu.\n     */\n    _defineProperty(this, \"handleOnKeyDown\", event => {\n      // Handle enter or space key for toggling the expanded state of the menu.\n      if (matches(event, [Enter, Space])) {\n        event.stopPropagation();\n        event.preventDefault();\n        this.setState(prevState => ({\n          expanded: !prevState.expanded\n        }));\n        return;\n      }\n    });\n    /**\n     * Handle our blur event from our underlying menuitems. Will mostly be used\n     * for toggling the expansion status of our menu in response to a user\n     * clicking off of the menu or menubar.\n     */\n    _defineProperty(this, \"handleOnBlur\", event => {\n      // Rough guess for a blur event that is triggered outside of our menu or\n      // menubar context\n      const itemTriggeredBlur = this.items.find(element => element === event.relatedTarget);\n      if (event.relatedTarget && (event.relatedTarget.getAttribute('href') && event.relatedTarget.getAttribute('href') !== '#' || itemTriggeredBlur)) {\n        return;\n      }\n      this.setState({\n        expanded: false,\n        selectedIndex: null\n      });\n    });\n    /**\n     * ref handler for our menu button. If we are supplied a `focusRef` prop, we also\n     * forward along the node.\n     *\n     * This is useful when this component is a child in a\n     * menu or menubar as it will allow the parent to explicitly focus the menu\n     * button node when that child should receive focus.\n     */\n    _defineProperty(this, \"handleMenuButtonRef\", node => {\n      if (this.props.focusRef) {\n        this.props.focusRef(node);\n      }\n      this.menuButtonRef = node;\n    });\n    /**\n     * Handles individual menuitem refs. We assign them to a class instance\n     * property so that we can properly manage focus of our children.\n     */\n    _defineProperty(this, \"handleItemRef\", index => node => {\n      this.items[index] = node;\n    });\n    _defineProperty(this, \"handleMenuClose\", event => {\n      // Handle ESC keydown for closing the expanded menu.\n      if (matches(event, [Escape]) && this.state.expanded) {\n        event.stopPropagation();\n        event.preventDefault();\n        this.setState(() => ({\n          expanded: false,\n          selectedIndex: null\n        }));\n\n        // Return focus to menu button when the user hits ESC.\n        this.menuButtonRef.focus();\n        return;\n      }\n    });\n    /**\n     * We capture the `ref` for each child inside of `this.items` to properly\n     * manage focus. In addition to this focus management, all items receive a\n     * `tabIndex: -1` so the user won't hit a large number of items in their tab\n     * sequence when they might not want to go through all the items.\n     */\n    _defineProperty(this, \"_renderMenuItem\", (item, index) => {\n      if ( /*#__PURE__*/React__default.isValidElement(item)) {\n        return /*#__PURE__*/React__default.cloneElement(item, {\n          ref: this.handleItemRef(index)\n        });\n      }\n    });\n    this.state = {\n      // Used to manage the expansion state of the menu\n      expanded: false,\n      // Refers to the menuitem that is currently focused\n      // Note: children should have `role=\"menuitem\"` on node consuming ref\n      selectedIndex: null\n    };\n    this.items = [];\n  }\n  render() {\n    const prefix = this.context;\n    const {\n      isActive,\n      isCurrentPage,\n      'aria-label': ariaLabel,\n      'aria-labelledby': ariaLabelledBy,\n      className: customClassName,\n      children,\n      renderMenuContent: MenuContent,\n      menuLinkName,\n      focusRef,\n      // eslint-disable-line no-unused-vars\n      onBlur,\n      onClick,\n      onKeyDown,\n      ...rest\n    } = this.props;\n    const hasActiveChildren = React__default.Children.toArray(children).some(child => child.props.isActive || child.props.isCurrentPage);\n    const accessibilityLabel = {\n      'aria-label': ariaLabel,\n      'aria-labelledby': ariaLabelledBy\n    };\n    const itemClassName = cx({\n      [`${prefix}--header__submenu`]: true,\n      [customClassName]: !!customClassName\n    });\n    let isActivePage = isActive ? isActive : isCurrentPage;\n    const linkClassName = cx({\n      [`${prefix}--header__menu-item`]: true,\n      [`${prefix}--header__menu-title`]: true,\n      // We set the current class only if `isActive` is passed in and we do\n      // not have an `aria-current=\"page\"` set for the breadcrumb item\n      [`${prefix}--header__menu-item--current`]: isActivePage || hasActiveChildren && !this.state.expanded\n    });\n\n    // Notes on eslint comments and based on the examples in:\n    // https://www.w3.org/TR/wai-aria-practices/examples/menubar/menubar-1/menubar-1.html#\n    // - The focus is handled by the <a> menuitem, onMouseOver is for mouse\n    // users\n    // - aria-haspopup can definitely have the value \"menu\"\n    // - aria-expanded is on their example node with role=\"menuitem\"\n    // - href can be set to javascript:void(0), ideally this will be a button\n    return /*#__PURE__*/React__default.createElement(\"li\", _extends({}, rest, {\n      className: itemClassName,\n      onKeyDown: composeEventHandlers([onKeyDown, this.handleMenuClose]),\n      onClick: composeEventHandlers([onClick, this.handleOnClick]),\n      onBlur: composeEventHandlers([onBlur, this.handleOnBlur])\n    }), /*#__PURE__*/React__default.createElement(\"a\", _extends({\n      // eslint-disable-line jsx-a11y/role-supports-aria-props,jsx-a11y/anchor-is-valid\n      \"aria-haspopup\": \"menu\" // eslint-disable-line jsx-a11y/aria-proptypes\n      ,\n      \"aria-expanded\": this.state.expanded,\n      className: linkClassName,\n      href: \"#\",\n      onKeyDown: this.handleOnKeyDown,\n      ref: this.handleMenuButtonRef,\n      tabIndex: 0\n    }, accessibilityLabel), menuLinkName, MenuContent ? /*#__PURE__*/React__default.createElement(MenuContent, null) : /*#__PURE__*/React__default.createElement(ChevronDown, {\n      className: `${this.context}--header__menu-arrow`\n    })), /*#__PURE__*/React__default.createElement(\"ul\", _extends({}, accessibilityLabel, {\n      ref: this._subMenus,\n      className: `${prefix}--header__menu`\n    }), React__default.Children.map(children, this._renderMenuItem)));\n  }\n}\n_defineProperty(HeaderMenu, \"propTypes\", {\n  /**\n   * Required props for the accessibility label of the menu\n   */\n  ...AriaLabelPropType,\n  /**\n   * Optionally provide a custom class to apply to the underlying `<li>` node\n   */\n  className: PropTypes.string,\n  /**\n   * Provide a custom ref handler for the menu button\n   */\n  focusRef: PropTypes.func,\n  /**\n   * Applies selected styles to the item if a user sets this to true and `aria-current !== 'page'`.\n   */\n  isActive: PropTypes.bool,\n  /**\n   * Applies selected styles to the item if a user sets this to true and `aria-current !== 'page'`.\n   * @deprecated Please use `isActive` instead. This will be removed in the next major release.\n   */\n  isCurrentPage: deprecate(PropTypes.bool, 'The `isCurrentPage` prop for `HeaderMenu` has ' + 'been deprecated. Please use `isActive` instead. This will be removed in the next major release.'),\n  /**\n   * Provide a label for the link text\n   */\n  menuLinkName: PropTypes.string.isRequired,\n  /**\n   * Optionally provide an onBlur handler that is called when the underlying\n   * button fires it's onblur event\n   */\n  onBlur: PropTypes.func,\n  /**\n   * Optionally provide an onClick handler that is called when the underlying\n   * button fires it's onclick event\n   */\n  onClick: PropTypes.func,\n  /**\n   * Optionally provide an onKeyDown handler that is called when the underlying\n   * button fires it's onkeydown event\n   */\n  onKeyDown: PropTypes.func,\n  /**\n   * Optional component to render instead of string\n   */\n  renderMenuContent: PropTypes.func,\n  /**\n   * Optionally provide a tabIndex for the underlying menu button\n   */\n  tabIndex: PropTypes.number\n});\n_defineProperty(HeaderMenu, \"contextType\", PrefixContext);\nconst HeaderMenuForwardRef = /*#__PURE__*/React__default.forwardRef((props, ref) => {\n  return /*#__PURE__*/React__default.createElement(HeaderMenu, _extends({}, props, {\n    focusRef: ref\n  }));\n});\nHeaderMenuForwardRef.displayName = 'HeaderMenu';\nvar HeaderMenuForwardRef$1 = HeaderMenuForwardRef;\n\nexport { HeaderMenu, HeaderMenuForwardRef$1 as default };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}