{"ast":null,"code":"/**\n * Copyright IBM Corp. 2016, 2023\n *\n * This source code is licensed under the Apache-2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { extends as _extends } from '../../_virtual/_rollupPluginBabelHelpers.js';\nimport React__default from 'react';\nimport PropTypes from 'prop-types';\nimport cx from 'classnames';\nimport { ErrorFilled, CheckmarkFilled } from '@carbon/icons-react';\nimport Loading from '../Loading/Loading.js';\nimport { usePrefix } from '../../internal/usePrefix.js';\nfunction InlineLoading(_ref) {\n  let {\n    className,\n    status = 'active',\n    iconDescription,\n    description,\n    onSuccess,\n    successDelay = 1500,\n    ...other\n  } = _ref;\n  const prefix = usePrefix();\n  const loadingClasses = cx(`${prefix}--inline-loading`, className);\n  const getLoading = () => {\n    let iconLabel = iconDescription ? iconDescription : status;\n    if (status === 'error') {\n      return /*#__PURE__*/React__default.createElement(ErrorFilled, {\n        className: `${prefix}--inline-loading--error`\n      }, /*#__PURE__*/React__default.createElement(\"title\", null, iconLabel));\n    }\n    if (status === 'finished') {\n      setTimeout(() => {\n        if (onSuccess) {\n          onSuccess();\n        }\n      }, successDelay);\n      return /*#__PURE__*/React__default.createElement(CheckmarkFilled, {\n        className: `${prefix}--inline-loading__checkmark-container`\n      }, /*#__PURE__*/React__default.createElement(\"title\", null, iconLabel));\n    }\n    if (status === 'inactive' || status === 'active') {\n      if (!iconDescription) {\n        iconLabel = status === 'active' ? 'loading' : 'not loading';\n      }\n      return /*#__PURE__*/React__default.createElement(Loading, {\n        small: true,\n        description: iconLabel,\n        withOverlay: false,\n        active: status === 'active'\n      });\n    }\n    return undefined;\n  };\n  const loadingText = /*#__PURE__*/React__default.createElement(\"div\", {\n    className: `${prefix}--inline-loading__text`\n  }, description);\n  const loading = getLoading();\n  const loadingAnimation = loading && /*#__PURE__*/React__default.createElement(\"div\", {\n    className: `${prefix}--inline-loading__animation`\n  }, loading);\n  return /*#__PURE__*/React__default.createElement(\"div\", _extends({\n    className: loadingClasses\n  }, other, {\n    \"aria-live\": 'assertive'\n  }), loadingAnimation, description && loadingText);\n}\nInlineLoading.propTypes = {\n  /**\n   * Specify a custom className to be applied to the container node\n   */\n  className: PropTypes.string,\n  /**\n   * Specify the description for the inline loading text\n   */\n  description: PropTypes.node,\n  /**\n   * Specify the description for the inline loading text\n   */\n  iconDescription: PropTypes.string,\n  /**\n   * Provide an optional handler to be invoked when <InlineLoading> is\n   * successful\n   */\n  onSuccess: PropTypes.func,\n  /**\n   * Specify the loading status\n   */\n  status: PropTypes.oneOf(['inactive', 'active', 'finished', 'error']),\n  /**\n   * Provide a delay for the `setTimeout` for success\n   */\n  successDelay: PropTypes.number\n};\nexport { InlineLoading as default };","map":{"version":3,"names":["extends","_extends","React__default","PropTypes","cx","ErrorFilled","CheckmarkFilled","Loading","usePrefix","InlineLoading","_ref","className","status","iconDescription","description","onSuccess","successDelay","other","prefix","loadingClasses","getLoading","iconLabel","createElement","setTimeout","small","withOverlay","active","undefined","loadingText","loading","loadingAnimation","propTypes","string","node","func","oneOf","number","default"],"sources":["/home/saymon/Backup/Portifolio/Hematology-App-with-Carbon-Design-System/frontend/node_modules/@carbon/react/es/components/InlineLoading/InlineLoading.js"],"sourcesContent":["/**\n * Copyright IBM Corp. 2016, 2023\n *\n * This source code is licensed under the Apache-2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { extends as _extends } from '../../_virtual/_rollupPluginBabelHelpers.js';\nimport React__default from 'react';\nimport PropTypes from 'prop-types';\nimport cx from 'classnames';\nimport { ErrorFilled, CheckmarkFilled } from '@carbon/icons-react';\nimport Loading from '../Loading/Loading.js';\nimport { usePrefix } from '../../internal/usePrefix.js';\n\nfunction InlineLoading(_ref) {\n  let {\n    className,\n    status = 'active',\n    iconDescription,\n    description,\n    onSuccess,\n    successDelay = 1500,\n    ...other\n  } = _ref;\n  const prefix = usePrefix();\n  const loadingClasses = cx(`${prefix}--inline-loading`, className);\n  const getLoading = () => {\n    let iconLabel = iconDescription ? iconDescription : status;\n    if (status === 'error') {\n      return /*#__PURE__*/React__default.createElement(ErrorFilled, {\n        className: `${prefix}--inline-loading--error`\n      }, /*#__PURE__*/React__default.createElement(\"title\", null, iconLabel));\n    }\n    if (status === 'finished') {\n      setTimeout(() => {\n        if (onSuccess) {\n          onSuccess();\n        }\n      }, successDelay);\n      return /*#__PURE__*/React__default.createElement(CheckmarkFilled, {\n        className: `${prefix}--inline-loading__checkmark-container`\n      }, /*#__PURE__*/React__default.createElement(\"title\", null, iconLabel));\n    }\n    if (status === 'inactive' || status === 'active') {\n      if (!iconDescription) {\n        iconLabel = status === 'active' ? 'loading' : 'not loading';\n      }\n      return /*#__PURE__*/React__default.createElement(Loading, {\n        small: true,\n        description: iconLabel,\n        withOverlay: false,\n        active: status === 'active'\n      });\n    }\n    return undefined;\n  };\n  const loadingText = /*#__PURE__*/React__default.createElement(\"div\", {\n    className: `${prefix}--inline-loading__text`\n  }, description);\n  const loading = getLoading();\n  const loadingAnimation = loading && /*#__PURE__*/React__default.createElement(\"div\", {\n    className: `${prefix}--inline-loading__animation`\n  }, loading);\n  return /*#__PURE__*/React__default.createElement(\"div\", _extends({\n    className: loadingClasses\n  }, other, {\n    \"aria-live\": 'assertive' \n  }), loadingAnimation, description && loadingText);\n}\nInlineLoading.propTypes = {\n  /**\n   * Specify a custom className to be applied to the container node\n   */\n  className: PropTypes.string,\n  /**\n   * Specify the description for the inline loading text\n   */\n  description: PropTypes.node,\n  /**\n   * Specify the description for the inline loading text\n   */\n  iconDescription: PropTypes.string,\n  /**\n   * Provide an optional handler to be invoked when <InlineLoading> is\n   * successful\n   */\n  onSuccess: PropTypes.func,\n  /**\n   * Specify the loading status\n   */\n  status: PropTypes.oneOf(['inactive', 'active', 'finished', 'error']),\n  /**\n   * Provide a delay for the `setTimeout` for success\n   */\n  successDelay: PropTypes.number\n};\n\nexport { InlineLoading as default };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}