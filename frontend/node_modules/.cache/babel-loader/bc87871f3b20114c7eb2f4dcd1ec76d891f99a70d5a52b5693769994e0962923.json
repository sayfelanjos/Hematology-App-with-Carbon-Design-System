{"ast":null,"code":"/**\n * Copyright IBM Corp. 2016, 2023\n *\n * This source code is licensed under the Apache-2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n/**\n * @param {string} name The name of the prop that must exist to validate\n * the current prop.\n * @param {Function} propType The original prop type checker.\n * @returns {Function} The new prop type checker for the current prop that\n * becomes required if the prop corresponding to the provided prop name exists.\n */\nfunction requiredIfGivenPropIsTruthy(name, propType) {\n  return function check(props, propName, componentName) {\n    if (process.env.NODE_ENV !== \"production\" && props[name] == true && props[propName] == null) {\n      return new Error(\"You must provide a value for `\".concat(propName, \"` in `\").concat(componentName, \"` if `\").concat(name, \"` exists.\"));\n    }\n    for (var _len = arguments.length, rest = new Array(_len > 3 ? _len - 3 : 0), _key = 3; _key < _len; _key++) {\n      rest[_key - 3] = arguments[_key];\n    }\n    return propType.apply(void 0, [props, propName, componentName].concat(rest));\n  };\n}\nexport { requiredIfGivenPropIsTruthy as default };","map":{"version":3,"names":["requiredIfGivenPropIsTruthy","name","propType","check","props","propName","componentName","process","env","NODE_ENV","Error","concat","_len","arguments","length","rest","Array","_key","apply","default"],"sources":["/home/saymon/Backup/Portifolio/Hematology-App-with-Carbon-Design-System/frontend/node_modules/@carbon/react/es/prop-types/requiredIfGivenPropIsTruthy.js"],"sourcesContent":["/**\n * Copyright IBM Corp. 2016, 2023\n *\n * This source code is licensed under the Apache-2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n/**\n * @param {string} name The name of the prop that must exist to validate\n * the current prop.\n * @param {Function} propType The original prop type checker.\n * @returns {Function} The new prop type checker for the current prop that\n * becomes required if the prop corresponding to the provided prop name exists.\n */\nfunction requiredIfGivenPropIsTruthy(name, propType) {\n  return function check(props, propName, componentName) {\n    if (process.env.NODE_ENV !== \"production\" && props[name] == true && props[propName] == null) {\n      return new Error(`You must provide a value for \\`${propName}\\` in \\`${componentName}\\` if \\`${name}\\` exists.`);\n    }\n    for (var _len = arguments.length, rest = new Array(_len > 3 ? _len - 3 : 0), _key = 3; _key < _len; _key++) {\n      rest[_key - 3] = arguments[_key];\n    }\n    return propType(props, propName, componentName, ...rest);\n  };\n}\n\nexport { requiredIfGivenPropIsTruthy as default };\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASA,2BAA2BA,CAACC,IAAI,EAAEC,QAAQ,EAAE;EACnD,OAAO,SAASC,KAAKA,CAACC,KAAK,EAAEC,QAAQ,EAAEC,aAAa,EAAE;IACpD,IAAIC,OAAO,CAACC,GAAG,CAACC,QAAQ,KAAK,YAAY,IAAIL,KAAK,CAACH,IAAI,CAAC,IAAI,IAAI,IAAIG,KAAK,CAACC,QAAQ,CAAC,IAAI,IAAI,EAAE;MAC3F,OAAO,IAAIK,KAAK,kCAAAC,MAAA,CAAmCN,QAAQ,YAAAM,MAAA,CAAWL,aAAa,YAAAK,MAAA,CAAWV,IAAI,cAAY,CAAC;IACjH;IACA,KAAK,IAAIW,IAAI,GAAGC,SAAS,CAACC,MAAM,EAAEC,IAAI,GAAG,IAAIC,KAAK,CAACJ,IAAI,GAAG,CAAC,GAAGA,IAAI,GAAG,CAAC,GAAG,CAAC,CAAC,EAAEK,IAAI,GAAG,CAAC,EAAEA,IAAI,GAAGL,IAAI,EAAEK,IAAI,EAAE,EAAE;MAC1GF,IAAI,CAACE,IAAI,GAAG,CAAC,CAAC,GAAGJ,SAAS,CAACI,IAAI,CAAC;IAClC;IACA,OAAOf,QAAQ,CAAAgB,KAAA,UAACd,KAAK,EAAEC,QAAQ,EAAEC,aAAa,EAAAK,MAAA,CAAKI,IAAI,EAAC;EAC1D,CAAC;AACH;AAEA,SAASf,2BAA2B,IAAImB,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}