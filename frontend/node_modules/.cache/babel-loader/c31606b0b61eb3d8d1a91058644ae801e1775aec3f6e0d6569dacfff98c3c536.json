{"ast":null,"code":"/**\n * Copyright IBM Corp. 2016, 2023\n *\n * This source code is licensed under the Apache-2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { useState, useRef, useEffect } from 'react';\nimport { warning } from './warning.js';\n\n/**\n * This custom hook simplifies the behavior of a component if it has state that\n * can be both controlled and uncontrolled. It functions identical to a\n * useState() hook and provides [state, setState] for you to use. You can use\n * the `onChange` argument to allow updates to the `state` to be communicated to\n * owners of controlled components.\n *\n * Note: this hook will warn if a component is switching from controlled to\n * uncontrolled, or vice-versa.\n *\n * @param {object} config\n * @param {string} [config.name] - the name of the custom component\n * @param {any} config.defaultValue - the default value used for the state. This will be\n * the fallback value used if `value` is not defined.\n * @param {Function|undefined} config.onChange - an optional function that is called when\n * the value of the state changes. This is useful for communicating to parents of\n * controlled components that the value is requesting to be changed.\n * @param {any} config.value - a controlled value. Omitting this means that the state is\n * uncontrolled\n * @returns {[any, (v: any) => void]}\n */\nfunction useControllableState(_ref) {\n  let {\n    defaultValue,\n    name = 'custom',\n    onChange,\n    value\n  } = _ref;\n  const [state, internalSetState] = useState(value ?? defaultValue);\n  const controlled = useRef(null);\n  if (controlled.current === null) {\n    controlled.current = value !== undefined;\n  }\n  function setState(stateOrUpdater) {\n    const value = typeof stateOrUpdater === 'function' ? stateOrUpdater(state) : stateOrUpdater;\n    if (controlled.current === false) {\n      internalSetState(value);\n    }\n    if (onChange) {\n      onChange(value);\n    }\n  }\n  useEffect(() => {\n    const controlledValue = value !== undefined;\n\n    // Uncontrolled -> Controlled\n    // If the component prop is uncontrolled, the prop value should be undefined\n    if (controlled.current === false && controlledValue) {\n      process.env.NODE_ENV !== \"production\" ? warning(false, 'A component is changing an uncontrolled %s component to be controlled. ' + 'This is likely caused by the value changing to a defined value ' + 'from undefined. Decide between using a controlled or uncontrolled ' + 'value for the lifetime of the component. ' + 'More info: https://reactjs.org/link/controlled-components', name) : void 0;\n    }\n\n    // Controlled -> Uncontrolled\n    // If the component prop is controlled, the prop value should be defined\n    if (controlled.current === true && !controlledValue) {\n      process.env.NODE_ENV !== \"production\" ? warning(false, 'A component is changing a controlled %s component to be uncontrolled. ' + 'This is likely caused by the value changing to an undefined value ' + 'from a defined one. Decide between using a controlled or ' + 'uncontrolled value for the lifetime of the component. ' + 'More info: https://reactjs.org/link/controlled-components', name) : void 0;\n    }\n  }, [name, value]);\n  if (controlled.current === true) {\n    return [value, setState];\n  }\n  return [state, setState];\n}\nexport { useControllableState };","map":{"version":3,"names":["useState","useRef","useEffect","warning","useControllableState","_ref","defaultValue","name","onChange","value","state","internalSetState","controlled","current","undefined","setState","stateOrUpdater","controlledValue","process","env","NODE_ENV"],"sources":["/home/saymon/Backup/Portifolio/Hematology-App-with-Carbon-Design-System/frontend/node_modules/@carbon/react/es/internal/useControllableState.js"],"sourcesContent":["/**\n * Copyright IBM Corp. 2016, 2023\n *\n * This source code is licensed under the Apache-2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { useState, useRef, useEffect } from 'react';\nimport { warning } from './warning.js';\n\n/**\n * This custom hook simplifies the behavior of a component if it has state that\n * can be both controlled and uncontrolled. It functions identical to a\n * useState() hook and provides [state, setState] for you to use. You can use\n * the `onChange` argument to allow updates to the `state` to be communicated to\n * owners of controlled components.\n *\n * Note: this hook will warn if a component is switching from controlled to\n * uncontrolled, or vice-versa.\n *\n * @param {object} config\n * @param {string} [config.name] - the name of the custom component\n * @param {any} config.defaultValue - the default value used for the state. This will be\n * the fallback value used if `value` is not defined.\n * @param {Function|undefined} config.onChange - an optional function that is called when\n * the value of the state changes. This is useful for communicating to parents of\n * controlled components that the value is requesting to be changed.\n * @param {any} config.value - a controlled value. Omitting this means that the state is\n * uncontrolled\n * @returns {[any, (v: any) => void]}\n */\nfunction useControllableState(_ref) {\n  let {\n    defaultValue,\n    name = 'custom',\n    onChange,\n    value\n  } = _ref;\n  const [state, internalSetState] = useState(value ?? defaultValue);\n  const controlled = useRef(null);\n  if (controlled.current === null) {\n    controlled.current = value !== undefined;\n  }\n  function setState(stateOrUpdater) {\n    const value = typeof stateOrUpdater === 'function' ? stateOrUpdater(state) : stateOrUpdater;\n    if (controlled.current === false) {\n      internalSetState(value);\n    }\n    if (onChange) {\n      onChange(value);\n    }\n  }\n  useEffect(() => {\n    const controlledValue = value !== undefined;\n\n    // Uncontrolled -> Controlled\n    // If the component prop is uncontrolled, the prop value should be undefined\n    if (controlled.current === false && controlledValue) {\n      process.env.NODE_ENV !== \"production\" ? warning(false, 'A component is changing an uncontrolled %s component to be controlled. ' + 'This is likely caused by the value changing to a defined value ' + 'from undefined. Decide between using a controlled or uncontrolled ' + 'value for the lifetime of the component. ' + 'More info: https://reactjs.org/link/controlled-components', name) : void 0;\n    }\n\n    // Controlled -> Uncontrolled\n    // If the component prop is controlled, the prop value should be defined\n    if (controlled.current === true && !controlledValue) {\n      process.env.NODE_ENV !== \"production\" ? warning(false, 'A component is changing a controlled %s component to be uncontrolled. ' + 'This is likely caused by the value changing to an undefined value ' + 'from a defined one. Decide between using a controlled or ' + 'uncontrolled value for the lifetime of the component. ' + 'More info: https://reactjs.org/link/controlled-components', name) : void 0;\n    }\n  }, [name, value]);\n  if (controlled.current === true) {\n    return [value, setState];\n  }\n  return [state, setState];\n}\n\nexport { useControllableState };\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;;AAEA,SAASA,QAAQ,EAAEC,MAAM,EAAEC,SAAS,QAAQ,OAAO;AACnD,SAASC,OAAO,QAAQ,cAAc;;AAEtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASC,oBAAoBA,CAACC,IAAI,EAAE;EAClC,IAAI;IACFC,YAAY;IACZC,IAAI,GAAG,QAAQ;IACfC,QAAQ;IACRC;EACF,CAAC,GAAGJ,IAAI;EACR,MAAM,CAACK,KAAK,EAAEC,gBAAgB,CAAC,GAAGX,QAAQ,CAACS,KAAK,IAAIH,YAAY,CAAC;EACjE,MAAMM,UAAU,GAAGX,MAAM,CAAC,IAAI,CAAC;EAC/B,IAAIW,UAAU,CAACC,OAAO,KAAK,IAAI,EAAE;IAC/BD,UAAU,CAACC,OAAO,GAAGJ,KAAK,KAAKK,SAAS;EAC1C;EACA,SAASC,QAAQA,CAACC,cAAc,EAAE;IAChC,MAAMP,KAAK,GAAG,OAAOO,cAAc,KAAK,UAAU,GAAGA,cAAc,CAACN,KAAK,CAAC,GAAGM,cAAc;IAC3F,IAAIJ,UAAU,CAACC,OAAO,KAAK,KAAK,EAAE;MAChCF,gBAAgB,CAACF,KAAK,CAAC;IACzB;IACA,IAAID,QAAQ,EAAE;MACZA,QAAQ,CAACC,KAAK,CAAC;IACjB;EACF;EACAP,SAAS,CAAC,MAAM;IACd,MAAMe,eAAe,GAAGR,KAAK,KAAKK,SAAS;;IAE3C;IACA;IACA,IAAIF,UAAU,CAACC,OAAO,KAAK,KAAK,IAAII,eAAe,EAAE;MACnDC,OAAO,CAACC,GAAG,CAACC,QAAQ,KAAK,YAAY,GAAGjB,OAAO,CAAC,KAAK,EAAE,yEAAyE,GAAG,iEAAiE,GAAG,oEAAoE,GAAG,2CAA2C,GAAG,2DAA2D,EAAEI,IAAI,CAAC,GAAG,KAAK,CAAC;IACzY;;IAEA;IACA;IACA,IAAIK,UAAU,CAACC,OAAO,KAAK,IAAI,IAAI,CAACI,eAAe,EAAE;MACnDC,OAAO,CAACC,GAAG,CAACC,QAAQ,KAAK,YAAY,GAAGjB,OAAO,CAAC,KAAK,EAAE,wEAAwE,GAAG,oEAAoE,GAAG,2DAA2D,GAAG,wDAAwD,GAAG,2DAA2D,EAAEI,IAAI,CAAC,GAAG,KAAK,CAAC;IAC/Y;EACF,CAAC,EAAE,CAACA,IAAI,EAAEE,KAAK,CAAC,CAAC;EACjB,IAAIG,UAAU,CAACC,OAAO,KAAK,IAAI,EAAE;IAC/B,OAAO,CAACJ,KAAK,EAAEM,QAAQ,CAAC;EAC1B;EACA,OAAO,CAACL,KAAK,EAAEK,QAAQ,CAAC;AAC1B;AAEA,SAASX,oBAAoB"},"metadata":{},"sourceType":"module","externalDependencies":[]}