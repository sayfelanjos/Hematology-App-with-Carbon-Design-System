{"ast":null,"code":"/**\n * Copyright IBM Corp. 2016, 2023\n *\n * This source code is licensed under the Apache-2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { defineProperty as _defineProperty, extends as _extends } from '../../_virtual/_rollupPluginBabelHelpers.js';\nimport { ChevronDown } from '@carbon/icons-react';\nimport cx from 'classnames';\nimport React__default from 'react';\nimport PropTypes from 'prop-types';\nimport { AriaLabelPropType } from '../../prop-types/AriaPropTypes.js';\nimport { PrefixContext } from '../../internal/usePrefix.js';\nimport deprecate from '../../prop-types/deprecate.js';\nimport { composeEventHandlers } from '../../tools/events.js';\nimport { matches } from '../../internal/keyboard/match.js';\nimport { Enter, Space, Escape } from '../../internal/keyboard/keys.js';\n\n/**\n * `HeaderMenu` is used to render submenu's in the `Header`. Most often children\n * will be a `HeaderMenuItem`. It handles certain keyboard events to help\n * with managing focus. It also passes along refs to each child so that it can\n * help manage focus state of its children.\n */\nclass HeaderMenu extends React__default.Component {\n  constructor(props) {\n    super(props);\n    _defineProperty(this, \"_subMenus\", /*#__PURE__*/React__default.createRef());\n    /**\n     * Toggle the expanded state of the menu on click.\n     */\n    _defineProperty(this, \"handleOnClick\", e => {\n      const {\n        current: subMenusNode\n      } = this._subMenus;\n      if (!subMenusNode || !subMenusNode.contains(e.target)) {\n        e.preventDefault();\n      }\n      this.setState(prevState => ({\n        expanded: !prevState.expanded\n      }));\n    });\n    /**\n     * Keyboard event handler for the entire menu.\n     */\n    _defineProperty(this, \"handleOnKeyDown\", event => {\n      // Handle enter or space key for toggling the expanded state of the menu.\n      if (matches(event, [Enter, Space])) {\n        event.stopPropagation();\n        event.preventDefault();\n        this.setState(prevState => ({\n          expanded: !prevState.expanded\n        }));\n        return;\n      }\n    });\n    /**\n     * Handle our blur event from our underlying menuitems. Will mostly be used\n     * for toggling the expansion status of our menu in response to a user\n     * clicking off of the menu or menubar.\n     */\n    _defineProperty(this, \"handleOnBlur\", event => {\n      // Rough guess for a blur event that is triggered outside of our menu or\n      // menubar context\n      const itemTriggeredBlur = this.items.find(element => element === event.relatedTarget);\n      if (event.relatedTarget && (event.relatedTarget.getAttribute('href') && event.relatedTarget.getAttribute('href') !== '#' || itemTriggeredBlur)) {\n        return;\n      }\n      this.setState({\n        expanded: false,\n        selectedIndex: null\n      });\n    });\n    /**\n     * ref handler for our menu button. If we are supplied a `focusRef` prop, we also\n     * forward along the node.\n     *\n     * This is useful when this component is a child in a\n     * menu or menubar as it will allow the parent to explicitly focus the menu\n     * button node when that child should receive focus.\n     */\n    _defineProperty(this, \"handleMenuButtonRef\", node => {\n      if (this.props.focusRef) {\n        this.props.focusRef(node);\n      }\n      this.menuButtonRef = node;\n    });\n    /**\n     * Handles individual menuitem refs. We assign them to a class instance\n     * property so that we can properly manage focus of our children.\n     */\n    _defineProperty(this, \"handleItemRef\", index => node => {\n      this.items[index] = node;\n    });\n    _defineProperty(this, \"handleMenuClose\", event => {\n      // Handle ESC keydown for closing the expanded menu.\n      if (matches(event, [Escape]) && this.state.expanded) {\n        event.stopPropagation();\n        event.preventDefault();\n        this.setState(() => ({\n          expanded: false,\n          selectedIndex: null\n        }));\n\n        // Return focus to menu button when the user hits ESC.\n        this.menuButtonRef.focus();\n        return;\n      }\n    });\n    /**\n     * We capture the `ref` for each child inside of `this.items` to properly\n     * manage focus. In addition to this focus management, all items receive a\n     * `tabIndex: -1` so the user won't hit a large number of items in their tab\n     * sequence when they might not want to go through all the items.\n     */\n    _defineProperty(this, \"_renderMenuItem\", (item, index) => {\n      if ( /*#__PURE__*/React__default.isValidElement(item)) {\n        return /*#__PURE__*/React__default.cloneElement(item, {\n          ref: this.handleItemRef(index)\n        });\n      }\n    });\n    this.state = {\n      // Used to manage the expansion state of the menu\n      expanded: false,\n      // Refers to the menuitem that is currently focused\n      // Note: children should have `role=\"menuitem\"` on node consuming ref\n      selectedIndex: null\n    };\n    this.items = [];\n  }\n  render() {\n    const prefix = this.context;\n    const {\n      isActive,\n      isCurrentPage,\n      'aria-label': ariaLabel,\n      'aria-labelledby': ariaLabelledBy,\n      className: customClassName,\n      children,\n      renderMenuContent: MenuContent,\n      menuLinkName,\n      focusRef,\n      // eslint-disable-line no-unused-vars\n      onBlur,\n      onClick,\n      onKeyDown,\n      ...rest\n    } = this.props;\n    const hasActiveChildren = React__default.Children.toArray(children).some(child => child.props.isActive || child.props.isCurrentPage);\n    const accessibilityLabel = {\n      'aria-label': ariaLabel,\n      'aria-labelledby': ariaLabelledBy\n    };\n    const itemClassName = cx({\n      [`${prefix}--header__submenu`]: true,\n      [customClassName]: !!customClassName\n    });\n    let isActivePage = isActive ? isActive : isCurrentPage;\n    const linkClassName = cx({\n      [`${prefix}--header__menu-item`]: true,\n      [`${prefix}--header__menu-title`]: true,\n      // We set the current class only if `isActive` is passed in and we do\n      // not have an `aria-current=\"page\"` set for the breadcrumb item\n      [`${prefix}--header__menu-item--current`]: isActivePage || hasActiveChildren && !this.state.expanded\n    });\n\n    // Notes on eslint comments and based on the examples in:\n    // https://www.w3.org/TR/wai-aria-practices/examples/menubar/menubar-1/menubar-1.html#\n    // - The focus is handled by the <a> menuitem, onMouseOver is for mouse\n    // users\n    // - aria-haspopup can definitely have the value \"menu\"\n    // - aria-expanded is on their example node with role=\"menuitem\"\n    // - href can be set to javascript:void(0), ideally this will be a button\n    return /*#__PURE__*/React__default.createElement(\"li\", _extends({}, rest, {\n      className: itemClassName,\n      onKeyDown: composeEventHandlers([onKeyDown, this.handleMenuClose]),\n      onClick: composeEventHandlers([onClick, this.handleOnClick]),\n      onBlur: composeEventHandlers([onBlur, this.handleOnBlur])\n    }), /*#__PURE__*/React__default.createElement(\"a\", _extends({\n      // eslint-disable-line jsx-a11y/role-supports-aria-props,jsx-a11y/anchor-is-valid\n      \"aria-haspopup\": \"menu\" // eslint-disable-line jsx-a11y/aria-proptypes\n      ,\n\n      \"aria-expanded\": this.state.expanded,\n      className: linkClassName,\n      href: \"#\",\n      onKeyDown: this.handleOnKeyDown,\n      ref: this.handleMenuButtonRef,\n      tabIndex: 0\n    }, accessibilityLabel), menuLinkName, MenuContent ? /*#__PURE__*/React__default.createElement(MenuContent, null) : /*#__PURE__*/React__default.createElement(ChevronDown, {\n      className: `${this.context}--header__menu-arrow`\n    })), /*#__PURE__*/React__default.createElement(\"ul\", _extends({}, accessibilityLabel, {\n      ref: this._subMenus,\n      className: `${prefix}--header__menu`\n    }), React__default.Children.map(children, this._renderMenuItem)));\n  }\n}\n_defineProperty(HeaderMenu, \"propTypes\", {\n  /**\n   * Required props for the accessibility label of the menu\n   */\n  ...AriaLabelPropType,\n  /**\n   * Optionally provide a custom class to apply to the underlying `<li>` node\n   */\n  className: PropTypes.string,\n  /**\n   * Provide a custom ref handler for the menu button\n   */\n  focusRef: PropTypes.func,\n  /**\n   * Applies selected styles to the item if a user sets this to true and `aria-current !== 'page'`.\n   */\n  isActive: PropTypes.bool,\n  /**\n   * Applies selected styles to the item if a user sets this to true and `aria-current !== 'page'`.\n   * @deprecated Please use `isActive` instead. This will be removed in the next major release.\n   */\n  isCurrentPage: deprecate(PropTypes.bool, 'The `isCurrentPage` prop for `HeaderMenu` has ' + 'been deprecated. Please use `isActive` instead. This will be removed in the next major release.'),\n  /**\n   * Provide a label for the link text\n   */\n  menuLinkName: PropTypes.string.isRequired,\n  /**\n   * Optionally provide an onBlur handler that is called when the underlying\n   * button fires it's onblur event\n   */\n  onBlur: PropTypes.func,\n  /**\n   * Optionally provide an onClick handler that is called when the underlying\n   * button fires it's onclick event\n   */\n  onClick: PropTypes.func,\n  /**\n   * Optionally provide an onKeyDown handler that is called when the underlying\n   * button fires it's onkeydown event\n   */\n  onKeyDown: PropTypes.func,\n  /**\n   * Optional component to render instead of string\n   */\n  renderMenuContent: PropTypes.func,\n  /**\n   * Optionally provide a tabIndex for the underlying menu button\n   */\n  tabIndex: PropTypes.number\n});\n_defineProperty(HeaderMenu, \"contextType\", PrefixContext);\nconst HeaderMenuForwardRef = /*#__PURE__*/React__default.forwardRef((props, ref) => {\n  return /*#__PURE__*/React__default.createElement(HeaderMenu, _extends({}, props, {\n    focusRef: ref\n  }));\n});\nHeaderMenuForwardRef.displayName = 'HeaderMenu';\nvar HeaderMenuForwardRef$1 = HeaderMenuForwardRef;\nexport { HeaderMenu, HeaderMenuForwardRef$1 as default };","map":{"version":3,"names":["defineProperty","_defineProperty","extends","_extends","ChevronDown","cx","React__default","PropTypes","AriaLabelPropType","PrefixContext","deprecate","composeEventHandlers","matches","Enter","Space","Escape","HeaderMenu","Component","constructor","props","createRef","e","current","subMenusNode","_subMenus","contains","target","preventDefault","setState","prevState","expanded","event","stopPropagation","itemTriggeredBlur","items","find","element","relatedTarget","getAttribute","selectedIndex","node","focusRef","menuButtonRef","index","state","focus","item","isValidElement","cloneElement","ref","handleItemRef","render","prefix","context","isActive","isCurrentPage","ariaLabel","ariaLabelledBy","className","customClassName","children","renderMenuContent","MenuContent","menuLinkName","onBlur","onClick","onKeyDown","rest","hasActiveChildren","Children","toArray","some","child","accessibilityLabel","itemClassName","isActivePage","linkClassName","createElement","handleMenuClose","handleOnClick","handleOnBlur","href","handleOnKeyDown","handleMenuButtonRef","tabIndex","map","_renderMenuItem","string","func","bool","isRequired","number","HeaderMenuForwardRef","forwardRef","displayName","HeaderMenuForwardRef$1","default"],"sources":["/home/saymon/Backup/Portifolio/Hematology-App-with-Carbon-Design-System/frontend/node_modules/@carbon/react/es/components/UIShell/HeaderMenu.js"],"sourcesContent":["/**\n * Copyright IBM Corp. 2016, 2023\n *\n * This source code is licensed under the Apache-2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { defineProperty as _defineProperty, extends as _extends } from '../../_virtual/_rollupPluginBabelHelpers.js';\nimport { ChevronDown } from '@carbon/icons-react';\nimport cx from 'classnames';\nimport React__default from 'react';\nimport PropTypes from 'prop-types';\nimport { AriaLabelPropType } from '../../prop-types/AriaPropTypes.js';\nimport { PrefixContext } from '../../internal/usePrefix.js';\nimport deprecate from '../../prop-types/deprecate.js';\nimport { composeEventHandlers } from '../../tools/events.js';\nimport { matches } from '../../internal/keyboard/match.js';\nimport { Enter, Space, Escape } from '../../internal/keyboard/keys.js';\n\n/**\n * `HeaderMenu` is used to render submenu's in the `Header`. Most often children\n * will be a `HeaderMenuItem`. It handles certain keyboard events to help\n * with managing focus. It also passes along refs to each child so that it can\n * help manage focus state of its children.\n */\nclass HeaderMenu extends React__default.Component {\n  constructor(props) {\n    super(props);\n    _defineProperty(this, \"_subMenus\", /*#__PURE__*/React__default.createRef());\n    /**\n     * Toggle the expanded state of the menu on click.\n     */\n    _defineProperty(this, \"handleOnClick\", e => {\n      const {\n        current: subMenusNode\n      } = this._subMenus;\n      if (!subMenusNode || !subMenusNode.contains(e.target)) {\n        e.preventDefault();\n      }\n      this.setState(prevState => ({\n        expanded: !prevState.expanded\n      }));\n    });\n    /**\n     * Keyboard event handler for the entire menu.\n     */\n    _defineProperty(this, \"handleOnKeyDown\", event => {\n      // Handle enter or space key for toggling the expanded state of the menu.\n      if (matches(event, [Enter, Space])) {\n        event.stopPropagation();\n        event.preventDefault();\n        this.setState(prevState => ({\n          expanded: !prevState.expanded\n        }));\n        return;\n      }\n    });\n    /**\n     * Handle our blur event from our underlying menuitems. Will mostly be used\n     * for toggling the expansion status of our menu in response to a user\n     * clicking off of the menu or menubar.\n     */\n    _defineProperty(this, \"handleOnBlur\", event => {\n      // Rough guess for a blur event that is triggered outside of our menu or\n      // menubar context\n      const itemTriggeredBlur = this.items.find(element => element === event.relatedTarget);\n      if (event.relatedTarget && (event.relatedTarget.getAttribute('href') && event.relatedTarget.getAttribute('href') !== '#' || itemTriggeredBlur)) {\n        return;\n      }\n      this.setState({\n        expanded: false,\n        selectedIndex: null\n      });\n    });\n    /**\n     * ref handler for our menu button. If we are supplied a `focusRef` prop, we also\n     * forward along the node.\n     *\n     * This is useful when this component is a child in a\n     * menu or menubar as it will allow the parent to explicitly focus the menu\n     * button node when that child should receive focus.\n     */\n    _defineProperty(this, \"handleMenuButtonRef\", node => {\n      if (this.props.focusRef) {\n        this.props.focusRef(node);\n      }\n      this.menuButtonRef = node;\n    });\n    /**\n     * Handles individual menuitem refs. We assign them to a class instance\n     * property so that we can properly manage focus of our children.\n     */\n    _defineProperty(this, \"handleItemRef\", index => node => {\n      this.items[index] = node;\n    });\n    _defineProperty(this, \"handleMenuClose\", event => {\n      // Handle ESC keydown for closing the expanded menu.\n      if (matches(event, [Escape]) && this.state.expanded) {\n        event.stopPropagation();\n        event.preventDefault();\n        this.setState(() => ({\n          expanded: false,\n          selectedIndex: null\n        }));\n\n        // Return focus to menu button when the user hits ESC.\n        this.menuButtonRef.focus();\n        return;\n      }\n    });\n    /**\n     * We capture the `ref` for each child inside of `this.items` to properly\n     * manage focus. In addition to this focus management, all items receive a\n     * `tabIndex: -1` so the user won't hit a large number of items in their tab\n     * sequence when they might not want to go through all the items.\n     */\n    _defineProperty(this, \"_renderMenuItem\", (item, index) => {\n      if ( /*#__PURE__*/React__default.isValidElement(item)) {\n        return /*#__PURE__*/React__default.cloneElement(item, {\n          ref: this.handleItemRef(index)\n        });\n      }\n    });\n    this.state = {\n      // Used to manage the expansion state of the menu\n      expanded: false,\n      // Refers to the menuitem that is currently focused\n      // Note: children should have `role=\"menuitem\"` on node consuming ref\n      selectedIndex: null\n    };\n    this.items = [];\n  }\n  render() {\n    const prefix = this.context;\n    const {\n      isActive,\n      isCurrentPage,\n      'aria-label': ariaLabel,\n      'aria-labelledby': ariaLabelledBy,\n      className: customClassName,\n      children,\n      renderMenuContent: MenuContent,\n      menuLinkName,\n      focusRef,\n      // eslint-disable-line no-unused-vars\n      onBlur,\n      onClick,\n      onKeyDown,\n      ...rest\n    } = this.props;\n    const hasActiveChildren = React__default.Children.toArray(children).some(child => child.props.isActive || child.props.isCurrentPage);\n    const accessibilityLabel = {\n      'aria-label': ariaLabel,\n      'aria-labelledby': ariaLabelledBy\n    };\n    const itemClassName = cx({\n      [`${prefix}--header__submenu`]: true,\n      [customClassName]: !!customClassName\n    });\n    let isActivePage = isActive ? isActive : isCurrentPage;\n    const linkClassName = cx({\n      [`${prefix}--header__menu-item`]: true,\n      [`${prefix}--header__menu-title`]: true,\n      // We set the current class only if `isActive` is passed in and we do\n      // not have an `aria-current=\"page\"` set for the breadcrumb item\n      [`${prefix}--header__menu-item--current`]: isActivePage || hasActiveChildren && !this.state.expanded\n    });\n\n    // Notes on eslint comments and based on the examples in:\n    // https://www.w3.org/TR/wai-aria-practices/examples/menubar/menubar-1/menubar-1.html#\n    // - The focus is handled by the <a> menuitem, onMouseOver is for mouse\n    // users\n    // - aria-haspopup can definitely have the value \"menu\"\n    // - aria-expanded is on their example node with role=\"menuitem\"\n    // - href can be set to javascript:void(0), ideally this will be a button\n    return /*#__PURE__*/React__default.createElement(\"li\", _extends({}, rest, {\n      className: itemClassName,\n      onKeyDown: composeEventHandlers([onKeyDown, this.handleMenuClose]),\n      onClick: composeEventHandlers([onClick, this.handleOnClick]),\n      onBlur: composeEventHandlers([onBlur, this.handleOnBlur])\n    }), /*#__PURE__*/React__default.createElement(\"a\", _extends({\n      // eslint-disable-line jsx-a11y/role-supports-aria-props,jsx-a11y/anchor-is-valid\n      \"aria-haspopup\": \"menu\" // eslint-disable-line jsx-a11y/aria-proptypes\n      ,\n      \"aria-expanded\": this.state.expanded,\n      className: linkClassName,\n      href: \"#\",\n      onKeyDown: this.handleOnKeyDown,\n      ref: this.handleMenuButtonRef,\n      tabIndex: 0\n    }, accessibilityLabel), menuLinkName, MenuContent ? /*#__PURE__*/React__default.createElement(MenuContent, null) : /*#__PURE__*/React__default.createElement(ChevronDown, {\n      className: `${this.context}--header__menu-arrow`\n    })), /*#__PURE__*/React__default.createElement(\"ul\", _extends({}, accessibilityLabel, {\n      ref: this._subMenus,\n      className: `${prefix}--header__menu`\n    }), React__default.Children.map(children, this._renderMenuItem)));\n  }\n}\n_defineProperty(HeaderMenu, \"propTypes\", {\n  /**\n   * Required props for the accessibility label of the menu\n   */\n  ...AriaLabelPropType,\n  /**\n   * Optionally provide a custom class to apply to the underlying `<li>` node\n   */\n  className: PropTypes.string,\n  /**\n   * Provide a custom ref handler for the menu button\n   */\n  focusRef: PropTypes.func,\n  /**\n   * Applies selected styles to the item if a user sets this to true and `aria-current !== 'page'`.\n   */\n  isActive: PropTypes.bool,\n  /**\n   * Applies selected styles to the item if a user sets this to true and `aria-current !== 'page'`.\n   * @deprecated Please use `isActive` instead. This will be removed in the next major release.\n   */\n  isCurrentPage: deprecate(PropTypes.bool, 'The `isCurrentPage` prop for `HeaderMenu` has ' + 'been deprecated. Please use `isActive` instead. This will be removed in the next major release.'),\n  /**\n   * Provide a label for the link text\n   */\n  menuLinkName: PropTypes.string.isRequired,\n  /**\n   * Optionally provide an onBlur handler that is called when the underlying\n   * button fires it's onblur event\n   */\n  onBlur: PropTypes.func,\n  /**\n   * Optionally provide an onClick handler that is called when the underlying\n   * button fires it's onclick event\n   */\n  onClick: PropTypes.func,\n  /**\n   * Optionally provide an onKeyDown handler that is called when the underlying\n   * button fires it's onkeydown event\n   */\n  onKeyDown: PropTypes.func,\n  /**\n   * Optional component to render instead of string\n   */\n  renderMenuContent: PropTypes.func,\n  /**\n   * Optionally provide a tabIndex for the underlying menu button\n   */\n  tabIndex: PropTypes.number\n});\n_defineProperty(HeaderMenu, \"contextType\", PrefixContext);\nconst HeaderMenuForwardRef = /*#__PURE__*/React__default.forwardRef((props, ref) => {\n  return /*#__PURE__*/React__default.createElement(HeaderMenu, _extends({}, props, {\n    focusRef: ref\n  }));\n});\nHeaderMenuForwardRef.displayName = 'HeaderMenu';\nvar HeaderMenuForwardRef$1 = HeaderMenuForwardRef;\n\nexport { HeaderMenu, HeaderMenuForwardRef$1 as default };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}