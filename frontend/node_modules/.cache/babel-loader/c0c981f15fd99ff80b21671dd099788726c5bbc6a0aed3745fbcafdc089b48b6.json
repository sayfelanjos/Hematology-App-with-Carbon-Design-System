{"ast":null,"code":"import _slicedToArray from \"/home/saymon/Backup/Portifolio/Hematology-App-with-Carbon-Design-System/frontend/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\n/**\n * Copyright IBM Corp. 2016, 2023\n *\n * This source code is licensed under the Apache-2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport PropTypes from 'prop-types';\nimport React__default, { useState, useCallback } from 'react';\nimport { useWindowEvent } from '../../internal/useEvent.js';\nimport { match } from '../../internal/keyboard/match.js';\nimport { Escape } from '../../internal/keyboard/keys.js';\nfunction HeaderContainer(_ref) {\n  var Children = _ref.render,\n    _ref$isSideNavExpande = _ref.isSideNavExpanded,\n    isSideNavExpanded = _ref$isSideNavExpande === void 0 ? false : _ref$isSideNavExpande;\n  //state for expandable sidenav\n  var _useState = useState(isSideNavExpanded),\n    _useState2 = _slicedToArray(_useState, 2),\n    isSideNavExpandedState = _useState2[0],\n    setIsSideNavExpandedState = _useState2[1];\n  useWindowEvent('keydown', function (event) {\n    if (match(event, Escape)) {\n      setIsSideNavExpandedState(false);\n    }\n  });\n  var handleHeaderMenuButtonClick = useCallback(function () {\n    setIsSideNavExpandedState(function (prevIsSideNavExpanded) {\n      return !prevIsSideNavExpanded;\n    });\n  }, [setIsSideNavExpandedState]);\n  return /*#__PURE__*/React__default.createElement(Children, {\n    isSideNavExpanded: isSideNavExpandedState,\n    onClickSideNavExpand: handleHeaderMenuButtonClick\n  });\n}\nHeaderContainer.propTypes = {\n  /**\n   * Optionally provide a custom class name that is applied to the underlying <header>\n   */\n  isSideNavExpanded: PropTypes.bool,\n  /**\n   * A function or component that is passed an object parameter with two\n   * properties: `isSideNavExpanded` and `onClickSideNavExpand`. The function or\n   * component can then use those properties to within the components it\n   * returns, such as with the HeaderMenuButton and SideNav components.\n   */\n  render: PropTypes.elementType.isRequired\n};\nexport { HeaderContainer as default };","map":{"version":3,"names":["PropTypes","React__default","useState","useCallback","useWindowEvent","match","Escape","HeaderContainer","_ref","Children","render","_ref$isSideNavExpande","isSideNavExpanded","_useState","_useState2","_slicedToArray","isSideNavExpandedState","setIsSideNavExpandedState","event","handleHeaderMenuButtonClick","prevIsSideNavExpanded","createElement","onClickSideNavExpand","propTypes","bool","elementType","isRequired","default"],"sources":["/home/saymon/Backup/Portifolio/Hematology-App-with-Carbon-Design-System/frontend/node_modules/@carbon/react/es/components/UIShell/HeaderContainer.js"],"sourcesContent":["/**\n * Copyright IBM Corp. 2016, 2023\n *\n * This source code is licensed under the Apache-2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport PropTypes from 'prop-types';\nimport React__default, { useState, useCallback } from 'react';\nimport { useWindowEvent } from '../../internal/useEvent.js';\nimport { match } from '../../internal/keyboard/match.js';\nimport { Escape } from '../../internal/keyboard/keys.js';\n\nfunction HeaderContainer(_ref) {\n  let {\n    render: Children,\n    isSideNavExpanded = false\n  } = _ref;\n  //state for expandable sidenav\n  const [isSideNavExpandedState, setIsSideNavExpandedState] = useState(isSideNavExpanded);\n  useWindowEvent('keydown', event => {\n    if (match(event, Escape)) {\n      setIsSideNavExpandedState(false);\n    }\n  });\n  const handleHeaderMenuButtonClick = useCallback(() => {\n    setIsSideNavExpandedState(prevIsSideNavExpanded => !prevIsSideNavExpanded);\n  }, [setIsSideNavExpandedState]);\n  return /*#__PURE__*/React__default.createElement(Children, {\n    isSideNavExpanded: isSideNavExpandedState,\n    onClickSideNavExpand: handleHeaderMenuButtonClick\n  });\n}\nHeaderContainer.propTypes = {\n  /**\n   * Optionally provide a custom class name that is applied to the underlying <header>\n   */\n  isSideNavExpanded: PropTypes.bool,\n  /**\n   * A function or component that is passed an object parameter with two\n   * properties: `isSideNavExpanded` and `onClickSideNavExpand`. The function or\n   * component can then use those properties to within the components it\n   * returns, such as with the HeaderMenuButton and SideNav components.\n   */\n  render: PropTypes.elementType.isRequired\n};\n\nexport { HeaderContainer as default };\n"],"mappings":";AAAA;AACA;AACA;AACA;AACA;AACA;;AAEA,OAAOA,SAAS,MAAM,YAAY;AAClC,OAAOC,cAAc,IAAIC,QAAQ,EAAEC,WAAW,QAAQ,OAAO;AAC7D,SAASC,cAAc,QAAQ,4BAA4B;AAC3D,SAASC,KAAK,QAAQ,kCAAkC;AACxD,SAASC,MAAM,QAAQ,iCAAiC;AAExD,SAASC,eAAeA,CAACC,IAAI,EAAE;EAC7B,IACUC,QAAQ,GAEdD,IAAI,CAFNE,MAAM;IAAAC,qBAAA,GAEJH,IAAI,CADNI,iBAAiB;IAAjBA,iBAAiB,GAAAD,qBAAA,cAAG,KAAK,GAAAA,qBAAA;EAE3B;EACA,IAAAE,SAAA,GAA4DX,QAAQ,CAACU,iBAAiB,CAAC;IAAAE,UAAA,GAAAC,cAAA,CAAAF,SAAA;IAAhFG,sBAAsB,GAAAF,UAAA;IAAEG,yBAAyB,GAAAH,UAAA;EACxDV,cAAc,CAAC,SAAS,EAAE,UAAAc,KAAK,EAAI;IACjC,IAAIb,KAAK,CAACa,KAAK,EAAEZ,MAAM,CAAC,EAAE;MACxBW,yBAAyB,CAAC,KAAK,CAAC;IAClC;EACF,CAAC,CAAC;EACF,IAAME,2BAA2B,GAAGhB,WAAW,CAAC,YAAM;IACpDc,yBAAyB,CAAC,UAAAG,qBAAqB;MAAA,OAAI,CAACA,qBAAqB;IAAA,EAAC;EAC5E,CAAC,EAAE,CAACH,yBAAyB,CAAC,CAAC;EAC/B,OAAO,aAAahB,cAAc,CAACoB,aAAa,CAACZ,QAAQ,EAAE;IACzDG,iBAAiB,EAAEI,sBAAsB;IACzCM,oBAAoB,EAAEH;EACxB,CAAC,CAAC;AACJ;AACAZ,eAAe,CAACgB,SAAS,GAAG;EAC1B;AACF;AACA;EACEX,iBAAiB,EAAEZ,SAAS,CAACwB,IAAI;EACjC;AACF;AACA;AACA;AACA;AACA;EACEd,MAAM,EAAEV,SAAS,CAACyB,WAAW,CAACC;AAChC,CAAC;AAED,SAASnB,eAAe,IAAIoB,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}