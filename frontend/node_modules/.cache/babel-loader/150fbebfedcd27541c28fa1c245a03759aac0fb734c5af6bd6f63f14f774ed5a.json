{"ast":null,"code":"import _objectWithoutProperties from \"/home/saymon/Backup/Portifolio/Hematology-App-with-Carbon-Design-System/frontend/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js\";\nvar _excluded = [\"className\"];\n/**\n * Copyright IBM Corp. 2016, 2023\n *\n * This source code is licensed under the Apache-2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { extends as _extends } from '../../_virtual/_rollupPluginBabelHelpers.js';\nimport PropTypes from 'prop-types';\nimport React__default from 'react';\nimport cx from 'classnames';\nimport TextArea from '../TextArea/TextArea.js';\nimport '../TextArea/TextArea.Skeleton.js';\nimport deprecate from '../../prop-types/deprecate.js';\nimport { usePrefix } from '../../internal/usePrefix.js';\nimport { FormContext } from '../FluidForm/FormContext.js';\nfunction FluidTextArea(_ref) {\n  var className = _ref.className,\n    other = _objectWithoutProperties(_ref, _excluded);\n  var prefix = usePrefix();\n  var classNames = cx(\"\".concat(prefix, \"--text-area--fluid\"), className);\n  return /*#__PURE__*/React__default.createElement(FormContext.Provider, {\n    value: {\n      isFluid: true\n    }\n  }, /*#__PURE__*/React__default.createElement(TextArea, _extends({\n    className: classNames\n  }, other)));\n}\nFluidTextArea.propTypes = {\n  /**\n   * Provide a custom className that is applied directly to the underlying\n   * `<textarea>` node\n   */\n  className: PropTypes.string,\n  /**\n   * Specify the `cols` attribute for the underlying `<textarea>` node\n   */\n  cols: PropTypes.number,\n  /**\n   * Optionally provide the default value of the `<textarea>`\n   */\n  defaultValue: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  /**\n   * Specify whether the control is disabled\n   */\n  disabled: PropTypes.bool,\n  /**\n   * Specify whether to display the character counter\n   */\n  enableCounter: PropTypes.bool,\n  /**\n   * Provide text that is used alongside the control label for additional help\n   */\n  helperText: PropTypes.node,\n  /**\n   * Specify whether you want the underlying label to be visually hidden\n   */\n  hideLabel: PropTypes.bool,\n  /**\n   * Provide a unique identifier for the control\n   */\n  id: PropTypes.string,\n  /**\n   * Specify whether the control is currently invalid\n   */\n  invalid: PropTypes.bool,\n  /**\n   * Provide the text that is displayed when the control is in an invalid state\n   */\n  invalidText: PropTypes.node,\n  /**\n   * Provide the text that will be read by a screen reader when visiting this\n   * control\n   */\n  labelText: PropTypes.node.isRequired,\n  /**\n   * `true` to use the light version. For use on $ui-01 backgrounds only.\n   * Don't use this to make tile background color same as container background color.\n   */\n  light: deprecate(PropTypes.bool, 'The `light` prop for `FluidTextArea` has ' + 'been deprecated in favor of the new `Layer` component. It will be removed in the next major release.'),\n  /**\n   * Max character count allowed for the textarea. This is needed in order for enableCounter to display\n   */\n  maxCount: PropTypes.number,\n  /**\n   * Optionally provide an `onChange` handler that is called whenever `<textarea>`\n   * is updated\n   */\n  onChange: PropTypes.func,\n  /**\n   * Optionally provide an `onClick` handler that is called whenever the\n   * `<textarea>` is clicked\n   */\n  onClick: PropTypes.func,\n  /**\n   * Specify the placeholder attribute for the `<textarea>`\n   */\n  placeholder: PropTypes.string,\n  /**\n   * Specify the rows attribute for the `<textarea>`\n   */\n  rows: PropTypes.number,\n  /**\n   * Provide the current value of the `<textarea>`\n   */\n  value: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  /**\n   * Specify whether the control is currently in warning state\n   */\n  warn: PropTypes.bool,\n  /**\n   * Provide the text that is displayed when the control is in warning state\n   */\n  warnText: PropTypes.node\n};\nexport { FluidTextArea as default };","map":{"version":3,"names":["extends","_extends","PropTypes","React__default","cx","TextArea","deprecate","usePrefix","FormContext","FluidTextArea","_ref","className","other","_objectWithoutProperties","_excluded","prefix","classNames","concat","createElement","Provider","value","isFluid","propTypes","string","cols","number","defaultValue","oneOfType","disabled","bool","enableCounter","helperText","node","hideLabel","id","invalid","invalidText","labelText","isRequired","light","maxCount","onChange","func","onClick","placeholder","rows","warn","warnText","default"],"sources":["/home/saymon/Backup/Portifolio/Hematology-App-with-Carbon-Design-System/frontend/node_modules/@carbon/react/es/components/FluidTextArea/FluidTextArea.js"],"sourcesContent":["/**\n * Copyright IBM Corp. 2016, 2023\n *\n * This source code is licensed under the Apache-2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { extends as _extends } from '../../_virtual/_rollupPluginBabelHelpers.js';\nimport PropTypes from 'prop-types';\nimport React__default from 'react';\nimport cx from 'classnames';\nimport TextArea from '../TextArea/TextArea.js';\nimport '../TextArea/TextArea.Skeleton.js';\nimport deprecate from '../../prop-types/deprecate.js';\nimport { usePrefix } from '../../internal/usePrefix.js';\nimport { FormContext } from '../FluidForm/FormContext.js';\n\nfunction FluidTextArea(_ref) {\n  let {\n    className,\n    ...other\n  } = _ref;\n  const prefix = usePrefix();\n  const classNames = cx(`${prefix}--text-area--fluid`, className);\n  return /*#__PURE__*/React__default.createElement(FormContext.Provider, {\n    value: {\n      isFluid: true\n    }\n  }, /*#__PURE__*/React__default.createElement(TextArea, _extends({\n    className: classNames\n  }, other)));\n}\nFluidTextArea.propTypes = {\n  /**\n   * Provide a custom className that is applied directly to the underlying\n   * `<textarea>` node\n   */\n  className: PropTypes.string,\n  /**\n   * Specify the `cols` attribute for the underlying `<textarea>` node\n   */\n  cols: PropTypes.number,\n  /**\n   * Optionally provide the default value of the `<textarea>`\n   */\n  defaultValue: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  /**\n   * Specify whether the control is disabled\n   */\n  disabled: PropTypes.bool,\n  /**\n   * Specify whether to display the character counter\n   */\n  enableCounter: PropTypes.bool,\n  /**\n   * Provide text that is used alongside the control label for additional help\n   */\n  helperText: PropTypes.node,\n  /**\n   * Specify whether you want the underlying label to be visually hidden\n   */\n  hideLabel: PropTypes.bool,\n  /**\n   * Provide a unique identifier for the control\n   */\n  id: PropTypes.string,\n  /**\n   * Specify whether the control is currently invalid\n   */\n  invalid: PropTypes.bool,\n  /**\n   * Provide the text that is displayed when the control is in an invalid state\n   */\n  invalidText: PropTypes.node,\n  /**\n   * Provide the text that will be read by a screen reader when visiting this\n   * control\n   */\n  labelText: PropTypes.node.isRequired,\n  /**\n   * `true` to use the light version. For use on $ui-01 backgrounds only.\n   * Don't use this to make tile background color same as container background color.\n   */\n  light: deprecate(PropTypes.bool, 'The `light` prop for `FluidTextArea` has ' + 'been deprecated in favor of the new `Layer` component. It will be removed in the next major release.'),\n  /**\n   * Max character count allowed for the textarea. This is needed in order for enableCounter to display\n   */\n  maxCount: PropTypes.number,\n  /**\n   * Optionally provide an `onChange` handler that is called whenever `<textarea>`\n   * is updated\n   */\n  onChange: PropTypes.func,\n  /**\n   * Optionally provide an `onClick` handler that is called whenever the\n   * `<textarea>` is clicked\n   */\n  onClick: PropTypes.func,\n  /**\n   * Specify the placeholder attribute for the `<textarea>`\n   */\n  placeholder: PropTypes.string,\n  /**\n   * Specify the rows attribute for the `<textarea>`\n   */\n  rows: PropTypes.number,\n  /**\n   * Provide the current value of the `<textarea>`\n   */\n  value: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  /**\n   * Specify whether the control is currently in warning state\n   */\n  warn: PropTypes.bool,\n  /**\n   * Provide the text that is displayed when the control is in warning state\n   */\n  warnText: PropTypes.node\n};\n\nexport { FluidTextArea as default };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}