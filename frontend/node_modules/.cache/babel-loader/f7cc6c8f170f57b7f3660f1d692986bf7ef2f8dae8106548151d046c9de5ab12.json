{"ast":null,"code":"import _objectSpread from \"/home/saymon/Backup/Portifolio/Hematology-App-with-Carbon-Design-System/frontend/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _defineProperty from \"/home/saymon/Backup/Portifolio/Hematology-App-with-Carbon-Design-System/frontend/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nimport _slicedToArray from \"/home/saymon/Backup/Portifolio/Hematology-App-with-Carbon-Design-System/frontend/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport _objectWithoutProperties from \"/home/saymon/Backup/Portifolio/Hematology-App-with-Carbon-Design-System/frontend/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js\";\nvar _excluded = [\"active\", \"children\", \"className\", \"depth\", \"disabled\", \"isExpanded\", \"label\", \"onNodeFocusEvent\", \"onSelect\", \"onToggle\", \"onTreeSelect\", \"renderIcon\", \"selected\", \"value\"];\n/**\n * Copyright IBM Corp. 2016, 2023\n *\n * This source code is licensed under the Apache-2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { extends as _extends } from '../../_virtual/_rollupPluginBabelHelpers.js';\nimport React__default, { useRef, useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { CaretDown } from '@carbon/icons-react';\nimport cx from 'classnames';\nimport uniqueId from '../../tools/uniqueId.js';\nimport { usePrefix } from '../../internal/usePrefix.js';\nimport { matches, match } from '../../internal/keyboard/match.js';\nimport { ArrowLeft, ArrowRight, Enter, Space } from '../../internal/keyboard/keys.js';\nfunction TreeNode(_ref) {\n  var _cx, _objectSpread2;\n  var active = _ref.active,\n    children = _ref.children,\n    className = _ref.className,\n    depth = _ref.depth,\n    disabled = _ref.disabled,\n    isExpanded = _ref.isExpanded,\n    label = _ref.label,\n    onNodeFocusEvent = _ref.onNodeFocusEvent,\n    onNodeSelect = _ref.onSelect,\n    onToggle = _ref.onToggle,\n    onTreeSelect = _ref.onTreeSelect,\n    Icon = _ref.renderIcon,\n    selected = _ref.selected,\n    value = _ref.value,\n    rest = _objectWithoutProperties(_ref, _excluded);\n  var _useRef = useRef(rest.id || uniqueId()),\n    id = _useRef.current;\n  var _useState = useState(isExpanded),\n    _useState2 = _slicedToArray(_useState, 2),\n    expanded = _useState2[0],\n    setExpanded = _useState2[1];\n  var currentNode = useRef(null);\n  var currentNodeLabel = useRef(null);\n  var prefix = usePrefix();\n  var nodesWithProps = React__default.Children.map(children, function (node) {\n    if ( /*#__PURE__*/React__default.isValidElement(node)) {\n      return /*#__PURE__*/React__default.cloneElement(node, {\n        active: active,\n        depth: depth + 1,\n        disabled: disabled,\n        onTreeSelect: onTreeSelect,\n        selected: selected,\n        tabIndex: !node.props.disabled && -1 || null\n      });\n    }\n  });\n  var isActive = active === id;\n  var isSelected = selected.includes(id);\n  var treeNodeClasses = cx(className, \"\".concat(prefix, \"--tree-node\"), (_cx = {}, _defineProperty(_cx, \"\".concat(prefix, \"--tree-node--active\"), isActive), _defineProperty(_cx, \"\".concat(prefix, \"--tree-node--disabled\"), disabled), _defineProperty(_cx, \"\".concat(prefix, \"--tree-node--selected\"), isSelected), _defineProperty(_cx, \"\".concat(prefix, \"--tree-node--with-icon\"), Icon), _defineProperty(_cx, \"\".concat(prefix, \"--tree-leaf-node\"), !children), _defineProperty(_cx, \"\".concat(prefix, \"--tree-parent-node\"), children), _cx));\n  var toggleClasses = cx(\"\".concat(prefix, \"--tree-parent-node__toggle-icon\"), _defineProperty({}, \"\".concat(prefix, \"--tree-parent-node__toggle-icon--expanded\"), expanded));\n  function handleToggleClick(event) {\n    if (disabled) {\n      return;\n    }\n    onToggle === null || onToggle === void 0 ? void 0 : onToggle(event, {\n      id: id,\n      isExpanded: !expanded,\n      label: label,\n      value: value\n    });\n    setExpanded(!expanded);\n  }\n  function handleClick(event) {\n    event.stopPropagation();\n    if (!disabled) {\n      var _rest$onClick;\n      onTreeSelect === null || onTreeSelect === void 0 ? void 0 : onTreeSelect(event, {\n        id: id,\n        label: label,\n        value: value\n      });\n      onNodeSelect === null || onNodeSelect === void 0 ? void 0 : onNodeSelect(event, {\n        id: id,\n        label: label,\n        value: value\n      });\n      rest === null || rest === void 0 ? void 0 : (_rest$onClick = rest.onClick) === null || _rest$onClick === void 0 ? void 0 : _rest$onClick.call(rest, event);\n    }\n  }\n  function handleKeyDown(event) {\n    var _rest$onKeyDown;\n    if (disabled) {\n      return;\n    }\n    if (matches(event, [ArrowLeft, ArrowRight, Enter])) {\n      event.stopPropagation();\n    }\n    if (match(event, ArrowLeft)) {\n      var findParentTreeNode = function findParentTreeNode(node) {\n        if (node.classList.contains(\"\".concat(prefix, \"--tree-parent-node\"))) {\n          return node;\n        }\n        if (node.classList.contains(\"\".concat(prefix, \"--tree\"))) {\n          return null;\n        }\n        return findParentTreeNode(node.parentNode);\n      };\n      if (children && expanded) {\n        onToggle === null || onToggle === void 0 ? void 0 : onToggle(event, {\n          id: id,\n          isExpanded: false,\n          label: label,\n          value: value\n        });\n        setExpanded(false);\n      } else {\n        var _findParentTreeNode;\n        /**\n         * When focus is on a leaf node or a closed parent node, move focus to\n         * its parent node (unless its depth is level 1)\n         */\n        (_findParentTreeNode = findParentTreeNode(currentNode.current.parentNode)) === null || _findParentTreeNode === void 0 ? void 0 : _findParentTreeNode.focus();\n      }\n    }\n    if (children && match(event, ArrowRight)) {\n      if (expanded) {\n        /**\n         * When focus is on an expanded parent node, move focus to the first\n         * child node\n         */\n        currentNode.current.lastChild.firstChild.focus();\n      } else {\n        onToggle === null || onToggle === void 0 ? void 0 : onToggle(event, {\n          id: id,\n          isExpanded: true,\n          label: label,\n          value: value\n        });\n        setExpanded(true);\n      }\n    }\n    if (matches(event, [Enter, Space])) {\n      event.preventDefault();\n      handleClick(event);\n    }\n    rest === null || rest === void 0 ? void 0 : (_rest$onKeyDown = rest.onKeyDown) === null || _rest$onKeyDown === void 0 ? void 0 : _rest$onKeyDown.call(rest, event);\n  }\n  function handleFocusEvent(event) {\n    if (event.type === 'blur') {\n      var _rest$onBlur;\n      rest === null || rest === void 0 ? void 0 : (_rest$onBlur = rest.onBlur) === null || _rest$onBlur === void 0 ? void 0 : _rest$onBlur.call(rest, event);\n    }\n    if (event.type === 'focus') {\n      var _rest$onFocus;\n      rest === null || rest === void 0 ? void 0 : (_rest$onFocus = rest.onFocus) === null || _rest$onFocus === void 0 ? void 0 : _rest$onFocus.call(rest, event);\n    }\n    onNodeFocusEvent === null || onNodeFocusEvent === void 0 ? void 0 : onNodeFocusEvent(event);\n  }\n  useEffect(function () {\n    /**\n     * Negative margin shifts node to align with the left side boundary of the\n     * tree\n     * Dynamically calculate padding to recreate tree node indentation\n     * - parent nodes with icon have (depth + 1rem + depth * 0.5) left padding\n     * - parent nodes have (depth + 1rem) left padding\n     * - leaf nodes have (depth + 2.5rem) left padding without icons (because\n     *   of expand icon + spacing)\n     * - leaf nodes have (depth + 2rem + depth * 0.5) left padding with icons (because of\n     *   reduced spacing between the expand icon and the node icon + label)\n     */\n    var calcOffset = function calcOffset() {\n      // parent node with icon\n      if (children && Icon) {\n        return depth + 1 + depth * 0.5;\n      }\n      // parent node without icon\n      if (children) {\n        return depth + 1;\n      }\n      // leaf node with icon\n      if (Icon) {\n        return depth + 2 + depth * 0.5;\n      }\n      // leaf node without icon\n      return depth + 2.5;\n    };\n    if (currentNodeLabel.current) {\n      currentNodeLabel.current.style.marginLeft = \"-\".concat(calcOffset(), \"rem\");\n      currentNodeLabel.current.style.paddingLeft = \"\".concat(calcOffset(), \"rem\");\n    }\n\n    // sync props and state\n    setExpanded(isExpanded);\n  }, [children, depth, Icon, isExpanded]);\n  var treeNodeProps = _objectSpread(_objectSpread({}, rest), {}, (_objectSpread2 = {}, _defineProperty(_objectSpread2, 'aria-current', isActive || null), _defineProperty(_objectSpread2, 'aria-selected', disabled ? null : isSelected), _defineProperty(_objectSpread2, 'aria-disabled', disabled), _defineProperty(_objectSpread2, \"className\", treeNodeClasses), _defineProperty(_objectSpread2, \"id\", id), _defineProperty(_objectSpread2, \"onBlur\", handleFocusEvent), _defineProperty(_objectSpread2, \"onClick\", handleClick), _defineProperty(_objectSpread2, \"onFocus\", handleFocusEvent), _defineProperty(_objectSpread2, \"onKeyDown\", handleKeyDown), _defineProperty(_objectSpread2, \"ref\", currentNode), _defineProperty(_objectSpread2, \"role\", 'treeitem'), _objectSpread2));\n  if (!children) {\n    return /*#__PURE__*/React__default.createElement(\"li\", treeNodeProps, /*#__PURE__*/React__default.createElement(\"div\", {\n      className: \"\".concat(prefix, \"--tree-node__label\"),\n      ref: currentNodeLabel\n    }, Icon && /*#__PURE__*/React__default.createElement(Icon, {\n      className: \"\".concat(prefix, \"--tree-node__icon\")\n    }), label));\n  }\n  return /*#__PURE__*/(\n    // eslint-disable-next-line jsx-a11y/role-supports-aria-props\n    React__default.createElement(\"li\", _extends({}, treeNodeProps, {\n      \"aria-expanded\": !!expanded\n    }), /*#__PURE__*/React__default.createElement(\"div\", {\n      className: \"\".concat(prefix, \"--tree-node__label\"),\n      ref: currentNodeLabel\n    }, /*#__PURE__*/React__default.createElement(\"span\", {\n      className: \"\".concat(prefix, \"--tree-parent-node__toggle\"),\n      disabled: disabled,\n      onClick: handleToggleClick\n    }, /*#__PURE__*/React__default.createElement(CaretDown, {\n      className: toggleClasses\n    })), /*#__PURE__*/React__default.createElement(\"span\", {\n      className: \"\".concat(prefix, \"--tree-node__label__details\")\n    }, Icon && /*#__PURE__*/React__default.createElement(Icon, {\n      className: \"\".concat(prefix, \"--tree-node__icon\")\n    }), label)), expanded && /*#__PURE__*/React__default.createElement(\"ul\", {\n      role: \"group\",\n      className: \"\".concat(prefix, \"--tree-node__children\")\n    }, nodesWithProps))\n  );\n}\nTreeNode.propTypes = {\n  /**\n   * The value of the active node in the tree\n   */\n  active: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  /**\n   * Specify the children of the TreeNode\n   */\n  children: PropTypes.node,\n  /**\n   * Specify an optional className to be applied to the TreeNode\n   */\n  className: PropTypes.string,\n  /**\n   * TreeNode depth to determine spacing, automatically calculated by default\n   */\n  depth: PropTypes.number,\n  /**\n   * Specify if the TreeNode is disabled\n   */\n  disabled: PropTypes.bool,\n  /**\n   * Specify if the TreeNode is expanded (only applicable to parent nodes)\n   */\n  isExpanded: PropTypes.bool,\n  /**\n   * Rendered label for the TreeNode\n   */\n  label: PropTypes.node,\n  /**\n   * Callback function for when the node receives or loses focus\n   */\n  onNodeFocusEvent: PropTypes.func,\n  /**\n   * Callback function for when the node is selected\n   */\n  onSelect: PropTypes.func,\n  /**\n   * Callback function for when a parent node is expanded or collapsed\n   */\n  onToggle: PropTypes.func,\n  /**\n   * Callback function for when any node in the tree is selected\n   */\n  onTreeSelect: PropTypes.func,\n  /**\n   * Optional prop to allow each node to have an associated icon.\n   * Can be a React component class\n   */\n  renderIcon: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\n  /**\n   * Array containing all selected node IDs in the tree\n   */\n  selected: PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.string, PropTypes.number])),\n  /**\n   * Specify the value of the TreeNode\n   */\n  value: PropTypes.string\n};\nexport { TreeNode as default };","map":{"version":3,"names":["extends","_extends","React__default","useRef","useState","useEffect","PropTypes","CaretDown","cx","uniqueId","usePrefix","matches","match","ArrowLeft","ArrowRight","Enter","Space","TreeNode","_ref","_cx","_objectSpread2","active","children","className","depth","disabled","isExpanded","label","onNodeFocusEvent","onNodeSelect","onSelect","onToggle","onTreeSelect","Icon","renderIcon","selected","value","rest","_objectWithoutProperties","_excluded","_useRef","id","current","_useState","_useState2","_slicedToArray","expanded","setExpanded","currentNode","currentNodeLabel","prefix","nodesWithProps","Children","map","node","isValidElement","cloneElement","tabIndex","props","isActive","isSelected","includes","treeNodeClasses","concat","_defineProperty","toggleClasses","handleToggleClick","event","handleClick","stopPropagation","_rest$onClick","onClick","call","handleKeyDown","_rest$onKeyDown","findParentTreeNode","classList","contains","parentNode","_findParentTreeNode","focus","lastChild","firstChild","preventDefault","onKeyDown","handleFocusEvent","type","_rest$onBlur","onBlur","_rest$onFocus","onFocus","calcOffset","style","marginLeft","paddingLeft","treeNodeProps","_objectSpread","createElement","ref","role","propTypes","oneOfType","string","number","bool","func","object","arrayOf","default"],"sources":["/home/saymon/Backup/Portifolio/Hematology-App-with-Carbon-Design-System/frontend/node_modules/@carbon/react/es/components/TreeView/TreeNode.js"],"sourcesContent":["/**\n * Copyright IBM Corp. 2016, 2023\n *\n * This source code is licensed under the Apache-2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { extends as _extends } from '../../_virtual/_rollupPluginBabelHelpers.js';\nimport React__default, { useRef, useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { CaretDown } from '@carbon/icons-react';\nimport cx from 'classnames';\nimport uniqueId from '../../tools/uniqueId.js';\nimport { usePrefix } from '../../internal/usePrefix.js';\nimport { matches, match } from '../../internal/keyboard/match.js';\nimport { ArrowLeft, ArrowRight, Enter, Space } from '../../internal/keyboard/keys.js';\n\nfunction TreeNode(_ref) {\n  let {\n    active,\n    children,\n    className,\n    depth,\n    disabled,\n    isExpanded,\n    label,\n    onNodeFocusEvent,\n    onSelect: onNodeSelect,\n    onToggle,\n    onTreeSelect,\n    renderIcon: Icon,\n    selected,\n    value,\n    ...rest\n  } = _ref;\n  const {\n    current: id\n  } = useRef(rest.id || uniqueId());\n  const [expanded, setExpanded] = useState(isExpanded);\n  const currentNode = useRef(null);\n  const currentNodeLabel = useRef(null);\n  const prefix = usePrefix();\n  const nodesWithProps = React__default.Children.map(children, node => {\n    if ( /*#__PURE__*/React__default.isValidElement(node)) {\n      return /*#__PURE__*/React__default.cloneElement(node, {\n        active,\n        depth: depth + 1,\n        disabled,\n        onTreeSelect,\n        selected,\n        tabIndex: !node.props.disabled && -1 || null\n      });\n    }\n  });\n  const isActive = active === id;\n  const isSelected = selected.includes(id);\n  const treeNodeClasses = cx(className, `${prefix}--tree-node`, {\n    [`${prefix}--tree-node--active`]: isActive,\n    [`${prefix}--tree-node--disabled`]: disabled,\n    [`${prefix}--tree-node--selected`]: isSelected,\n    [`${prefix}--tree-node--with-icon`]: Icon,\n    [`${prefix}--tree-leaf-node`]: !children,\n    [`${prefix}--tree-parent-node`]: children\n  });\n  const toggleClasses = cx(`${prefix}--tree-parent-node__toggle-icon`, {\n    [`${prefix}--tree-parent-node__toggle-icon--expanded`]: expanded\n  });\n  function handleToggleClick(event) {\n    if (disabled) {\n      return;\n    }\n    onToggle?.(event, {\n      id,\n      isExpanded: !expanded,\n      label,\n      value\n    });\n    setExpanded(!expanded);\n  }\n  function handleClick(event) {\n    event.stopPropagation();\n    if (!disabled) {\n      onTreeSelect?.(event, {\n        id,\n        label,\n        value\n      });\n      onNodeSelect?.(event, {\n        id,\n        label,\n        value\n      });\n      rest?.onClick?.(event);\n    }\n  }\n  function handleKeyDown(event) {\n    if (disabled) {\n      return;\n    }\n    if (matches(event, [ArrowLeft, ArrowRight, Enter])) {\n      event.stopPropagation();\n    }\n    if (match(event, ArrowLeft)) {\n      const findParentTreeNode = node => {\n        if (node.classList.contains(`${prefix}--tree-parent-node`)) {\n          return node;\n        }\n        if (node.classList.contains(`${prefix}--tree`)) {\n          return null;\n        }\n        return findParentTreeNode(node.parentNode);\n      };\n      if (children && expanded) {\n        onToggle?.(event, {\n          id,\n          isExpanded: false,\n          label,\n          value\n        });\n        setExpanded(false);\n      } else {\n        /**\n         * When focus is on a leaf node or a closed parent node, move focus to\n         * its parent node (unless its depth is level 1)\n         */\n        findParentTreeNode(currentNode.current.parentNode)?.focus();\n      }\n    }\n    if (children && match(event, ArrowRight)) {\n      if (expanded) {\n        /**\n         * When focus is on an expanded parent node, move focus to the first\n         * child node\n         */\n        currentNode.current.lastChild.firstChild.focus();\n      } else {\n        onToggle?.(event, {\n          id,\n          isExpanded: true,\n          label,\n          value\n        });\n        setExpanded(true);\n      }\n    }\n    if (matches(event, [Enter, Space])) {\n      event.preventDefault();\n      handleClick(event);\n    }\n    rest?.onKeyDown?.(event);\n  }\n  function handleFocusEvent(event) {\n    if (event.type === 'blur') {\n      rest?.onBlur?.(event);\n    }\n    if (event.type === 'focus') {\n      rest?.onFocus?.(event);\n    }\n    onNodeFocusEvent?.(event);\n  }\n  useEffect(() => {\n    /**\n     * Negative margin shifts node to align with the left side boundary of the\n     * tree\n     * Dynamically calculate padding to recreate tree node indentation\n     * - parent nodes with icon have (depth + 1rem + depth * 0.5) left padding\n     * - parent nodes have (depth + 1rem) left padding\n     * - leaf nodes have (depth + 2.5rem) left padding without icons (because\n     *   of expand icon + spacing)\n     * - leaf nodes have (depth + 2rem + depth * 0.5) left padding with icons (because of\n     *   reduced spacing between the expand icon and the node icon + label)\n     */\n    const calcOffset = () => {\n      // parent node with icon\n      if (children && Icon) {\n        return depth + 1 + depth * 0.5;\n      }\n      // parent node without icon\n      if (children) {\n        return depth + 1;\n      }\n      // leaf node with icon\n      if (Icon) {\n        return depth + 2 + depth * 0.5;\n      }\n      // leaf node without icon\n      return depth + 2.5;\n    };\n    if (currentNodeLabel.current) {\n      currentNodeLabel.current.style.marginLeft = `-${calcOffset()}rem`;\n      currentNodeLabel.current.style.paddingLeft = `${calcOffset()}rem`;\n    }\n\n    // sync props and state\n    setExpanded(isExpanded);\n  }, [children, depth, Icon, isExpanded]);\n  const treeNodeProps = {\n    ...rest,\n    ['aria-current']: isActive || null,\n    ['aria-selected']: disabled ? null : isSelected,\n    ['aria-disabled']: disabled,\n    className: treeNodeClasses,\n    id,\n    onBlur: handleFocusEvent,\n    onClick: handleClick,\n    onFocus: handleFocusEvent,\n    onKeyDown: handleKeyDown,\n    ref: currentNode,\n    role: 'treeitem'\n  };\n  if (!children) {\n    return /*#__PURE__*/React__default.createElement(\"li\", treeNodeProps, /*#__PURE__*/React__default.createElement(\"div\", {\n      className: `${prefix}--tree-node__label`,\n      ref: currentNodeLabel\n    }, Icon && /*#__PURE__*/React__default.createElement(Icon, {\n      className: `${prefix}--tree-node__icon`\n    }), label));\n  }\n  return (\n    /*#__PURE__*/\n    // eslint-disable-next-line jsx-a11y/role-supports-aria-props\n    React__default.createElement(\"li\", _extends({}, treeNodeProps, {\n      \"aria-expanded\": !!expanded\n    }), /*#__PURE__*/React__default.createElement(\"div\", {\n      className: `${prefix}--tree-node__label`,\n      ref: currentNodeLabel\n    }, /*#__PURE__*/React__default.createElement(\"span\", {\n      className: `${prefix}--tree-parent-node__toggle`,\n      disabled: disabled,\n      onClick: handleToggleClick\n    }, /*#__PURE__*/React__default.createElement(CaretDown, {\n      className: toggleClasses\n    })), /*#__PURE__*/React__default.createElement(\"span\", {\n      className: `${prefix}--tree-node__label__details`\n    }, Icon && /*#__PURE__*/React__default.createElement(Icon, {\n      className: `${prefix}--tree-node__icon`\n    }), label)), expanded && /*#__PURE__*/React__default.createElement(\"ul\", {\n      role: \"group\",\n      className: `${prefix}--tree-node__children`\n    }, nodesWithProps))\n  );\n}\nTreeNode.propTypes = {\n  /**\n   * The value of the active node in the tree\n   */\n  active: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  /**\n   * Specify the children of the TreeNode\n   */\n  children: PropTypes.node,\n  /**\n   * Specify an optional className to be applied to the TreeNode\n   */\n  className: PropTypes.string,\n  /**\n   * TreeNode depth to determine spacing, automatically calculated by default\n   */\n  depth: PropTypes.number,\n  /**\n   * Specify if the TreeNode is disabled\n   */\n  disabled: PropTypes.bool,\n  /**\n   * Specify if the TreeNode is expanded (only applicable to parent nodes)\n   */\n  isExpanded: PropTypes.bool,\n  /**\n   * Rendered label for the TreeNode\n   */\n  label: PropTypes.node,\n  /**\n   * Callback function for when the node receives or loses focus\n   */\n  onNodeFocusEvent: PropTypes.func,\n  /**\n   * Callback function for when the node is selected\n   */\n  onSelect: PropTypes.func,\n  /**\n   * Callback function for when a parent node is expanded or collapsed\n   */\n  onToggle: PropTypes.func,\n  /**\n   * Callback function for when any node in the tree is selected\n   */\n  onTreeSelect: PropTypes.func,\n  /**\n   * Optional prop to allow each node to have an associated icon.\n   * Can be a React component class\n   */\n  renderIcon: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\n  /**\n   * Array containing all selected node IDs in the tree\n   */\n  selected: PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.string, PropTypes.number])),\n  /**\n   * Specify the value of the TreeNode\n   */\n  value: PropTypes.string\n};\n\nexport { TreeNode as default };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}