{"ast":null,"code":"import _defineProperty from \"/home/saymon/Backup/Portifolio/Hematology-App-with-Carbon-Design-System/frontend/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nimport _objectSpread from \"/home/saymon/Backup/Portifolio/Hematology-App-with-Carbon-Design-System/frontend/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _slicedToArray from \"/home/saymon/Backup/Portifolio/Hematology-App-with-Carbon-Design-System/frontend/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport _objectWithoutProperties from \"/home/saymon/Backup/Portifolio/Hematology-App-with-Carbon-Design-System/frontend/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js\";\nvar _Dropdown$propTypes;\nvar _excluded = [\"className\", \"disabled\", \"direction\", \"items\", \"label\", \"aria-label\", \"ariaLabel\", \"itemToString\", \"itemToElement\", \"renderSelectedItem\", \"type\", \"size\", \"onChange\", \"id\", \"titleText\", \"hideLabel\", \"helperText\", \"translateWithId\", \"light\", \"invalid\", \"invalidText\", \"warn\", \"warnText\", \"initialSelectedItem\", \"selectedItem\", \"downshiftProps\", \"readOnly\"];\n/**\n * Copyright IBM Corp. 2016, 2023\n *\n * This source code is licensed under the Apache-2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { extends as _extends } from '../../_virtual/_rollupPluginBabelHelpers.js';\nimport React__default, { useState, useContext, useRef } from 'react';\nimport { useSelect } from 'downshift';\nimport cx from 'classnames';\nimport PropTypes from 'prop-types';\nimport { WarningFilled, WarningAltFilled, Checkmark } from '@carbon/icons-react';\nimport ListBox from '../ListBox/index.js';\nimport mergeRefs from '../../tools/mergeRefs.js';\nimport deprecate from '../../prop-types/deprecate.js';\nimport { usePrefix } from '../../internal/usePrefix.js';\nimport '../FluidForm/FluidForm.js';\nimport { FormContext } from '../FluidForm/FormContext.js';\nimport setupGetInstanceId from '../../tools/setupGetInstanceId.js';\nimport { ListBoxSize, ListBoxType } from '../ListBox/ListBoxPropTypes.js';\nvar getInstanceId = setupGetInstanceId();\nvar _useSelect$stateChang = useSelect.stateChangeTypes,\n  MenuBlur = _useSelect$stateChang.MenuBlur,\n  MenuKeyDownArrowDown = _useSelect$stateChang.MenuKeyDownArrowDown,\n  MenuKeyDownArrowUp = _useSelect$stateChang.MenuKeyDownArrowUp,\n  MenuKeyDownEscape = _useSelect$stateChang.MenuKeyDownEscape,\n  ToggleButtonClick = _useSelect$stateChang.ToggleButtonClick;\nvar defaultItemToString = function defaultItemToString(item) {\n  if (typeof item === 'string') {\n    return item;\n  }\n  if (typeof item === 'number') {\n    return \"\".concat(item);\n  }\n  if (item !== null && typeof item === 'object' && 'label' in item && typeof item['label'] === 'string') {\n    return item['label'];\n  }\n  return '';\n};\nvar Dropdown = /*#__PURE__*/React__default.forwardRef(function (_ref, ref) {\n  var _cx, _cx2, _cx4;\n  var containerClassName = _ref.className,\n    disabled = _ref.disabled,\n    direction = _ref.direction,\n    items = _ref.items,\n    label = _ref.label,\n    ariaLabel = _ref['aria-label'],\n    deprecatedAriaLabel = _ref.ariaLabel,\n    _ref$itemToString = _ref.itemToString,\n    itemToString = _ref$itemToString === void 0 ? defaultItemToString : _ref$itemToString,\n    itemToElement = _ref.itemToElement,\n    renderSelectedItem = _ref.renderSelectedItem,\n    type = _ref.type,\n    size = _ref.size,\n    onChange = _ref.onChange,\n    id = _ref.id,\n    titleText = _ref.titleText,\n    hideLabel = _ref.hideLabel,\n    helperText = _ref.helperText,\n    translateWithId = _ref.translateWithId,\n    light = _ref.light,\n    invalid = _ref.invalid,\n    invalidText = _ref.invalidText,\n    warn = _ref.warn,\n    warnText = _ref.warnText,\n    initialSelectedItem = _ref.initialSelectedItem,\n    controlledSelectedItem = _ref.selectedItem,\n    downshiftProps = _ref.downshiftProps,\n    readOnly = _ref.readOnly,\n    other = _objectWithoutProperties(_ref, _excluded);\n  var prefix = usePrefix();\n  var _useState = useState(),\n    _useState2 = _slicedToArray(_useState, 2),\n    highlightedIndex = _useState2[0],\n    setHighlightedIndex = _useState2[1];\n  var _useContext = useContext(FormContext),\n    isFluid = _useContext.isFluid;\n  var selectProps = _objectSpread(_objectSpread({}, downshiftProps), {}, {\n    items: items,\n    itemToString: itemToString,\n    highlightedIndex: highlightedIndex,\n    initialSelectedItem: initialSelectedItem,\n    onSelectedItemChange: onSelectedItemChange,\n    onStateChange: onStateChange\n  });\n  var _useRef = useRef(getInstanceId()),\n    dropdownInstanceId = _useRef.current;\n  function onStateChange(changes) {\n    var type = changes.type;\n    switch (type) {\n      case MenuKeyDownArrowDown:\n      case MenuKeyDownArrowUp:\n        setHighlightedIndex(changes.highlightedIndex);\n        break;\n      case MenuBlur:\n      case MenuKeyDownEscape:\n        setHighlightedIndex(changes.highlightedIndex);\n        break;\n      case ToggleButtonClick:\n        setHighlightedIndex(changes.highlightedIndex);\n        break;\n    }\n  }\n\n  // only set selectedItem if the prop is defined. Setting if it is undefined\n  // will overwrite default selected items from useSelect\n  if (controlledSelectedItem !== undefined) {\n    selectProps.selectedItem = controlledSelectedItem;\n  }\n  var _useSelect = useSelect(selectProps),\n    isOpen = _useSelect.isOpen,\n    getToggleButtonProps = _useSelect.getToggleButtonProps,\n    getLabelProps = _useSelect.getLabelProps,\n    getMenuProps = _useSelect.getMenuProps,\n    getItemProps = _useSelect.getItemProps,\n    selectedItem = _useSelect.selectedItem;\n  var inline = type === 'inline';\n  var showWarning = !invalid && warn;\n  var _useState3 = useState(false),\n    _useState4 = _slicedToArray(_useState3, 2),\n    isFocused = _useState4[0],\n    setIsFocused = _useState4[1];\n  var className = cx(\"\".concat(prefix, \"--dropdown\"), (_cx = {}, _defineProperty(_cx, \"\".concat(prefix, \"--dropdown--invalid\"), invalid), _defineProperty(_cx, \"\".concat(prefix, \"--dropdown--warning\"), showWarning), _defineProperty(_cx, \"\".concat(prefix, \"--dropdown--open\"), isOpen), _defineProperty(_cx, \"\".concat(prefix, \"--dropdown--inline\"), inline), _defineProperty(_cx, \"\".concat(prefix, \"--dropdown--disabled\"), disabled), _defineProperty(_cx, \"\".concat(prefix, \"--dropdown--light\"), light), _defineProperty(_cx, \"\".concat(prefix, \"--dropdown--readonly\"), readOnly), _defineProperty(_cx, \"\".concat(prefix, \"--dropdown--\").concat(size), size), _defineProperty(_cx, \"\".concat(prefix, \"--list-box--up\"), direction === 'top'), _cx));\n  var titleClasses = cx(\"\".concat(prefix, \"--label\"), (_cx2 = {}, _defineProperty(_cx2, \"\".concat(prefix, \"--label--disabled\"), disabled), _defineProperty(_cx2, \"\".concat(prefix, \"--visually-hidden\"), hideLabel), _cx2));\n  var helperClasses = cx(\"\".concat(prefix, \"--form__helper-text\"), _defineProperty({}, \"\".concat(prefix, \"--form__helper-text--disabled\"), disabled));\n  var wrapperClasses = cx(\"\".concat(prefix, \"--dropdown__wrapper\"), \"\".concat(prefix, \"--list-box__wrapper\"), containerClassName, (_cx4 = {}, _defineProperty(_cx4, \"\".concat(prefix, \"--dropdown__wrapper--inline\"), inline), _defineProperty(_cx4, \"\".concat(prefix, \"--list-box__wrapper--inline\"), inline), _defineProperty(_cx4, \"\".concat(prefix, \"--dropdown__wrapper--inline--invalid\"), inline && invalid), _defineProperty(_cx4, \"\".concat(prefix, \"--list-box__wrapper--inline--invalid\"), inline && invalid), _defineProperty(_cx4, \"\".concat(prefix, \"--list-box__wrapper--fluid--invalid\"), isFluid && invalid), _defineProperty(_cx4, \"\".concat(prefix, \"--list-box__wrapper--fluid--focus\"), isFluid && isFocused && !isOpen), _cx4));\n  var helperId = !helperText ? undefined : \"dropdown-helper-text-\".concat(dropdownInstanceId);\n\n  // needs to be Capitalized for react to render it correctly\n  var ItemToElement = itemToElement;\n  var toggleButtonProps = getToggleButtonProps();\n  var helper = helperText && !isFluid ? /*#__PURE__*/React__default.createElement(\"div\", {\n    id: helperId,\n    className: helperClasses\n  }, helperText) : null;\n  function onSelectedItemChange(_ref2) {\n    var selectedItem = _ref2.selectedItem;\n    setIsFocused(false);\n    if (onChange) {\n      onChange({\n        selectedItem: selectedItem !== null && selectedItem !== void 0 ? selectedItem : null\n      });\n    }\n  }\n  var menuItemOptionRefs = useRef(items.map(function (_) {\n    return /*#__PURE__*/React__default.createRef();\n  }));\n  var handleFocus = function handleFocus(evt) {\n    setIsFocused(evt.type === 'focus' ? true : false);\n  };\n  var mergedRef = mergeRefs(toggleButtonProps.ref, ref);\n  var _useState5 = useState(),\n    _useState6 = _slicedToArray(_useState5, 2),\n    currTimer = _useState6[0],\n    setCurrTimer = _useState6[1];\n\n  // eslint-disable-next-line prefer-const\n  var _useState7 = useState(false),\n    _useState8 = _slicedToArray(_useState7, 2),\n    isTyping = _useState8[0],\n    setIsTyping = _useState8[1];\n  var readOnlyEventHandlers = readOnly ? {\n    onClick: function onClick(evt) {\n      // NOTE: does not prevent click\n      evt.preventDefault();\n      // focus on the element as per readonly input behavior\n      if (mergedRef.current !== undefined) {\n        mergedRef.current.focus();\n      }\n    },\n    onKeyDown: function onKeyDown(evt) {\n      var selectAccessKeys = ['ArrowDown', 'ArrowUp', ' ', 'Enter'];\n      // This prevents the select from opening for the above keys\n      if (selectAccessKeys.includes(evt.key)) {\n        evt.preventDefault();\n      }\n    }\n  } : {\n    onKeyDown: function onKeyDown(evt) {\n      if (evt.code !== 'Space' || !['ArrowDown', 'ArrowUp', ' ', 'Enter'].includes(evt.key)) {\n        setIsTyping(true);\n      }\n      if (isTyping && evt.code === 'Space' || !['ArrowDown', 'ArrowUp', ' ', 'Enter'].includes(evt.key)) {\n        if (evt.code === 'Space') {\n          evt.preventDefault();\n          return;\n        }\n        if (currTimer) {\n          clearTimeout(currTimer);\n        }\n        setCurrTimer(setTimeout(function () {\n          setIsTyping(false);\n        }, 3000));\n      }\n      toggleButtonProps.onKeyDown(evt);\n    }\n  };\n  var menuProps = getMenuProps();\n  return /*#__PURE__*/React__default.createElement(\"div\", _extends({\n    className: wrapperClasses\n  }, other), titleText && /*#__PURE__*/React__default.createElement(\"label\", _extends({\n    className: titleClasses\n  }, getLabelProps()), titleText), /*#__PURE__*/React__default.createElement(ListBox, {\n    onFocus: handleFocus,\n    onBlur: handleFocus,\n    \"aria-label\": deprecatedAriaLabel || ariaLabel,\n    size: size,\n    className: className,\n    invalid: invalid,\n    invalidText: invalidText,\n    warn: warn,\n    warnText: warnText,\n    light: light,\n    isOpen: isOpen,\n    id: id\n  }, invalid && /*#__PURE__*/React__default.createElement(WarningFilled, {\n    className: \"\".concat(prefix, \"--list-box__invalid-icon\")\n  }), showWarning && /*#__PURE__*/React__default.createElement(WarningAltFilled, {\n    className: \"\".concat(prefix, \"--list-box__invalid-icon \").concat(prefix, \"--list-box__invalid-icon--warning\")\n  }), /*#__PURE__*/React__default.createElement(\"button\", _extends({\n    type: \"button\"\n    // aria-expanded is already being passed through {...toggleButtonProps}\n    ,\n\n    role: \"combobox\" // eslint-disable-line jsx-a11y/role-has-required-aria-props\n    ,\n\n    \"aria-owns\": getMenuProps().id,\n    \"aria-controls\": getMenuProps().id,\n    className: \"\".concat(prefix, \"--list-box__field\"),\n    disabled: disabled,\n    \"aria-disabled\": readOnly ? true : undefined // aria-disabled to remain focusable\n    ,\n\n    \"aria-describedby\": !inline && !invalid && !warn && helper ? helperId : undefined,\n    title: selectedItem && itemToString !== undefined ? itemToString(selectedItem) : label\n  }, toggleButtonProps, readOnlyEventHandlers, {\n    ref: mergedRef\n  }), /*#__PURE__*/React__default.createElement(\"span\", {\n    className: \"\".concat(prefix, \"--list-box__label\")\n  }, selectedItem ? renderSelectedItem ? renderSelectedItem(selectedItem) : itemToString(selectedItem) : label), /*#__PURE__*/React__default.createElement(ListBox.MenuIcon, {\n    isOpen: isOpen,\n    translateWithId: translateWithId\n  })), /*#__PURE__*/React__default.createElement(ListBox.Menu, menuProps, isOpen && items.map(function (item, index) {\n    var isObject = item !== null && typeof item === 'object';\n    var disabled = isObject && 'disabled' in item && item.disabled === true;\n    var itemProps = getItemProps({\n      item: item,\n      index: index,\n      disabled: disabled\n    });\n    var title = isObject && 'text' in item && itemToElement ? item.text : itemToString(item);\n    return /*#__PURE__*/React__default.createElement(ListBox.MenuItem, _extends({\n      key: itemProps.id,\n      isActive: selectedItem === item,\n      isHighlighted: highlightedIndex === index,\n      title: title,\n      ref: {\n        menuItemOptionRef: menuItemOptionRefs.current[index]\n      }\n    }, itemProps), typeof item === 'object' && ItemToElement !== undefined && ItemToElement !== null ? /*#__PURE__*/React__default.createElement(ItemToElement, _extends({\n      key: itemProps.id\n    }, item)) : itemToString(item), selectedItem === item && /*#__PURE__*/React__default.createElement(Checkmark, {\n      className: \"\".concat(prefix, \"--list-box__menu-item__selected-icon\")\n    }));\n  }))), !inline && !invalid && !warn && helper);\n});\nDropdown.displayName = 'Dropdown';\nDropdown.propTypes = (_Dropdown$propTypes = {}, _defineProperty(_Dropdown$propTypes, 'aria-label', PropTypes.string), _defineProperty(_Dropdown$propTypes, \"ariaLabel\", deprecate(PropTypes.string, 'This prop syntax has been deprecated. Please use the new `aria-label`.')), _defineProperty(_Dropdown$propTypes, \"className\", PropTypes.string), _defineProperty(_Dropdown$propTypes, \"direction\", PropTypes.oneOf(['top', 'bottom'])), _defineProperty(_Dropdown$propTypes, \"disabled\", PropTypes.bool), _defineProperty(_Dropdown$propTypes, \"downshiftProps\", PropTypes.object), _defineProperty(_Dropdown$propTypes, \"helperText\", PropTypes.node), _defineProperty(_Dropdown$propTypes, \"hideLabel\", PropTypes.bool), _defineProperty(_Dropdown$propTypes, \"id\", PropTypes.string.isRequired), _defineProperty(_Dropdown$propTypes, \"initialSelectedItem\", PropTypes.oneOfType([PropTypes.object, PropTypes.string, PropTypes.number])), _defineProperty(_Dropdown$propTypes, \"invalid\", PropTypes.bool), _defineProperty(_Dropdown$propTypes, \"invalidText\", PropTypes.node), _defineProperty(_Dropdown$propTypes, \"itemToElement\", PropTypes.func), _defineProperty(_Dropdown$propTypes, \"itemToString\", PropTypes.func), _defineProperty(_Dropdown$propTypes, \"items\", PropTypes.array.isRequired), _defineProperty(_Dropdown$propTypes, \"label\", PropTypes.node.isRequired), _defineProperty(_Dropdown$propTypes, \"light\", deprecate(PropTypes.bool, 'The `light` prop for `Dropdown` has ' + 'been deprecated in favor of the new `Layer` component. It will be removed in the next major release.')), _defineProperty(_Dropdown$propTypes, \"onChange\", PropTypes.func), _defineProperty(_Dropdown$propTypes, \"readOnly\", PropTypes.bool), _defineProperty(_Dropdown$propTypes, \"renderSelectedItem\", PropTypes.func), _defineProperty(_Dropdown$propTypes, \"selectedItem\", PropTypes.oneOfType([PropTypes.object, PropTypes.string, PropTypes.number])), _defineProperty(_Dropdown$propTypes, \"size\", ListBoxSize), _defineProperty(_Dropdown$propTypes, \"titleText\", PropTypes.node.isRequired), _defineProperty(_Dropdown$propTypes, \"translateWithId\", PropTypes.func), _defineProperty(_Dropdown$propTypes, \"type\", ListBoxType), _defineProperty(_Dropdown$propTypes, \"warn\", PropTypes.bool), _defineProperty(_Dropdown$propTypes, \"warnText\", PropTypes.node), _Dropdown$propTypes);\nDropdown.defaultProps = {\n  disabled: false,\n  type: 'default',\n  itemToString: defaultItemToString,\n  itemToElement: null,\n  titleText: '',\n  helperText: '',\n  direction: 'bottom'\n};\nexport { Dropdown as default };","map":{"version":3,"names":["extends","_extends","React__default","useState","useContext","useRef","useSelect","cx","PropTypes","WarningFilled","WarningAltFilled","Checkmark","ListBox","mergeRefs","deprecate","usePrefix","FormContext","setupGetInstanceId","ListBoxSize","ListBoxType","getInstanceId","_useSelect$stateChang","stateChangeTypes","MenuBlur","MenuKeyDownArrowDown","MenuKeyDownArrowUp","MenuKeyDownEscape","ToggleButtonClick","defaultItemToString","item","concat","Dropdown","forwardRef","_ref","ref","_cx","_cx2","_cx4","containerClassName","className","disabled","direction","items","label","ariaLabel","deprecatedAriaLabel","_ref$itemToString","itemToString","itemToElement","renderSelectedItem","type","size","onChange","id","titleText","hideLabel","helperText","translateWithId","light","invalid","invalidText","warn","warnText","initialSelectedItem","controlledSelectedItem","selectedItem","downshiftProps","readOnly","other","_objectWithoutProperties","_excluded","prefix","_useState","_useState2","_slicedToArray","highlightedIndex","setHighlightedIndex","_useContext","isFluid","selectProps","_objectSpread","onSelectedItemChange","onStateChange","_useRef","dropdownInstanceId","current","changes","undefined","_useSelect","isOpen","getToggleButtonProps","getLabelProps","getMenuProps","getItemProps","inline","showWarning","_useState3","_useState4","isFocused","setIsFocused","_defineProperty","titleClasses","helperClasses","wrapperClasses","helperId","ItemToElement","toggleButtonProps","helper","createElement","_ref2","menuItemOptionRefs","map","_","createRef","handleFocus","evt","mergedRef","_useState5","_useState6","currTimer","setCurrTimer","_useState7","_useState8","isTyping","setIsTyping","readOnlyEventHandlers","onClick","preventDefault","focus","onKeyDown","selectAccessKeys","includes","key","code","clearTimeout","setTimeout","menuProps","onFocus","onBlur","role","title","MenuIcon","Menu","index","isObject","itemProps","text","MenuItem","isActive","isHighlighted","menuItemOptionRef","displayName","propTypes","_Dropdown$propTypes","string","oneOf","bool","object","node","isRequired","oneOfType","number","func","array","defaultProps","default"],"sources":["/home/saymon/Backup/Portifolio/Hematology-App-with-Carbon-Design-System/frontend/node_modules/@carbon/react/es/components/Dropdown/Dropdown.js"],"sourcesContent":["/**\n * Copyright IBM Corp. 2016, 2023\n *\n * This source code is licensed under the Apache-2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { extends as _extends } from '../../_virtual/_rollupPluginBabelHelpers.js';\nimport React__default, { useState, useContext, useRef } from 'react';\nimport { useSelect } from 'downshift';\nimport cx from 'classnames';\nimport PropTypes from 'prop-types';\nimport { WarningFilled, WarningAltFilled, Checkmark } from '@carbon/icons-react';\nimport ListBox from '../ListBox/index.js';\nimport mergeRefs from '../../tools/mergeRefs.js';\nimport deprecate from '../../prop-types/deprecate.js';\nimport { usePrefix } from '../../internal/usePrefix.js';\nimport '../FluidForm/FluidForm.js';\nimport { FormContext } from '../FluidForm/FormContext.js';\nimport setupGetInstanceId from '../../tools/setupGetInstanceId.js';\nimport { ListBoxSize, ListBoxType } from '../ListBox/ListBoxPropTypes.js';\n\nconst getInstanceId = setupGetInstanceId();\nconst {\n  MenuBlur,\n  MenuKeyDownArrowDown,\n  MenuKeyDownArrowUp,\n  MenuKeyDownEscape,\n  ToggleButtonClick\n} = useSelect.stateChangeTypes;\nconst defaultItemToString = item => {\n  if (typeof item === 'string') {\n    return item;\n  }\n  if (typeof item === 'number') {\n    return `${item}`;\n  }\n  if (item !== null && typeof item === 'object' && 'label' in item && typeof item['label'] === 'string') {\n    return item['label'];\n  }\n  return '';\n};\nconst Dropdown = /*#__PURE__*/React__default.forwardRef((_ref, ref) => {\n  let {\n    className: containerClassName,\n    disabled,\n    direction,\n    items,\n    label,\n    ['aria-label']: ariaLabel,\n    ariaLabel: deprecatedAriaLabel,\n    itemToString = defaultItemToString,\n    itemToElement,\n    renderSelectedItem,\n    type,\n    size,\n    onChange,\n    id,\n    titleText,\n    hideLabel,\n    helperText,\n    translateWithId,\n    light,\n    invalid,\n    invalidText,\n    warn,\n    warnText,\n    initialSelectedItem,\n    selectedItem: controlledSelectedItem,\n    downshiftProps,\n    readOnly,\n    ...other\n  } = _ref;\n  const prefix = usePrefix();\n  const [highlightedIndex, setHighlightedIndex] = useState();\n  const {\n    isFluid\n  } = useContext(FormContext);\n  const selectProps = {\n    ...downshiftProps,\n    items,\n    itemToString,\n    highlightedIndex,\n    initialSelectedItem,\n    onSelectedItemChange,\n    onStateChange\n  };\n  const {\n    current: dropdownInstanceId\n  } = useRef(getInstanceId());\n  function onStateChange(changes) {\n    const {\n      type\n    } = changes;\n    switch (type) {\n      case MenuKeyDownArrowDown:\n      case MenuKeyDownArrowUp:\n        setHighlightedIndex(changes.highlightedIndex);\n        break;\n      case MenuBlur:\n      case MenuKeyDownEscape:\n        setHighlightedIndex(changes.highlightedIndex);\n        break;\n      case ToggleButtonClick:\n        setHighlightedIndex(changes.highlightedIndex);\n        break;\n    }\n  }\n\n  // only set selectedItem if the prop is defined. Setting if it is undefined\n  // will overwrite default selected items from useSelect\n  if (controlledSelectedItem !== undefined) {\n    selectProps.selectedItem = controlledSelectedItem;\n  }\n  const {\n    isOpen,\n    getToggleButtonProps,\n    getLabelProps,\n    getMenuProps,\n    getItemProps,\n    selectedItem\n  } = useSelect(selectProps);\n  const inline = type === 'inline';\n  const showWarning = !invalid && warn;\n  const [isFocused, setIsFocused] = useState(false);\n  const className = cx(`${prefix}--dropdown`, {\n    [`${prefix}--dropdown--invalid`]: invalid,\n    [`${prefix}--dropdown--warning`]: showWarning,\n    [`${prefix}--dropdown--open`]: isOpen,\n    [`${prefix}--dropdown--inline`]: inline,\n    [`${prefix}--dropdown--disabled`]: disabled,\n    [`${prefix}--dropdown--light`]: light,\n    [`${prefix}--dropdown--readonly`]: readOnly,\n    [`${prefix}--dropdown--${size}`]: size,\n    [`${prefix}--list-box--up`]: direction === 'top'\n  });\n  const titleClasses = cx(`${prefix}--label`, {\n    [`${prefix}--label--disabled`]: disabled,\n    [`${prefix}--visually-hidden`]: hideLabel\n  });\n  const helperClasses = cx(`${prefix}--form__helper-text`, {\n    [`${prefix}--form__helper-text--disabled`]: disabled\n  });\n  const wrapperClasses = cx(`${prefix}--dropdown__wrapper`, `${prefix}--list-box__wrapper`, containerClassName, {\n    [`${prefix}--dropdown__wrapper--inline`]: inline,\n    [`${prefix}--list-box__wrapper--inline`]: inline,\n    [`${prefix}--dropdown__wrapper--inline--invalid`]: inline && invalid,\n    [`${prefix}--list-box__wrapper--inline--invalid`]: inline && invalid,\n    [`${prefix}--list-box__wrapper--fluid--invalid`]: isFluid && invalid,\n    [`${prefix}--list-box__wrapper--fluid--focus`]: isFluid && isFocused && !isOpen\n  });\n  const helperId = !helperText ? undefined : `dropdown-helper-text-${dropdownInstanceId}`;\n\n  // needs to be Capitalized for react to render it correctly\n  const ItemToElement = itemToElement;\n  const toggleButtonProps = getToggleButtonProps();\n  const helper = helperText && !isFluid ? /*#__PURE__*/React__default.createElement(\"div\", {\n    id: helperId,\n    className: helperClasses\n  }, helperText) : null;\n  function onSelectedItemChange(_ref2) {\n    let {\n      selectedItem\n    } = _ref2;\n    setIsFocused(false);\n    if (onChange) {\n      onChange({\n        selectedItem: selectedItem ?? null\n      });\n    }\n  }\n  const menuItemOptionRefs = useRef(items.map(_ => /*#__PURE__*/React__default.createRef()));\n  const handleFocus = evt => {\n    setIsFocused(evt.type === 'focus' ? true : false);\n  };\n  const mergedRef = mergeRefs(toggleButtonProps.ref, ref);\n  const [currTimer, setCurrTimer] = useState();\n\n  // eslint-disable-next-line prefer-const\n  let [isTyping, setIsTyping] = useState(false);\n  const readOnlyEventHandlers = readOnly ? {\n    onClick: evt => {\n      // NOTE: does not prevent click\n      evt.preventDefault();\n      // focus on the element as per readonly input behavior\n      if (mergedRef.current !== undefined) {\n        mergedRef.current.focus();\n      }\n    },\n    onKeyDown: evt => {\n      const selectAccessKeys = ['ArrowDown', 'ArrowUp', ' ', 'Enter'];\n      // This prevents the select from opening for the above keys\n      if (selectAccessKeys.includes(evt.key)) {\n        evt.preventDefault();\n      }\n    }\n  } : {\n    onKeyDown: evt => {\n      if (evt.code !== 'Space' || !['ArrowDown', 'ArrowUp', ' ', 'Enter'].includes(evt.key)) {\n        setIsTyping(true);\n      }\n      if (isTyping && evt.code === 'Space' || !['ArrowDown', 'ArrowUp', ' ', 'Enter'].includes(evt.key)) {\n        if (evt.code === 'Space') {\n          evt.preventDefault();\n          return;\n        }\n        if (currTimer) {\n          clearTimeout(currTimer);\n        }\n        setCurrTimer(setTimeout(() => {\n          setIsTyping(false);\n        }, 3000));\n      }\n      toggleButtonProps.onKeyDown(evt);\n    }\n  };\n  const menuProps = getMenuProps();\n  return /*#__PURE__*/React__default.createElement(\"div\", _extends({\n    className: wrapperClasses\n  }, other), titleText && /*#__PURE__*/React__default.createElement(\"label\", _extends({\n    className: titleClasses\n  }, getLabelProps()), titleText), /*#__PURE__*/React__default.createElement(ListBox, {\n    onFocus: handleFocus,\n    onBlur: handleFocus,\n    \"aria-label\": deprecatedAriaLabel || ariaLabel,\n    size: size,\n    className: className,\n    invalid: invalid,\n    invalidText: invalidText,\n    warn: warn,\n    warnText: warnText,\n    light: light,\n    isOpen: isOpen,\n    id: id\n  }, invalid && /*#__PURE__*/React__default.createElement(WarningFilled, {\n    className: `${prefix}--list-box__invalid-icon`\n  }), showWarning && /*#__PURE__*/React__default.createElement(WarningAltFilled, {\n    className: `${prefix}--list-box__invalid-icon ${prefix}--list-box__invalid-icon--warning`\n  }), /*#__PURE__*/React__default.createElement(\"button\", _extends({\n    type: \"button\"\n    // aria-expanded is already being passed through {...toggleButtonProps}\n    ,\n    role: \"combobox\" // eslint-disable-line jsx-a11y/role-has-required-aria-props\n    ,\n    \"aria-owns\": getMenuProps().id,\n    \"aria-controls\": getMenuProps().id,\n    className: `${prefix}--list-box__field`,\n    disabled: disabled,\n    \"aria-disabled\": readOnly ? true : undefined // aria-disabled to remain focusable\n    ,\n    \"aria-describedby\": !inline && !invalid && !warn && helper ? helperId : undefined,\n    title: selectedItem && itemToString !== undefined ? itemToString(selectedItem) : label\n  }, toggleButtonProps, readOnlyEventHandlers, {\n    ref: mergedRef\n  }), /*#__PURE__*/React__default.createElement(\"span\", {\n    className: `${prefix}--list-box__label`\n  }, selectedItem ? renderSelectedItem ? renderSelectedItem(selectedItem) : itemToString(selectedItem) : label), /*#__PURE__*/React__default.createElement(ListBox.MenuIcon, {\n    isOpen: isOpen,\n    translateWithId: translateWithId\n  })), /*#__PURE__*/React__default.createElement(ListBox.Menu, menuProps, isOpen && items.map((item, index) => {\n    const isObject = item !== null && typeof item === 'object';\n    const disabled = isObject && 'disabled' in item && item.disabled === true;\n    const itemProps = getItemProps({\n      item,\n      index,\n      disabled\n    });\n    const title = isObject && 'text' in item && itemToElement ? item.text : itemToString(item);\n    return /*#__PURE__*/React__default.createElement(ListBox.MenuItem, _extends({\n      key: itemProps.id,\n      isActive: selectedItem === item,\n      isHighlighted: highlightedIndex === index,\n      title: title,\n      ref: {\n        menuItemOptionRef: menuItemOptionRefs.current[index]\n      }\n    }, itemProps), typeof item === 'object' && ItemToElement !== undefined && ItemToElement !== null ? /*#__PURE__*/React__default.createElement(ItemToElement, _extends({\n      key: itemProps.id\n    }, item)) : itemToString(item), selectedItem === item && /*#__PURE__*/React__default.createElement(Checkmark, {\n      className: `${prefix}--list-box__menu-item__selected-icon`\n    }));\n  }))), !inline && !invalid && !warn && helper);\n});\nDropdown.displayName = 'Dropdown';\nDropdown.propTypes = {\n  /**\n   * 'aria-label' of the ListBox component.\n   * Specify a label to be read by screen readers on the container node\n   */\n  ['aria-label']: PropTypes.string,\n  /**\n   * Deprecated, please use `aria-label` instead.\n   * Specify a label to be read by screen readers on the container note.\n   */\n  ariaLabel: deprecate(PropTypes.string, 'This prop syntax has been deprecated. Please use the new `aria-label`.'),\n  /**\n   * Provide a custom className to be applied on the bx--dropdown node\n   */\n  className: PropTypes.string,\n  /**\n   * Specify the direction of the dropdown. Can be either top or bottom.\n   */\n  direction: PropTypes.oneOf(['top', 'bottom']),\n  /**\n   * Disable the control\n   */\n  disabled: PropTypes.bool,\n  /**\n   * Additional props passed to Downshift\n   */\n  downshiftProps: PropTypes.object,\n  /**\n   * Provide helper text that is used alongside the control label for\n   * additional help\n   */\n  helperText: PropTypes.node,\n  /**\n   * Specify whether the title text should be hidden or not\n   */\n  hideLabel: PropTypes.bool,\n  /**\n   * Specify a custom `id`\n   */\n  id: PropTypes.string.isRequired,\n  /**\n   * Allow users to pass in an arbitrary item or a string (in case their items are an array of strings)\n   * from their collection that are pre-selected\n   */\n  initialSelectedItem: PropTypes.oneOfType([PropTypes.object, PropTypes.string, PropTypes.number]),\n  /**\n   * Specify if the currently selected value is invalid.\n   */\n  invalid: PropTypes.bool,\n  /**\n   * Message which is displayed if the value is invalid.\n   */\n  invalidText: PropTypes.node,\n  /**\n   * Function to render items as custom components instead of strings.\n   * Defaults to null and is overridden by a getter\n   */\n  itemToElement: PropTypes.func,\n  /**\n   * Helper function passed to downshift that allows the library to render a\n   * given item to a string label. By default, it extracts the `label` field\n   * from a given item to serve as the item label in the list.\n   */\n  itemToString: PropTypes.func,\n  /**\n   * We try to stay as generic as possible here to allow individuals to pass\n   * in a collection of whatever kind of data structure they prefer\n   */\n  items: PropTypes.array.isRequired,\n  /**\n   * Generic `label` that will be used as the textual representation of what\n   * this field is for\n   */\n  label: PropTypes.node.isRequired,\n  /**\n   * `true` to use the light version.\n   */\n  light: deprecate(PropTypes.bool, 'The `light` prop for `Dropdown` has ' + 'been deprecated in favor of the new `Layer` component. It will be removed in the next major release.'),\n  /**\n   * `onChange` is a utility for this controlled component to communicate to a\n   * consuming component what kind of internal state changes are occurring.\n   */\n  onChange: PropTypes.func,\n  /**\n   * Whether or not the Dropdown is readonly\n   */\n  readOnly: PropTypes.bool,\n  /**\n   * An optional callback to render the currently selected item as a react element instead of only\n   * as a string.\n   */\n  renderSelectedItem: PropTypes.func,\n  /**\n   * In the case you want to control the dropdown selection entirely.\n   */\n  selectedItem: PropTypes.oneOfType([PropTypes.object, PropTypes.string, PropTypes.number]),\n  /**\n   * Specify the size of the ListBox. Currently supports either `sm`, `md` or `lg` as an option.\n   */\n  size: ListBoxSize,\n  /**\n   * Provide the title text that will be read by a screen reader when\n   * visiting this control\n   */\n  titleText: PropTypes.node.isRequired,\n  /**\n   * Callback function for translating ListBoxMenuIcon SVG title\n   */\n  translateWithId: PropTypes.func,\n  /**\n   * The dropdown type, `default` or `inline`\n   */\n  type: ListBoxType,\n  /**\n   * Specify whether the control is currently in warning state\n   */\n  warn: PropTypes.bool,\n  /**\n   * Provide the text that is displayed when the control is in warning state\n   */\n  warnText: PropTypes.node\n};\nDropdown.defaultProps = {\n  disabled: false,\n  type: 'default',\n  itemToString: defaultItemToString,\n  itemToElement: null,\n  titleText: '',\n  helperText: '',\n  direction: 'bottom'\n};\n\nexport { Dropdown as default };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}