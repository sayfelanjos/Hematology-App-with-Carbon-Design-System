{"ast":null,"code":"/**\n * Copyright IBM Corp. 2016, 2023\n *\n * This source code is licensed under the Apache-2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { extends as _extends } from '../../_virtual/_rollupPluginBabelHelpers.js';\nimport cx from 'classnames';\nimport PropTypes from 'prop-types';\nimport React__default from 'react';\nimport { usePrefix } from '../../internal/usePrefix.js';\nconst Link = /*#__PURE__*/React__default.forwardRef(function Link(_ref, ref) {\n  let {\n    children,\n    className: customClassName,\n    href,\n    disabled = false,\n    inline = false,\n    visited = false,\n    renderIcon: Icon,\n    size,\n    target,\n    ...rest\n  } = _ref;\n  const prefix = usePrefix();\n  const className = cx(`${prefix}--link`, customClassName, {\n    [`${prefix}--link--disabled`]: disabled,\n    [`${prefix}--link--inline`]: inline,\n    [`${prefix}--link--visited`]: visited,\n    [`${prefix}--link--${size}`]: size\n  });\n  const rel = target === '_blank' ? 'noopener' : undefined;\n  const linkProps = {\n    className,\n    rel,\n    target\n  };\n\n  // Reference for disabled links:\n  // https://www.scottohara.me/blog/2021/05/28/disabled-links.html\n  if (!disabled) {\n    linkProps.href = href;\n  } else {\n    linkProps.role = 'link';\n    linkProps['aria-disabled'] = true;\n  }\n  return /*#__PURE__*/React__default.createElement(\"a\", _extends({\n    ref: ref\n  }, linkProps, rest), children, !inline && Icon && /*#__PURE__*/React__default.createElement(\"div\", {\n    className: `${prefix}--link__icon`\n  }, /*#__PURE__*/React__default.createElement(Icon, null)));\n});\nLink.displayName = 'Link';\nLink.propTypes = {\n  /**\n   * Provide the content for the Link\n   */\n  children: PropTypes.node,\n  /**\n   * Provide a custom className to be applied to the containing `<a>` node\n   */\n  className: PropTypes.string,\n  /**\n   * Specify if the control should be disabled, or not\n   */\n  disabled: PropTypes.bool,\n  /**\n   * Provide the `href` attribute for the `<a>` node\n   */\n  href: PropTypes.string,\n  /**\n   * Specify whether you want the inline version of this control\n   */\n  inline: PropTypes.bool,\n  /**\n   * Optional prop to render an icon next to the link.\n   * Can be a React component class\n   */\n  // @ts-expect-error - PropTypes are unable to cover this case.\n  renderIcon: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\n  /**\n   * Specify the size of the Link. Currently supports either `sm`, 'md' (default) or 'lg` as an option.\n   */\n  size: PropTypes.oneOf(['sm', 'md', 'lg']),\n  /**\n   * Specify whether you want the link to receive visited styles after the link has been clicked\n   */\n  visited: PropTypes.bool\n};\nexport { Link as default };","map":{"version":3,"names":["extends","_extends","cx","PropTypes","React__default","usePrefix","Link","forwardRef","_ref","ref","children","className","customClassName","href","disabled","inline","visited","renderIcon","Icon","size","target","rest","prefix","rel","undefined","linkProps","role","createElement","displayName","propTypes","node","string","bool","oneOfType","func","object","oneOf","default"],"sources":["/home/saymon/Backup/Portifolio/Hematology-App-with-Carbon-Design-System/frontend/node_modules/@carbon/react/es/components/Link/Link.js"],"sourcesContent":["/**\n * Copyright IBM Corp. 2016, 2023\n *\n * This source code is licensed under the Apache-2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { extends as _extends } from '../../_virtual/_rollupPluginBabelHelpers.js';\nimport cx from 'classnames';\nimport PropTypes from 'prop-types';\nimport React__default from 'react';\nimport { usePrefix } from '../../internal/usePrefix.js';\n\nconst Link = /*#__PURE__*/React__default.forwardRef(function Link(_ref, ref) {\n  let {\n    children,\n    className: customClassName,\n    href,\n    disabled = false,\n    inline = false,\n    visited = false,\n    renderIcon: Icon,\n    size,\n    target,\n    ...rest\n  } = _ref;\n  const prefix = usePrefix();\n  const className = cx(`${prefix}--link`, customClassName, {\n    [`${prefix}--link--disabled`]: disabled,\n    [`${prefix}--link--inline`]: inline,\n    [`${prefix}--link--visited`]: visited,\n    [`${prefix}--link--${size}`]: size\n  });\n  const rel = target === '_blank' ? 'noopener' : undefined;\n  const linkProps = {\n    className,\n    rel,\n    target\n  };\n\n  // Reference for disabled links:\n  // https://www.scottohara.me/blog/2021/05/28/disabled-links.html\n  if (!disabled) {\n    linkProps.href = href;\n  } else {\n    linkProps.role = 'link';\n    linkProps['aria-disabled'] = true;\n  }\n  return /*#__PURE__*/React__default.createElement(\"a\", _extends({\n    ref: ref\n  }, linkProps, rest), children, !inline && Icon && /*#__PURE__*/React__default.createElement(\"div\", {\n    className: `${prefix}--link__icon`\n  }, /*#__PURE__*/React__default.createElement(Icon, null)));\n});\nLink.displayName = 'Link';\nLink.propTypes = {\n  /**\n   * Provide the content for the Link\n   */\n  children: PropTypes.node,\n  /**\n   * Provide a custom className to be applied to the containing `<a>` node\n   */\n  className: PropTypes.string,\n  /**\n   * Specify if the control should be disabled, or not\n   */\n  disabled: PropTypes.bool,\n  /**\n   * Provide the `href` attribute for the `<a>` node\n   */\n  href: PropTypes.string,\n  /**\n   * Specify whether you want the inline version of this control\n   */\n  inline: PropTypes.bool,\n  /**\n   * Optional prop to render an icon next to the link.\n   * Can be a React component class\n   */\n  // @ts-expect-error - PropTypes are unable to cover this case.\n  renderIcon: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\n  /**\n   * Specify the size of the Link. Currently supports either `sm`, 'md' (default) or 'lg` as an option.\n   */\n  size: PropTypes.oneOf(['sm', 'md', 'lg']),\n  /**\n   * Specify whether you want the link to receive visited styles after the link has been clicked\n   */\n  visited: PropTypes.bool\n};\n\nexport { Link as default };\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;;AAEA,SAASA,OAAO,IAAIC,QAAQ,QAAQ,6CAA6C;AACjF,OAAOC,EAAE,MAAM,YAAY;AAC3B,OAAOC,SAAS,MAAM,YAAY;AAClC,OAAOC,cAAc,MAAM,OAAO;AAClC,SAASC,SAAS,QAAQ,6BAA6B;AAEvD,MAAMC,IAAI,GAAG,aAAaF,cAAc,CAACG,UAAU,CAAC,SAASD,IAAIA,CAACE,IAAI,EAAEC,GAAG,EAAE;EAC3E,IAAI;IACFC,QAAQ;IACRC,SAAS,EAAEC,eAAe;IAC1BC,IAAI;IACJC,QAAQ,GAAG,KAAK;IAChBC,MAAM,GAAG,KAAK;IACdC,OAAO,GAAG,KAAK;IACfC,UAAU,EAAEC,IAAI;IAChBC,IAAI;IACJC,MAAM;IACN,GAAGC;EACL,CAAC,GAAGb,IAAI;EACR,MAAMc,MAAM,GAAGjB,SAAS,CAAC,CAAC;EAC1B,MAAMM,SAAS,GAAGT,EAAE,CAAE,GAAEoB,MAAO,QAAO,EAAEV,eAAe,EAAE;IACvD,CAAE,GAAEU,MAAO,kBAAiB,GAAGR,QAAQ;IACvC,CAAE,GAAEQ,MAAO,gBAAe,GAAGP,MAAM;IACnC,CAAE,GAAEO,MAAO,iBAAgB,GAAGN,OAAO;IACrC,CAAE,GAAEM,MAAO,WAAUH,IAAK,EAAC,GAAGA;EAChC,CAAC,CAAC;EACF,MAAMI,GAAG,GAAGH,MAAM,KAAK,QAAQ,GAAG,UAAU,GAAGI,SAAS;EACxD,MAAMC,SAAS,GAAG;IAChBd,SAAS;IACTY,GAAG;IACHH;EACF,CAAC;;EAED;EACA;EACA,IAAI,CAACN,QAAQ,EAAE;IACbW,SAAS,CAACZ,IAAI,GAAGA,IAAI;EACvB,CAAC,MAAM;IACLY,SAAS,CAACC,IAAI,GAAG,MAAM;IACvBD,SAAS,CAAC,eAAe,CAAC,GAAG,IAAI;EACnC;EACA,OAAO,aAAarB,cAAc,CAACuB,aAAa,CAAC,GAAG,EAAE1B,QAAQ,CAAC;IAC7DQ,GAAG,EAAEA;EACP,CAAC,EAAEgB,SAAS,EAAEJ,IAAI,CAAC,EAAEX,QAAQ,EAAE,CAACK,MAAM,IAAIG,IAAI,IAAI,aAAad,cAAc,CAACuB,aAAa,CAAC,KAAK,EAAE;IACjGhB,SAAS,EAAG,GAAEW,MAAO;EACvB,CAAC,EAAE,aAAalB,cAAc,CAACuB,aAAa,CAACT,IAAI,EAAE,IAAI,CAAC,CAAC,CAAC;AAC5D,CAAC,CAAC;AACFZ,IAAI,CAACsB,WAAW,GAAG,MAAM;AACzBtB,IAAI,CAACuB,SAAS,GAAG;EACf;AACF;AACA;EACEnB,QAAQ,EAAEP,SAAS,CAAC2B,IAAI;EACxB;AACF;AACA;EACEnB,SAAS,EAAER,SAAS,CAAC4B,MAAM;EAC3B;AACF;AACA;EACEjB,QAAQ,EAAEX,SAAS,CAAC6B,IAAI;EACxB;AACF;AACA;EACEnB,IAAI,EAAEV,SAAS,CAAC4B,MAAM;EACtB;AACF;AACA;EACEhB,MAAM,EAAEZ,SAAS,CAAC6B,IAAI;EACtB;AACF;AACA;AACA;EACE;EACAf,UAAU,EAAEd,SAAS,CAAC8B,SAAS,CAAC,CAAC9B,SAAS,CAAC+B,IAAI,EAAE/B,SAAS,CAACgC,MAAM,CAAC,CAAC;EACnE;AACF;AACA;EACEhB,IAAI,EAAEhB,SAAS,CAACiC,KAAK,CAAC,CAAC,IAAI,EAAE,IAAI,EAAE,IAAI,CAAC,CAAC;EACzC;AACF;AACA;EACEpB,OAAO,EAAEb,SAAS,CAAC6B;AACrB,CAAC;AAED,SAAS1B,IAAI,IAAI+B,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}