{"ast":null,"code":"import _slicedToArray from \"/home/saymon/Backup/Portifolio/Hematology-App-with-Carbon-Design-System/frontend/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\n/**\n * Copyright IBM Corp. 2016, 2023\n *\n * This source code is licensed under the Apache-2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { createScope, FeatureFlags as FeatureFlags$1 } from '@carbon/feature-flags';\nimport PropTypes from 'prop-types';\nimport React__default, { useContext, useState, useRef, useEffect, createContext } from 'react';\n\n/**\n * Our FeatureFlagContext is used alongside the FeatureFlags component to enable\n * or disable feature flags in a given React tree\n */\nvar FeatureFlagContext = /*#__PURE__*/createContext(FeatureFlags$1);\n\n/**\n * Supports an object of feature flag values with the `flags` prop, merging them\n * along with the current `FeatureFlagContext` to provide consumers to check if\n * a feature flag is enabled or disabled in a given React tree\n */\nfunction FeatureFlags(_ref) {\n  var children = _ref.children,\n    _ref$flags = _ref.flags,\n    flags = _ref$flags === void 0 ? {} : _ref$flags;\n  var parentScope = useContext(FeatureFlagContext);\n  var _useState = useState(parentScope),\n    _useState2 = _slicedToArray(_useState, 2),\n    prevParentScope = _useState2[0],\n    setPrevParentScope = _useState2[1];\n  var _useState3 = useState(function () {\n      var scope = createScope(flags);\n      scope.mergeWithScope(parentScope);\n      return scope;\n    }),\n    _useState4 = _slicedToArray(_useState3, 2),\n    scope = _useState4[0],\n    updateScope = _useState4[1];\n  if (parentScope !== prevParentScope) {\n    var _scope = createScope(flags);\n    _scope.mergeWithScope(parentScope);\n    updateScope(_scope);\n    setPrevParentScope(parentScope);\n  }\n\n  // We use a custom hook to detect if any of the keys or their values change\n  // for flags that are passed in. If they have changed, then we re-create the\n  // FeatureFlagScope using the new flags\n  useChangedValue(flags, isEqual, function (changedFlags) {\n    var scope = createScope(changedFlags);\n    scope.mergeWithScope(parentScope);\n    updateScope(scope);\n  });\n  return /*#__PURE__*/React__default.createElement(FeatureFlagContext.Provider, {\n    value: scope\n  }, children);\n}\nFeatureFlags.propTypes = {\n  children: PropTypes.node,\n  /**\n   * Provide the feature flags to enabled or disabled in the current React tree\n   */\n  flags: PropTypes.objectOf(PropTypes.bool)\n};\n\n/**\n * This hook will store previous versions of the given `value` and compare the\n * current value to the previous one using the `compare` function. If the\n * compare function returns true, then the given `callback` is invoked in an\n * effect.\n *\n * @param {any} value\n * @param {Function} compare\n * @param {Function} callback\n */\nfunction useChangedValue(value, compare, callback) {\n  var initialRender = useRef(false);\n  var savedCallback = useRef(callback);\n  var _useState5 = useState(value),\n    _useState6 = _slicedToArray(_useState5, 2),\n    prevValue = _useState6[0],\n    setPrevValue = _useState6[1];\n  if (!compare(prevValue, value)) {\n    setPrevValue(value);\n  }\n  useEffect(function () {\n    savedCallback.current = callback;\n  });\n  useEffect(function () {\n    // We only want the callback triggered after the first render\n    if (initialRender.current) {\n      savedCallback.current(prevValue);\n    }\n  }, [prevValue]);\n  useEffect(function () {\n    initialRender.current = true;\n  }, []);\n}\n\n/**\n * Access whether a given flag is enabled or disabled in a given\n * FeatureFlagContext\n *\n * @returns {boolean}\n */\nfunction useFeatureFlag(flag) {\n  var scope = useContext(FeatureFlagContext);\n  return scope.enabled(flag);\n}\n\n/**\n * Access all feature flag information for the given FeatureFlagContext\n *\n * @returns {FeatureFlagScope}\n */\nfunction useFeatureFlags() {\n  return useContext(FeatureFlagContext);\n}\n\n/**\n * Compare two objects and determine if they are equal. This is a shallow\n * comparison since the objects we are comparing are objects with boolean flags\n * from the flags prop in the `FeatureFlags` component\n *\n * @param {object} a\n * @param {object} b\n * @returns {boolean}\n */\nfunction isEqual(a, b) {\n  if (a === b) {\n    return true;\n  }\n  for (var _i = 0, _Object$keys = Object.keys(a); _i < _Object$keys.length; _i++) {\n    var key = _Object$keys[_i];\n    if (a[key] !== b[key]) {\n      return false;\n    }\n  }\n  for (var _i2 = 0, _Object$keys2 = Object.keys(b); _i2 < _Object$keys2.length; _i2++) {\n    var _key = _Object$keys2[_i2];\n    if (b[_key] !== a[_key]) {\n      return false;\n    }\n  }\n  return true;\n}\nexport { FeatureFlagContext, FeatureFlags, useFeatureFlag, useFeatureFlags };","map":{"version":3,"names":["createScope","FeatureFlags","FeatureFlags$1","PropTypes","React__default","useContext","useState","useRef","useEffect","createContext","FeatureFlagContext","_ref","children","_ref$flags","flags","parentScope","_useState","_useState2","_slicedToArray","prevParentScope","setPrevParentScope","_useState3","scope","mergeWithScope","_useState4","updateScope","useChangedValue","isEqual","changedFlags","createElement","Provider","value","propTypes","node","objectOf","bool","compare","callback","initialRender","savedCallback","_useState5","_useState6","prevValue","setPrevValue","current","useFeatureFlag","flag","enabled","useFeatureFlags","a","b","_i","_Object$keys","Object","keys","length","key","_i2","_Object$keys2"],"sources":["/home/saymon/Backup/Portifolio/Hematology-App-with-Carbon-Design-System/frontend/node_modules/@carbon/react/es/components/FeatureFlags/index.js"],"sourcesContent":["/**\n * Copyright IBM Corp. 2016, 2023\n *\n * This source code is licensed under the Apache-2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { createScope, FeatureFlags as FeatureFlags$1 } from '@carbon/feature-flags';\nimport PropTypes from 'prop-types';\nimport React__default, { useContext, useState, useRef, useEffect, createContext } from 'react';\n\n/**\n * Our FeatureFlagContext is used alongside the FeatureFlags component to enable\n * or disable feature flags in a given React tree\n */\nconst FeatureFlagContext = /*#__PURE__*/createContext(FeatureFlags$1);\n\n/**\n * Supports an object of feature flag values with the `flags` prop, merging them\n * along with the current `FeatureFlagContext` to provide consumers to check if\n * a feature flag is enabled or disabled in a given React tree\n */\nfunction FeatureFlags(_ref) {\n  let {\n    children,\n    flags = {}\n  } = _ref;\n  const parentScope = useContext(FeatureFlagContext);\n  const [prevParentScope, setPrevParentScope] = useState(parentScope);\n  const [scope, updateScope] = useState(() => {\n    const scope = createScope(flags);\n    scope.mergeWithScope(parentScope);\n    return scope;\n  });\n  if (parentScope !== prevParentScope) {\n    const scope = createScope(flags);\n    scope.mergeWithScope(parentScope);\n    updateScope(scope);\n    setPrevParentScope(parentScope);\n  }\n\n  // We use a custom hook to detect if any of the keys or their values change\n  // for flags that are passed in. If they have changed, then we re-create the\n  // FeatureFlagScope using the new flags\n  useChangedValue(flags, isEqual, changedFlags => {\n    const scope = createScope(changedFlags);\n    scope.mergeWithScope(parentScope);\n    updateScope(scope);\n  });\n  return /*#__PURE__*/React__default.createElement(FeatureFlagContext.Provider, {\n    value: scope\n  }, children);\n}\nFeatureFlags.propTypes = {\n  children: PropTypes.node,\n  /**\n   * Provide the feature flags to enabled or disabled in the current React tree\n   */\n  flags: PropTypes.objectOf(PropTypes.bool)\n};\n\n/**\n * This hook will store previous versions of the given `value` and compare the\n * current value to the previous one using the `compare` function. If the\n * compare function returns true, then the given `callback` is invoked in an\n * effect.\n *\n * @param {any} value\n * @param {Function} compare\n * @param {Function} callback\n */\nfunction useChangedValue(value, compare, callback) {\n  const initialRender = useRef(false);\n  const savedCallback = useRef(callback);\n  const [prevValue, setPrevValue] = useState(value);\n  if (!compare(prevValue, value)) {\n    setPrevValue(value);\n  }\n  useEffect(() => {\n    savedCallback.current = callback;\n  });\n  useEffect(() => {\n    // We only want the callback triggered after the first render\n    if (initialRender.current) {\n      savedCallback.current(prevValue);\n    }\n  }, [prevValue]);\n  useEffect(() => {\n    initialRender.current = true;\n  }, []);\n}\n\n/**\n * Access whether a given flag is enabled or disabled in a given\n * FeatureFlagContext\n *\n * @returns {boolean}\n */\nfunction useFeatureFlag(flag) {\n  const scope = useContext(FeatureFlagContext);\n  return scope.enabled(flag);\n}\n\n/**\n * Access all feature flag information for the given FeatureFlagContext\n *\n * @returns {FeatureFlagScope}\n */\nfunction useFeatureFlags() {\n  return useContext(FeatureFlagContext);\n}\n\n/**\n * Compare two objects and determine if they are equal. This is a shallow\n * comparison since the objects we are comparing are objects with boolean flags\n * from the flags prop in the `FeatureFlags` component\n *\n * @param {object} a\n * @param {object} b\n * @returns {boolean}\n */\nfunction isEqual(a, b) {\n  if (a === b) {\n    return true;\n  }\n  for (const key of Object.keys(a)) {\n    if (a[key] !== b[key]) {\n      return false;\n    }\n  }\n  for (const key of Object.keys(b)) {\n    if (b[key] !== a[key]) {\n      return false;\n    }\n  }\n  return true;\n}\n\nexport { FeatureFlagContext, FeatureFlags, useFeatureFlag, useFeatureFlags };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}