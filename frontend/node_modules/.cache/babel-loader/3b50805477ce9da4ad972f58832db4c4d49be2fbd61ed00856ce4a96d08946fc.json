{"ast":null,"code":"/**\n * Copyright IBM Corp. 2016, 2023\n *\n * This source code is licensed under the Apache-2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { extends as _extends } from '../../_virtual/_rollupPluginBabelHelpers.js';\nimport React__default, { useRef, useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { CaretDown } from '@carbon/icons-react';\nimport cx from 'classnames';\nimport uniqueId from '../../tools/uniqueId.js';\nimport { usePrefix } from '../../internal/usePrefix.js';\nimport { matches, match } from '../../internal/keyboard/match.js';\nimport { ArrowLeft, ArrowRight, Enter, Space } from '../../internal/keyboard/keys.js';\nfunction TreeNode(_ref) {\n  let {\n    active,\n    children,\n    className,\n    depth,\n    disabled,\n    isExpanded,\n    label,\n    onNodeFocusEvent,\n    onSelect: onNodeSelect,\n    onToggle,\n    onTreeSelect,\n    renderIcon: Icon,\n    selected,\n    value,\n    ...rest\n  } = _ref;\n  const {\n    current: id\n  } = useRef(rest.id || uniqueId());\n  const [expanded, setExpanded] = useState(isExpanded);\n  const currentNode = useRef(null);\n  const currentNodeLabel = useRef(null);\n  const prefix = usePrefix();\n  const nodesWithProps = React__default.Children.map(children, node => {\n    if ( /*#__PURE__*/React__default.isValidElement(node)) {\n      return /*#__PURE__*/React__default.cloneElement(node, {\n        active,\n        depth: depth + 1,\n        disabled,\n        onTreeSelect,\n        selected,\n        tabIndex: !node.props.disabled && -1 || null\n      });\n    }\n  });\n  const isActive = active === id;\n  const isSelected = selected.includes(id);\n  const treeNodeClasses = cx(className, `${prefix}--tree-node`, {\n    [`${prefix}--tree-node--active`]: isActive,\n    [`${prefix}--tree-node--disabled`]: disabled,\n    [`${prefix}--tree-node--selected`]: isSelected,\n    [`${prefix}--tree-node--with-icon`]: Icon,\n    [`${prefix}--tree-leaf-node`]: !children,\n    [`${prefix}--tree-parent-node`]: children\n  });\n  const toggleClasses = cx(`${prefix}--tree-parent-node__toggle-icon`, {\n    [`${prefix}--tree-parent-node__toggle-icon--expanded`]: expanded\n  });\n  function handleToggleClick(event) {\n    if (disabled) {\n      return;\n    }\n    onToggle?.(event, {\n      id,\n      isExpanded: !expanded,\n      label,\n      value\n    });\n    setExpanded(!expanded);\n  }\n  function handleClick(event) {\n    event.stopPropagation();\n    if (!disabled) {\n      onTreeSelect?.(event, {\n        id,\n        label,\n        value\n      });\n      onNodeSelect?.(event, {\n        id,\n        label,\n        value\n      });\n      rest?.onClick?.(event);\n    }\n  }\n  function handleKeyDown(event) {\n    if (disabled) {\n      return;\n    }\n    if (matches(event, [ArrowLeft, ArrowRight, Enter])) {\n      event.stopPropagation();\n    }\n    if (match(event, ArrowLeft)) {\n      const findParentTreeNode = node => {\n        if (node.classList.contains(`${prefix}--tree-parent-node`)) {\n          return node;\n        }\n        if (node.classList.contains(`${prefix}--tree`)) {\n          return null;\n        }\n        return findParentTreeNode(node.parentNode);\n      };\n      if (children && expanded) {\n        onToggle?.(event, {\n          id,\n          isExpanded: false,\n          label,\n          value\n        });\n        setExpanded(false);\n      } else {\n        /**\n         * When focus is on a leaf node or a closed parent node, move focus to\n         * its parent node (unless its depth is level 1)\n         */\n        findParentTreeNode(currentNode.current.parentNode)?.focus();\n      }\n    }\n    if (children && match(event, ArrowRight)) {\n      if (expanded) {\n        /**\n         * When focus is on an expanded parent node, move focus to the first\n         * child node\n         */\n        currentNode.current.lastChild.firstChild.focus();\n      } else {\n        onToggle?.(event, {\n          id,\n          isExpanded: true,\n          label,\n          value\n        });\n        setExpanded(true);\n      }\n    }\n    if (matches(event, [Enter, Space])) {\n      event.preventDefault();\n      handleClick(event);\n    }\n    rest?.onKeyDown?.(event);\n  }\n  function handleFocusEvent(event) {\n    if (event.type === 'blur') {\n      rest?.onBlur?.(event);\n    }\n    if (event.type === 'focus') {\n      rest?.onFocus?.(event);\n    }\n    onNodeFocusEvent?.(event);\n  }\n  useEffect(() => {\n    /**\n     * Negative margin shifts node to align with the left side boundary of the\n     * tree\n     * Dynamically calculate padding to recreate tree node indentation\n     * - parent nodes with icon have (depth + 1rem + depth * 0.5) left padding\n     * - parent nodes have (depth + 1rem) left padding\n     * - leaf nodes have (depth + 2.5rem) left padding without icons (because\n     *   of expand icon + spacing)\n     * - leaf nodes have (depth + 2rem + depth * 0.5) left padding with icons (because of\n     *   reduced spacing between the expand icon and the node icon + label)\n     */\n    const calcOffset = () => {\n      // parent node with icon\n      if (children && Icon) {\n        return depth + 1 + depth * 0.5;\n      }\n      // parent node without icon\n      if (children) {\n        return depth + 1;\n      }\n      // leaf node with icon\n      if (Icon) {\n        return depth + 2 + depth * 0.5;\n      }\n      // leaf node without icon\n      return depth + 2.5;\n    };\n    if (currentNodeLabel.current) {\n      currentNodeLabel.current.style.marginLeft = `-${calcOffset()}rem`;\n      currentNodeLabel.current.style.paddingLeft = `${calcOffset()}rem`;\n    }\n\n    // sync props and state\n    setExpanded(isExpanded);\n  }, [children, depth, Icon, isExpanded]);\n  const treeNodeProps = {\n    ...rest,\n    ['aria-current']: isActive || null,\n    ['aria-selected']: disabled ? null : isSelected,\n    ['aria-disabled']: disabled,\n    className: treeNodeClasses,\n    id,\n    onBlur: handleFocusEvent,\n    onClick: handleClick,\n    onFocus: handleFocusEvent,\n    onKeyDown: handleKeyDown,\n    ref: currentNode,\n    role: 'treeitem'\n  };\n  if (!children) {\n    return /*#__PURE__*/React__default.createElement(\"li\", treeNodeProps, /*#__PURE__*/React__default.createElement(\"div\", {\n      className: `${prefix}--tree-node__label`,\n      ref: currentNodeLabel\n    }, Icon && /*#__PURE__*/React__default.createElement(Icon, {\n      className: `${prefix}--tree-node__icon`\n    }), label));\n  }\n  return /*#__PURE__*/(\n    // eslint-disable-next-line jsx-a11y/role-supports-aria-props\n    React__default.createElement(\"li\", _extends({}, treeNodeProps, {\n      \"aria-expanded\": !!expanded\n    }), /*#__PURE__*/React__default.createElement(\"div\", {\n      className: `${prefix}--tree-node__label`,\n      ref: currentNodeLabel\n    }, /*#__PURE__*/React__default.createElement(\"span\", {\n      className: `${prefix}--tree-parent-node__toggle`,\n      disabled: disabled,\n      onClick: handleToggleClick\n    }, /*#__PURE__*/React__default.createElement(CaretDown, {\n      className: toggleClasses\n    })), /*#__PURE__*/React__default.createElement(\"span\", {\n      className: `${prefix}--tree-node__label__details`\n    }, Icon && /*#__PURE__*/React__default.createElement(Icon, {\n      className: `${prefix}--tree-node__icon`\n    }), label)), expanded && /*#__PURE__*/React__default.createElement(\"ul\", {\n      role: \"group\",\n      className: `${prefix}--tree-node__children`\n    }, nodesWithProps))\n  );\n}\nTreeNode.propTypes = {\n  /**\n   * The value of the active node in the tree\n   */\n  active: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  /**\n   * Specify the children of the TreeNode\n   */\n  children: PropTypes.node,\n  /**\n   * Specify an optional className to be applied to the TreeNode\n   */\n  className: PropTypes.string,\n  /**\n   * TreeNode depth to determine spacing, automatically calculated by default\n   */\n  depth: PropTypes.number,\n  /**\n   * Specify if the TreeNode is disabled\n   */\n  disabled: PropTypes.bool,\n  /**\n   * Specify if the TreeNode is expanded (only applicable to parent nodes)\n   */\n  isExpanded: PropTypes.bool,\n  /**\n   * Rendered label for the TreeNode\n   */\n  label: PropTypes.node,\n  /**\n   * Callback function for when the node receives or loses focus\n   */\n  onNodeFocusEvent: PropTypes.func,\n  /**\n   * Callback function for when the node is selected\n   */\n  onSelect: PropTypes.func,\n  /**\n   * Callback function for when a parent node is expanded or collapsed\n   */\n  onToggle: PropTypes.func,\n  /**\n   * Callback function for when any node in the tree is selected\n   */\n  onTreeSelect: PropTypes.func,\n  /**\n   * Optional prop to allow each node to have an associated icon.\n   * Can be a React component class\n   */\n  renderIcon: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\n  /**\n   * Array containing all selected node IDs in the tree\n   */\n  selected: PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.string, PropTypes.number])),\n  /**\n   * Specify the value of the TreeNode\n   */\n  value: PropTypes.string\n};\nexport { TreeNode as default };","map":{"version":3,"names":["extends","_extends","React__default","useRef","useState","useEffect","PropTypes","CaretDown","cx","uniqueId","usePrefix","matches","match","ArrowLeft","ArrowRight","Enter","Space","TreeNode","_ref","active","children","className","depth","disabled","isExpanded","label","onNodeFocusEvent","onSelect","onNodeSelect","onToggle","onTreeSelect","renderIcon","Icon","selected","value","rest","current","id","expanded","setExpanded","currentNode","currentNodeLabel","prefix","nodesWithProps","Children","map","node","isValidElement","cloneElement","tabIndex","props","isActive","isSelected","includes","treeNodeClasses","toggleClasses","handleToggleClick","event","handleClick","stopPropagation","onClick","handleKeyDown","findParentTreeNode","classList","contains","parentNode","focus","lastChild","firstChild","preventDefault","onKeyDown","handleFocusEvent","type","onBlur","onFocus","calcOffset","style","marginLeft","paddingLeft","treeNodeProps","ref","role","createElement","propTypes","oneOfType","string","number","bool","func","object","arrayOf","default"],"sources":["/home/saymon/Backup/Portifolio/Hematology-App-with-Carbon-Design-System/frontend/node_modules/@carbon/react/es/components/TreeView/TreeNode.js"],"sourcesContent":["/**\n * Copyright IBM Corp. 2016, 2023\n *\n * This source code is licensed under the Apache-2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { extends as _extends } from '../../_virtual/_rollupPluginBabelHelpers.js';\nimport React__default, { useRef, useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { CaretDown } from '@carbon/icons-react';\nimport cx from 'classnames';\nimport uniqueId from '../../tools/uniqueId.js';\nimport { usePrefix } from '../../internal/usePrefix.js';\nimport { matches, match } from '../../internal/keyboard/match.js';\nimport { ArrowLeft, ArrowRight, Enter, Space } from '../../internal/keyboard/keys.js';\n\nfunction TreeNode(_ref) {\n  let {\n    active,\n    children,\n    className,\n    depth,\n    disabled,\n    isExpanded,\n    label,\n    onNodeFocusEvent,\n    onSelect: onNodeSelect,\n    onToggle,\n    onTreeSelect,\n    renderIcon: Icon,\n    selected,\n    value,\n    ...rest\n  } = _ref;\n  const {\n    current: id\n  } = useRef(rest.id || uniqueId());\n  const [expanded, setExpanded] = useState(isExpanded);\n  const currentNode = useRef(null);\n  const currentNodeLabel = useRef(null);\n  const prefix = usePrefix();\n  const nodesWithProps = React__default.Children.map(children, node => {\n    if ( /*#__PURE__*/React__default.isValidElement(node)) {\n      return /*#__PURE__*/React__default.cloneElement(node, {\n        active,\n        depth: depth + 1,\n        disabled,\n        onTreeSelect,\n        selected,\n        tabIndex: !node.props.disabled && -1 || null\n      });\n    }\n  });\n  const isActive = active === id;\n  const isSelected = selected.includes(id);\n  const treeNodeClasses = cx(className, `${prefix}--tree-node`, {\n    [`${prefix}--tree-node--active`]: isActive,\n    [`${prefix}--tree-node--disabled`]: disabled,\n    [`${prefix}--tree-node--selected`]: isSelected,\n    [`${prefix}--tree-node--with-icon`]: Icon,\n    [`${prefix}--tree-leaf-node`]: !children,\n    [`${prefix}--tree-parent-node`]: children\n  });\n  const toggleClasses = cx(`${prefix}--tree-parent-node__toggle-icon`, {\n    [`${prefix}--tree-parent-node__toggle-icon--expanded`]: expanded\n  });\n  function handleToggleClick(event) {\n    if (disabled) {\n      return;\n    }\n    onToggle?.(event, {\n      id,\n      isExpanded: !expanded,\n      label,\n      value\n    });\n    setExpanded(!expanded);\n  }\n  function handleClick(event) {\n    event.stopPropagation();\n    if (!disabled) {\n      onTreeSelect?.(event, {\n        id,\n        label,\n        value\n      });\n      onNodeSelect?.(event, {\n        id,\n        label,\n        value\n      });\n      rest?.onClick?.(event);\n    }\n  }\n  function handleKeyDown(event) {\n    if (disabled) {\n      return;\n    }\n    if (matches(event, [ArrowLeft, ArrowRight, Enter])) {\n      event.stopPropagation();\n    }\n    if (match(event, ArrowLeft)) {\n      const findParentTreeNode = node => {\n        if (node.classList.contains(`${prefix}--tree-parent-node`)) {\n          return node;\n        }\n        if (node.classList.contains(`${prefix}--tree`)) {\n          return null;\n        }\n        return findParentTreeNode(node.parentNode);\n      };\n      if (children && expanded) {\n        onToggle?.(event, {\n          id,\n          isExpanded: false,\n          label,\n          value\n        });\n        setExpanded(false);\n      } else {\n        /**\n         * When focus is on a leaf node or a closed parent node, move focus to\n         * its parent node (unless its depth is level 1)\n         */\n        findParentTreeNode(currentNode.current.parentNode)?.focus();\n      }\n    }\n    if (children && match(event, ArrowRight)) {\n      if (expanded) {\n        /**\n         * When focus is on an expanded parent node, move focus to the first\n         * child node\n         */\n        currentNode.current.lastChild.firstChild.focus();\n      } else {\n        onToggle?.(event, {\n          id,\n          isExpanded: true,\n          label,\n          value\n        });\n        setExpanded(true);\n      }\n    }\n    if (matches(event, [Enter, Space])) {\n      event.preventDefault();\n      handleClick(event);\n    }\n    rest?.onKeyDown?.(event);\n  }\n  function handleFocusEvent(event) {\n    if (event.type === 'blur') {\n      rest?.onBlur?.(event);\n    }\n    if (event.type === 'focus') {\n      rest?.onFocus?.(event);\n    }\n    onNodeFocusEvent?.(event);\n  }\n  useEffect(() => {\n    /**\n     * Negative margin shifts node to align with the left side boundary of the\n     * tree\n     * Dynamically calculate padding to recreate tree node indentation\n     * - parent nodes with icon have (depth + 1rem + depth * 0.5) left padding\n     * - parent nodes have (depth + 1rem) left padding\n     * - leaf nodes have (depth + 2.5rem) left padding without icons (because\n     *   of expand icon + spacing)\n     * - leaf nodes have (depth + 2rem + depth * 0.5) left padding with icons (because of\n     *   reduced spacing between the expand icon and the node icon + label)\n     */\n    const calcOffset = () => {\n      // parent node with icon\n      if (children && Icon) {\n        return depth + 1 + depth * 0.5;\n      }\n      // parent node without icon\n      if (children) {\n        return depth + 1;\n      }\n      // leaf node with icon\n      if (Icon) {\n        return depth + 2 + depth * 0.5;\n      }\n      // leaf node without icon\n      return depth + 2.5;\n    };\n    if (currentNodeLabel.current) {\n      currentNodeLabel.current.style.marginLeft = `-${calcOffset()}rem`;\n      currentNodeLabel.current.style.paddingLeft = `${calcOffset()}rem`;\n    }\n\n    // sync props and state\n    setExpanded(isExpanded);\n  }, [children, depth, Icon, isExpanded]);\n  const treeNodeProps = {\n    ...rest,\n    ['aria-current']: isActive || null,\n    ['aria-selected']: disabled ? null : isSelected,\n    ['aria-disabled']: disabled,\n    className: treeNodeClasses,\n    id,\n    onBlur: handleFocusEvent,\n    onClick: handleClick,\n    onFocus: handleFocusEvent,\n    onKeyDown: handleKeyDown,\n    ref: currentNode,\n    role: 'treeitem'\n  };\n  if (!children) {\n    return /*#__PURE__*/React__default.createElement(\"li\", treeNodeProps, /*#__PURE__*/React__default.createElement(\"div\", {\n      className: `${prefix}--tree-node__label`,\n      ref: currentNodeLabel\n    }, Icon && /*#__PURE__*/React__default.createElement(Icon, {\n      className: `${prefix}--tree-node__icon`\n    }), label));\n  }\n  return (\n    /*#__PURE__*/\n    // eslint-disable-next-line jsx-a11y/role-supports-aria-props\n    React__default.createElement(\"li\", _extends({}, treeNodeProps, {\n      \"aria-expanded\": !!expanded\n    }), /*#__PURE__*/React__default.createElement(\"div\", {\n      className: `${prefix}--tree-node__label`,\n      ref: currentNodeLabel\n    }, /*#__PURE__*/React__default.createElement(\"span\", {\n      className: `${prefix}--tree-parent-node__toggle`,\n      disabled: disabled,\n      onClick: handleToggleClick\n    }, /*#__PURE__*/React__default.createElement(CaretDown, {\n      className: toggleClasses\n    })), /*#__PURE__*/React__default.createElement(\"span\", {\n      className: `${prefix}--tree-node__label__details`\n    }, Icon && /*#__PURE__*/React__default.createElement(Icon, {\n      className: `${prefix}--tree-node__icon`\n    }), label)), expanded && /*#__PURE__*/React__default.createElement(\"ul\", {\n      role: \"group\",\n      className: `${prefix}--tree-node__children`\n    }, nodesWithProps))\n  );\n}\nTreeNode.propTypes = {\n  /**\n   * The value of the active node in the tree\n   */\n  active: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  /**\n   * Specify the children of the TreeNode\n   */\n  children: PropTypes.node,\n  /**\n   * Specify an optional className to be applied to the TreeNode\n   */\n  className: PropTypes.string,\n  /**\n   * TreeNode depth to determine spacing, automatically calculated by default\n   */\n  depth: PropTypes.number,\n  /**\n   * Specify if the TreeNode is disabled\n   */\n  disabled: PropTypes.bool,\n  /**\n   * Specify if the TreeNode is expanded (only applicable to parent nodes)\n   */\n  isExpanded: PropTypes.bool,\n  /**\n   * Rendered label for the TreeNode\n   */\n  label: PropTypes.node,\n  /**\n   * Callback function for when the node receives or loses focus\n   */\n  onNodeFocusEvent: PropTypes.func,\n  /**\n   * Callback function for when the node is selected\n   */\n  onSelect: PropTypes.func,\n  /**\n   * Callback function for when a parent node is expanded or collapsed\n   */\n  onToggle: PropTypes.func,\n  /**\n   * Callback function for when any node in the tree is selected\n   */\n  onTreeSelect: PropTypes.func,\n  /**\n   * Optional prop to allow each node to have an associated icon.\n   * Can be a React component class\n   */\n  renderIcon: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\n  /**\n   * Array containing all selected node IDs in the tree\n   */\n  selected: PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.string, PropTypes.number])),\n  /**\n   * Specify the value of the TreeNode\n   */\n  value: PropTypes.string\n};\n\nexport { TreeNode as default };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}