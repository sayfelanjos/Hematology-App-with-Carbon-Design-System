{"ast":null,"code":"/**\n * Copyright IBM Corp. 2016, 2023\n *\n * This source code is licensed under the Apache-2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n/**\n * Generic utility to initialize a method that will return a unique instance id\n * for a component.\n */\nvar setupGetInstanceId = function setupGetInstanceId() {\n  var instanceId = 0;\n  return function getInstanceId() {\n    return ++instanceId;\n  };\n};\nvar setupGetInstanceId$1 = setupGetInstanceId;\nexport { setupGetInstanceId$1 as default };","map":{"version":3,"names":["setupGetInstanceId","instanceId","getInstanceId","setupGetInstanceId$1","default"],"sources":["/home/saymon/Backup/Portifolio/Hematology-App-with-Carbon-Design-System/frontend/node_modules/@carbon/react/es/components/DataTable/tools/instanceId.js"],"sourcesContent":["/**\n * Copyright IBM Corp. 2016, 2023\n *\n * This source code is licensed under the Apache-2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n/**\n * Generic utility to initialize a method that will return a unique instance id\n * for a component.\n */\nconst setupGetInstanceId = () => {\n  let instanceId = 0;\n  return function getInstanceId() {\n    return ++instanceId;\n  };\n};\nvar setupGetInstanceId$1 = setupGetInstanceId;\n\nexport { setupGetInstanceId$1 as default };\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,IAAMA,kBAAkB,GAAG,SAArBA,kBAAkBA,CAAA,EAAS;EAC/B,IAAIC,UAAU,GAAG,CAAC;EAClB,OAAO,SAASC,aAAaA,CAAA,EAAG;IAC9B,OAAO,EAAED,UAAU;EACrB,CAAC;AACH,CAAC;AACD,IAAIE,oBAAoB,GAAGH,kBAAkB;AAE7C,SAASG,oBAAoB,IAAIC,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}