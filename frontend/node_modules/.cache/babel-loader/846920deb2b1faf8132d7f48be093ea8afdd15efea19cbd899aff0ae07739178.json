{"ast":null,"code":"import _defineProperty from \"/home/saymon/Backup/Portifolio/Hematology-App-with-Carbon-Design-System/frontend/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nimport _slicedToArray from \"/home/saymon/Backup/Portifolio/Hematology-App-with-Carbon-Design-System/frontend/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport _objectWithoutProperties from \"/home/saymon/Backup/Portifolio/Hematology-App-with-Carbon-Design-System/frontend/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js\";\nvar _CodeSnippet$propType, _CodeSnippet$defaultP;\nvar _excluded = [\"className\", \"type\", \"children\", \"disabled\", \"feedback\", \"feedbackTimeout\", \"onClick\", \"aria-label\", \"ariaLabel\", \"copyText\", \"copyButtonDescription\", \"light\", \"showMoreText\", \"showLessText\", \"hideCopyButton\", \"wrapText\", \"maxCollapsedNumberOfRows\", \"maxExpandedNumberOfRows\", \"minCollapsedNumberOfRows\", \"minExpandedNumberOfRows\"];\n/**\n * Copyright IBM Corp. 2016, 2023\n *\n * This source code is licensed under the Apache-2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { extends as _extends } from '../../_virtual/_rollupPluginBabelHelpers.js';\nimport PropTypes from 'prop-types';\nimport React__default, { useState, useRef, useCallback, useEffect } from 'react';\nimport cx from 'classnames';\nimport useResizeObserver from 'use-resize-observer/polyfilled';\nimport { ChevronDown } from '@carbon/icons-react';\nimport Copy from '../Copy/Copy.js';\nimport Button from '../Button/Button.js';\nimport '../Button/Button.Skeleton.js';\nimport CopyButton from '../CopyButton/CopyButton.js';\nimport uniqueId from '../../tools/uniqueId.js';\nimport copy from 'copy-to-clipboard';\nimport deprecate from '../../prop-types/deprecate.js';\nimport { usePrefix } from '../../internal/usePrefix.js';\nvar rowHeightInPixels = 16;\nvar defaultMaxCollapsedNumberOfRows = 15;\nvar defaultMaxExpandedNumberOfRows = 0;\nvar defaultMinCollapsedNumberOfRows = 3;\nvar defaultMinExpandedNumberOfRows = 16;\nfunction CodeSnippet(_ref) {\n  var _cx;\n  var className = _ref.className,\n    type = _ref.type,\n    children = _ref.children,\n    disabled = _ref.disabled,\n    feedback = _ref.feedback,\n    feedbackTimeout = _ref.feedbackTimeout,\n    onClick = _ref.onClick,\n    ariaLabel = _ref['aria-label'],\n    deprecatedAriaLabel = _ref.ariaLabel,\n    copyText = _ref.copyText,\n    copyButtonDescription = _ref.copyButtonDescription,\n    light = _ref.light,\n    showMoreText = _ref.showMoreText,\n    showLessText = _ref.showLessText,\n    hideCopyButton = _ref.hideCopyButton,\n    wrapText = _ref.wrapText,\n    _ref$maxCollapsedNumb = _ref.maxCollapsedNumberOfRows,\n    maxCollapsedNumberOfRows = _ref$maxCollapsedNumb === void 0 ? defaultMaxCollapsedNumberOfRows : _ref$maxCollapsedNumb,\n    _ref$maxExpandedNumbe = _ref.maxExpandedNumberOfRows,\n    maxExpandedNumberOfRows = _ref$maxExpandedNumbe === void 0 ? defaultMaxExpandedNumberOfRows : _ref$maxExpandedNumbe,\n    _ref$minCollapsedNumb = _ref.minCollapsedNumberOfRows,\n    minCollapsedNumberOfRows = _ref$minCollapsedNumb === void 0 ? defaultMinCollapsedNumberOfRows : _ref$minCollapsedNumb,\n    _ref$minExpandedNumbe = _ref.minExpandedNumberOfRows,\n    minExpandedNumberOfRows = _ref$minExpandedNumbe === void 0 ? defaultMinExpandedNumberOfRows : _ref$minExpandedNumbe,\n    rest = _objectWithoutProperties(_ref, _excluded);\n  var _useState = useState(false),\n    _useState2 = _slicedToArray(_useState, 2),\n    expandedCode = _useState2[0],\n    setExpandedCode = _useState2[1];\n  var _useState3 = useState(false),\n    _useState4 = _slicedToArray(_useState3, 2),\n    shouldShowMoreLessBtn = _useState4[0],\n    setShouldShowMoreLessBtn = _useState4[1];\n  var _useRef = useRef(uniqueId()),\n    uid = _useRef.current;\n  var codeContentRef = useRef();\n  var codeContainerRef = useRef();\n  var innerCodeRef = useRef();\n  var _useState5 = useState(false),\n    _useState6 = _slicedToArray(_useState5, 2),\n    hasLeftOverflow = _useState6[0],\n    setHasLeftOverflow = _useState6[1];\n  var _useState7 = useState(false),\n    _useState8 = _slicedToArray(_useState7, 2),\n    hasRightOverflow = _useState8[0],\n    setHasRightOverflow = _useState8[1];\n  var getCodeRef = useCallback(function () {\n    if (type === 'single') {\n      return codeContainerRef;\n    }\n    if (type === 'multi') {\n      return codeContentRef;\n    }\n  }, [type]);\n  var prefix = usePrefix();\n  var getCodeRefDimensions = useCallback(function () {\n    var _getCodeRef$current = getCodeRef().current,\n      codeClientWidth = _getCodeRef$current.clientWidth,\n      codeScrollLeft = _getCodeRef$current.scrollLeft,\n      codeScrollWidth = _getCodeRef$current.scrollWidth;\n    return {\n      horizontalOverflow: codeScrollWidth > codeClientWidth,\n      codeClientWidth: codeClientWidth,\n      codeScrollWidth: codeScrollWidth,\n      codeScrollLeft: codeScrollLeft\n    };\n  }, [getCodeRef]);\n  var handleScroll = useCallback(function () {\n    if (type === 'inline' || type === 'single' && !(codeContainerRef !== null && codeContainerRef !== void 0 && codeContainerRef.current) || type === 'multi' && !(codeContentRef !== null && codeContentRef !== void 0 && codeContentRef.current)) {\n      return;\n    }\n    var _getCodeRefDimensions = getCodeRefDimensions(),\n      horizontalOverflow = _getCodeRefDimensions.horizontalOverflow,\n      codeClientWidth = _getCodeRefDimensions.codeClientWidth,\n      codeScrollWidth = _getCodeRefDimensions.codeScrollWidth,\n      codeScrollLeft = _getCodeRefDimensions.codeScrollLeft;\n    setHasLeftOverflow(horizontalOverflow && !!codeScrollLeft);\n    setHasRightOverflow(horizontalOverflow && codeScrollLeft + codeClientWidth !== codeScrollWidth);\n  }, [type, getCodeRefDimensions]);\n  useResizeObserver({\n    ref: getCodeRef(),\n    onResize: function onResize() {\n      if (codeContentRef !== null && codeContentRef !== void 0 && codeContentRef.current && type === 'multi') {\n        var _codeContentRef$curre = codeContentRef.current.getBoundingClientRect(),\n          height = _codeContentRef$curre.height;\n        if (maxCollapsedNumberOfRows > 0 && (maxExpandedNumberOfRows <= 0 || maxExpandedNumberOfRows > maxCollapsedNumberOfRows) && height > maxCollapsedNumberOfRows * rowHeightInPixels) {\n          setShouldShowMoreLessBtn(true);\n        } else {\n          setShouldShowMoreLessBtn(false);\n        }\n        if (expandedCode && minExpandedNumberOfRows > 0 && height <= minExpandedNumberOfRows * rowHeightInPixels) {\n          setExpandedCode(false);\n        }\n      }\n      if (codeContentRef !== null && codeContentRef !== void 0 && codeContentRef.current && type === 'multi' || codeContainerRef !== null && codeContainerRef !== void 0 && codeContainerRef.current && type === 'single') {\n        handleScroll();\n      }\n    }\n  }, [type, maxCollapsedNumberOfRows, maxExpandedNumberOfRows, minExpandedNumberOfRows, rowHeightInPixels]);\n  useEffect(function () {\n    handleScroll();\n  }, [handleScroll]);\n  var handleCopyClick = function handleCopyClick(evt) {\n    if (copyText || innerCodeRef !== null && innerCodeRef !== void 0 && innerCodeRef.current) {\n      var _innerCodeRef$current;\n      copy(copyText !== null && copyText !== void 0 ? copyText : innerCodeRef === null || innerCodeRef === void 0 ? void 0 : (_innerCodeRef$current = innerCodeRef.current) === null || _innerCodeRef$current === void 0 ? void 0 : _innerCodeRef$current.innerText);\n    }\n    if (onClick) {\n      onClick(evt);\n    }\n  };\n  var codeSnippetClasses = cx(className, \"\".concat(prefix, \"--snippet\"), (_cx = {}, _defineProperty(_cx, \"\".concat(prefix, \"--snippet--\").concat(type), type), _defineProperty(_cx, \"\".concat(prefix, \"--snippet--disabled\"), type !== 'inline' && disabled), _defineProperty(_cx, \"\".concat(prefix, \"--snippet--expand\"), expandedCode), _defineProperty(_cx, \"\".concat(prefix, \"--snippet--light\"), light), _defineProperty(_cx, \"\".concat(prefix, \"--snippet--no-copy\"), hideCopyButton), _defineProperty(_cx, \"\".concat(prefix, \"--snippet--wraptext\"), wrapText), _defineProperty(_cx, \"\".concat(prefix, \"--snippet--has-right-overflow\"), type == 'multi' && hasRightOverflow), _cx));\n  var expandCodeBtnText = expandedCode ? showLessText : showMoreText;\n  if (type === 'inline') {\n    if (hideCopyButton) {\n      return /*#__PURE__*/React__default.createElement(\"span\", {\n        className: codeSnippetClasses\n      }, /*#__PURE__*/React__default.createElement(\"code\", {\n        id: uid,\n        ref: innerCodeRef\n      }, children));\n    }\n    return /*#__PURE__*/React__default.createElement(Copy, _extends({}, rest, {\n      onClick: handleCopyClick,\n      \"aria-label\": deprecatedAriaLabel || ariaLabel,\n      \"aria-describedby\": uid,\n      className: codeSnippetClasses,\n      feedback: feedback,\n      feedbackTimeout: feedbackTimeout\n    }), /*#__PURE__*/React__default.createElement(\"code\", {\n      id: uid,\n      ref: innerCodeRef\n    }, children));\n  }\n  var containerStyle = {};\n  if (type === 'multi') {\n    var styles = {};\n    if (expandedCode) {\n      if (maxExpandedNumberOfRows > 0) {\n        styles.maxHeight = maxExpandedNumberOfRows * rowHeightInPixels;\n      }\n      if (minExpandedNumberOfRows > 0) {\n        styles.minHeight = minExpandedNumberOfRows * rowHeightInPixels;\n      }\n    } else {\n      if (maxCollapsedNumberOfRows > 0) {\n        styles.maxHeight = maxCollapsedNumberOfRows * rowHeightInPixels;\n      }\n      if (minCollapsedNumberOfRows > 0) {\n        styles.minHeight = minCollapsedNumberOfRows * rowHeightInPixels;\n      }\n    }\n    if (Object.keys(styles).length) {\n      containerStyle.style = styles;\n    }\n  }\n  return /*#__PURE__*/React__default.createElement(\"div\", _extends({}, rest, {\n    className: codeSnippetClasses\n  }), /*#__PURE__*/React__default.createElement(\"div\", _extends({\n    ref: codeContainerRef,\n    role: type === 'single' || type === 'multi' ? 'textbox' : null,\n    tabIndex: (type === 'single' || type === 'multi') && !disabled ? 0 : null,\n    className: \"\".concat(prefix, \"--snippet-container\"),\n    \"aria-label\": deprecatedAriaLabel || ariaLabel || 'code-snippet',\n    \"aria-readonly\": type === 'single' || type === 'multi' ? true : null,\n    \"aria-multiline\": type === 'multi' ? true : null,\n    onScroll: type === 'single' && handleScroll || null\n  }, containerStyle), /*#__PURE__*/React__default.createElement(\"pre\", {\n    ref: codeContentRef,\n    onScroll: type === 'multi' && handleScroll || null\n  }, /*#__PURE__*/React__default.createElement(\"code\", {\n    ref: innerCodeRef\n  }, children))), hasLeftOverflow && /*#__PURE__*/React__default.createElement(\"div\", {\n    className: \"\".concat(prefix, \"--snippet__overflow-indicator--left\")\n  }), hasRightOverflow && type !== 'multi' && /*#__PURE__*/React__default.createElement(\"div\", {\n    className: \"\".concat(prefix, \"--snippet__overflow-indicator--right\")\n  }), !hideCopyButton && /*#__PURE__*/React__default.createElement(CopyButton, {\n    size: type === 'multi' ? 'sm' : 'md',\n    disabled: disabled,\n    onClick: handleCopyClick,\n    feedback: feedback,\n    feedbackTimeout: feedbackTimeout,\n    iconDescription: copyButtonDescription\n  }), shouldShowMoreLessBtn && /*#__PURE__*/React__default.createElement(Button, {\n    kind: \"ghost\",\n    size: \"sm\",\n    className: \"\".concat(prefix, \"--snippet-btn--expand\"),\n    disabled: disabled,\n    onClick: function onClick() {\n      return setExpandedCode(!expandedCode);\n    }\n  }, /*#__PURE__*/React__default.createElement(\"span\", {\n    className: \"\".concat(prefix, \"--snippet-btn--text\")\n  }, expandCodeBtnText), /*#__PURE__*/React__default.createElement(ChevronDown, {\n    className: \"\".concat(prefix, \"--icon-chevron--down \").concat(prefix, \"--snippet__icon\"),\n    name: \"chevron--down\",\n    role: \"img\"\n  })));\n}\nCodeSnippet.propTypes = (_CodeSnippet$propType = {}, _defineProperty(_CodeSnippet$propType, 'aria-label', PropTypes.string), _defineProperty(_CodeSnippet$propType, \"ariaLabel\", deprecate(PropTypes.string, 'This prop syntax has been deprecated. Please use the new `aria-label`.')), _defineProperty(_CodeSnippet$propType, \"children\", PropTypes.node), _defineProperty(_CodeSnippet$propType, \"className\", PropTypes.string), _defineProperty(_CodeSnippet$propType, \"copyButtonDescription\", PropTypes.string), _defineProperty(_CodeSnippet$propType, \"copyText\", PropTypes.string), _defineProperty(_CodeSnippet$propType, \"disabled\", PropTypes.bool), _defineProperty(_CodeSnippet$propType, \"feedback\", PropTypes.string), _defineProperty(_CodeSnippet$propType, \"feedbackTimeout\", PropTypes.number), _defineProperty(_CodeSnippet$propType, \"hideCopyButton\", PropTypes.bool), _defineProperty(_CodeSnippet$propType, \"light\", deprecate(PropTypes.bool, 'The `light` prop for `CodeSnippet` has ' + 'been deprecated in favor of the new `Layer` component. It will be removed in the next major release.')), _defineProperty(_CodeSnippet$propType, \"maxCollapsedNumberOfRows\", PropTypes.number), _defineProperty(_CodeSnippet$propType, \"maxExpandedNumberOfRows\", PropTypes.number), _defineProperty(_CodeSnippet$propType, \"minCollapsedNumberOfRows\", PropTypes.number), _defineProperty(_CodeSnippet$propType, \"minExpandedNumberOfRows\", PropTypes.number), _defineProperty(_CodeSnippet$propType, \"onClick\", PropTypes.func), _defineProperty(_CodeSnippet$propType, \"showLessText\", PropTypes.string), _defineProperty(_CodeSnippet$propType, \"showMoreText\", PropTypes.string), _defineProperty(_CodeSnippet$propType, \"type\", PropTypes.oneOf(['single', 'inline', 'multi'])), _defineProperty(_CodeSnippet$propType, \"wrapText\", PropTypes.bool), _CodeSnippet$propType);\nCodeSnippet.defaultProps = (_CodeSnippet$defaultP = {}, _defineProperty(_CodeSnippet$defaultP, 'aria-label', 'Copy to clipboard'), _defineProperty(_CodeSnippet$defaultP, \"type\", 'single'), _defineProperty(_CodeSnippet$defaultP, \"showMoreText\", 'Show more'), _defineProperty(_CodeSnippet$defaultP, \"showLessText\", 'Show less'), _defineProperty(_CodeSnippet$defaultP, \"wrapText\", false), _CodeSnippet$defaultP);\nexport { CodeSnippet as default };","map":{"version":3,"names":["extends","_extends","PropTypes","React__default","useState","useRef","useCallback","useEffect","cx","useResizeObserver","ChevronDown","Copy","Button","CopyButton","uniqueId","copy","deprecate","usePrefix","rowHeightInPixels","defaultMaxCollapsedNumberOfRows","defaultMaxExpandedNumberOfRows","defaultMinCollapsedNumberOfRows","defaultMinExpandedNumberOfRows","CodeSnippet","_ref","_cx","className","type","children","disabled","feedback","feedbackTimeout","onClick","ariaLabel","deprecatedAriaLabel","copyText","copyButtonDescription","light","showMoreText","showLessText","hideCopyButton","wrapText","_ref$maxCollapsedNumb","maxCollapsedNumberOfRows","_ref$maxExpandedNumbe","maxExpandedNumberOfRows","_ref$minCollapsedNumb","minCollapsedNumberOfRows","_ref$minExpandedNumbe","minExpandedNumberOfRows","rest","_objectWithoutProperties","_excluded","_useState","_useState2","_slicedToArray","expandedCode","setExpandedCode","_useState3","_useState4","shouldShowMoreLessBtn","setShouldShowMoreLessBtn","_useRef","uid","current","codeContentRef","codeContainerRef","innerCodeRef","_useState5","_useState6","hasLeftOverflow","setHasLeftOverflow","_useState7","_useState8","hasRightOverflow","setHasRightOverflow","getCodeRef","prefix","getCodeRefDimensions","_getCodeRef$current","codeClientWidth","clientWidth","codeScrollLeft","scrollLeft","codeScrollWidth","scrollWidth","horizontalOverflow","handleScroll","_getCodeRefDimensions","ref","onResize","_codeContentRef$curre","getBoundingClientRect","height","handleCopyClick","evt","_innerCodeRef$current","innerText","codeSnippetClasses","concat","_defineProperty","expandCodeBtnText","createElement","id","containerStyle","styles","maxHeight","minHeight","Object","keys","length","style","role","tabIndex","onScroll","size","iconDescription","kind","name","propTypes","_CodeSnippet$propType","string","node","bool","number","func","oneOf","defaultProps","_CodeSnippet$defaultP","default"],"sources":["/home/saymon/Backup/Portifolio/Hematology-App-with-Carbon-Design-System/frontend/node_modules/@carbon/react/es/components/CodeSnippet/CodeSnippet.js"],"sourcesContent":["/**\n * Copyright IBM Corp. 2016, 2023\n *\n * This source code is licensed under the Apache-2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { extends as _extends } from '../../_virtual/_rollupPluginBabelHelpers.js';\nimport PropTypes from 'prop-types';\nimport React__default, { useState, useRef, useCallback, useEffect } from 'react';\nimport cx from 'classnames';\nimport useResizeObserver from 'use-resize-observer/polyfilled';\nimport { ChevronDown } from '@carbon/icons-react';\nimport Copy from '../Copy/Copy.js';\nimport Button from '../Button/Button.js';\nimport '../Button/Button.Skeleton.js';\nimport CopyButton from '../CopyButton/CopyButton.js';\nimport uniqueId from '../../tools/uniqueId.js';\nimport copy from 'copy-to-clipboard';\nimport deprecate from '../../prop-types/deprecate.js';\nimport { usePrefix } from '../../internal/usePrefix.js';\n\nconst rowHeightInPixels = 16;\nconst defaultMaxCollapsedNumberOfRows = 15;\nconst defaultMaxExpandedNumberOfRows = 0;\nconst defaultMinCollapsedNumberOfRows = 3;\nconst defaultMinExpandedNumberOfRows = 16;\nfunction CodeSnippet(_ref) {\n  let {\n    className,\n    type,\n    children,\n    disabled,\n    feedback,\n    feedbackTimeout,\n    onClick,\n    ['aria-label']: ariaLabel,\n    ariaLabel: deprecatedAriaLabel,\n    copyText,\n    copyButtonDescription,\n    light,\n    showMoreText,\n    showLessText,\n    hideCopyButton,\n    wrapText,\n    maxCollapsedNumberOfRows = defaultMaxCollapsedNumberOfRows,\n    maxExpandedNumberOfRows = defaultMaxExpandedNumberOfRows,\n    minCollapsedNumberOfRows = defaultMinCollapsedNumberOfRows,\n    minExpandedNumberOfRows = defaultMinExpandedNumberOfRows,\n    ...rest\n  } = _ref;\n  const [expandedCode, setExpandedCode] = useState(false);\n  const [shouldShowMoreLessBtn, setShouldShowMoreLessBtn] = useState(false);\n  const {\n    current: uid\n  } = useRef(uniqueId());\n  const codeContentRef = useRef();\n  const codeContainerRef = useRef();\n  const innerCodeRef = useRef();\n  const [hasLeftOverflow, setHasLeftOverflow] = useState(false);\n  const [hasRightOverflow, setHasRightOverflow] = useState(false);\n  const getCodeRef = useCallback(() => {\n    if (type === 'single') {\n      return codeContainerRef;\n    }\n    if (type === 'multi') {\n      return codeContentRef;\n    }\n  }, [type]);\n  const prefix = usePrefix();\n  const getCodeRefDimensions = useCallback(() => {\n    const {\n      clientWidth: codeClientWidth,\n      scrollLeft: codeScrollLeft,\n      scrollWidth: codeScrollWidth\n    } = getCodeRef().current;\n    return {\n      horizontalOverflow: codeScrollWidth > codeClientWidth,\n      codeClientWidth,\n      codeScrollWidth,\n      codeScrollLeft\n    };\n  }, [getCodeRef]);\n  const handleScroll = useCallback(() => {\n    if (type === 'inline' || type === 'single' && !codeContainerRef?.current || type === 'multi' && !codeContentRef?.current) {\n      return;\n    }\n    const {\n      horizontalOverflow,\n      codeClientWidth,\n      codeScrollWidth,\n      codeScrollLeft\n    } = getCodeRefDimensions();\n    setHasLeftOverflow(horizontalOverflow && !!codeScrollLeft);\n    setHasRightOverflow(horizontalOverflow && codeScrollLeft + codeClientWidth !== codeScrollWidth);\n  }, [type, getCodeRefDimensions]);\n  useResizeObserver({\n    ref: getCodeRef(),\n    onResize: () => {\n      if (codeContentRef?.current && type === 'multi') {\n        const {\n          height\n        } = codeContentRef.current.getBoundingClientRect();\n        if (maxCollapsedNumberOfRows > 0 && (maxExpandedNumberOfRows <= 0 || maxExpandedNumberOfRows > maxCollapsedNumberOfRows) && height > maxCollapsedNumberOfRows * rowHeightInPixels) {\n          setShouldShowMoreLessBtn(true);\n        } else {\n          setShouldShowMoreLessBtn(false);\n        }\n        if (expandedCode && minExpandedNumberOfRows > 0 && height <= minExpandedNumberOfRows * rowHeightInPixels) {\n          setExpandedCode(false);\n        }\n      }\n      if (codeContentRef?.current && type === 'multi' || codeContainerRef?.current && type === 'single') {\n        handleScroll();\n      }\n    }\n  }, [type, maxCollapsedNumberOfRows, maxExpandedNumberOfRows, minExpandedNumberOfRows, rowHeightInPixels]);\n  useEffect(() => {\n    handleScroll();\n  }, [handleScroll]);\n  const handleCopyClick = evt => {\n    if (copyText || innerCodeRef?.current) {\n      copy(copyText ?? innerCodeRef?.current?.innerText);\n    }\n    if (onClick) {\n      onClick(evt);\n    }\n  };\n  const codeSnippetClasses = cx(className, `${prefix}--snippet`, {\n    [`${prefix}--snippet--${type}`]: type,\n    [`${prefix}--snippet--disabled`]: type !== 'inline' && disabled,\n    [`${prefix}--snippet--expand`]: expandedCode,\n    [`${prefix}--snippet--light`]: light,\n    [`${prefix}--snippet--no-copy`]: hideCopyButton,\n    [`${prefix}--snippet--wraptext`]: wrapText,\n    [`${prefix}--snippet--has-right-overflow`]: type == 'multi' && hasRightOverflow\n  });\n  const expandCodeBtnText = expandedCode ? showLessText : showMoreText;\n  if (type === 'inline') {\n    if (hideCopyButton) {\n      return /*#__PURE__*/React__default.createElement(\"span\", {\n        className: codeSnippetClasses\n      }, /*#__PURE__*/React__default.createElement(\"code\", {\n        id: uid,\n        ref: innerCodeRef\n      }, children));\n    }\n    return /*#__PURE__*/React__default.createElement(Copy, _extends({}, rest, {\n      onClick: handleCopyClick,\n      \"aria-label\": deprecatedAriaLabel || ariaLabel,\n      \"aria-describedby\": uid,\n      className: codeSnippetClasses,\n      feedback: feedback,\n      feedbackTimeout: feedbackTimeout\n    }), /*#__PURE__*/React__default.createElement(\"code\", {\n      id: uid,\n      ref: innerCodeRef\n    }, children));\n  }\n  let containerStyle = {};\n  if (type === 'multi') {\n    const styles = {};\n    if (expandedCode) {\n      if (maxExpandedNumberOfRows > 0) {\n        styles.maxHeight = maxExpandedNumberOfRows * rowHeightInPixels;\n      }\n      if (minExpandedNumberOfRows > 0) {\n        styles.minHeight = minExpandedNumberOfRows * rowHeightInPixels;\n      }\n    } else {\n      if (maxCollapsedNumberOfRows > 0) {\n        styles.maxHeight = maxCollapsedNumberOfRows * rowHeightInPixels;\n      }\n      if (minCollapsedNumberOfRows > 0) {\n        styles.minHeight = minCollapsedNumberOfRows * rowHeightInPixels;\n      }\n    }\n    if (Object.keys(styles).length) {\n      containerStyle.style = styles;\n    }\n  }\n  return /*#__PURE__*/React__default.createElement(\"div\", _extends({}, rest, {\n    className: codeSnippetClasses\n  }), /*#__PURE__*/React__default.createElement(\"div\", _extends({\n    ref: codeContainerRef,\n    role: type === 'single' || type === 'multi' ? 'textbox' : null,\n    tabIndex: (type === 'single' || type === 'multi') && !disabled ? 0 : null,\n    className: `${prefix}--snippet-container`,\n    \"aria-label\": deprecatedAriaLabel || ariaLabel || 'code-snippet',\n    \"aria-readonly\": type === 'single' || type === 'multi' ? true : null,\n    \"aria-multiline\": type === 'multi' ? true : null,\n    onScroll: type === 'single' && handleScroll || null\n  }, containerStyle), /*#__PURE__*/React__default.createElement(\"pre\", {\n    ref: codeContentRef,\n    onScroll: type === 'multi' && handleScroll || null\n  }, /*#__PURE__*/React__default.createElement(\"code\", {\n    ref: innerCodeRef\n  }, children))), hasLeftOverflow && /*#__PURE__*/React__default.createElement(\"div\", {\n    className: `${prefix}--snippet__overflow-indicator--left`\n  }), hasRightOverflow && type !== 'multi' && /*#__PURE__*/React__default.createElement(\"div\", {\n    className: `${prefix}--snippet__overflow-indicator--right`\n  }), !hideCopyButton && /*#__PURE__*/React__default.createElement(CopyButton, {\n    size: type === 'multi' ? 'sm' : 'md',\n    disabled: disabled,\n    onClick: handleCopyClick,\n    feedback: feedback,\n    feedbackTimeout: feedbackTimeout,\n    iconDescription: copyButtonDescription\n  }), shouldShowMoreLessBtn && /*#__PURE__*/React__default.createElement(Button, {\n    kind: \"ghost\",\n    size: \"sm\",\n    className: `${prefix}--snippet-btn--expand`,\n    disabled: disabled,\n    onClick: () => setExpandedCode(!expandedCode)\n  }, /*#__PURE__*/React__default.createElement(\"span\", {\n    className: `${prefix}--snippet-btn--text`\n  }, expandCodeBtnText), /*#__PURE__*/React__default.createElement(ChevronDown, {\n    className: `${prefix}--icon-chevron--down ${prefix}--snippet__icon`,\n    name: \"chevron--down\",\n    role: \"img\"\n  })));\n}\nCodeSnippet.propTypes = {\n  /**\n   * Specify a label to be read by screen readers on the containing <textbox>\n   * node\n   */\n  ['aria-label']: PropTypes.string,\n  /**\n   * Deprecated, please use `aria-label` instead.\n   * Specify a label to be read by screen readers on the containing <textbox>\n   * node\n   */\n  ariaLabel: deprecate(PropTypes.string, 'This prop syntax has been deprecated. Please use the new `aria-label`.'),\n  /**\n   * Provide the content of your CodeSnippet as a node or string\n   */\n  children: PropTypes.node,\n  /**\n   * Specify an optional className to be applied to the container node\n   */\n  className: PropTypes.string,\n  /**\n   * Specify the description for the Copy Button\n   */\n  copyButtonDescription: PropTypes.string,\n  /**\n   * Optional text to copy. If not specified, the `children` node's `innerText`\n   * will be used as the copy value.\n   */\n  copyText: PropTypes.string,\n  /**\n   * Specify whether or not the CodeSnippet should be disabled\n   */\n  disabled: PropTypes.bool,\n  /**\n   * Specify the string displayed when the snippet is copied\n   */\n  feedback: PropTypes.string,\n  /**\n   * Specify the time it takes for the feedback message to timeout\n   */\n  feedbackTimeout: PropTypes.number,\n  /**\n   * Specify whether or not a copy button should be used/rendered.\n   */\n  hideCopyButton: PropTypes.bool,\n  /**\n   * Specify whether you are using the light variant of the Code Snippet,\n   * typically used for inline snippet to display an alternate color\n   */\n\n  light: deprecate(PropTypes.bool, 'The `light` prop for `CodeSnippet` has ' + 'been deprecated in favor of the new `Layer` component. It will be removed in the next major release.'),\n  /**\n   * Specify the maximum number of rows to be shown when in collapsed view\n   */\n  maxCollapsedNumberOfRows: PropTypes.number,\n  /**\n   * Specify the maximum number of rows to be shown when in expanded view\n   */\n  maxExpandedNumberOfRows: PropTypes.number,\n  /**\n   * Specify the minimum number of rows to be shown when in collapsed view\n   */\n  minCollapsedNumberOfRows: PropTypes.number,\n  /**\n   * Specify the minimum number of rows to be shown when in expanded view\n   */\n  minExpandedNumberOfRows: PropTypes.number,\n  /**\n   * An optional handler to listen to the `onClick` even fired by the Copy\n   * Button\n   */\n  onClick: PropTypes.func,\n  /**\n   * Specify a string that is displayed when the Code Snippet has been\n   * interacted with to show more lines\n   */\n  showLessText: PropTypes.string,\n  /**\n   * Specify a string that is displayed when the Code Snippet text is more\n   * than 15 lines\n   */\n  showMoreText: PropTypes.string,\n  /**\n   * Provide the type of Code Snippet\n   */\n  type: PropTypes.oneOf(['single', 'inline', 'multi']),\n  /**\n   * Specify whether or not to wrap the text.\n   */\n  wrapText: PropTypes.bool\n};\nCodeSnippet.defaultProps = {\n  ['aria-label']: 'Copy to clipboard',\n  type: 'single',\n  showMoreText: 'Show more',\n  showLessText: 'Show less',\n  wrapText: false\n};\n\nexport { CodeSnippet as default };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}