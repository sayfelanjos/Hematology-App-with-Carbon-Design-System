{"ast":null,"code":"/**\n * Copyright IBM Corp. 2016, 2023\n *\n * This source code is licensed under the Apache-2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { extends as _extends } from '../../_virtual/_rollupPluginBabelHelpers.js';\nimport React__default, { useRef, useState } from 'react';\nimport cx from 'classnames';\nimport PropTypes from 'prop-types';\nimport { usePrefix } from '../../internal/usePrefix.js';\nimport { useWindowEvent } from '../../internal/useEvent.js';\nimport { useMergedRefs } from '../../internal/useMergedRefs.js';\nimport { match } from '../../internal/keyboard/match.js';\nimport { Escape } from '../../internal/keyboard/keys.js';\nconst noopFn = () => {};\nconst HeaderPanel = /*#__PURE__*/React__default.forwardRef(function HeaderPanel(_ref, ref) {\n  let {\n    children,\n    className: customClassName,\n    expanded,\n    addFocusListeners = true,\n    onHeaderPanelFocus = noopFn,\n    href,\n    ...other\n  } = _ref;\n  const prefix = usePrefix();\n  const headerPanelReference = useRef(null);\n  const headerPanelRef = useMergedRefs([headerPanelReference, ref]);\n  const controlled = useRef(expanded !== undefined).current;\n  const [expandedState, setExpandedState] = useState(expanded);\n  const expandedProp = controlled ? expanded : expandedState;\n  const [lastClickedElement, setLastClickedElement] = useState(null);\n  const className = cx(`${prefix}--header-panel`, {\n    [`${prefix}--header-panel--expanded`]: expandedProp,\n    [customClassName]: !!customClassName\n  });\n  const eventHandlers = {};\n  if (addFocusListeners) {\n    eventHandlers.onBlur = event => {\n      if (!event.currentTarget.contains(event.relatedTarget) && !lastClickedElement?.classList?.contains('cds--switcher__item-link')) {\n        setExpandedState(false);\n        setLastClickedElement(null);\n        if (expanded) {\n          onHeaderPanelFocus();\n        }\n      }\n    };\n    eventHandlers.onKeyDown = event => {\n      if (match(event, Escape)) {\n        setExpandedState(false);\n        onHeaderPanelFocus();\n        if (href) {\n          window.location.href = href;\n        }\n      }\n    };\n  }\n  useWindowEvent('click', () => {\n    const focusedElement = document.activeElement;\n    setLastClickedElement(focusedElement);\n    if (children.type?.displayName === 'Switcher' && !focusedElement?.closest(`.${prefix}--header-panel--expanded`) && !focusedElement?.closest(`.${prefix}--header__action`) && !headerPanelRef?.current?.classList.contains(`${prefix}--switcher`) && expanded) {\n      setExpandedState(false);\n      onHeaderPanelFocus();\n    }\n  });\n  return /*#__PURE__*/React__default.createElement(\"div\", _extends({}, other, {\n    className: className,\n    ref: headerPanelRef\n  }, eventHandlers), children);\n});\nHeaderPanel.propTypes = {\n  /**\n   * Specify whether focus and blur listeners are added. They are by default.\n   */\n  addFocusListeners: PropTypes.bool,\n  /**\n   * The content that will render inside of the `HeaderPanel`\n   */\n  children: PropTypes.node,\n  /**\n   * Optionally provide a custom class to apply to the underlying `<li>` node\n   */\n  className: PropTypes.string,\n  /**\n   * Specify whether the panel is expanded\n   */\n  expanded: PropTypes.bool,\n  /**\n   * Provide the `href` to the id of the element on your package that could\n   * be target.\n   */\n  href: PropTypes.string,\n  /**\n   * An optional listener that is called a callback to collapse the HeaderPanel\n   */\n  onHeaderPanelFocus: PropTypes.func\n};\nHeaderPanel.displayName = 'HeaderPanel';\nvar HeaderPanel$1 = HeaderPanel;\nexport { HeaderPanel$1 as default };","map":{"version":3,"names":["extends","_extends","React__default","useRef","useState","cx","PropTypes","usePrefix","useWindowEvent","useMergedRefs","match","Escape","noopFn","HeaderPanel","forwardRef","_ref","ref","children","className","customClassName","expanded","addFocusListeners","onHeaderPanelFocus","href","other","prefix","headerPanelReference","headerPanelRef","controlled","undefined","current","expandedState","setExpandedState","expandedProp","lastClickedElement","setLastClickedElement","eventHandlers","onBlur","event","currentTarget","contains","relatedTarget","classList","onKeyDown","window","location","focusedElement","document","activeElement","type","displayName","closest","createElement","propTypes","bool","node","string","func","HeaderPanel$1","default"],"sources":["/home/saymon/Backup/Portifolio/Hematology-App-with-Carbon-Design-System/frontend/node_modules/@carbon/react/es/components/UIShell/HeaderPanel.js"],"sourcesContent":["/**\n * Copyright IBM Corp. 2016, 2023\n *\n * This source code is licensed under the Apache-2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { extends as _extends } from '../../_virtual/_rollupPluginBabelHelpers.js';\nimport React__default, { useRef, useState } from 'react';\nimport cx from 'classnames';\nimport PropTypes from 'prop-types';\nimport { usePrefix } from '../../internal/usePrefix.js';\nimport { useWindowEvent } from '../../internal/useEvent.js';\nimport { useMergedRefs } from '../../internal/useMergedRefs.js';\nimport { match } from '../../internal/keyboard/match.js';\nimport { Escape } from '../../internal/keyboard/keys.js';\n\nconst noopFn = () => {};\nconst HeaderPanel = /*#__PURE__*/React__default.forwardRef(function HeaderPanel(_ref, ref) {\n  let {\n    children,\n    className: customClassName,\n    expanded,\n    addFocusListeners = true,\n    onHeaderPanelFocus = noopFn,\n    href,\n    ...other\n  } = _ref;\n  const prefix = usePrefix();\n  const headerPanelReference = useRef(null);\n  const headerPanelRef = useMergedRefs([headerPanelReference, ref]);\n  const controlled = useRef(expanded !== undefined).current;\n  const [expandedState, setExpandedState] = useState(expanded);\n  const expandedProp = controlled ? expanded : expandedState;\n  const [lastClickedElement, setLastClickedElement] = useState(null);\n  const className = cx(`${prefix}--header-panel`, {\n    [`${prefix}--header-panel--expanded`]: expandedProp,\n    [customClassName]: !!customClassName\n  });\n  const eventHandlers = {};\n  if (addFocusListeners) {\n    eventHandlers.onBlur = event => {\n      if (!event.currentTarget.contains(event.relatedTarget) && !lastClickedElement?.classList?.contains('cds--switcher__item-link')) {\n        setExpandedState(false);\n        setLastClickedElement(null);\n        if (expanded) {\n          onHeaderPanelFocus();\n        }\n      }\n    };\n    eventHandlers.onKeyDown = event => {\n      if (match(event, Escape)) {\n        setExpandedState(false);\n        onHeaderPanelFocus();\n        if (href) {\n          window.location.href = href;\n        }\n      }\n    };\n  }\n  useWindowEvent('click', () => {\n    const focusedElement = document.activeElement;\n    setLastClickedElement(focusedElement);\n    if (children.type?.displayName === 'Switcher' && !focusedElement?.closest(`.${prefix}--header-panel--expanded`) && !focusedElement?.closest(`.${prefix}--header__action`) && !headerPanelRef?.current?.classList.contains(`${prefix}--switcher`) && expanded) {\n      setExpandedState(false);\n      onHeaderPanelFocus();\n    }\n  });\n  return /*#__PURE__*/React__default.createElement(\"div\", _extends({}, other, {\n    className: className,\n    ref: headerPanelRef\n  }, eventHandlers), children);\n});\nHeaderPanel.propTypes = {\n  /**\n   * Specify whether focus and blur listeners are added. They are by default.\n   */\n  addFocusListeners: PropTypes.bool,\n  /**\n   * The content that will render inside of the `HeaderPanel`\n   */\n  children: PropTypes.node,\n  /**\n   * Optionally provide a custom class to apply to the underlying `<li>` node\n   */\n  className: PropTypes.string,\n  /**\n   * Specify whether the panel is expanded\n   */\n  expanded: PropTypes.bool,\n  /**\n   * Provide the `href` to the id of the element on your package that could\n   * be target.\n   */\n  href: PropTypes.string,\n  /**\n   * An optional listener that is called a callback to collapse the HeaderPanel\n   */\n  onHeaderPanelFocus: PropTypes.func\n};\nHeaderPanel.displayName = 'HeaderPanel';\nvar HeaderPanel$1 = HeaderPanel;\n\nexport { HeaderPanel$1 as default };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}