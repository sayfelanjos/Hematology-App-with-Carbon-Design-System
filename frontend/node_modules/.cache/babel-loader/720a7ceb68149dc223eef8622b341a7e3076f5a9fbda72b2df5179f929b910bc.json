{"ast":null,"code":"/**\n * Copyright IBM Corp. 2016, 2023\n *\n * This source code is licensed under the Apache-2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n/**\n * Copyright IBM Corp. 2016, 2023\n *\n * This source code is licensed under the Apache-2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n/**\n * Generic utility to compose event handlers so that consumers can supply their\n * own event listeners on table components. The default heuristic here is to\n * iterate through the given functions until `preventDefault` is called on the\n * given event.\n *\n * @param {Array<Function|undefined>} fns array of functions to apply to the event\n * @returns {any}\n */\nconst composeEventHandlers = fns => function (event) {\n  for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    args[_key - 1] = arguments[_key];\n  }\n  for (let i = 0; i < fns.length; i++) {\n    if (event.defaultPrevented) {\n      break;\n    }\n    const fn = fns[i];\n    if (typeof fn === 'function') {\n      fn(event, ...args);\n    }\n  }\n};\nexport { composeEventHandlers };","map":{"version":3,"names":["composeEventHandlers","fns","event","_len","arguments","length","args","Array","_key","i","defaultPrevented","fn"],"sources":["/home/saymon/Backup/Portifolio/Hematology-App-with-Carbon-Design-System/frontend/node_modules/@carbon/react/es/tools/events.js"],"sourcesContent":["/**\n * Copyright IBM Corp. 2016, 2023\n *\n * This source code is licensed under the Apache-2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n/**\n * Copyright IBM Corp. 2016, 2023\n *\n * This source code is licensed under the Apache-2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n/**\n * Generic utility to compose event handlers so that consumers can supply their\n * own event listeners on table components. The default heuristic here is to\n * iterate through the given functions until `preventDefault` is called on the\n * given event.\n *\n * @param {Array<Function|undefined>} fns array of functions to apply to the event\n * @returns {any}\n */\nconst composeEventHandlers = fns => function (event) {\n  for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    args[_key - 1] = arguments[_key];\n  }\n  for (let i = 0; i < fns.length; i++) {\n    if (event.defaultPrevented) {\n      break;\n    }\n    const fn = fns[i];\n    if (typeof fn === 'function') {\n      fn(event, ...args);\n    }\n  }\n};\n\nexport { composeEventHandlers };\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAMA,oBAAoB,GAAGC,GAAG,IAAI,UAAUC,KAAK,EAAE;EACnD,KAAK,IAAIC,IAAI,GAAGC,SAAS,CAACC,MAAM,EAAEC,IAAI,GAAG,IAAIC,KAAK,CAACJ,IAAI,GAAG,CAAC,GAAGA,IAAI,GAAG,CAAC,GAAG,CAAC,CAAC,EAAEK,IAAI,GAAG,CAAC,EAAEA,IAAI,GAAGL,IAAI,EAAEK,IAAI,EAAE,EAAE;IAC1GF,IAAI,CAACE,IAAI,GAAG,CAAC,CAAC,GAAGJ,SAAS,CAACI,IAAI,CAAC;EAClC;EACA,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGR,GAAG,CAACI,MAAM,EAAEI,CAAC,EAAE,EAAE;IACnC,IAAIP,KAAK,CAACQ,gBAAgB,EAAE;MAC1B;IACF;IACA,MAAMC,EAAE,GAAGV,GAAG,CAACQ,CAAC,CAAC;IACjB,IAAI,OAAOE,EAAE,KAAK,UAAU,EAAE;MAC5BA,EAAE,CAACT,KAAK,EAAE,GAAGI,IAAI,CAAC;IACpB;EACF;AACF,CAAC;AAED,SAASN,oBAAoB"},"metadata":{},"sourceType":"module","externalDependencies":[]}