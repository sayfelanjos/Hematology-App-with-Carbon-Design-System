{"ast":null,"code":"import _objectWithoutProperties from \"/home/saymon/Backup/Portifolio/Hematology-App-with-Carbon-Design-System/frontend/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js\";\nvar _excluded = [\"buttonOnClick\", \"children\", \"className\", \"closeClassName\", \"closeIconClassName\", \"closeModal\", \"iconDescription\", \"label\", \"labelClassName\", \"title\", \"titleClassName\"];\n/**\n * Copyright IBM Corp. 2016, 2023\n *\n * This source code is licensed under the Apache-2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { extends as _extends } from '../../_virtual/_rollupPluginBabelHelpers.js';\nimport React__default from 'react';\nimport PropTypes from 'prop-types';\nimport cx from 'classnames';\nimport { Close } from '@carbon/icons-react';\nimport { usePrefix } from '../../internal/usePrefix.js';\nvar ModalHeader = /*#__PURE__*/React__default.forwardRef(function ModalHeader(_ref, ref) {\n  var buttonOnClick = _ref.buttonOnClick,\n    children = _ref.children,\n    customClassName = _ref.className,\n    closeClassName = _ref.closeClassName,\n    closeIconClassName = _ref.closeIconClassName,\n    closeModal = _ref.closeModal,\n    iconDescription = _ref.iconDescription,\n    label = _ref.label,\n    labelClassName = _ref.labelClassName,\n    title = _ref.title,\n    titleClassName = _ref.titleClassName,\n    rest = _objectWithoutProperties(_ref, _excluded);\n  var prefix = usePrefix();\n  function handleCloseButtonClick(evt) {\n    closeModal === null || closeModal === void 0 ? void 0 : closeModal(evt);\n    buttonOnClick === null || buttonOnClick === void 0 ? void 0 : buttonOnClick(evt);\n  }\n  var headerClass = cx(\"\".concat(prefix, \"--modal-header\"), customClassName);\n  var labelClass = cx(\"\".concat(prefix, \"--modal-header__label \").concat(prefix, \"--type-delta\"), labelClassName);\n  var titleClass = cx(\"\".concat(prefix, \"--modal-header__heading \").concat(prefix, \"--type-beta\"), titleClassName);\n  var closeClass = cx(\"\".concat(prefix, \"--modal-close\"), closeClassName);\n  var closeIconClass = cx(\"\".concat(prefix, \"--modal-close__icon\"), closeIconClassName);\n  return /*#__PURE__*/React__default.createElement(\"div\", _extends({\n    className: headerClass\n  }, rest, {\n    ref: ref\n  }), label && /*#__PURE__*/React__default.createElement(\"h2\", {\n    className: labelClass\n  }, label), title && /*#__PURE__*/React__default.createElement(\"h3\", {\n    className: titleClass\n  }, title), children, /*#__PURE__*/React__default.createElement(\"button\", {\n    onClick: handleCloseButtonClick,\n    className: closeClass,\n    title: iconDescription,\n    \"aria-label\": iconDescription,\n    type: \"button\"\n  }, /*#__PURE__*/React__default.createElement(Close, {\n    size: 20,\n    className: closeIconClass\n  })));\n});\nModalHeader.propTypes = {\n  /**\n   * Provide an optional function to be called when the close button is\n   * clicked\n   */\n  buttonOnClick: PropTypes.func,\n  /**\n   * Specify the content to be placed in the ModalHeader\n   */\n  children: PropTypes.node,\n  /**\n   * Specify an optional className to be applied to the modal header\n   */\n  className: PropTypes.string,\n  /**\n   * Specify an optional className to be applied to the modal close node\n   */\n  closeClassName: PropTypes.string,\n  /**\n   * Specify an optional className to be applied to the modal close icon node\n   */\n  closeIconClassName: PropTypes.string,\n  /**\n   * Provide an optional function to be called when the modal is closed\n   */\n  closeModal: PropTypes.func,\n  /**\n   * Specify a description for the close icon that can be read by screen\n   * readers\n   */\n  iconDescription: PropTypes.string,\n  /**\n   * Specify an optional label to be displayed\n   */\n  label: PropTypes.node,\n  /**\n   * Specify an optional className to be applied to the modal header label\n   */\n  labelClassName: PropTypes.string,\n  /**\n   * Specify an optional title to be displayed\n   */\n  title: PropTypes.node,\n  /**\n   * Specify an optional className to be applied to the modal heading\n   */\n  titleClassName: PropTypes.string\n};\nModalHeader.defaultProps = {\n  iconDescription: 'Close'\n};\nexport { ModalHeader };","map":{"version":3,"names":["extends","_extends","React__default","PropTypes","cx","Close","usePrefix","ModalHeader","forwardRef","_ref","ref","buttonOnClick","children","customClassName","className","closeClassName","closeIconClassName","closeModal","iconDescription","label","labelClassName","title","titleClassName","rest","_objectWithoutProperties","_excluded","prefix","handleCloseButtonClick","evt","headerClass","concat","labelClass","titleClass","closeClass","closeIconClass","createElement","onClick","type","size","propTypes","func","node","string","defaultProps"],"sources":["/home/saymon/Backup/Portifolio/Hematology-App-with-Carbon-Design-System/frontend/node_modules/@carbon/react/es/components/ComposedModal/ModalHeader.js"],"sourcesContent":["/**\n * Copyright IBM Corp. 2016, 2023\n *\n * This source code is licensed under the Apache-2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { extends as _extends } from '../../_virtual/_rollupPluginBabelHelpers.js';\nimport React__default from 'react';\nimport PropTypes from 'prop-types';\nimport cx from 'classnames';\nimport { Close } from '@carbon/icons-react';\nimport { usePrefix } from '../../internal/usePrefix.js';\n\nconst ModalHeader = /*#__PURE__*/React__default.forwardRef(function ModalHeader(_ref, ref) {\n  let {\n    buttonOnClick,\n    children,\n    className: customClassName,\n    closeClassName,\n    closeIconClassName,\n    closeModal,\n    iconDescription,\n    label,\n    labelClassName,\n    title,\n    titleClassName,\n    ...rest\n  } = _ref;\n  const prefix = usePrefix();\n  function handleCloseButtonClick(evt) {\n    closeModal?.(evt);\n    buttonOnClick?.(evt);\n  }\n  const headerClass = cx(`${prefix}--modal-header`, customClassName);\n  const labelClass = cx(`${prefix}--modal-header__label ${prefix}--type-delta`, labelClassName);\n  const titleClass = cx(`${prefix}--modal-header__heading ${prefix}--type-beta`, titleClassName);\n  const closeClass = cx(`${prefix}--modal-close`, closeClassName);\n  const closeIconClass = cx(`${prefix}--modal-close__icon`, closeIconClassName);\n  return /*#__PURE__*/React__default.createElement(\"div\", _extends({\n    className: headerClass\n  }, rest, {\n    ref: ref\n  }), label && /*#__PURE__*/React__default.createElement(\"h2\", {\n    className: labelClass\n  }, label), title && /*#__PURE__*/React__default.createElement(\"h3\", {\n    className: titleClass\n  }, title), children, /*#__PURE__*/React__default.createElement(\"button\", {\n    onClick: handleCloseButtonClick,\n    className: closeClass,\n    title: iconDescription,\n    \"aria-label\": iconDescription,\n    type: \"button\"\n  }, /*#__PURE__*/React__default.createElement(Close, {\n    size: 20,\n    className: closeIconClass\n  })));\n});\nModalHeader.propTypes = {\n  /**\n   * Provide an optional function to be called when the close button is\n   * clicked\n   */\n  buttonOnClick: PropTypes.func,\n  /**\n   * Specify the content to be placed in the ModalHeader\n   */\n  children: PropTypes.node,\n  /**\n   * Specify an optional className to be applied to the modal header\n   */\n  className: PropTypes.string,\n  /**\n   * Specify an optional className to be applied to the modal close node\n   */\n  closeClassName: PropTypes.string,\n  /**\n   * Specify an optional className to be applied to the modal close icon node\n   */\n  closeIconClassName: PropTypes.string,\n  /**\n   * Provide an optional function to be called when the modal is closed\n   */\n  closeModal: PropTypes.func,\n  /**\n   * Specify a description for the close icon that can be read by screen\n   * readers\n   */\n  iconDescription: PropTypes.string,\n  /**\n   * Specify an optional label to be displayed\n   */\n  label: PropTypes.node,\n  /**\n   * Specify an optional className to be applied to the modal header label\n   */\n  labelClassName: PropTypes.string,\n  /**\n   * Specify an optional title to be displayed\n   */\n  title: PropTypes.node,\n  /**\n   * Specify an optional className to be applied to the modal heading\n   */\n  titleClassName: PropTypes.string\n};\nModalHeader.defaultProps = {\n  iconDescription: 'Close'\n};\n\nexport { ModalHeader };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}