{"ast":null,"code":"import _defineProperty from \"/home/saymon/Backup/Portifolio/Hematology-App-with-Carbon-Design-System/frontend/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nimport _slicedToArray from \"/home/saymon/Backup/Portifolio/Hematology-App-with-Carbon-Design-System/frontend/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport _objectWithoutProperties from \"/home/saymon/Backup/Portifolio/Hematology-App-with-Carbon-Design-System/frontend/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js\";\nvar _excluded = [\"className\", \"id\", \"labelText\", \"hideLabel\", \"onChange\", \"onClick\", \"invalid\", \"invalidText\", \"helperText\", \"light\", \"placeholder\", \"enableCounter\", \"maxCount\", \"warn\", \"warnText\"];\n/**\n * Copyright IBM Corp. 2016, 2023\n *\n * This source code is licensed under the Apache-2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { extends as _extends } from '../../_virtual/_rollupPluginBabelHelpers.js';\nimport PropTypes from 'prop-types';\nimport React__default, { useContext, useState, useRef, useEffect } from 'react';\nimport cx from 'classnames';\nimport deprecate from '../../prop-types/deprecate.js';\nimport { WarningFilled, WarningAltFilled } from '@carbon/icons-react';\nimport { usePrefix } from '../../internal/usePrefix.js';\nimport '../FluidForm/FluidForm.js';\nimport { FormContext } from '../FluidForm/FormContext.js';\nimport { useAnnouncer } from '../../internal/useAnnouncer.js';\nimport useIsomorphicEffect from '../../internal/useIsomorphicEffect.js';\nimport { useMergedRefs } from '../../internal/useMergedRefs.js';\nimport setupGetInstanceId from '../../tools/setupGetInstanceId.js';\nvar getInstanceId = setupGetInstanceId();\nvar TextArea = /*#__PURE__*/React__default.forwardRef(function (props, forwardRef) {\n  var _defaultValue$toStrin, _value$toString, _cx, _cx4, _cx5;\n  var className = props.className,\n    id = props.id,\n    labelText = props.labelText,\n    hideLabel = props.hideLabel,\n    _onChange = props.onChange,\n    _onClick = props.onClick,\n    invalid = props.invalid,\n    invalidText = props.invalidText,\n    helperText = props.helperText,\n    light = props.light,\n    placeholder = props.placeholder,\n    enableCounter = props.enableCounter,\n    maxCount = props.maxCount,\n    _props$warn = props.warn,\n    warn = _props$warn === void 0 ? false : _props$warn,\n    warnText = props.warnText,\n    other = _objectWithoutProperties(props, _excluded);\n  var prefix = usePrefix();\n  var _useContext = useContext(FormContext),\n    isFluid = _useContext.isFluid;\n  var defaultValue = other.defaultValue,\n    value = other.value,\n    disabled = other.disabled;\n  var _useState = useState((defaultValue === null || defaultValue === void 0 ? void 0 : (_defaultValue$toStrin = defaultValue.toString()) === null || _defaultValue$toStrin === void 0 ? void 0 : _defaultValue$toStrin.length) || (value === null || value === void 0 ? void 0 : (_value$toString = value.toString()) === null || _value$toString === void 0 ? void 0 : _value$toString.length) || 0),\n    _useState2 = _slicedToArray(_useState, 2),\n    textCount = _useState2[0],\n    setTextCount = _useState2[1];\n  var _useRef = useRef(getInstanceId()),\n    textAreaInstanceId = _useRef.current;\n  useEffect(function () {\n    var _defaultValue$toStrin2, _value$toString2;\n    setTextCount((defaultValue === null || defaultValue === void 0 ? void 0 : (_defaultValue$toStrin2 = defaultValue.toString()) === null || _defaultValue$toStrin2 === void 0 ? void 0 : _defaultValue$toStrin2.length) || (value === null || value === void 0 ? void 0 : (_value$toString2 = value.toString()) === null || _value$toString2 === void 0 ? void 0 : _value$toString2.length) || 0);\n  }, [value, defaultValue]);\n  var textareaProps = {\n    id: id,\n    onChange: function onChange(evt) {\n      if (!other.disabled && _onChange) {\n        evt.persist();\n        // delay textCount assignation to give the textarea element value time to catch up if is a controlled input\n        setTimeout(function () {\n          var _evt$target, _evt$target$value;\n          setTextCount((_evt$target = evt.target) === null || _evt$target === void 0 ? void 0 : (_evt$target$value = _evt$target.value) === null || _evt$target$value === void 0 ? void 0 : _evt$target$value.length);\n        }, 0);\n        _onChange(evt);\n      }\n    },\n    onClick: function onClick(evt) {\n      if (!other.disabled && _onClick) {\n        _onClick(evt);\n      }\n    }\n  };\n  if (enableCounter) {\n    textareaProps.maxLength = maxCount;\n  }\n  var ariaAnnouncement = useAnnouncer(textCount, maxCount);\n  var labelClasses = cx(\"\".concat(prefix, \"--label\"), (_cx = {}, _defineProperty(_cx, \"\".concat(prefix, \"--visually-hidden\"), hideLabel && !isFluid), _defineProperty(_cx, \"\".concat(prefix, \"--label--disabled\"), disabled), _cx));\n  var label = labelText ? /*#__PURE__*/React__default.createElement(\"label\", {\n    htmlFor: id,\n    className: labelClasses\n  }, labelText) : null;\n  var counterClasses = cx(\"\".concat(prefix, \"--label\"), _defineProperty({}, \"\".concat(prefix, \"--label--disabled\"), disabled));\n  var counter = enableCounter && maxCount ? /*#__PURE__*/React__default.createElement(\"div\", {\n    className: counterClasses\n  }, \"\".concat(textCount, \"/\").concat(maxCount)) : null;\n  var helperTextClasses = cx(\"\".concat(prefix, \"--form__helper-text\"), _defineProperty({}, \"\".concat(prefix, \"--form__helper-text--disabled\"), other.disabled));\n  var helperId = !helperText ? undefined : \"text-area-helper-text-\".concat(textAreaInstanceId);\n  var helper = helperText ? /*#__PURE__*/React__default.createElement(\"div\", {\n    id: helperId,\n    className: helperTextClasses\n  }, helperText) : null;\n  var errorId = id + '-error-msg';\n  var error = invalid ? /*#__PURE__*/React__default.createElement(\"div\", {\n    role: \"alert\",\n    className: \"\".concat(prefix, \"--form-requirement\"),\n    id: errorId\n  }, invalidText, isFluid && /*#__PURE__*/React__default.createElement(WarningFilled, {\n    className: \"\".concat(prefix, \"--text-area__invalid-icon\")\n  })) : null;\n  var warning = warn ? /*#__PURE__*/React__default.createElement(\"div\", {\n    role: \"alert\",\n    className: \"\".concat(prefix, \"--form-requirement\")\n  }, warnText, isFluid && /*#__PURE__*/React__default.createElement(WarningAltFilled, {\n    className: \"\".concat(prefix, \"--text-area__invalid-icon \").concat(prefix, \"--text-area__invalid-icon--warning\")\n  })) : null;\n  var textareaClasses = cx(\"\".concat(prefix, \"--text-area\"), (_cx4 = {}, _defineProperty(_cx4, \"\".concat(prefix, \"--text-area--light\"), light), _defineProperty(_cx4, \"\".concat(prefix, \"--text-area--invalid\"), invalid), _defineProperty(_cx4, \"\".concat(prefix, \"--text-area--warn\"), warn), _cx4));\n  var textareaRef = useRef(null);\n  var ref = useMergedRefs([forwardRef, textareaRef]);\n  useIsomorphicEffect(function () {\n    if (other.cols && textareaRef.current) {\n      textareaRef.current.style.width = '';\n      textareaRef.current.style.resize = 'none';\n    } else if (textareaRef.current) {\n      textareaRef.current.style.width = \"100%\";\n    }\n  }, [other.cols]);\n  var ariaDescribedBy;\n  if (invalid) {\n    ariaDescribedBy = errorId;\n  } else if (!invalid && !warn && !isFluid && helperText) {\n    ariaDescribedBy = helperId;\n  }\n  var input = /*#__PURE__*/React__default.createElement(\"textarea\", _extends({}, other, textareaProps, {\n    placeholder: placeholder,\n    className: textareaClasses,\n    \"aria-invalid\": invalid,\n    \"aria-describedby\": ariaDescribedBy,\n    disabled: other.disabled,\n    readOnly: other.readOnly,\n    ref: ref\n  }));\n  return /*#__PURE__*/React__default.createElement(\"div\", {\n    className: cx(\"\".concat(prefix, \"--form-item\"), className)\n  }, /*#__PURE__*/React__default.createElement(\"div\", {\n    className: \"\".concat(prefix, \"--text-area__label-wrapper\")\n  }, label, counter), /*#__PURE__*/React__default.createElement(\"div\", {\n    className: cx(\"\".concat(prefix, \"--text-area__wrapper\"), (_cx5 = {}, _defineProperty(_cx5, \"\".concat(prefix, \"--text-area__wrapper--readonly\"), other.readOnly), _defineProperty(_cx5, \"\".concat(prefix, \"--text-area__wrapper--warn\"), warn), _cx5)),\n    \"data-invalid\": invalid || null\n  }, invalid && !isFluid && /*#__PURE__*/React__default.createElement(WarningFilled, {\n    className: \"\".concat(prefix, \"--text-area__invalid-icon\")\n  }), warn && !invalid && !isFluid && /*#__PURE__*/React__default.createElement(WarningAltFilled, {\n    className: \"\".concat(prefix, \"--text-area__invalid-icon \").concat(prefix, \"--text-area__invalid-icon--warning\")\n  }), input, /*#__PURE__*/React__default.createElement(\"span\", {\n    className: \"\".concat(prefix, \"--text-area__counter-alert\"),\n    role: \"alert\"\n  }, ariaAnnouncement), isFluid && /*#__PURE__*/React__default.createElement(\"hr\", {\n    className: \"\".concat(prefix, \"--text-area__divider\")\n  }), isFluid && invalid ? error : null, isFluid && warn && !invalid ? warning : null), !invalid && !warn && !isFluid ? helper : null, invalid && !isFluid ? error : null, warn && !invalid && !isFluid ? warning : null);\n});\nTextArea.displayName = 'TextArea';\nTextArea.propTypes = {\n  /**\n   * Provide a custom className that is applied directly to the underlying\n   * `<textarea>` node\n   */\n  className: PropTypes.string,\n  /**\n   * Specify the `cols` attribute for the underlying `<textarea>` node\n   */\n  cols: PropTypes.number,\n  /**\n   * Optionally provide the default value of the `<textarea>`\n   */\n  defaultValue: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  /**\n   * Specify whether the control is disabled\n   */\n  disabled: PropTypes.bool,\n  /**\n   * Specify whether to display the character counter\n   */\n  enableCounter: PropTypes.bool,\n  /**\n   * Provide text that is used alongside the control label for additional help\n   */\n  helperText: PropTypes.node,\n  /**\n   * Specify whether you want the underlying label to be visually hidden\n   */\n  hideLabel: PropTypes.bool,\n  /**\n   * Provide a unique identifier for the control\n   */\n  id: PropTypes.string,\n  /**\n   * Specify whether the control is currently invalid\n   */\n  invalid: PropTypes.bool,\n  /**\n   * Provide the text that is displayed when the control is in an invalid state\n   */\n  invalidText: PropTypes.node,\n  /**\n   * Provide the text that will be read by a screen reader when visiting this\n   * control\n   */\n  labelText: PropTypes.node.isRequired,\n  /**\n   * `true` to use the light version. For use on $ui-01 backgrounds only.\n   * Don't use this to make tile background color same as container background color.\n   */\n  light: deprecate(PropTypes.bool, 'The `light` prop for `TextArea` has ' + 'been deprecated in favor of the new `Layer` component. It will be removed in the next major release.'),\n  /**\n   * Max character count allowed for the textarea. This is needed in order for enableCounter to display\n   */\n  maxCount: PropTypes.number,\n  /**\n   * Optionally provide an `onChange` handler that is called whenever `<textarea>`\n   * is updated\n   */\n  onChange: PropTypes.func,\n  /**\n   * Optionally provide an `onClick` handler that is called whenever the\n   * `<textarea>` is clicked\n   */\n  onClick: PropTypes.func,\n  /**\n   * Specify the placeholder attribute for the `<textarea>`\n   */\n  placeholder: PropTypes.string,\n  /**\n   * Whether the textarea should be read-only\n   */\n  readOnly: PropTypes.bool,\n  /**\n   * Specify the rows attribute for the `<textarea>`\n   */\n  rows: PropTypes.number,\n  /**\n   * Provide the current value of the `<textarea>`\n   */\n  value: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  /**\n   * Specify whether the control is currently in warning state\n   */\n  warn: PropTypes.bool,\n  /**\n   * Provide the text that is displayed when the control is in warning state\n   */\n  warnText: PropTypes.node\n};\nTextArea.defaultProps = {\n  disabled: false,\n  onChange: function onChange() {},\n  onClick: function onClick() {},\n  placeholder: '',\n  rows: 4,\n  invalid: false,\n  invalidText: '',\n  helperText: '',\n  enableCounter: false,\n  maxCount: undefined,\n  warn: false,\n  warnText: ''\n};\nexport { TextArea as default };","map":{"version":3,"names":["extends","_extends","PropTypes","React__default","useContext","useState","useRef","useEffect","cx","deprecate","WarningFilled","WarningAltFilled","usePrefix","FormContext","useAnnouncer","useIsomorphicEffect","useMergedRefs","setupGetInstanceId","getInstanceId","TextArea","forwardRef","props","_defaultValue$toStrin","_value$toString","_cx","_cx4","_cx5","className","id","labelText","hideLabel","onChange","onClick","invalid","invalidText","helperText","light","placeholder","enableCounter","maxCount","_props$warn","warn","warnText","other","_objectWithoutProperties","_excluded","prefix","_useContext","isFluid","defaultValue","value","disabled","_useState","toString","length","_useState2","_slicedToArray","textCount","setTextCount","_useRef","textAreaInstanceId","current","_defaultValue$toStrin2","_value$toString2","textareaProps","evt","persist","setTimeout","_evt$target","_evt$target$value","target","maxLength","ariaAnnouncement","labelClasses","concat","_defineProperty","label","createElement","htmlFor","counterClasses","counter","helperTextClasses","helperId","undefined","helper","errorId","error","role","warning","textareaClasses","textareaRef","ref","cols","style","width","resize","ariaDescribedBy","input","readOnly","displayName","propTypes","string","number","oneOfType","bool","node","isRequired","func","rows","defaultProps","default"],"sources":["/home/saymon/Backup/Portifolio/Hematology-App-with-Carbon-Design-System/frontend/node_modules/@carbon/react/es/components/TextArea/TextArea.js"],"sourcesContent":["/**\n * Copyright IBM Corp. 2016, 2023\n *\n * This source code is licensed under the Apache-2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { extends as _extends } from '../../_virtual/_rollupPluginBabelHelpers.js';\nimport PropTypes from 'prop-types';\nimport React__default, { useContext, useState, useRef, useEffect } from 'react';\nimport cx from 'classnames';\nimport deprecate from '../../prop-types/deprecate.js';\nimport { WarningFilled, WarningAltFilled } from '@carbon/icons-react';\nimport { usePrefix } from '../../internal/usePrefix.js';\nimport '../FluidForm/FluidForm.js';\nimport { FormContext } from '../FluidForm/FormContext.js';\nimport { useAnnouncer } from '../../internal/useAnnouncer.js';\nimport useIsomorphicEffect from '../../internal/useIsomorphicEffect.js';\nimport { useMergedRefs } from '../../internal/useMergedRefs.js';\nimport setupGetInstanceId from '../../tools/setupGetInstanceId.js';\n\nconst getInstanceId = setupGetInstanceId();\nconst TextArea = /*#__PURE__*/React__default.forwardRef((props, forwardRef) => {\n  const {\n    className,\n    id,\n    labelText,\n    hideLabel,\n    onChange,\n    onClick,\n    invalid,\n    invalidText,\n    helperText,\n    light,\n    placeholder,\n    enableCounter,\n    maxCount,\n    warn = false,\n    warnText,\n    ...other\n  } = props;\n  const prefix = usePrefix();\n  const {\n    isFluid\n  } = useContext(FormContext);\n  const {\n    defaultValue,\n    value,\n    disabled\n  } = other;\n  const [textCount, setTextCount] = useState(defaultValue?.toString()?.length || value?.toString()?.length || 0);\n  const {\n    current: textAreaInstanceId\n  } = useRef(getInstanceId());\n  useEffect(() => {\n    setTextCount(defaultValue?.toString()?.length || value?.toString()?.length || 0);\n  }, [value, defaultValue]);\n  const textareaProps = {\n    id,\n    onChange: evt => {\n      if (!other.disabled && onChange) {\n        evt.persist();\n        // delay textCount assignation to give the textarea element value time to catch up if is a controlled input\n        setTimeout(() => {\n          setTextCount(evt.target?.value?.length);\n        }, 0);\n        onChange(evt);\n      }\n    },\n    onClick: evt => {\n      if (!other.disabled && onClick) {\n        onClick(evt);\n      }\n    }\n  };\n  if (enableCounter) {\n    textareaProps.maxLength = maxCount;\n  }\n  const ariaAnnouncement = useAnnouncer(textCount, maxCount);\n  const labelClasses = cx(`${prefix}--label`, {\n    [`${prefix}--visually-hidden`]: hideLabel && !isFluid,\n    [`${prefix}--label--disabled`]: disabled\n  });\n  const label = labelText ? /*#__PURE__*/React__default.createElement(\"label\", {\n    htmlFor: id,\n    className: labelClasses\n  }, labelText) : null;\n  const counterClasses = cx(`${prefix}--label`, {\n    [`${prefix}--label--disabled`]: disabled\n  });\n  const counter = enableCounter && maxCount ? /*#__PURE__*/React__default.createElement(\"div\", {\n    className: counterClasses\n  }, `${textCount}/${maxCount}`) : null;\n  const helperTextClasses = cx(`${prefix}--form__helper-text`, {\n    [`${prefix}--form__helper-text--disabled`]: other.disabled\n  });\n  const helperId = !helperText ? undefined : `text-area-helper-text-${textAreaInstanceId}`;\n  const helper = helperText ? /*#__PURE__*/React__default.createElement(\"div\", {\n    id: helperId,\n    className: helperTextClasses\n  }, helperText) : null;\n  const errorId = id + '-error-msg';\n  const error = invalid ? /*#__PURE__*/React__default.createElement(\"div\", {\n    role: \"alert\",\n    className: `${prefix}--form-requirement`,\n    id: errorId\n  }, invalidText, isFluid && /*#__PURE__*/React__default.createElement(WarningFilled, {\n    className: `${prefix}--text-area__invalid-icon`\n  })) : null;\n  const warning = warn ? /*#__PURE__*/React__default.createElement(\"div\", {\n    role: \"alert\",\n    className: `${prefix}--form-requirement`\n  }, warnText, isFluid && /*#__PURE__*/React__default.createElement(WarningAltFilled, {\n    className: `${prefix}--text-area__invalid-icon ${prefix}--text-area__invalid-icon--warning`\n  })) : null;\n  const textareaClasses = cx(`${prefix}--text-area`, {\n    [`${prefix}--text-area--light`]: light,\n    [`${prefix}--text-area--invalid`]: invalid,\n    [`${prefix}--text-area--warn`]: warn\n  });\n  const textareaRef = useRef(null);\n  const ref = useMergedRefs([forwardRef, textareaRef]);\n  useIsomorphicEffect(() => {\n    if (other.cols && textareaRef.current) {\n      textareaRef.current.style.width = '';\n      textareaRef.current.style.resize = 'none';\n    } else if (textareaRef.current) {\n      textareaRef.current.style.width = `100%`;\n    }\n  }, [other.cols]);\n  let ariaDescribedBy;\n  if (invalid) {\n    ariaDescribedBy = errorId;\n  } else if (!invalid && !warn && !isFluid && helperText) {\n    ariaDescribedBy = helperId;\n  }\n  const input = /*#__PURE__*/React__default.createElement(\"textarea\", _extends({}, other, textareaProps, {\n    placeholder: placeholder,\n    className: textareaClasses,\n    \"aria-invalid\": invalid,\n    \"aria-describedby\": ariaDescribedBy,\n    disabled: other.disabled,\n    readOnly: other.readOnly,\n    ref: ref\n  }));\n  return /*#__PURE__*/React__default.createElement(\"div\", {\n    className: cx(`${prefix}--form-item`, className)\n  }, /*#__PURE__*/React__default.createElement(\"div\", {\n    className: `${prefix}--text-area__label-wrapper`\n  }, label, counter), /*#__PURE__*/React__default.createElement(\"div\", {\n    className: cx(`${prefix}--text-area__wrapper`, {\n      [`${prefix}--text-area__wrapper--readonly`]: other.readOnly,\n      [`${prefix}--text-area__wrapper--warn`]: warn\n    }),\n    \"data-invalid\": invalid || null\n  }, invalid && !isFluid && /*#__PURE__*/React__default.createElement(WarningFilled, {\n    className: `${prefix}--text-area__invalid-icon`\n  }), warn && !invalid && !isFluid && /*#__PURE__*/React__default.createElement(WarningAltFilled, {\n    className: `${prefix}--text-area__invalid-icon ${prefix}--text-area__invalid-icon--warning`\n  }), input, /*#__PURE__*/React__default.createElement(\"span\", {\n    className: `${prefix}--text-area__counter-alert`,\n    role: \"alert\"\n  }, ariaAnnouncement), isFluid && /*#__PURE__*/React__default.createElement(\"hr\", {\n    className: `${prefix}--text-area__divider`\n  }), isFluid && invalid ? error : null, isFluid && warn && !invalid ? warning : null), !invalid && !warn && !isFluid ? helper : null, invalid && !isFluid ? error : null, warn && !invalid && !isFluid ? warning : null);\n});\nTextArea.displayName = 'TextArea';\nTextArea.propTypes = {\n  /**\n   * Provide a custom className that is applied directly to the underlying\n   * `<textarea>` node\n   */\n  className: PropTypes.string,\n  /**\n   * Specify the `cols` attribute for the underlying `<textarea>` node\n   */\n  cols: PropTypes.number,\n  /**\n   * Optionally provide the default value of the `<textarea>`\n   */\n  defaultValue: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  /**\n   * Specify whether the control is disabled\n   */\n  disabled: PropTypes.bool,\n  /**\n   * Specify whether to display the character counter\n   */\n  enableCounter: PropTypes.bool,\n  /**\n   * Provide text that is used alongside the control label for additional help\n   */\n  helperText: PropTypes.node,\n  /**\n   * Specify whether you want the underlying label to be visually hidden\n   */\n  hideLabel: PropTypes.bool,\n  /**\n   * Provide a unique identifier for the control\n   */\n  id: PropTypes.string,\n  /**\n   * Specify whether the control is currently invalid\n   */\n  invalid: PropTypes.bool,\n  /**\n   * Provide the text that is displayed when the control is in an invalid state\n   */\n  invalidText: PropTypes.node,\n  /**\n   * Provide the text that will be read by a screen reader when visiting this\n   * control\n   */\n  labelText: PropTypes.node.isRequired,\n  /**\n   * `true` to use the light version. For use on $ui-01 backgrounds only.\n   * Don't use this to make tile background color same as container background color.\n   */\n  light: deprecate(PropTypes.bool, 'The `light` prop for `TextArea` has ' + 'been deprecated in favor of the new `Layer` component. It will be removed in the next major release.'),\n  /**\n   * Max character count allowed for the textarea. This is needed in order for enableCounter to display\n   */\n  maxCount: PropTypes.number,\n  /**\n   * Optionally provide an `onChange` handler that is called whenever `<textarea>`\n   * is updated\n   */\n  onChange: PropTypes.func,\n  /**\n   * Optionally provide an `onClick` handler that is called whenever the\n   * `<textarea>` is clicked\n   */\n  onClick: PropTypes.func,\n  /**\n   * Specify the placeholder attribute for the `<textarea>`\n   */\n  placeholder: PropTypes.string,\n  /**\n   * Whether the textarea should be read-only\n   */\n  readOnly: PropTypes.bool,\n  /**\n   * Specify the rows attribute for the `<textarea>`\n   */\n  rows: PropTypes.number,\n  /**\n   * Provide the current value of the `<textarea>`\n   */\n  value: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  /**\n   * Specify whether the control is currently in warning state\n   */\n  warn: PropTypes.bool,\n  /**\n   * Provide the text that is displayed when the control is in warning state\n   */\n  warnText: PropTypes.node\n};\nTextArea.defaultProps = {\n  disabled: false,\n  onChange: () => {},\n  onClick: () => {},\n  placeholder: '',\n  rows: 4,\n  invalid: false,\n  invalidText: '',\n  helperText: '',\n  enableCounter: false,\n  maxCount: undefined,\n  warn: false,\n  warnText: ''\n};\n\nexport { TextArea as default };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}