{"ast":null,"code":"/**\n * Copyright IBM Corp. 2016, 2023\n *\n * This source code is licensed under the Apache-2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { extends as _extends } from '../../_virtual/_rollupPluginBabelHelpers.js';\nimport React__default, { useState, useRef } from 'react';\nimport cx from 'classnames';\nimport Search from '../Search/Search.js';\nimport '../Search/Search.Skeleton.js';\nimport { usePrefix } from '../../internal/usePrefix.js';\nimport { composeEventHandlers } from '../../tools/events.js';\nimport { match } from '../../internal/keyboard/match.js';\nimport { Escape } from '../../internal/keyboard/keys.js';\nfunction ExpandableSearch(_ref) {\n  let {\n    onBlur,\n    onChange,\n    onExpand,\n    onKeyDown,\n    defaultValue,\n    isExpanded,\n    ...props\n  } = _ref;\n  const [expanded, setExpanded] = useState(isExpanded || false);\n  const [hasContent, setHasContent] = useState(defaultValue ? true : false);\n  const searchRef = useRef(null);\n  const prefix = usePrefix();\n  function handleBlur(evt) {\n    const relatedTargetIsAllowed = evt.relatedTarget && evt.relatedTarget.classList.contains(`${prefix}--search-close`);\n    if (expanded && !relatedTargetIsAllowed && !hasContent) {\n      setExpanded(false);\n    }\n  }\n  function handleChange(evt) {\n    setHasContent(evt.target.value !== '');\n  }\n  function handleExpand() {\n    setExpanded(true);\n    searchRef.current?.focus?.();\n  }\n  function handleKeyDown(evt) {\n    if (expanded && match(evt, Escape)) {\n      evt.stopPropagation();\n\n      // escape key only clears if the input is empty, otherwise it clears the input\n      if (!evt.target?.value) {\n        setExpanded(false);\n      }\n    }\n  }\n  const classes = cx(`${prefix}--search--expandable`, {\n    [`${prefix}--search--expanded`]: expanded\n  }, props.className);\n  return /*#__PURE__*/React__default.createElement(Search, _extends({}, props, {\n    defaultValue: defaultValue,\n    isExpanded: expanded,\n    ref: searchRef,\n    className: classes,\n    onBlur: composeEventHandlers([onBlur, handleBlur]),\n    onChange: composeEventHandlers([onChange, handleChange]),\n    onExpand: composeEventHandlers([onExpand, handleExpand]),\n    onKeyDown: composeEventHandlers([onKeyDown, handleKeyDown])\n  }));\n}\nExpandableSearch.propTypes = Search.propTypes;\nExpandableSearch.displayName = 'ExpandableSearch';\nexport { ExpandableSearch as default };","map":{"version":3,"names":["extends","_extends","React__default","useState","useRef","cx","Search","usePrefix","composeEventHandlers","match","Escape","ExpandableSearch","_ref","onBlur","onChange","onExpand","onKeyDown","defaultValue","isExpanded","props","expanded","setExpanded","hasContent","setHasContent","searchRef","prefix","handleBlur","evt","relatedTargetIsAllowed","relatedTarget","classList","contains","handleChange","target","value","handleExpand","current","focus","handleKeyDown","stopPropagation","classes","className","createElement","ref","propTypes","displayName","default"],"sources":["/home/saymon/Backup/Portifolio/Hematology-App-with-Carbon-Design-System/frontend/node_modules/@carbon/react/es/components/ExpandableSearch/ExpandableSearch.js"],"sourcesContent":["/**\n * Copyright IBM Corp. 2016, 2023\n *\n * This source code is licensed under the Apache-2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { extends as _extends } from '../../_virtual/_rollupPluginBabelHelpers.js';\nimport React__default, { useState, useRef } from 'react';\nimport cx from 'classnames';\nimport Search from '../Search/Search.js';\nimport '../Search/Search.Skeleton.js';\nimport { usePrefix } from '../../internal/usePrefix.js';\nimport { composeEventHandlers } from '../../tools/events.js';\nimport { match } from '../../internal/keyboard/match.js';\nimport { Escape } from '../../internal/keyboard/keys.js';\n\nfunction ExpandableSearch(_ref) {\n  let {\n    onBlur,\n    onChange,\n    onExpand,\n    onKeyDown,\n    defaultValue,\n    isExpanded,\n    ...props\n  } = _ref;\n  const [expanded, setExpanded] = useState(isExpanded || false);\n  const [hasContent, setHasContent] = useState(defaultValue ? true : false);\n  const searchRef = useRef(null);\n  const prefix = usePrefix();\n  function handleBlur(evt) {\n    const relatedTargetIsAllowed = evt.relatedTarget && evt.relatedTarget.classList.contains(`${prefix}--search-close`);\n    if (expanded && !relatedTargetIsAllowed && !hasContent) {\n      setExpanded(false);\n    }\n  }\n  function handleChange(evt) {\n    setHasContent(evt.target.value !== '');\n  }\n  function handleExpand() {\n    setExpanded(true);\n    searchRef.current?.focus?.();\n  }\n  function handleKeyDown(evt) {\n    if (expanded && match(evt, Escape)) {\n      evt.stopPropagation();\n\n      // escape key only clears if the input is empty, otherwise it clears the input\n      if (!evt.target?.value) {\n        setExpanded(false);\n      }\n    }\n  }\n  const classes = cx(`${prefix}--search--expandable`, {\n    [`${prefix}--search--expanded`]: expanded\n  }, props.className);\n  return /*#__PURE__*/React__default.createElement(Search, _extends({}, props, {\n    defaultValue: defaultValue,\n    isExpanded: expanded,\n    ref: searchRef,\n    className: classes,\n    onBlur: composeEventHandlers([onBlur, handleBlur]),\n    onChange: composeEventHandlers([onChange, handleChange]),\n    onExpand: composeEventHandlers([onExpand, handleExpand]),\n    onKeyDown: composeEventHandlers([onKeyDown, handleKeyDown])\n  }));\n}\nExpandableSearch.propTypes = Search.propTypes;\nExpandableSearch.displayName = 'ExpandableSearch';\n\nexport { ExpandableSearch as default };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}