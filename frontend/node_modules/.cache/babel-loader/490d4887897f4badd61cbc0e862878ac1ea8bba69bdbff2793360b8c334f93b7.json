{"ast":null,"code":"import _objectSpread from \"/home/saymon/Backup/Portifolio/Hematology-App-with-Carbon-Design-System/frontend/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _defineProperty from \"/home/saymon/Backup/Portifolio/Hematology-App-with-Carbon-Design-System/frontend/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nimport _slicedToArray from \"/home/saymon/Backup/Portifolio/Hematology-App-with-Carbon-Design-System/frontend/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport _objectWithoutProperties from \"/home/saymon/Backup/Portifolio/Hematology-App-with-Carbon-Design-System/frontend/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js\";\nvar _excluded = [\"expanded\", \"defaultExpanded\", \"isChildOfHeader\", \"aria-label\", \"aria-labelledby\", \"children\", \"onToggle\", \"className\", \"href\", \"isFixedNav\", \"isRail\", \"isPersistent\", \"addFocusListeners\", \"addMouseListeners\", \"onOverlayClick\", \"onSideNavBlur\", \"enterDelayMs\"];\n/**\n * Copyright IBM Corp. 2016, 2023\n *\n * This source code is licensed under the Apache-2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { extends as _extends } from '../../_virtual/_rollupPluginBabelHelpers.js';\nimport React__default, { createContext, useRef, isValidElement } from 'react';\nimport cx from 'classnames';\nimport PropTypes from 'prop-types';\nimport { AriaLabelPropType } from '../../prop-types/AriaPropTypes.js';\nimport { CARBON_SIDENAV_ITEMS } from './_utils.js';\nimport { usePrefix } from '../../internal/usePrefix.js';\nimport { useMergedRefs } from '../../internal/useMergedRefs.js';\nimport { useWindowEvent } from '../../internal/useEvent.js';\nimport { useDelayedState } from '../../internal/useDelayedState.js';\nimport { breakpoints } from '@carbon/layout';\nimport { useMatchMedia } from '../../internal/useMatchMedia.js';\nimport { match } from '../../internal/keyboard/match.js';\nimport { Tab, Escape } from '../../internal/keyboard/keys.js';\n\n// TO-DO: comment back in when footer is added for rails\n// import SideNavFooter from './SideNavFooter';\nvar SideNavContext = /*#__PURE__*/createContext({});\nfunction SideNavRenderFunction(_ref, ref) {\n  var _cx, _cx2;\n  var expandedProp = _ref.expanded,\n    _ref$defaultExpanded = _ref.defaultExpanded,\n    defaultExpanded = _ref$defaultExpanded === void 0 ? false : _ref$defaultExpanded,\n    _ref$isChildOfHeader = _ref.isChildOfHeader,\n    isChildOfHeader = _ref$isChildOfHeader === void 0 ? true : _ref$isChildOfHeader,\n    ariaLabel = _ref['aria-label'],\n    ariaLabelledBy = _ref['aria-labelledby'],\n    children = _ref.children,\n    onToggle = _ref.onToggle,\n    customClassName = _ref.className,\n    href = _ref.href,\n    _ref$isFixedNav = _ref.isFixedNav,\n    isFixedNav = _ref$isFixedNav === void 0 ? false : _ref$isFixedNav,\n    isRail = _ref.isRail,\n    _ref$isPersistent = _ref.isPersistent,\n    isPersistent = _ref$isPersistent === void 0 ? true : _ref$isPersistent,\n    _ref$addFocusListener = _ref.addFocusListeners,\n    addFocusListeners = _ref$addFocusListener === void 0 ? true : _ref$addFocusListener,\n    _ref$addMouseListener = _ref.addMouseListeners,\n    addMouseListeners = _ref$addMouseListener === void 0 ? true : _ref$addMouseListener,\n    onOverlayClick = _ref.onOverlayClick,\n    onSideNavBlur = _ref.onSideNavBlur,\n    _ref$enterDelayMs = _ref.enterDelayMs,\n    enterDelayMs = _ref$enterDelayMs === void 0 ? 100 : _ref$enterDelayMs,\n    other = _objectWithoutProperties(_ref, _excluded);\n  var prefix = usePrefix();\n  var _useRef = useRef(expandedProp !== undefined),\n    controlled = _useRef.current;\n  var _useDelayedState = useDelayedState(defaultExpanded),\n    _useDelayedState2 = _slicedToArray(_useDelayedState, 2),\n    expandedState = _useDelayedState2[0],\n    setExpandedState = _useDelayedState2[1];\n  var _useDelayedState3 = useDelayedState(defaultExpanded),\n    _useDelayedState4 = _slicedToArray(_useDelayedState3, 2),\n    expandedViaHoverState = _useDelayedState4[0],\n    setExpandedViaHoverState = _useDelayedState4[1];\n  var expanded = controlled ? expandedProp : expandedState;\n  var sideNavRef = useRef(null);\n  var navRef = useMergedRefs([sideNavRef, ref]);\n  var handleToggle = function handleToggle(event) {\n    var value = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : !expanded;\n    if (!controlled) {\n      setExpandedState(value, enterDelayMs);\n    }\n    if (onToggle) {\n      onToggle(event, value);\n    }\n    if (controlled || isRail) {\n      setExpandedViaHoverState(value, enterDelayMs);\n    }\n  };\n  var accessibilityLabel = {\n    'aria-label': ariaLabel,\n    'aria-labelledby': ariaLabelledBy\n  };\n\n  // TO-DO: comment back in when footer is added for rails\n  // const assistiveText = expanded\n  //   ? t('carbon.sidenav.state.open')\n  //   : t('carbon.sidenav.state.closed');\n\n  var className = cx(customClassName, (_cx = {}, _defineProperty(_cx, \"\".concat(prefix, \"--side-nav\"), true), _defineProperty(_cx, \"\".concat(prefix, \"--side-nav--expanded\"), expanded || expandedViaHoverState), _defineProperty(_cx, \"\".concat(prefix, \"--side-nav--collapsed\"), !expanded && isFixedNav), _defineProperty(_cx, \"\".concat(prefix, \"--side-nav--rail\"), isRail), _defineProperty(_cx, \"\".concat(prefix, \"--side-nav--ux\"), isChildOfHeader), _defineProperty(_cx, \"\".concat(prefix, \"--side-nav--hidden\"), !isPersistent), _cx));\n  var overlayClassName = cx((_cx2 = {}, _defineProperty(_cx2, \"\".concat(prefix, \"--side-nav__overlay\"), true), _defineProperty(_cx2, \"\".concat(prefix, \"--side-nav__overlay-active\"), expanded || expandedViaHoverState), _cx2));\n  var childrenToRender = children;\n\n  // Pass the expansion state as a prop, so children can update themselves to match\n  childrenToRender = React__default.Children.map(children, function (child) {\n    // if we are controlled, check for if we have hovered over or the expanded state, else just use the expanded state (uncontrolled)\n    var currentExpansionState = controlled ? expandedViaHoverState || expanded : expanded;\n    if ( /*#__PURE__*/isValidElement(child)) {\n      var _childJsxElement$type, _childJsxElement$type2, _childJsxElement$type3;\n      var childJsxElement = child;\n      // avoid spreading `isSideNavExpanded` to non-Carbon UI Shell children\n      return /*#__PURE__*/React__default.cloneElement(childJsxElement, _objectSpread({}, CARBON_SIDENAV_ITEMS.includes((_childJsxElement$type = (_childJsxElement$type2 = childJsxElement.type) === null || _childJsxElement$type2 === void 0 ? void 0 : _childJsxElement$type2.displayName) !== null && _childJsxElement$type !== void 0 ? _childJsxElement$type : (_childJsxElement$type3 = childJsxElement.type) === null || _childJsxElement$type3 === void 0 ? void 0 : _childJsxElement$type3.name) ? {\n        isSideNavExpanded: currentExpansionState\n      } : {}));\n    }\n    return child;\n  });\n  var eventHandlers = {};\n  if (addFocusListeners) {\n    eventHandlers.onFocus = function (event) {\n      if (!event.currentTarget.contains(event.relatedTarget) && isRail) {\n        handleToggle(event, true);\n      }\n    };\n    eventHandlers.onBlur = function (event) {\n      if (!event.currentTarget.contains(event.relatedTarget)) {\n        handleToggle(event, false);\n      }\n      if (!event.currentTarget.contains(event.relatedTarget) && expanded && !isFixedNav) {\n        if (onSideNavBlur) {\n          onSideNavBlur();\n        }\n      }\n    };\n    eventHandlers.onKeyDown = function (event) {\n      if (match(event, Escape)) {\n        handleToggle(event, false);\n        if (href) {\n          window.location.href = href;\n        }\n      }\n    };\n  }\n  if (addMouseListeners && isRail) {\n    eventHandlers.onMouseEnter = function () {\n      handleToggle(true, true);\n    };\n    eventHandlers.onMouseLeave = function () {\n      setExpandedState(false);\n      setExpandedViaHoverState(false);\n      handleToggle(false, false);\n    };\n    eventHandlers.onClick = function () {\n      //if delay is enabled, and user intentionally clicks it to see it expanded immediately\n      setExpandedState(true);\n      setExpandedViaHoverState(true);\n      handleToggle(true, true);\n    };\n  }\n  useWindowEvent('keydown', function (event) {\n    var focusedElement = document.activeElement;\n    if (match(event, Tab) && expanded && !isFixedNav && sideNavRef.current && focusedElement !== null && focusedElement !== void 0 && focusedElement.classList.contains(\"\".concat(prefix, \"--header__menu-toggle\")) && !focusedElement.closest('nav')) {\n      sideNavRef.current.focus();\n    }\n  });\n  var lgMediaQuery = \"(min-width: \".concat(breakpoints.lg.width, \")\");\n  var isLg = useMatchMedia(lgMediaQuery);\n  return /*#__PURE__*/React__default.createElement(SideNavContext.Provider, {\n    value: {\n      isRail: isRail\n    }\n  }, isFixedNav ? null : /*#__PURE__*/\n  // eslint-disable-next-line jsx-a11y/click-events-have-key-events, jsx-a11y/no-static-element-interactions\n  React__default.createElement(\"div\", {\n    className: overlayClassName,\n    onClick: onOverlayClick\n  }), /*#__PURE__*/React__default.createElement(\"nav\", _extends({\n    tabIndex: -1,\n    ref: navRef,\n    className: \"\".concat(prefix, \"--side-nav__navigation \").concat(className),\n    inert: !isRail && (expanded || isLg ? undefined : -1)\n  }, accessibilityLabel, eventHandlers, other), childrenToRender));\n}\nvar SideNav = /*#__PURE__*/React__default.forwardRef(SideNavRenderFunction);\nSideNav.displayName = 'SideNav';\nSideNav.propTypes = _objectSpread(_objectSpread({}, AriaLabelPropType), {}, {\n  /**\n   * Specify whether focus and blur listeners are added. They are by default.\n   */\n  addFocusListeners: PropTypes.bool,\n  /**\n   * Specify whether mouse entry/exit listeners are added. They are by default.\n   */\n  addMouseListeners: PropTypes.bool,\n  /**\n   * Optionally provide a custom class to apply to the underlying `<li>` node\n   */\n  className: PropTypes.string,\n  /**\n   * If `true`, the SideNav will be open on initial render.\n   */\n  defaultExpanded: PropTypes.bool,\n  /**\n   * Specify the duration in milliseconds to delay before displaying the sidenavigation\n   */\n  enterDelayMs: PropTypes.number,\n  /**\n   * If `true`, the SideNav will be expanded, otherwise it will be collapsed.\n   * Using this prop causes SideNav to become a controled component.\n   */\n  expanded: PropTypes.bool,\n  /**\n   * Provide the `href` to the id of the element on your package that is the\n   * main content.\n   */\n  href: PropTypes.string,\n  /**\n   * Optionally provide a custom class to apply to the underlying `<li>` node\n   */\n  isChildOfHeader: PropTypes.bool,\n  /**\n   * Specify if sideNav is standalone\n   */\n  isFixedNav: PropTypes.bool,\n  /**\n   * Specify if the sideNav will be persistent above the lg breakpoint\n   */\n  isPersistent: PropTypes.bool,\n  /**\n   * Optional prop to display the side nav rail.\n   */\n  isRail: PropTypes.bool,\n  /**\n   * An optional listener that is called when the SideNav overlay is clicked\n   *\n   * @param {object} event\n   */\n  onOverlayClick: PropTypes.func,\n  /**\n   * An optional listener that is called a callback to collapse the SideNav\n   */\n\n  onSideNavBlur: PropTypes.func,\n  /**\n   * An optional listener that is called when an event that would cause\n   * toggling the SideNav occurs.\n   *\n   * @param {object} event\n   * @param {boolean} value\n   */\n  onToggle: PropTypes.func\n\n  /**\n   * Provide a custom function for translating all message ids within this\n   * component. This function will take in two arguments: the mesasge Id and the\n   * state of the component. From this, you should return a string representing\n   * the label you want displayed or read by screen readers.\n   */\n  // translateById: PropTypes.func,\n});\n\nvar SideNav$1 = SideNav;\nexport { SideNavContext, SideNav$1 as default };","map":{"version":3,"names":["extends","_extends","React__default","createContext","useRef","isValidElement","cx","PropTypes","AriaLabelPropType","CARBON_SIDENAV_ITEMS","usePrefix","useMergedRefs","useWindowEvent","useDelayedState","breakpoints","useMatchMedia","match","Tab","Escape","SideNavContext","SideNavRenderFunction","_ref","ref","_cx","_cx2","expandedProp","expanded","_ref$defaultExpanded","defaultExpanded","_ref$isChildOfHeader","isChildOfHeader","ariaLabel","ariaLabelledBy","children","onToggle","customClassName","className","href","_ref$isFixedNav","isFixedNav","isRail","_ref$isPersistent","isPersistent","_ref$addFocusListener","addFocusListeners","_ref$addMouseListener","addMouseListeners","onOverlayClick","onSideNavBlur","_ref$enterDelayMs","enterDelayMs","other","_objectWithoutProperties","_excluded","prefix","_useRef","undefined","controlled","current","_useDelayedState","_useDelayedState2","_slicedToArray","expandedState","setExpandedState","_useDelayedState3","_useDelayedState4","expandedViaHoverState","setExpandedViaHoverState","sideNavRef","navRef","handleToggle","event","value","arguments","length","accessibilityLabel","_defineProperty","concat","overlayClassName","childrenToRender","Children","map","child","currentExpansionState","_childJsxElement$type","_childJsxElement$type2","_childJsxElement$type3","childJsxElement","cloneElement","_objectSpread","includes","type","displayName","name","isSideNavExpanded","eventHandlers","onFocus","currentTarget","contains","relatedTarget","onBlur","onKeyDown","window","location","onMouseEnter","onMouseLeave","onClick","focusedElement","document","activeElement","classList","closest","focus","lgMediaQuery","lg","width","isLg","createElement","Provider","tabIndex","inert","SideNav","forwardRef","propTypes","bool","string","number","func","SideNav$1","default"],"sources":["/home/saymon/Backup/Portifolio/Hematology-App-with-Carbon-Design-System/frontend/node_modules/@carbon/react/es/components/UIShell/SideNav.js"],"sourcesContent":["/**\n * Copyright IBM Corp. 2016, 2023\n *\n * This source code is licensed under the Apache-2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { extends as _extends } from '../../_virtual/_rollupPluginBabelHelpers.js';\nimport React__default, { createContext, useRef, isValidElement } from 'react';\nimport cx from 'classnames';\nimport PropTypes from 'prop-types';\nimport { AriaLabelPropType } from '../../prop-types/AriaPropTypes.js';\nimport { CARBON_SIDENAV_ITEMS } from './_utils.js';\nimport { usePrefix } from '../../internal/usePrefix.js';\nimport { useMergedRefs } from '../../internal/useMergedRefs.js';\nimport { useWindowEvent } from '../../internal/useEvent.js';\nimport { useDelayedState } from '../../internal/useDelayedState.js';\nimport { breakpoints } from '@carbon/layout';\nimport { useMatchMedia } from '../../internal/useMatchMedia.js';\nimport { match } from '../../internal/keyboard/match.js';\nimport { Tab, Escape } from '../../internal/keyboard/keys.js';\n\n// TO-DO: comment back in when footer is added for rails\n// import SideNavFooter from './SideNavFooter';\nconst SideNavContext = /*#__PURE__*/createContext({});\nfunction SideNavRenderFunction(_ref, ref) {\n  let {\n    expanded: expandedProp,\n    defaultExpanded = false,\n    isChildOfHeader = true,\n    'aria-label': ariaLabel,\n    'aria-labelledby': ariaLabelledBy,\n    children,\n    onToggle,\n    className: customClassName,\n    // TO-DO: comment back in when footer is added for rails\n    // translateById: t = (id) => translations[id],\n    href,\n    isFixedNav = false,\n    isRail,\n    isPersistent = true,\n    addFocusListeners = true,\n    addMouseListeners = true,\n    onOverlayClick,\n    onSideNavBlur,\n    enterDelayMs = 100,\n    ...other\n  } = _ref;\n  const prefix = usePrefix();\n  const {\n    current: controlled\n  } = useRef(expandedProp !== undefined);\n  const [expandedState, setExpandedState] = useDelayedState(defaultExpanded);\n  const [expandedViaHoverState, setExpandedViaHoverState] = useDelayedState(defaultExpanded);\n  const expanded = controlled ? expandedProp : expandedState;\n  const sideNavRef = useRef(null);\n  const navRef = useMergedRefs([sideNavRef, ref]);\n  const handleToggle = function (event) {\n    let value = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : !expanded;\n    if (!controlled) {\n      setExpandedState(value, enterDelayMs);\n    }\n    if (onToggle) {\n      onToggle(event, value);\n    }\n    if (controlled || isRail) {\n      setExpandedViaHoverState(value, enterDelayMs);\n    }\n  };\n  const accessibilityLabel = {\n    'aria-label': ariaLabel,\n    'aria-labelledby': ariaLabelledBy\n  };\n\n  // TO-DO: comment back in when footer is added for rails\n  // const assistiveText = expanded\n  //   ? t('carbon.sidenav.state.open')\n  //   : t('carbon.sidenav.state.closed');\n\n  const className = cx(customClassName, {\n    [`${prefix}--side-nav`]: true,\n    [`${prefix}--side-nav--expanded`]: expanded || expandedViaHoverState,\n    [`${prefix}--side-nav--collapsed`]: !expanded && isFixedNav,\n    [`${prefix}--side-nav--rail`]: isRail,\n    [`${prefix}--side-nav--ux`]: isChildOfHeader,\n    [`${prefix}--side-nav--hidden`]: !isPersistent\n  });\n  const overlayClassName = cx({\n    [`${prefix}--side-nav__overlay`]: true,\n    [`${prefix}--side-nav__overlay-active`]: expanded || expandedViaHoverState\n  });\n  let childrenToRender = children;\n\n  // Pass the expansion state as a prop, so children can update themselves to match\n  childrenToRender = React__default.Children.map(children, child => {\n    // if we are controlled, check for if we have hovered over or the expanded state, else just use the expanded state (uncontrolled)\n    const currentExpansionState = controlled ? expandedViaHoverState || expanded : expanded;\n    if ( /*#__PURE__*/isValidElement(child)) {\n      const childJsxElement = child;\n      // avoid spreading `isSideNavExpanded` to non-Carbon UI Shell children\n      return /*#__PURE__*/React__default.cloneElement(childJsxElement, {\n        ...(CARBON_SIDENAV_ITEMS.includes(childJsxElement.type?.displayName ?? childJsxElement.type?.name) ? {\n          isSideNavExpanded: currentExpansionState\n        } : {})\n      });\n    }\n    return child;\n  });\n  const eventHandlers = {};\n  if (addFocusListeners) {\n    eventHandlers.onFocus = event => {\n      if (!event.currentTarget.contains(event.relatedTarget) && isRail) {\n        handleToggle(event, true);\n      }\n    };\n    eventHandlers.onBlur = event => {\n      if (!event.currentTarget.contains(event.relatedTarget)) {\n        handleToggle(event, false);\n      }\n      if (!event.currentTarget.contains(event.relatedTarget) && expanded && !isFixedNav) {\n        if (onSideNavBlur) {\n          onSideNavBlur();\n        }\n      }\n    };\n    eventHandlers.onKeyDown = event => {\n      if (match(event, Escape)) {\n        handleToggle(event, false);\n        if (href) {\n          window.location.href = href;\n        }\n      }\n    };\n  }\n  if (addMouseListeners && isRail) {\n    eventHandlers.onMouseEnter = () => {\n      handleToggle(true, true);\n    };\n    eventHandlers.onMouseLeave = () => {\n      setExpandedState(false);\n      setExpandedViaHoverState(false);\n      handleToggle(false, false);\n    };\n    eventHandlers.onClick = () => {\n      //if delay is enabled, and user intentionally clicks it to see it expanded immediately\n      setExpandedState(true);\n      setExpandedViaHoverState(true);\n      handleToggle(true, true);\n    };\n  }\n  useWindowEvent('keydown', event => {\n    const focusedElement = document.activeElement;\n    if (match(event, Tab) && expanded && !isFixedNav && sideNavRef.current && focusedElement?.classList.contains(`${prefix}--header__menu-toggle`) && !focusedElement.closest('nav')) {\n      sideNavRef.current.focus();\n    }\n  });\n  const lgMediaQuery = `(min-width: ${breakpoints.lg.width})`;\n  const isLg = useMatchMedia(lgMediaQuery);\n  return /*#__PURE__*/React__default.createElement(SideNavContext.Provider, {\n    value: {\n      isRail\n    }\n  }, isFixedNav ? null :\n  /*#__PURE__*/\n  // eslint-disable-next-line jsx-a11y/click-events-have-key-events, jsx-a11y/no-static-element-interactions\n  React__default.createElement(\"div\", {\n    className: overlayClassName,\n    onClick: onOverlayClick\n  }), /*#__PURE__*/React__default.createElement(\"nav\", _extends({\n    tabIndex: -1,\n    ref: navRef,\n    className: `${prefix}--side-nav__navigation ${className}`,\n    inert: !isRail && (expanded || isLg ? undefined : -1)\n  }, accessibilityLabel, eventHandlers, other), childrenToRender));\n}\nconst SideNav = /*#__PURE__*/React__default.forwardRef(SideNavRenderFunction);\nSideNav.displayName = 'SideNav';\nSideNav.propTypes = {\n  /**\n   * Required props for accessibility label on the underlying menu\n   */\n  ...AriaLabelPropType,\n  /**\n   * Specify whether focus and blur listeners are added. They are by default.\n   */\n  addFocusListeners: PropTypes.bool,\n  /**\n   * Specify whether mouse entry/exit listeners are added. They are by default.\n   */\n  addMouseListeners: PropTypes.bool,\n  /**\n   * Optionally provide a custom class to apply to the underlying `<li>` node\n   */\n  className: PropTypes.string,\n  /**\n   * If `true`, the SideNav will be open on initial render.\n   */\n  defaultExpanded: PropTypes.bool,\n  /**\n   * Specify the duration in milliseconds to delay before displaying the sidenavigation\n   */\n  enterDelayMs: PropTypes.number,\n  /**\n   * If `true`, the SideNav will be expanded, otherwise it will be collapsed.\n   * Using this prop causes SideNav to become a controled component.\n   */\n  expanded: PropTypes.bool,\n  /**\n   * Provide the `href` to the id of the element on your package that is the\n   * main content.\n   */\n  href: PropTypes.string,\n  /**\n   * Optionally provide a custom class to apply to the underlying `<li>` node\n   */\n  isChildOfHeader: PropTypes.bool,\n  /**\n   * Specify if sideNav is standalone\n   */\n  isFixedNav: PropTypes.bool,\n  /**\n   * Specify if the sideNav will be persistent above the lg breakpoint\n   */\n  isPersistent: PropTypes.bool,\n  /**\n   * Optional prop to display the side nav rail.\n   */\n  isRail: PropTypes.bool,\n  /**\n   * An optional listener that is called when the SideNav overlay is clicked\n   *\n   * @param {object} event\n   */\n  onOverlayClick: PropTypes.func,\n  /**\n   * An optional listener that is called a callback to collapse the SideNav\n   */\n\n  onSideNavBlur: PropTypes.func,\n  /**\n   * An optional listener that is called when an event that would cause\n   * toggling the SideNav occurs.\n   *\n   * @param {object} event\n   * @param {boolean} value\n   */\n  onToggle: PropTypes.func\n\n  /**\n   * Provide a custom function for translating all message ids within this\n   * component. This function will take in two arguments: the mesasge Id and the\n   * state of the component. From this, you should return a string representing\n   * the label you want displayed or read by screen readers.\n   */\n  // translateById: PropTypes.func,\n};\n\nvar SideNav$1 = SideNav;\n\nexport { SideNavContext, SideNav$1 as default };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}