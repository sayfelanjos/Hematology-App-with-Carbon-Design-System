{"ast":null,"code":"/**\n * Copyright IBM Corp. 2016, 2023\n *\n * This source code is licensed under the Apache-2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { extends as _extends } from '../../_virtual/_rollupPluginBabelHelpers.js';\nimport cx from 'classnames';\nimport PropTypes from 'prop-types';\nimport React__default from 'react';\nimport Button from '../Button/Button.js';\nimport '../Button/Button.Skeleton.js';\nimport TableActionList from './TableActionList.js';\nimport '../Text/index.js';\nimport { usePrefix } from '../../internal/usePrefix.js';\nimport { Text } from '../Text/Text.js';\nconst translationKeys = {\n  'carbon.table.batch.cancel': 'Cancel',\n  'carbon.table.batch.items.selected': 'items selected',\n  'carbon.table.batch.item.selected': 'item selected'\n};\nconst translateWithId = (id, state) => {\n  if (id === 'carbon.table.batch.cancel') {\n    return translationKeys[id];\n  }\n  return `${state.totalSelected} ${translationKeys[id]}`;\n};\nconst TableBatchActions = _ref => {\n  let {\n    className,\n    children,\n    shouldShowBatchActions,\n    totalSelected,\n    onCancel,\n    translateWithId: t,\n    ...rest\n  } = _ref;\n  const [isScrolling, setIsScrolling] = React__default.useState();\n  const prefix = usePrefix();\n  const batchActionsClasses = cx({\n    [`${prefix}--batch-actions`]: true,\n    [`${prefix}--batch-actions--active`]: shouldShowBatchActions\n  }, className);\n  const batchSummaryClasses = cx(`${prefix}--batch-summary`, {\n    [`${prefix}--batch-summary__scroll`]: isScrolling\n  });\n  return /*#__PURE__*/React__default.createElement(\"div\", _extends({\n    onScroll: () => {\n      setIsScrolling(!isScrolling);\n    },\n    \"aria-hidden\": !shouldShowBatchActions,\n    className: batchActionsClasses\n  }, rest), /*#__PURE__*/React__default.createElement(\"div\", {\n    className: batchSummaryClasses\n  }, /*#__PURE__*/React__default.createElement(\"p\", {\n    className: `${prefix}--batch-summary__para`\n  }, /*#__PURE__*/React__default.createElement(Text, {\n    as: \"span\"\n  }, totalSelected > 1 || totalSelected === 0 ? t('carbon.table.batch.items.selected', {\n    totalSelected\n  }) : t('carbon.table.batch.item.selected', {\n    totalSelected\n  })))), /*#__PURE__*/React__default.createElement(TableActionList, null, children, /*#__PURE__*/React__default.createElement(Button, {\n    className: `${prefix}--batch-summary__cancel`,\n    tabIndex: shouldShowBatchActions ? 0 : -1,\n    onClick: onCancel\n  }, t('carbon.table.batch.cancel'))));\n};\nTableBatchActions.translationKeys = Object.keys(translationKeys);\nTableBatchActions.propTypes = {\n  children: PropTypes.node,\n  className: PropTypes.string,\n  /**\n   * Hook required to listen for when the user initiates a cancel request\n   * through this component\n   */\n  onCancel: PropTypes.func.isRequired,\n  /**\n   * Boolean specifier for whether or not the batch action bar should be\n   * displayed\n   */\n  shouldShowBatchActions: PropTypes.bool,\n  /**\n   * Numeric representation of the total number of items selected in a table.\n   * This number is used to derive the selection message\n   */\n  totalSelected: PropTypes.number.isRequired,\n  /**\n   * Supply a method to translate internal strings with your i18n tool of\n   * choice. Translation keys are available on the `translationKeys` field for\n   * this component.\n   */\n  translateWithId: PropTypes.func\n};\nTableBatchActions.defaultProps = {\n  translateWithId\n};\nvar TableBatchActions$1 = TableBatchActions;\nexport { TableBatchActions$1 as default };","map":{"version":3,"names":["extends","_extends","cx","PropTypes","React__default","Button","TableActionList","usePrefix","Text","translationKeys","translateWithId","id","state","totalSelected","TableBatchActions","_ref","className","children","shouldShowBatchActions","onCancel","t","rest","isScrolling","setIsScrolling","useState","prefix","batchActionsClasses","batchSummaryClasses","createElement","onScroll","as","tabIndex","onClick","Object","keys","propTypes","node","string","func","isRequired","bool","number","defaultProps","TableBatchActions$1","default"],"sources":["/home/saymon/Backup/Portifolio/Hematology-App-with-Carbon-Design-System/frontend/node_modules/@carbon/react/es/components/DataTable/TableBatchActions.js"],"sourcesContent":["/**\n * Copyright IBM Corp. 2016, 2023\n *\n * This source code is licensed under the Apache-2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { extends as _extends } from '../../_virtual/_rollupPluginBabelHelpers.js';\nimport cx from 'classnames';\nimport PropTypes from 'prop-types';\nimport React__default from 'react';\nimport Button from '../Button/Button.js';\nimport '../Button/Button.Skeleton.js';\nimport TableActionList from './TableActionList.js';\nimport '../Text/index.js';\nimport { usePrefix } from '../../internal/usePrefix.js';\nimport { Text } from '../Text/Text.js';\n\nconst translationKeys = {\n  'carbon.table.batch.cancel': 'Cancel',\n  'carbon.table.batch.items.selected': 'items selected',\n  'carbon.table.batch.item.selected': 'item selected'\n};\nconst translateWithId = (id, state) => {\n  if (id === 'carbon.table.batch.cancel') {\n    return translationKeys[id];\n  }\n  return `${state.totalSelected} ${translationKeys[id]}`;\n};\nconst TableBatchActions = _ref => {\n  let {\n    className,\n    children,\n    shouldShowBatchActions,\n    totalSelected,\n    onCancel,\n    translateWithId: t,\n    ...rest\n  } = _ref;\n  const [isScrolling, setIsScrolling] = React__default.useState();\n  const prefix = usePrefix();\n  const batchActionsClasses = cx({\n    [`${prefix}--batch-actions`]: true,\n    [`${prefix}--batch-actions--active`]: shouldShowBatchActions\n  }, className);\n  const batchSummaryClasses = cx(`${prefix}--batch-summary`, {\n    [`${prefix}--batch-summary__scroll`]: isScrolling\n  });\n  return /*#__PURE__*/React__default.createElement(\"div\", _extends({\n    onScroll: () => {\n      setIsScrolling(!isScrolling);\n    },\n    \"aria-hidden\": !shouldShowBatchActions,\n    className: batchActionsClasses\n  }, rest), /*#__PURE__*/React__default.createElement(\"div\", {\n    className: batchSummaryClasses\n  }, /*#__PURE__*/React__default.createElement(\"p\", {\n    className: `${prefix}--batch-summary__para`\n  }, /*#__PURE__*/React__default.createElement(Text, {\n    as: \"span\"\n  }, totalSelected > 1 || totalSelected === 0 ? t('carbon.table.batch.items.selected', {\n    totalSelected\n  }) : t('carbon.table.batch.item.selected', {\n    totalSelected\n  })))), /*#__PURE__*/React__default.createElement(TableActionList, null, children, /*#__PURE__*/React__default.createElement(Button, {\n    className: `${prefix}--batch-summary__cancel`,\n    tabIndex: shouldShowBatchActions ? 0 : -1,\n    onClick: onCancel\n  }, t('carbon.table.batch.cancel'))));\n};\nTableBatchActions.translationKeys = Object.keys(translationKeys);\nTableBatchActions.propTypes = {\n  children: PropTypes.node,\n  className: PropTypes.string,\n  /**\n   * Hook required to listen for when the user initiates a cancel request\n   * through this component\n   */\n  onCancel: PropTypes.func.isRequired,\n  /**\n   * Boolean specifier for whether or not the batch action bar should be\n   * displayed\n   */\n  shouldShowBatchActions: PropTypes.bool,\n  /**\n   * Numeric representation of the total number of items selected in a table.\n   * This number is used to derive the selection message\n   */\n  totalSelected: PropTypes.number.isRequired,\n  /**\n   * Supply a method to translate internal strings with your i18n tool of\n   * choice. Translation keys are available on the `translationKeys` field for\n   * this component.\n   */\n  translateWithId: PropTypes.func\n};\nTableBatchActions.defaultProps = {\n  translateWithId\n};\nvar TableBatchActions$1 = TableBatchActions;\n\nexport { TableBatchActions$1 as default };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}