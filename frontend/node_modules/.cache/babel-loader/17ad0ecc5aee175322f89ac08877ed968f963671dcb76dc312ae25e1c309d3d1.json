{"ast":null,"code":"import _slicedToArray from \"/home/saymon/Backup/Portifolio/Hematology-App-with-Carbon-Design-System/frontend/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport _objectWithoutProperties from \"/home/saymon/Backup/Portifolio/Hematology-App-with-Carbon-Design-System/frontend/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js\";\nvar _excluded = [\"align\", \"className\", \"children\", \"definition\", \"defaultOpen\", \"id\", \"openOnHover\", \"tooltipText\", \"triggerClassName\"];\n/**\n * Copyright IBM Corp. 2016, 2023\n *\n * This source code is licensed under the Apache-2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { extends as _extends } from '../../_virtual/_rollupPluginBabelHelpers.js';\nimport cx from 'classnames';\nimport PropTypes from 'prop-types';\nimport React__default, { useState } from 'react';\nimport { Popover, PopoverContent } from '../Popover/index.js';\nimport { useFallbackId } from '../../internal/useId.js';\nimport { usePrefix } from '../../internal/usePrefix.js';\nimport deprecate from '../../prop-types/deprecate.js';\nimport { match } from '../../internal/keyboard/match.js';\nimport { Escape } from '../../internal/keyboard/keys.js';\nvar DefinitionTooltip = function DefinitionTooltip(_ref) {\n  var _ref$align = _ref.align,\n    align = _ref$align === void 0 ? 'bottom-left' : _ref$align,\n    className = _ref.className,\n    children = _ref.children,\n    definition = _ref.definition,\n    _ref$defaultOpen = _ref.defaultOpen,\n    defaultOpen = _ref$defaultOpen === void 0 ? false : _ref$defaultOpen,\n    id = _ref.id,\n    openOnHover = _ref.openOnHover,\n    tooltipText = _ref.tooltipText,\n    triggerClassName = _ref.triggerClassName,\n    rest = _objectWithoutProperties(_ref, _excluded);\n  var _useState = useState(defaultOpen),\n    _useState2 = _slicedToArray(_useState, 2),\n    isOpen = _useState2[0],\n    setOpen = _useState2[1];\n  var prefix = usePrefix();\n  var tooltipId = useFallbackId(id);\n  function onKeyDown(event) {\n    if (isOpen && match(event, Escape)) {\n      event.stopPropagation();\n      setOpen(false);\n    }\n  }\n  return /*#__PURE__*/React__default.createElement(Popover, {\n    align: align,\n    className: className,\n    dropShadow: false,\n    highContrast: true,\n    onMouseLeave: function onMouseLeave() {\n      setOpen(false);\n    },\n    onMouseEnter: function onMouseEnter() {\n      openOnHover ? setOpen(true) : null;\n    },\n    open: isOpen\n  }, /*#__PURE__*/React__default.createElement(\"button\", _extends({}, rest, {\n    className: cx(\"\".concat(prefix, \"--definition-term\"), triggerClassName),\n    \"aria-controls\": tooltipId,\n    \"aria-expanded\": isOpen,\n    onBlur: function onBlur() {\n      setOpen(false);\n    },\n    onClick: function onClick() {\n      setOpen(!isOpen);\n    },\n    onKeyDown: onKeyDown,\n    type: \"button\"\n  }), children), /*#__PURE__*/React__default.createElement(PopoverContent, {\n    className: \"\".concat(prefix, \"--definition-tooltip\"),\n    id: tooltipId\n  }, tooltipText !== null && tooltipText !== void 0 ? tooltipText : definition));\n};\nDefinitionTooltip.propTypes = {\n  /**\n   * Specify how the trigger should align with the tooltip\n   */\n  align: PropTypes.oneOf(['top', 'top-left', 'top-right', 'bottom', 'bottom-left', 'bottom-right', 'left', 'left-bottom', 'left-top', 'right', 'right-bottom', 'right-top']),\n  /**\n   * The `children` prop will be used as the value that is being defined\n   */\n  children: PropTypes.node.isRequired,\n  /**\n   * Specify an optional className to be applied to the container node\n   */\n  className: PropTypes.string,\n  /**\n   * Specify whether the tooltip should be open when it first renders\n   */\n  defaultOpen: PropTypes.bool,\n  /**\n   * The `definition` prop is used as the content inside of the tooltip that\n   * appears when a user interacts with the element rendered by the `children`\n   * prop\n   */\n  definition: PropTypes.node.isRequired,\n  /**\n   * Provide a value that will be assigned as the id of the tooltip\n   */\n  id: PropTypes.string,\n  /**\n   * Specifies whether or not the `DefinitionTooltip` should open on hover or not\n   */\n  openOnHover: PropTypes.bool,\n  /**\n   * [Deprecated in v11] Please use the `definition` prop instead.\n   *\n   * Provide the text that will be displayed in the tooltip when it is rendered.\n   */\n  tooltipText: deprecate(PropTypes.node, 'The tooltipText prop has been deprecated. Please use the `definition` prop instead.'),\n  /**\n   * The CSS class name of the trigger element\n   */\n  triggerClassName: PropTypes.string\n};\nexport { DefinitionTooltip };","map":{"version":3,"names":["extends","_extends","cx","PropTypes","React__default","useState","Popover","PopoverContent","useFallbackId","usePrefix","deprecate","match","Escape","DefinitionTooltip","_ref","_ref$align","align","className","children","definition","_ref$defaultOpen","defaultOpen","id","openOnHover","tooltipText","triggerClassName","rest","_objectWithoutProperties","_excluded","_useState","_useState2","_slicedToArray","isOpen","setOpen","prefix","tooltipId","onKeyDown","event","stopPropagation","createElement","dropShadow","highContrast","onMouseLeave","onMouseEnter","open","concat","onBlur","onClick","type","propTypes","oneOf","node","isRequired","string","bool"],"sources":["/home/saymon/Backup/Portifolio/Hematology-App-with-Carbon-Design-System/frontend/node_modules/@carbon/react/es/components/Tooltip/DefinitionTooltip.js"],"sourcesContent":["/**\n * Copyright IBM Corp. 2016, 2023\n *\n * This source code is licensed under the Apache-2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { extends as _extends } from '../../_virtual/_rollupPluginBabelHelpers.js';\nimport cx from 'classnames';\nimport PropTypes from 'prop-types';\nimport React__default, { useState } from 'react';\nimport { Popover, PopoverContent } from '../Popover/index.js';\nimport { useFallbackId } from '../../internal/useId.js';\nimport { usePrefix } from '../../internal/usePrefix.js';\nimport deprecate from '../../prop-types/deprecate.js';\nimport { match } from '../../internal/keyboard/match.js';\nimport { Escape } from '../../internal/keyboard/keys.js';\n\nconst DefinitionTooltip = _ref => {\n  let {\n    align = 'bottom-left',\n    className,\n    children,\n    definition,\n    defaultOpen = false,\n    id,\n    openOnHover,\n    tooltipText,\n    triggerClassName,\n    ...rest\n  } = _ref;\n  const [isOpen, setOpen] = useState(defaultOpen);\n  const prefix = usePrefix();\n  const tooltipId = useFallbackId(id);\n  function onKeyDown(event) {\n    if (isOpen && match(event, Escape)) {\n      event.stopPropagation();\n      setOpen(false);\n    }\n  }\n  return /*#__PURE__*/React__default.createElement(Popover, {\n    align: align,\n    className: className,\n    dropShadow: false,\n    highContrast: true,\n    onMouseLeave: () => {\n      setOpen(false);\n    },\n    onMouseEnter: () => {\n      openOnHover ? setOpen(true) : null;\n    },\n    open: isOpen\n  }, /*#__PURE__*/React__default.createElement(\"button\", _extends({}, rest, {\n    className: cx(`${prefix}--definition-term`, triggerClassName),\n    \"aria-controls\": tooltipId,\n    \"aria-expanded\": isOpen,\n    onBlur: () => {\n      setOpen(false);\n    },\n    onClick: () => {\n      setOpen(!isOpen);\n    },\n    onKeyDown: onKeyDown,\n    type: \"button\"\n  }), children), /*#__PURE__*/React__default.createElement(PopoverContent, {\n    className: `${prefix}--definition-tooltip`,\n    id: tooltipId\n  }, tooltipText ?? definition));\n};\nDefinitionTooltip.propTypes = {\n  /**\n   * Specify how the trigger should align with the tooltip\n   */\n  align: PropTypes.oneOf(['top', 'top-left', 'top-right', 'bottom', 'bottom-left', 'bottom-right', 'left', 'left-bottom', 'left-top', 'right', 'right-bottom', 'right-top']),\n  /**\n   * The `children` prop will be used as the value that is being defined\n   */\n  children: PropTypes.node.isRequired,\n  /**\n   * Specify an optional className to be applied to the container node\n   */\n  className: PropTypes.string,\n  /**\n   * Specify whether the tooltip should be open when it first renders\n   */\n  defaultOpen: PropTypes.bool,\n  /**\n   * The `definition` prop is used as the content inside of the tooltip that\n   * appears when a user interacts with the element rendered by the `children`\n   * prop\n   */\n  definition: PropTypes.node.isRequired,\n  /**\n   * Provide a value that will be assigned as the id of the tooltip\n   */\n  id: PropTypes.string,\n  /**\n   * Specifies whether or not the `DefinitionTooltip` should open on hover or not\n   */\n  openOnHover: PropTypes.bool,\n  /**\n   * [Deprecated in v11] Please use the `definition` prop instead.\n   *\n   * Provide the text that will be displayed in the tooltip when it is rendered.\n   */\n  tooltipText: deprecate(PropTypes.node, 'The tooltipText prop has been deprecated. Please use the `definition` prop instead.'),\n  /**\n   * The CSS class name of the trigger element\n   */\n  triggerClassName: PropTypes.string\n};\n\nexport { DefinitionTooltip };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}