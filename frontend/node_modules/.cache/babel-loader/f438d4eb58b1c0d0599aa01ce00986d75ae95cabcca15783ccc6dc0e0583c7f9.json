{"ast":null,"code":"/**\n * Copyright IBM Corp. 2016, 2023\n *\n * This source code is licensed under the Apache-2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { extends as _extends } from '../../_virtual/_rollupPluginBabelHelpers.js';\nimport React__default from 'react';\nimport PropTypes from 'prop-types';\nimport cx from 'classnames';\nimport { Close } from '@carbon/icons-react';\nimport { usePrefix } from '../../internal/usePrefix.js';\nconst ModalHeader = /*#__PURE__*/React__default.forwardRef(function ModalHeader(_ref, ref) {\n  let {\n    buttonOnClick,\n    children,\n    className: customClassName,\n    closeClassName,\n    closeIconClassName,\n    closeModal,\n    iconDescription,\n    label,\n    labelClassName,\n    title,\n    titleClassName,\n    ...rest\n  } = _ref;\n  const prefix = usePrefix();\n  function handleCloseButtonClick(evt) {\n    closeModal?.(evt);\n    buttonOnClick?.(evt);\n  }\n  const headerClass = cx(`${prefix}--modal-header`, customClassName);\n  const labelClass = cx(`${prefix}--modal-header__label ${prefix}--type-delta`, labelClassName);\n  const titleClass = cx(`${prefix}--modal-header__heading ${prefix}--type-beta`, titleClassName);\n  const closeClass = cx(`${prefix}--modal-close`, closeClassName);\n  const closeIconClass = cx(`${prefix}--modal-close__icon`, closeIconClassName);\n  return /*#__PURE__*/React__default.createElement(\"div\", _extends({\n    className: headerClass\n  }, rest, {\n    ref: ref\n  }), label && /*#__PURE__*/React__default.createElement(\"h2\", {\n    className: labelClass\n  }, label), title && /*#__PURE__*/React__default.createElement(\"h3\", {\n    className: titleClass\n  }, title), children, /*#__PURE__*/React__default.createElement(\"button\", {\n    onClick: handleCloseButtonClick,\n    className: closeClass,\n    title: iconDescription,\n    \"aria-label\": iconDescription,\n    type: \"button\"\n  }, /*#__PURE__*/React__default.createElement(Close, {\n    size: 20,\n    className: closeIconClass\n  })));\n});\nModalHeader.propTypes = {\n  /**\n   * Provide an optional function to be called when the close button is\n   * clicked\n   */\n  buttonOnClick: PropTypes.func,\n  /**\n   * Specify the content to be placed in the ModalHeader\n   */\n  children: PropTypes.node,\n  /**\n   * Specify an optional className to be applied to the modal header\n   */\n  className: PropTypes.string,\n  /**\n   * Specify an optional className to be applied to the modal close node\n   */\n  closeClassName: PropTypes.string,\n  /**\n   * Specify an optional className to be applied to the modal close icon node\n   */\n  closeIconClassName: PropTypes.string,\n  /**\n   * Provide an optional function to be called when the modal is closed\n   */\n  closeModal: PropTypes.func,\n  /**\n   * Specify a description for the close icon that can be read by screen\n   * readers\n   */\n  iconDescription: PropTypes.string,\n  /**\n   * Specify an optional label to be displayed\n   */\n  label: PropTypes.node,\n  /**\n   * Specify an optional className to be applied to the modal header label\n   */\n  labelClassName: PropTypes.string,\n  /**\n   * Specify an optional title to be displayed\n   */\n  title: PropTypes.node,\n  /**\n   * Specify an optional className to be applied to the modal heading\n   */\n  titleClassName: PropTypes.string\n};\nModalHeader.defaultProps = {\n  iconDescription: 'Close'\n};\nexport { ModalHeader };","map":{"version":3,"names":["extends","_extends","React__default","PropTypes","cx","Close","usePrefix","ModalHeader","forwardRef","_ref","ref","buttonOnClick","children","className","customClassName","closeClassName","closeIconClassName","closeModal","iconDescription","label","labelClassName","title","titleClassName","rest","prefix","handleCloseButtonClick","evt","headerClass","labelClass","titleClass","closeClass","closeIconClass","createElement","onClick","type","size","propTypes","func","node","string","defaultProps"],"sources":["/home/saymon/Backup/Portifolio/Hematology-App-with-Carbon-Design-System/frontend/node_modules/@carbon/react/es/components/ComposedModal/ModalHeader.js"],"sourcesContent":["/**\n * Copyright IBM Corp. 2016, 2023\n *\n * This source code is licensed under the Apache-2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { extends as _extends } from '../../_virtual/_rollupPluginBabelHelpers.js';\nimport React__default from 'react';\nimport PropTypes from 'prop-types';\nimport cx from 'classnames';\nimport { Close } from '@carbon/icons-react';\nimport { usePrefix } from '../../internal/usePrefix.js';\n\nconst ModalHeader = /*#__PURE__*/React__default.forwardRef(function ModalHeader(_ref, ref) {\n  let {\n    buttonOnClick,\n    children,\n    className: customClassName,\n    closeClassName,\n    closeIconClassName,\n    closeModal,\n    iconDescription,\n    label,\n    labelClassName,\n    title,\n    titleClassName,\n    ...rest\n  } = _ref;\n  const prefix = usePrefix();\n  function handleCloseButtonClick(evt) {\n    closeModal?.(evt);\n    buttonOnClick?.(evt);\n  }\n  const headerClass = cx(`${prefix}--modal-header`, customClassName);\n  const labelClass = cx(`${prefix}--modal-header__label ${prefix}--type-delta`, labelClassName);\n  const titleClass = cx(`${prefix}--modal-header__heading ${prefix}--type-beta`, titleClassName);\n  const closeClass = cx(`${prefix}--modal-close`, closeClassName);\n  const closeIconClass = cx(`${prefix}--modal-close__icon`, closeIconClassName);\n  return /*#__PURE__*/React__default.createElement(\"div\", _extends({\n    className: headerClass\n  }, rest, {\n    ref: ref\n  }), label && /*#__PURE__*/React__default.createElement(\"h2\", {\n    className: labelClass\n  }, label), title && /*#__PURE__*/React__default.createElement(\"h3\", {\n    className: titleClass\n  }, title), children, /*#__PURE__*/React__default.createElement(\"button\", {\n    onClick: handleCloseButtonClick,\n    className: closeClass,\n    title: iconDescription,\n    \"aria-label\": iconDescription,\n    type: \"button\"\n  }, /*#__PURE__*/React__default.createElement(Close, {\n    size: 20,\n    className: closeIconClass\n  })));\n});\nModalHeader.propTypes = {\n  /**\n   * Provide an optional function to be called when the close button is\n   * clicked\n   */\n  buttonOnClick: PropTypes.func,\n  /**\n   * Specify the content to be placed in the ModalHeader\n   */\n  children: PropTypes.node,\n  /**\n   * Specify an optional className to be applied to the modal header\n   */\n  className: PropTypes.string,\n  /**\n   * Specify an optional className to be applied to the modal close node\n   */\n  closeClassName: PropTypes.string,\n  /**\n   * Specify an optional className to be applied to the modal close icon node\n   */\n  closeIconClassName: PropTypes.string,\n  /**\n   * Provide an optional function to be called when the modal is closed\n   */\n  closeModal: PropTypes.func,\n  /**\n   * Specify a description for the close icon that can be read by screen\n   * readers\n   */\n  iconDescription: PropTypes.string,\n  /**\n   * Specify an optional label to be displayed\n   */\n  label: PropTypes.node,\n  /**\n   * Specify an optional className to be applied to the modal header label\n   */\n  labelClassName: PropTypes.string,\n  /**\n   * Specify an optional title to be displayed\n   */\n  title: PropTypes.node,\n  /**\n   * Specify an optional className to be applied to the modal heading\n   */\n  titleClassName: PropTypes.string\n};\nModalHeader.defaultProps = {\n  iconDescription: 'Close'\n};\n\nexport { ModalHeader };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}