{"ast":null,"code":"/**\n * Copyright IBM Corp. 2016, 2023\n *\n * This source code is licensed under the Apache-2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n/**\n * @param {[key: string]: Function)} propTypes The list of type checkers, keyed by prop names.\n * @returns {[key: string]: Function}\n *   The new prop type checkers that checks if one of the given props exist,\n *   in addition to the original type checkings.\n */\nfunction isRequiredOneOf(propTypes) {\n  const names = Object.keys(propTypes);\n  const checker = propType => function (props, propName, componentName) {\n    if (process.env.NODE_ENV !== \"production\" && names.every(name => typeof props[name] === 'undefined')) {\n      return new Error(`${componentName} requires one of the following props: ${names.join(', ')}`);\n    }\n    for (var _len = arguments.length, rest = new Array(_len > 3 ? _len - 3 : 0), _key = 3; _key < _len; _key++) {\n      rest[_key - 3] = arguments[_key];\n    }\n    return propType(props, propName, componentName, ...rest);\n  };\n  return names.reduce((o, name) => ({\n    ...o,\n    [name]: checker(propTypes[name])\n  }), {});\n}\nexport { isRequiredOneOf as default };","map":{"version":3,"names":["isRequiredOneOf","propTypes","names","Object","keys","checker","propType","props","propName","componentName","process","env","NODE_ENV","every","name","Error","join","_len","arguments","length","rest","Array","_key","reduce","o","default"],"sources":["/home/saymon/Backup/Portifolio/Hematology-App-with-Carbon-Design-System/frontend/node_modules/@carbon/react/es/prop-types/isRequiredOneOf.js"],"sourcesContent":["/**\n * Copyright IBM Corp. 2016, 2023\n *\n * This source code is licensed under the Apache-2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n/**\n * @param {[key: string]: Function)} propTypes The list of type checkers, keyed by prop names.\n * @returns {[key: string]: Function}\n *   The new prop type checkers that checks if one of the given props exist,\n *   in addition to the original type checkings.\n */\nfunction isRequiredOneOf(propTypes) {\n  const names = Object.keys(propTypes);\n  const checker = propType => function (props, propName, componentName) {\n    if (process.env.NODE_ENV !== \"production\" && names.every(name => typeof props[name] === 'undefined')) {\n      return new Error(`${componentName} requires one of the following props: ${names.join(', ')}`);\n    }\n    for (var _len = arguments.length, rest = new Array(_len > 3 ? _len - 3 : 0), _key = 3; _key < _len; _key++) {\n      rest[_key - 3] = arguments[_key];\n    }\n    return propType(props, propName, componentName, ...rest);\n  };\n  return names.reduce((o, name) => ({\n    ...o,\n    [name]: checker(propTypes[name])\n  }), {});\n}\n\nexport { isRequiredOneOf as default };\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,SAASA,eAAeA,CAACC,SAAS,EAAE;EAClC,MAAMC,KAAK,GAAGC,MAAM,CAACC,IAAI,CAACH,SAAS,CAAC;EACpC,MAAMI,OAAO,GAAGC,QAAQ,IAAI,UAAUC,KAAK,EAAEC,QAAQ,EAAEC,aAAa,EAAE;IACpE,IAAIC,OAAO,CAACC,GAAG,CAACC,QAAQ,KAAK,YAAY,IAAIV,KAAK,CAACW,KAAK,CAACC,IAAI,IAAI,OAAOP,KAAK,CAACO,IAAI,CAAC,KAAK,WAAW,CAAC,EAAE;MACpG,OAAO,IAAIC,KAAK,CAAE,GAAEN,aAAc,yCAAwCP,KAAK,CAACc,IAAI,CAAC,IAAI,CAAE,EAAC,CAAC;IAC/F;IACA,KAAK,IAAIC,IAAI,GAAGC,SAAS,CAACC,MAAM,EAAEC,IAAI,GAAG,IAAIC,KAAK,CAACJ,IAAI,GAAG,CAAC,GAAGA,IAAI,GAAG,CAAC,GAAG,CAAC,CAAC,EAAEK,IAAI,GAAG,CAAC,EAAEA,IAAI,GAAGL,IAAI,EAAEK,IAAI,EAAE,EAAE;MAC1GF,IAAI,CAACE,IAAI,GAAG,CAAC,CAAC,GAAGJ,SAAS,CAACI,IAAI,CAAC;IAClC;IACA,OAAOhB,QAAQ,CAACC,KAAK,EAAEC,QAAQ,EAAEC,aAAa,EAAE,GAAGW,IAAI,CAAC;EAC1D,CAAC;EACD,OAAOlB,KAAK,CAACqB,MAAM,CAAC,CAACC,CAAC,EAAEV,IAAI,MAAM;IAChC,GAAGU,CAAC;IACJ,CAACV,IAAI,GAAGT,OAAO,CAACJ,SAAS,CAACa,IAAI,CAAC;EACjC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;AACT;AAEA,SAASd,eAAe,IAAIyB,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}