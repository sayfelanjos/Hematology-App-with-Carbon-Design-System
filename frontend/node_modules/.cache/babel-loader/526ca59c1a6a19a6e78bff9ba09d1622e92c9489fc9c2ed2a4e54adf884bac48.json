{"ast":null,"code":"/**\n * Copyright IBM Corp. 2016, 2023\n *\n * This source code is licensed under the Apache-2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { extends as _extends, defineProperty as _defineProperty } from '../../_virtual/_rollupPluginBabelHelpers.js';\nimport PropTypes from 'prop-types';\nimport React__default from 'react';\nimport cx from 'classnames';\nimport { PrefixContext } from '../../internal/usePrefix.js';\nvar _path;\nclass ToggleSmallSkeleton extends React__default.Component {\n  render() {\n    const {\n      id,\n      labelText,\n      className,\n      ...rest\n    } = this.props;\n    return /*#__PURE__*/React__default.createElement(PrefixContext.Consumer, null, prefix => {\n      return /*#__PURE__*/React__default.createElement(\"div\", _extends({\n        className: cx(`${prefix}--form-item`, className)\n      }, rest), /*#__PURE__*/React__default.createElement(\"input\", {\n        type: \"checkbox\",\n        id: id,\n        className: `${prefix}--toggle ${prefix}--toggle--small ${prefix}--skeleton`\n      }), /*#__PURE__*/React__default.createElement(\"label\", {\n        className: `${prefix}--toggle__label ${prefix}--skeleton`,\n        htmlFor: id\n      }, labelText && /*#__PURE__*/React__default.createElement(\"span\", {\n        className: `${prefix}--toggle__label-text`\n      }, labelText), /*#__PURE__*/React__default.createElement(\"span\", {\n        className: `${prefix}--toggle__appearance`\n      }, /*#__PURE__*/React__default.createElement(\"svg\", {\n        className: `${prefix}--toggle__check`,\n        width: \"6px\",\n        height: \"5px\",\n        viewBox: \"0 0 6 5\"\n      }, _path || (_path = /*#__PURE__*/React__default.createElement(\"path\", {\n        d: \"M2.2403 2.7299L4.9245 0 6 1.1117 2.2384 5 0 2.6863 1.0612 1.511z\"\n      }))))));\n    });\n  }\n}\n_defineProperty(ToggleSmallSkeleton, \"propTypes\", {\n  ['aria-label']: PropTypes.string.isRequired,\n  /**\n   * Specify an optional className to add to the form item wrapper.\n   */\n  className: PropTypes.string,\n  /**\n   * Provide an id that unique represents the underlying `<input>`\n   */\n  id: PropTypes.string,\n  /**\n   * Provide the text that will be read by a screen reader when visiting this\n   * control\n   * `aria-label` is always required but will be null if `labelText` is also\n   * provided\n   */\n  labelText: PropTypes.string\n});\n_defineProperty(ToggleSmallSkeleton, \"defaultProps\", {\n  ['aria-label']: 'Toggle is loading'\n});\nexport { ToggleSmallSkeleton, ToggleSmallSkeleton as default };","map":{"version":3,"names":["extends","_extends","defineProperty","_defineProperty","PropTypes","React__default","cx","PrefixContext","_path","ToggleSmallSkeleton","Component","render","id","labelText","className","rest","props","createElement","Consumer","prefix","type","htmlFor","width","height","viewBox","d","string","isRequired","default"],"sources":["/home/saymon/Backup/Portifolio/Hematology-App-with-Carbon-Design-System/frontend/node_modules/@carbon/react/es/components/ToggleSmall/ToggleSmall.Skeleton.js"],"sourcesContent":["/**\n * Copyright IBM Corp. 2016, 2023\n *\n * This source code is licensed under the Apache-2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { extends as _extends, defineProperty as _defineProperty } from '../../_virtual/_rollupPluginBabelHelpers.js';\nimport PropTypes from 'prop-types';\nimport React__default from 'react';\nimport cx from 'classnames';\nimport { PrefixContext } from '../../internal/usePrefix.js';\n\nvar _path;\nclass ToggleSmallSkeleton extends React__default.Component {\n  render() {\n    const {\n      id,\n      labelText,\n      className,\n      ...rest\n    } = this.props;\n    return /*#__PURE__*/React__default.createElement(PrefixContext.Consumer, null, prefix => {\n      return /*#__PURE__*/React__default.createElement(\"div\", _extends({\n        className: cx(`${prefix}--form-item`, className)\n      }, rest), /*#__PURE__*/React__default.createElement(\"input\", {\n        type: \"checkbox\",\n        id: id,\n        className: `${prefix}--toggle ${prefix}--toggle--small ${prefix}--skeleton`\n      }), /*#__PURE__*/React__default.createElement(\"label\", {\n        className: `${prefix}--toggle__label ${prefix}--skeleton`,\n        htmlFor: id\n      }, labelText && /*#__PURE__*/React__default.createElement(\"span\", {\n        className: `${prefix}--toggle__label-text`\n      }, labelText), /*#__PURE__*/React__default.createElement(\"span\", {\n        className: `${prefix}--toggle__appearance`\n      }, /*#__PURE__*/React__default.createElement(\"svg\", {\n        className: `${prefix}--toggle__check`,\n        width: \"6px\",\n        height: \"5px\",\n        viewBox: \"0 0 6 5\"\n      }, _path || (_path = /*#__PURE__*/React__default.createElement(\"path\", {\n        d: \"M2.2403 2.7299L4.9245 0 6 1.1117 2.2384 5 0 2.6863 1.0612 1.511z\"\n      }))))));\n    });\n  }\n}\n_defineProperty(ToggleSmallSkeleton, \"propTypes\", {\n  ['aria-label']: PropTypes.string.isRequired,\n  /**\n   * Specify an optional className to add to the form item wrapper.\n   */\n  className: PropTypes.string,\n  /**\n   * Provide an id that unique represents the underlying `<input>`\n   */\n  id: PropTypes.string,\n  /**\n   * Provide the text that will be read by a screen reader when visiting this\n   * control\n   * `aria-label` is always required but will be null if `labelText` is also\n   * provided\n   */\n  labelText: PropTypes.string\n});\n_defineProperty(ToggleSmallSkeleton, \"defaultProps\", {\n  ['aria-label']: 'Toggle is loading'\n});\n\nexport { ToggleSmallSkeleton, ToggleSmallSkeleton as default };\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;;AAEA,SAASA,OAAO,IAAIC,QAAQ,EAAEC,cAAc,IAAIC,eAAe,QAAQ,6CAA6C;AACpH,OAAOC,SAAS,MAAM,YAAY;AAClC,OAAOC,cAAc,MAAM,OAAO;AAClC,OAAOC,EAAE,MAAM,YAAY;AAC3B,SAASC,aAAa,QAAQ,6BAA6B;AAE3D,IAAIC,KAAK;AACT,MAAMC,mBAAmB,SAASJ,cAAc,CAACK,SAAS,CAAC;EACzDC,MAAMA,CAAA,EAAG;IACP,MAAM;MACJC,EAAE;MACFC,SAAS;MACTC,SAAS;MACT,GAAGC;IACL,CAAC,GAAG,IAAI,CAACC,KAAK;IACd,OAAO,aAAaX,cAAc,CAACY,aAAa,CAACV,aAAa,CAACW,QAAQ,EAAE,IAAI,EAAEC,MAAM,IAAI;MACvF,OAAO,aAAad,cAAc,CAACY,aAAa,CAAC,KAAK,EAAEhB,QAAQ,CAAC;QAC/Da,SAAS,EAAER,EAAE,CAAE,GAAEa,MAAO,aAAY,EAAEL,SAAS;MACjD,CAAC,EAAEC,IAAI,CAAC,EAAE,aAAaV,cAAc,CAACY,aAAa,CAAC,OAAO,EAAE;QAC3DG,IAAI,EAAE,UAAU;QAChBR,EAAE,EAAEA,EAAE;QACNE,SAAS,EAAG,GAAEK,MAAO,YAAWA,MAAO,mBAAkBA,MAAO;MAClE,CAAC,CAAC,EAAE,aAAad,cAAc,CAACY,aAAa,CAAC,OAAO,EAAE;QACrDH,SAAS,EAAG,GAAEK,MAAO,mBAAkBA,MAAO,YAAW;QACzDE,OAAO,EAAET;MACX,CAAC,EAAEC,SAAS,IAAI,aAAaR,cAAc,CAACY,aAAa,CAAC,MAAM,EAAE;QAChEH,SAAS,EAAG,GAAEK,MAAO;MACvB,CAAC,EAAEN,SAAS,CAAC,EAAE,aAAaR,cAAc,CAACY,aAAa,CAAC,MAAM,EAAE;QAC/DH,SAAS,EAAG,GAAEK,MAAO;MACvB,CAAC,EAAE,aAAad,cAAc,CAACY,aAAa,CAAC,KAAK,EAAE;QAClDH,SAAS,EAAG,GAAEK,MAAO,iBAAgB;QACrCG,KAAK,EAAE,KAAK;QACZC,MAAM,EAAE,KAAK;QACbC,OAAO,EAAE;MACX,CAAC,EAAEhB,KAAK,KAAKA,KAAK,GAAG,aAAaH,cAAc,CAACY,aAAa,CAAC,MAAM,EAAE;QACrEQ,CAAC,EAAE;MACL,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IACT,CAAC,CAAC;EACJ;AACF;AACAtB,eAAe,CAACM,mBAAmB,EAAE,WAAW,EAAE;EAChD,CAAC,YAAY,GAAGL,SAAS,CAACsB,MAAM,CAACC,UAAU;EAC3C;AACF;AACA;EACEb,SAAS,EAAEV,SAAS,CAACsB,MAAM;EAC3B;AACF;AACA;EACEd,EAAE,EAAER,SAAS,CAACsB,MAAM;EACpB;AACF;AACA;AACA;AACA;AACA;EACEb,SAAS,EAAET,SAAS,CAACsB;AACvB,CAAC,CAAC;AACFvB,eAAe,CAACM,mBAAmB,EAAE,cAAc,EAAE;EACnD,CAAC,YAAY,GAAG;AAClB,CAAC,CAAC;AAEF,SAASA,mBAAmB,EAAEA,mBAAmB,IAAImB,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}