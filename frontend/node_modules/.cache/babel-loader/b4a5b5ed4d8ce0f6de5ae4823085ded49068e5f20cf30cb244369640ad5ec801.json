{"ast":null,"code":"'use strict';\n\nfunction _interopDefault(ex) {\n  return ex && typeof ex === 'object' && 'default' in ex ? ex['default'] : ex;\n}\nvar ResizeObserver = _interopDefault(require('resize-observer-polyfill'));\nvar react = require('react');\nfunction useResizeObserver(opts) {\n  if (opts === void 0) {\n    opts = {};\n  }\n\n  // `defaultRef` Has to be non-conditionally declared here whether or not it'll\n  // be used as that's how hooks work.\n  // @see https://reactjs.org/docs/hooks-rules.html#explanation\n  var defaultRef = react.useRef(null); // Saving the callback as a ref. With this, I don't need to put onResize in the\n  // effect dep array, and just passing in an anonymous function without memoising\n  // will not reinstantiate the hook's ResizeObserver\n\n  var onResize = opts.onResize;\n  var onResizeRef = react.useRef(undefined);\n  onResizeRef.current = onResize; // Using a single instance throughought the hook's lifetime\n\n  var resizeObserverRef = react.useRef();\n  var ref = opts.ref || defaultRef;\n  var _useState = react.useState({\n      width: undefined,\n      height: undefined\n    }),\n    size = _useState[0],\n    setSize = _useState[1]; // Using a ref to track the previous width / height to avoid unnecessary renders\n\n  var previous = react.useRef({\n    width: undefined,\n    height: undefined\n  });\n  react.useEffect(function () {\n    if (resizeObserverRef.current) {\n      return;\n    }\n    resizeObserverRef.current = new ResizeObserver(function (entries) {\n      if (!Array.isArray(entries)) {\n        return;\n      } // Since we only observe the one element, we don't need to loop over the\n      // array\n\n      if (!entries.length) {\n        return;\n      }\n      var entry = entries[0]; // `Math.round` is in line with how CSS resolves sub-pixel values\n\n      var newWidth = Math.round(entry.contentRect.width);\n      var newHeight = Math.round(entry.contentRect.height);\n      if (previous.current.width !== newWidth || previous.current.height !== newHeight) {\n        var newSize = {\n          width: newWidth,\n          height: newHeight\n        };\n        if (onResizeRef.current) {\n          onResizeRef.current(newSize);\n        } else {\n          previous.current.width = newWidth;\n          previous.current.height = newHeight;\n          setSize(newSize);\n        }\n      }\n    });\n  }, []);\n  react.useEffect(function () {\n    if (typeof ref !== \"object\" || ref === null || !(ref.current instanceof Element)) {\n      return;\n    }\n    var element = ref.current;\n    resizeObserverRef.current.observe(element);\n    return function () {\n      return resizeObserverRef.current.unobserve(element);\n    };\n  }, [ref]);\n  return react.useMemo(function () {\n    return {\n      ref: ref,\n      width: size.width,\n      height: size.height\n    };\n  }, [ref, size ? size.width : null, size ? size.height : null]);\n}\nmodule.exports = useResizeObserver;","map":{"version":3,"names":["_interopDefault","ex","ResizeObserver","require","react","useResizeObserver","opts","defaultRef","useRef","onResize","onResizeRef","undefined","current","resizeObserverRef","ref","_useState","useState","width","height","size","setSize","previous","useEffect","entries","Array","isArray","length","entry","newWidth","Math","round","contentRect","newHeight","newSize","Element","element","observe","unobserve","useMemo","module","exports"],"sources":["/home/saymon/Backup/Portifolio/Hematology-App-with-Carbon-Design-System/frontend/node_modules/use-resize-observer/polyfilled.js"],"sourcesContent":["'use strict';\n\nfunction _interopDefault (ex) { return (ex && (typeof ex === 'object') && 'default' in ex) ? ex['default'] : ex; }\n\nvar ResizeObserver = _interopDefault(require('resize-observer-polyfill'));\nvar react = require('react');\n\nfunction useResizeObserver(opts) {\n  if (opts === void 0) {\n    opts = {};\n  }\n\n  // `defaultRef` Has to be non-conditionally declared here whether or not it'll\n  // be used as that's how hooks work.\n  // @see https://reactjs.org/docs/hooks-rules.html#explanation\n  var defaultRef = react.useRef(null); // Saving the callback as a ref. With this, I don't need to put onResize in the\n  // effect dep array, and just passing in an anonymous function without memoising\n  // will not reinstantiate the hook's ResizeObserver\n\n  var onResize = opts.onResize;\n  var onResizeRef = react.useRef(undefined);\n  onResizeRef.current = onResize; // Using a single instance throughought the hook's lifetime\n\n  var resizeObserverRef = react.useRef();\n  var ref = opts.ref || defaultRef;\n\n  var _useState = react.useState({\n    width: undefined,\n    height: undefined\n  }),\n      size = _useState[0],\n      setSize = _useState[1]; // Using a ref to track the previous width / height to avoid unnecessary renders\n\n\n  var previous = react.useRef({\n    width: undefined,\n    height: undefined\n  });\n  react.useEffect(function () {\n    if (resizeObserverRef.current) {\n      return;\n    }\n\n    resizeObserverRef.current = new ResizeObserver(function (entries) {\n      if (!Array.isArray(entries)) {\n        return;\n      } // Since we only observe the one element, we don't need to loop over the\n      // array\n\n\n      if (!entries.length) {\n        return;\n      }\n\n      var entry = entries[0]; // `Math.round` is in line with how CSS resolves sub-pixel values\n\n      var newWidth = Math.round(entry.contentRect.width);\n      var newHeight = Math.round(entry.contentRect.height);\n\n      if (previous.current.width !== newWidth || previous.current.height !== newHeight) {\n        var newSize = {\n          width: newWidth,\n          height: newHeight\n        };\n\n        if (onResizeRef.current) {\n          onResizeRef.current(newSize);\n        } else {\n          previous.current.width = newWidth;\n          previous.current.height = newHeight;\n          setSize(newSize);\n        }\n      }\n    });\n  }, []);\n  react.useEffect(function () {\n    if (typeof ref !== \"object\" || ref === null || !(ref.current instanceof Element)) {\n      return;\n    }\n\n    var element = ref.current;\n    resizeObserverRef.current.observe(element);\n    return function () {\n      return resizeObserverRef.current.unobserve(element);\n    };\n  }, [ref]);\n  return react.useMemo(function () {\n    return {\n      ref: ref,\n      width: size.width,\n      height: size.height\n    };\n  }, [ref, size ? size.width : null, size ? size.height : null]);\n}\n\nmodule.exports = useResizeObserver;\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}