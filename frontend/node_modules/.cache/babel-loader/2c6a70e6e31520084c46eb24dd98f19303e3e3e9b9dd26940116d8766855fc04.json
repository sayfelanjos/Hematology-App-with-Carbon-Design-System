{"ast":null,"code":"/**\n * Copyright IBM Corp. 2016, 2023\n *\n * This source code is licensed under the Apache-2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { extends as _extends } from '../../_virtual/_rollupPluginBabelHelpers.js';\nimport PropTypes from 'prop-types';\nimport React__default from 'react';\nimport cx from 'classnames';\nimport '../Text/index.js';\nimport { usePrefix } from '../../internal/usePrefix.js';\nimport { WarningFilled, WarningAltFilled } from '@carbon/icons-react';\nimport setupGetInstanceId from '../../tools/setupGetInstanceId.js';\nimport { Text } from '../Text/Text.js';\nconst getInstanceId = setupGetInstanceId();\nconst Checkbox = /*#__PURE__*/React__default.forwardRef((_ref, ref) => {\n  let {\n    className,\n    helperText,\n    id,\n    labelText,\n    onChange,\n    onClick,\n    indeterminate,\n    invalid,\n    invalidText,\n    hideLabel,\n    readOnly,\n    title = '',\n    warn,\n    warnText,\n    ...other\n  } = _ref;\n  const prefix = usePrefix();\n  const showWarning = !readOnly && !invalid && warn;\n  const showHelper = !invalid && !warn;\n  const checkboxGroupInstanceId = getInstanceId();\n  const helperId = !helperText ? undefined : `checkbox-helper-text-${checkboxGroupInstanceId}`;\n  const helper = helperText ? /*#__PURE__*/React__default.createElement(\"div\", {\n    id: helperId,\n    className: `${prefix}--form__helper-text`\n  }, helperText) : null;\n  const wrapperClasses = cx(`${prefix}--form-item`, `${prefix}--checkbox-wrapper`, className, {\n    [`${prefix}--checkbox-wrapper--readonly`]: readOnly,\n    [`${prefix}--checkbox-wrapper--invalid`]: !readOnly && invalid,\n    [`${prefix}--checkbox-wrapper--warning`]: showWarning\n  });\n  const innerLabelClasses = cx(`${prefix}--checkbox-label-text`, {\n    [`${prefix}--visually-hidden`]: hideLabel\n  });\n  return /*#__PURE__*/React__default.createElement(\"div\", {\n    className: wrapperClasses\n  }, /*#__PURE__*/React__default.createElement(\"input\", _extends({}, other, {\n    type: \"checkbox\",\n    \"data-invalid\": invalid ? true : undefined,\n    onChange: evt => {\n      if (!readOnly && onChange) {\n        onChange(evt, {\n          checked: evt.target.checked,\n          id\n        });\n      }\n    },\n    className: `${prefix}--checkbox`,\n    id: id,\n    ref: el => {\n      if (el) {\n        el.indeterminate = indeterminate ?? false;\n      }\n      if (typeof ref === 'function') {\n        ref(el);\n      } else if (ref && Object(ref) === ref) {\n        ref.current = el;\n      }\n    }\n    // readonly attribute not applicable to type=\"checkbox\"\n    // see - https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input/checkbox\n    ,\n\n    \"aria-readonly\": readOnly,\n    onClick: evt => {\n      if (readOnly) {\n        // prevent default stops the checkbox being updated\n        evt.preventDefault();\n      }\n      // pass onClick event on to the user even if readonly\n      if (onClick) {\n        onClick(evt);\n      }\n    }\n  })), /*#__PURE__*/React__default.createElement(\"label\", {\n    htmlFor: id,\n    className: `${prefix}--checkbox-label`,\n    title: title\n  }, /*#__PURE__*/React__default.createElement(Text, {\n    className: innerLabelClasses\n  }, labelText)), /*#__PURE__*/React__default.createElement(\"div\", {\n    className: `${prefix}--checkbox__validation-msg`\n  }, !readOnly && invalid && /*#__PURE__*/React__default.createElement(React__default.Fragment, null, /*#__PURE__*/React__default.createElement(WarningFilled, {\n    className: `${prefix}--checkbox__invalid-icon`\n  }), /*#__PURE__*/React__default.createElement(\"div\", {\n    className: `${prefix}--form-requirement`\n  }, invalidText)), showWarning && /*#__PURE__*/React__default.createElement(React__default.Fragment, null, /*#__PURE__*/React__default.createElement(WarningAltFilled, {\n    className: `${prefix}--checkbox__invalid-icon ${prefix}--checkbox__invalid-icon--warning`\n  }), /*#__PURE__*/React__default.createElement(\"div\", {\n    className: `${prefix}--form-requirement`\n  }, warnText))), showHelper && helper);\n});\nCheckbox.propTypes = {\n  /**\n   * Specify whether the underlying input should be checked\n   */\n  checked: PropTypes.bool,\n  /**\n   * Specify an optional className to be applied to the <label> node\n   */\n  className: PropTypes.string,\n  /**\n   * Specify whether the underlying input should be checked by default\n   */\n  defaultChecked: PropTypes.bool,\n  /**\n   * Specify whether the Checkbox should be disabled\n   */\n  disabled: PropTypes.bool,\n  /**\n   * Provide text for the form group for additional help\n   */\n  helperText: PropTypes.node,\n  /**\n   * Specify whether the label should be hidden, or not\n   */\n  hideLabel: PropTypes.bool,\n  /**\n   * Provide an `id` to uniquely identify the Checkbox input\n   */\n  id: PropTypes.string.isRequired,\n  /**\n   * Specify whether the Checkbox is in an indeterminate state\n   */\n  indeterminate: PropTypes.bool,\n  /**\n   * Specify whether the Checkbox is currently invalid\n   */\n  invalid: PropTypes.bool,\n  /**\n   * Provide the text that is displayed when the Checkbox is in an invalid state\n   */\n  invalidText: PropTypes.node,\n  /**\n   * Provide a label to provide a description of the Checkbox input that you are\n   * exposing to the user\n   */\n  labelText: PropTypes.node.isRequired,\n  /**\n   * Provide an optional handler that is called when the internal state of\n   * Checkbox changes. This handler is called with event and state info.\n   * `(event, { checked, id }) => void`\n   */\n  onChange: PropTypes.func,\n  /**\n   * Specify whether the Checkbox is read-only\n   */\n  readOnly: PropTypes.bool,\n  /**\n   * Specify a title for the <label> node for the Checkbox\n   */\n  title: PropTypes.string,\n  /**\n   * Specify whether the Checkbox is currently in warning state\n   */\n  warn: PropTypes.bool,\n  /**\n   * Provide the text that is displayed when the Checkbox is in warning state\n   */\n  warnText: PropTypes.node\n};\nCheckbox.defaultProps = {\n  onChange: () => {},\n  indeterminate: false\n};\nCheckbox.displayName = 'Checkbox';\nexport { Checkbox as default };","map":{"version":3,"names":["extends","_extends","PropTypes","React__default","cx","usePrefix","WarningFilled","WarningAltFilled","setupGetInstanceId","Text","getInstanceId","Checkbox","forwardRef","_ref","ref","className","helperText","id","labelText","onChange","onClick","indeterminate","invalid","invalidText","hideLabel","readOnly","title","warn","warnText","other","prefix","showWarning","showHelper","checkboxGroupInstanceId","helperId","undefined","helper","createElement","wrapperClasses","innerLabelClasses","type","evt","checked","target","el","Object","current","preventDefault","htmlFor","Fragment","propTypes","bool","string","defaultChecked","disabled","node","isRequired","func","defaultProps","displayName","default"],"sources":["/home/saymon/Backup/Portifolio/Hematology-App-with-Carbon-Design-System/frontend/node_modules/@carbon/react/es/components/Checkbox/Checkbox.js"],"sourcesContent":["/**\n * Copyright IBM Corp. 2016, 2023\n *\n * This source code is licensed under the Apache-2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { extends as _extends } from '../../_virtual/_rollupPluginBabelHelpers.js';\nimport PropTypes from 'prop-types';\nimport React__default from 'react';\nimport cx from 'classnames';\nimport '../Text/index.js';\nimport { usePrefix } from '../../internal/usePrefix.js';\nimport { WarningFilled, WarningAltFilled } from '@carbon/icons-react';\nimport setupGetInstanceId from '../../tools/setupGetInstanceId.js';\nimport { Text } from '../Text/Text.js';\n\nconst getInstanceId = setupGetInstanceId();\nconst Checkbox = /*#__PURE__*/React__default.forwardRef((_ref, ref) => {\n  let {\n    className,\n    helperText,\n    id,\n    labelText,\n    onChange,\n    onClick,\n    indeterminate,\n    invalid,\n    invalidText,\n    hideLabel,\n    readOnly,\n    title = '',\n    warn,\n    warnText,\n    ...other\n  } = _ref;\n  const prefix = usePrefix();\n  const showWarning = !readOnly && !invalid && warn;\n  const showHelper = !invalid && !warn;\n  const checkboxGroupInstanceId = getInstanceId();\n  const helperId = !helperText ? undefined : `checkbox-helper-text-${checkboxGroupInstanceId}`;\n  const helper = helperText ? /*#__PURE__*/React__default.createElement(\"div\", {\n    id: helperId,\n    className: `${prefix}--form__helper-text`\n  }, helperText) : null;\n  const wrapperClasses = cx(`${prefix}--form-item`, `${prefix}--checkbox-wrapper`, className, {\n    [`${prefix}--checkbox-wrapper--readonly`]: readOnly,\n    [`${prefix}--checkbox-wrapper--invalid`]: !readOnly && invalid,\n    [`${prefix}--checkbox-wrapper--warning`]: showWarning\n  });\n  const innerLabelClasses = cx(`${prefix}--checkbox-label-text`, {\n    [`${prefix}--visually-hidden`]: hideLabel\n  });\n  return /*#__PURE__*/React__default.createElement(\"div\", {\n    className: wrapperClasses\n  }, /*#__PURE__*/React__default.createElement(\"input\", _extends({}, other, {\n    type: \"checkbox\",\n    \"data-invalid\": invalid ? true : undefined,\n    onChange: evt => {\n      if (!readOnly && onChange) {\n        onChange(evt, {\n          checked: evt.target.checked,\n          id\n        });\n      }\n    },\n    className: `${prefix}--checkbox`,\n    id: id,\n    ref: el => {\n      if (el) {\n        el.indeterminate = indeterminate ?? false;\n      }\n      if (typeof ref === 'function') {\n        ref(el);\n      } else if (ref && Object(ref) === ref) {\n        ref.current = el;\n      }\n    }\n    // readonly attribute not applicable to type=\"checkbox\"\n    // see - https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input/checkbox\n    ,\n    \"aria-readonly\": readOnly,\n    onClick: evt => {\n      if (readOnly) {\n        // prevent default stops the checkbox being updated\n        evt.preventDefault();\n      }\n      // pass onClick event on to the user even if readonly\n      if (onClick) {\n        onClick(evt);\n      }\n    }\n  })), /*#__PURE__*/React__default.createElement(\"label\", {\n    htmlFor: id,\n    className: `${prefix}--checkbox-label`,\n    title: title\n  }, /*#__PURE__*/React__default.createElement(Text, {\n    className: innerLabelClasses\n  }, labelText)), /*#__PURE__*/React__default.createElement(\"div\", {\n    className: `${prefix}--checkbox__validation-msg`\n  }, !readOnly && invalid && /*#__PURE__*/React__default.createElement(React__default.Fragment, null, /*#__PURE__*/React__default.createElement(WarningFilled, {\n    className: `${prefix}--checkbox__invalid-icon`\n  }), /*#__PURE__*/React__default.createElement(\"div\", {\n    className: `${prefix}--form-requirement`\n  }, invalidText)), showWarning && /*#__PURE__*/React__default.createElement(React__default.Fragment, null, /*#__PURE__*/React__default.createElement(WarningAltFilled, {\n    className: `${prefix}--checkbox__invalid-icon ${prefix}--checkbox__invalid-icon--warning`\n  }), /*#__PURE__*/React__default.createElement(\"div\", {\n    className: `${prefix}--form-requirement`\n  }, warnText))), showHelper && helper);\n});\nCheckbox.propTypes = {\n  /**\n   * Specify whether the underlying input should be checked\n   */\n  checked: PropTypes.bool,\n  /**\n   * Specify an optional className to be applied to the <label> node\n   */\n  className: PropTypes.string,\n  /**\n   * Specify whether the underlying input should be checked by default\n   */\n  defaultChecked: PropTypes.bool,\n  /**\n   * Specify whether the Checkbox should be disabled\n   */\n  disabled: PropTypes.bool,\n  /**\n   * Provide text for the form group for additional help\n   */\n  helperText: PropTypes.node,\n  /**\n   * Specify whether the label should be hidden, or not\n   */\n  hideLabel: PropTypes.bool,\n  /**\n   * Provide an `id` to uniquely identify the Checkbox input\n   */\n  id: PropTypes.string.isRequired,\n  /**\n   * Specify whether the Checkbox is in an indeterminate state\n   */\n  indeterminate: PropTypes.bool,\n  /**\n   * Specify whether the Checkbox is currently invalid\n   */\n  invalid: PropTypes.bool,\n  /**\n   * Provide the text that is displayed when the Checkbox is in an invalid state\n   */\n  invalidText: PropTypes.node,\n  /**\n   * Provide a label to provide a description of the Checkbox input that you are\n   * exposing to the user\n   */\n  labelText: PropTypes.node.isRequired,\n  /**\n   * Provide an optional handler that is called when the internal state of\n   * Checkbox changes. This handler is called with event and state info.\n   * `(event, { checked, id }) => void`\n   */\n  onChange: PropTypes.func,\n  /**\n   * Specify whether the Checkbox is read-only\n   */\n  readOnly: PropTypes.bool,\n  /**\n   * Specify a title for the <label> node for the Checkbox\n   */\n  title: PropTypes.string,\n  /**\n   * Specify whether the Checkbox is currently in warning state\n   */\n  warn: PropTypes.bool,\n  /**\n   * Provide the text that is displayed when the Checkbox is in warning state\n   */\n  warnText: PropTypes.node\n};\nCheckbox.defaultProps = {\n  onChange: () => {},\n  indeterminate: false\n};\nCheckbox.displayName = 'Checkbox';\n\nexport { Checkbox as default };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}