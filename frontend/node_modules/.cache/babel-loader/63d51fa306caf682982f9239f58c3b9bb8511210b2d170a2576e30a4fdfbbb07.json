{"ast":null,"code":"/**\n * Copyright IBM Corp. 2016, 2023\n *\n * This source code is licensed under the Apache-2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { useState, useEffect } from 'react';\nimport { canUseDOM } from './environment.js';\nfunction useMatchMedia(mediaQueryString) {\n  const [matches, setMatches] = useState(() => {\n    if (canUseDOM) {\n      const mediaQueryList = window.matchMedia(mediaQueryString);\n      return mediaQueryList.matches;\n    }\n    return false;\n  });\n  useEffect(() => {\n    function listener(event) {\n      setMatches(event.matches);\n    }\n    const mediaQueryList = window.matchMedia(mediaQueryString);\n    // Support fallback to `addListener` for broader browser support\n    if (mediaQueryList.addEventListener) {\n      mediaQueryList.addEventListener('change', listener);\n    } else {\n      mediaQueryList.addListener(listener);\n    }\n\n    // Make sure the media query list is in sync with the matches state\n    setMatches(mediaQueryList.matches);\n    return () => {\n      if (mediaQueryList.addEventListener) {\n        mediaQueryList.removeEventListener('change', listener);\n      } else {\n        mediaQueryList.removeListener(listener);\n      }\n    };\n  }, [mediaQueryString]);\n  return matches;\n}\nexport { useMatchMedia };","map":{"version":3,"names":["useState","useEffect","canUseDOM","useMatchMedia","mediaQueryString","matches","setMatches","mediaQueryList","window","matchMedia","listener","event","addEventListener","addListener","removeEventListener","removeListener"],"sources":["/home/saymon/Backup/Portifolio/Hematology-App-with-Carbon-Design-System/frontend/node_modules/@carbon/react/es/internal/useMatchMedia.js"],"sourcesContent":["/**\n * Copyright IBM Corp. 2016, 2023\n *\n * This source code is licensed under the Apache-2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { useState, useEffect } from 'react';\nimport { canUseDOM } from './environment.js';\n\nfunction useMatchMedia(mediaQueryString) {\n  const [matches, setMatches] = useState(() => {\n    if (canUseDOM) {\n      const mediaQueryList = window.matchMedia(mediaQueryString);\n      return mediaQueryList.matches;\n    }\n    return false;\n  });\n  useEffect(() => {\n    function listener(event) {\n      setMatches(event.matches);\n    }\n    const mediaQueryList = window.matchMedia(mediaQueryString);\n    // Support fallback to `addListener` for broader browser support\n    if (mediaQueryList.addEventListener) {\n      mediaQueryList.addEventListener('change', listener);\n    } else {\n      mediaQueryList.addListener(listener);\n    }\n\n    // Make sure the media query list is in sync with the matches state\n    setMatches(mediaQueryList.matches);\n    return () => {\n      if (mediaQueryList.addEventListener) {\n        mediaQueryList.removeEventListener('change', listener);\n      } else {\n        mediaQueryList.removeListener(listener);\n      }\n    };\n  }, [mediaQueryString]);\n  return matches;\n}\n\nexport { useMatchMedia };\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;;AAEA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC3C,SAASC,SAAS,QAAQ,kBAAkB;AAE5C,SAASC,aAAaA,CAACC,gBAAgB,EAAE;EACvC,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGN,QAAQ,CAAC,MAAM;IAC3C,IAAIE,SAAS,EAAE;MACb,MAAMK,cAAc,GAAGC,MAAM,CAACC,UAAU,CAACL,gBAAgB,CAAC;MAC1D,OAAOG,cAAc,CAACF,OAAO;IAC/B;IACA,OAAO,KAAK;EACd,CAAC,CAAC;EACFJ,SAAS,CAAC,MAAM;IACd,SAASS,QAAQA,CAACC,KAAK,EAAE;MACvBL,UAAU,CAACK,KAAK,CAACN,OAAO,CAAC;IAC3B;IACA,MAAME,cAAc,GAAGC,MAAM,CAACC,UAAU,CAACL,gBAAgB,CAAC;IAC1D;IACA,IAAIG,cAAc,CAACK,gBAAgB,EAAE;MACnCL,cAAc,CAACK,gBAAgB,CAAC,QAAQ,EAAEF,QAAQ,CAAC;IACrD,CAAC,MAAM;MACLH,cAAc,CAACM,WAAW,CAACH,QAAQ,CAAC;IACtC;;IAEA;IACAJ,UAAU,CAACC,cAAc,CAACF,OAAO,CAAC;IAClC,OAAO,MAAM;MACX,IAAIE,cAAc,CAACK,gBAAgB,EAAE;QACnCL,cAAc,CAACO,mBAAmB,CAAC,QAAQ,EAAEJ,QAAQ,CAAC;MACxD,CAAC,MAAM;QACLH,cAAc,CAACQ,cAAc,CAACL,QAAQ,CAAC;MACzC;IACF,CAAC;EACH,CAAC,EAAE,CAACN,gBAAgB,CAAC,CAAC;EACtB,OAAOC,OAAO;AAChB;AAEA,SAASF,aAAa"},"metadata":{},"sourceType":"module","externalDependencies":[]}