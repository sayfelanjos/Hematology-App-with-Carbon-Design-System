{"ast":null,"code":"/**\n * Copyright IBM Corp. 2016, 2023\n *\n * This source code is licensed under the Apache-2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n/**\n * Use the local `localCompare` with the `numeric` option to sort two,\n * potentially alpha-numeric, strings in a list of items.\n *\n * @param {string} itemA\n * @param {string} itemB\n * @param {object} options\n * @param {string} options.locale\n * @returns {number}\n */\nconst defaultCompareItems = (itemA, itemB, _ref) => {\n  let {\n    locale\n  } = _ref;\n  return itemA.localeCompare(itemB, locale, {\n    numeric: true\n  });\n};\n\n/**\n * Default sorting algorithm for options in a selection control\n */\nconst defaultSortItems = (items, _ref2) => {\n  let {\n    selectedItems = [],\n    itemToString,\n    compareItems,\n    locale = 'en'\n  } = _ref2;\n  return items.sort((itemA, itemB) => {\n    const hasItemA = selectedItems.includes(itemA);\n    const hasItemB = selectedItems.includes(itemB);\n\n    // Prefer whichever item is in the `selectedItems` array first\n    if (hasItemA && !hasItemB) {\n      return -1;\n    }\n    if (hasItemB && !hasItemA) {\n      return 1;\n    }\n    return compareItems(itemToString(itemA), itemToString(itemB), {\n      locale\n    });\n  });\n};\nexport { defaultCompareItems, defaultSortItems };","map":{"version":3,"names":["defaultCompareItems","itemA","itemB","_ref","locale","localeCompare","numeric","defaultSortItems","items","_ref2","selectedItems","itemToString","compareItems","sort","hasItemA","includes","hasItemB"],"sources":["/home/saymon/Backup/Portifolio/Hematology-App-with-Carbon-Design-System/frontend/node_modules/@carbon/react/es/components/MultiSelect/tools/sorting.js"],"sourcesContent":["/**\n * Copyright IBM Corp. 2016, 2023\n *\n * This source code is licensed under the Apache-2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n/**\n * Use the local `localCompare` with the `numeric` option to sort two,\n * potentially alpha-numeric, strings in a list of items.\n *\n * @param {string} itemA\n * @param {string} itemB\n * @param {object} options\n * @param {string} options.locale\n * @returns {number}\n */\nconst defaultCompareItems = (itemA, itemB, _ref) => {\n  let {\n    locale\n  } = _ref;\n  return itemA.localeCompare(itemB, locale, {\n    numeric: true\n  });\n};\n\n/**\n * Default sorting algorithm for options in a selection control\n */\nconst defaultSortItems = (items, _ref2) => {\n  let {\n    selectedItems = [],\n    itemToString,\n    compareItems,\n    locale = 'en'\n  } = _ref2;\n  return items.sort((itemA, itemB) => {\n    const hasItemA = selectedItems.includes(itemA);\n    const hasItemB = selectedItems.includes(itemB);\n\n    // Prefer whichever item is in the `selectedItems` array first\n    if (hasItemA && !hasItemB) {\n      return -1;\n    }\n    if (hasItemB && !hasItemA) {\n      return 1;\n    }\n    return compareItems(itemToString(itemA), itemToString(itemB), {\n      locale\n    });\n  });\n};\n\nexport { defaultCompareItems, defaultSortItems };\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAMA,mBAAmB,GAAGA,CAACC,KAAK,EAAEC,KAAK,EAAEC,IAAI,KAAK;EAClD,IAAI;IACFC;EACF,CAAC,GAAGD,IAAI;EACR,OAAOF,KAAK,CAACI,aAAa,CAACH,KAAK,EAAEE,MAAM,EAAE;IACxCE,OAAO,EAAE;EACX,CAAC,CAAC;AACJ,CAAC;;AAED;AACA;AACA;AACA,MAAMC,gBAAgB,GAAGA,CAACC,KAAK,EAAEC,KAAK,KAAK;EACzC,IAAI;IACFC,aAAa,GAAG,EAAE;IAClBC,YAAY;IACZC,YAAY;IACZR,MAAM,GAAG;EACX,CAAC,GAAGK,KAAK;EACT,OAAOD,KAAK,CAACK,IAAI,CAAC,CAACZ,KAAK,EAAEC,KAAK,KAAK;IAClC,MAAMY,QAAQ,GAAGJ,aAAa,CAACK,QAAQ,CAACd,KAAK,CAAC;IAC9C,MAAMe,QAAQ,GAAGN,aAAa,CAACK,QAAQ,CAACb,KAAK,CAAC;;IAE9C;IACA,IAAIY,QAAQ,IAAI,CAACE,QAAQ,EAAE;MACzB,OAAO,CAAC,CAAC;IACX;IACA,IAAIA,QAAQ,IAAI,CAACF,QAAQ,EAAE;MACzB,OAAO,CAAC;IACV;IACA,OAAOF,YAAY,CAACD,YAAY,CAACV,KAAK,CAAC,EAAEU,YAAY,CAACT,KAAK,CAAC,EAAE;MAC5DE;IACF,CAAC,CAAC;EACJ,CAAC,CAAC;AACJ,CAAC;AAED,SAASJ,mBAAmB,EAAEO,gBAAgB"},"metadata":{},"sourceType":"module","externalDependencies":[]}