{"ast":null,"code":"/**\n * Copyright IBM Corp. 2016, 2023\n *\n * This source code is licensed under the Apache-2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { extends as _extends } from '../../_virtual/_rollupPluginBabelHelpers.js';\nimport cx from 'classnames';\nimport PropTypes from 'prop-types';\nimport React__default from 'react';\nimport { usePrefix } from '../../internal/usePrefix.js';\nimport { GridSettings } from './GridContext.js';\nfunction FlexGrid(_ref) {\n  let {\n    as: BaseComponent = 'div',\n    condensed = false,\n    narrow = false,\n    fullWidth = false,\n    className: containerClassName,\n    children,\n    ...rest\n  } = _ref;\n  const prefix = usePrefix();\n  const className = cx(containerClassName, {\n    [`${prefix}--grid`]: true,\n    [`${prefix}--grid--condensed`]: condensed,\n    [`${prefix}--grid--narrow`]: narrow,\n    [`${prefix}--grid--full-width`]: fullWidth\n  });\n  // cast as any to let TypeScript allow passing in attributes to base component\n  const BaseComponentAsAny = BaseComponent;\n  return /*#__PURE__*/React__default.createElement(GridSettings, {\n    mode: \"flexbox\",\n    subgrid: false\n  }, /*#__PURE__*/React__default.createElement(BaseComponentAsAny, _extends({\n    className: className\n  }, rest), children));\n}\nFlexGrid.propTypes = {\n  /**\n   * Provide a custom element to render instead of the default <div>\n   */\n  as: PropTypes.oneOfType([PropTypes.string, PropTypes.elementType]),\n  /**\n   * Pass in content that will be rendered within the `FlexGrid`\n   */\n  children: PropTypes.node,\n  /**\n   * Specify a custom className to be applied to the `FlexGrid`\n   */\n  className: PropTypes.string,\n  /**\n   * Collapse the gutter to 1px. Useful for fluid layouts.\n   * Rows have 1px of margin between them to match gutter.\n   */\n  condensed: PropTypes.bool,\n  /**\n   * Remove the default max width that the grid has set\n   */\n  fullWidth: PropTypes.bool,\n  /**\n   * Container hangs 16px into the gutter. Useful for\n   * typographic alignment with and without containers.\n   */\n  narrow: PropTypes.bool\n};\nconst FlexGridComponent = FlexGrid;\nexport { FlexGridComponent as FlexGrid };","map":{"version":3,"names":["extends","_extends","cx","PropTypes","React__default","usePrefix","GridSettings","FlexGrid","_ref","as","BaseComponent","condensed","narrow","fullWidth","className","containerClassName","children","rest","prefix","BaseComponentAsAny","createElement","mode","subgrid","propTypes","oneOfType","string","elementType","node","bool","FlexGridComponent"],"sources":["/home/saymon/Backup/Portifolio/Hematology-App-with-Carbon-Design-System/frontend/node_modules/@carbon/react/es/components/Grid/FlexGrid.js"],"sourcesContent":["/**\n * Copyright IBM Corp. 2016, 2023\n *\n * This source code is licensed under the Apache-2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { extends as _extends } from '../../_virtual/_rollupPluginBabelHelpers.js';\nimport cx from 'classnames';\nimport PropTypes from 'prop-types';\nimport React__default from 'react';\nimport { usePrefix } from '../../internal/usePrefix.js';\nimport { GridSettings } from './GridContext.js';\n\nfunction FlexGrid(_ref) {\n  let {\n    as: BaseComponent = 'div',\n    condensed = false,\n    narrow = false,\n    fullWidth = false,\n    className: containerClassName,\n    children,\n    ...rest\n  } = _ref;\n  const prefix = usePrefix();\n  const className = cx(containerClassName, {\n    [`${prefix}--grid`]: true,\n    [`${prefix}--grid--condensed`]: condensed,\n    [`${prefix}--grid--narrow`]: narrow,\n    [`${prefix}--grid--full-width`]: fullWidth\n  });\n  // cast as any to let TypeScript allow passing in attributes to base component\n  const BaseComponentAsAny = BaseComponent;\n  return /*#__PURE__*/React__default.createElement(GridSettings, {\n    mode: \"flexbox\",\n    subgrid: false\n  }, /*#__PURE__*/React__default.createElement(BaseComponentAsAny, _extends({\n    className: className\n  }, rest), children));\n}\nFlexGrid.propTypes = {\n  /**\n   * Provide a custom element to render instead of the default <div>\n   */\n  as: PropTypes.oneOfType([PropTypes.string, PropTypes.elementType]),\n  /**\n   * Pass in content that will be rendered within the `FlexGrid`\n   */\n  children: PropTypes.node,\n  /**\n   * Specify a custom className to be applied to the `FlexGrid`\n   */\n  className: PropTypes.string,\n  /**\n   * Collapse the gutter to 1px. Useful for fluid layouts.\n   * Rows have 1px of margin between them to match gutter.\n   */\n  condensed: PropTypes.bool,\n  /**\n   * Remove the default max width that the grid has set\n   */\n  fullWidth: PropTypes.bool,\n  /**\n   * Container hangs 16px into the gutter. Useful for\n   * typographic alignment with and without containers.\n   */\n  narrow: PropTypes.bool\n};\nconst FlexGridComponent = FlexGrid;\n\nexport { FlexGridComponent as FlexGrid };\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;;AAEA,SAASA,OAAO,IAAIC,QAAQ,QAAQ,6CAA6C;AACjF,OAAOC,EAAE,MAAM,YAAY;AAC3B,OAAOC,SAAS,MAAM,YAAY;AAClC,OAAOC,cAAc,MAAM,OAAO;AAClC,SAASC,SAAS,QAAQ,6BAA6B;AACvD,SAASC,YAAY,QAAQ,kBAAkB;AAE/C,SAASC,QAAQA,CAACC,IAAI,EAAE;EACtB,IAAI;IACFC,EAAE,EAAEC,aAAa,GAAG,KAAK;IACzBC,SAAS,GAAG,KAAK;IACjBC,MAAM,GAAG,KAAK;IACdC,SAAS,GAAG,KAAK;IACjBC,SAAS,EAAEC,kBAAkB;IAC7BC,QAAQ;IACR,GAAGC;EACL,CAAC,GAAGT,IAAI;EACR,MAAMU,MAAM,GAAGb,SAAS,CAAC,CAAC;EAC1B,MAAMS,SAAS,GAAGZ,EAAE,CAACa,kBAAkB,EAAE;IACvC,CAAE,GAAEG,MAAO,QAAO,GAAG,IAAI;IACzB,CAAE,GAAEA,MAAO,mBAAkB,GAAGP,SAAS;IACzC,CAAE,GAAEO,MAAO,gBAAe,GAAGN,MAAM;IACnC,CAAE,GAAEM,MAAO,oBAAmB,GAAGL;EACnC,CAAC,CAAC;EACF;EACA,MAAMM,kBAAkB,GAAGT,aAAa;EACxC,OAAO,aAAaN,cAAc,CAACgB,aAAa,CAACd,YAAY,EAAE;IAC7De,IAAI,EAAE,SAAS;IACfC,OAAO,EAAE;EACX,CAAC,EAAE,aAAalB,cAAc,CAACgB,aAAa,CAACD,kBAAkB,EAAElB,QAAQ,CAAC;IACxEa,SAAS,EAAEA;EACb,CAAC,EAAEG,IAAI,CAAC,EAAED,QAAQ,CAAC,CAAC;AACtB;AACAT,QAAQ,CAACgB,SAAS,GAAG;EACnB;AACF;AACA;EACEd,EAAE,EAAEN,SAAS,CAACqB,SAAS,CAAC,CAACrB,SAAS,CAACsB,MAAM,EAAEtB,SAAS,CAACuB,WAAW,CAAC,CAAC;EAClE;AACF;AACA;EACEV,QAAQ,EAAEb,SAAS,CAACwB,IAAI;EACxB;AACF;AACA;EACEb,SAAS,EAAEX,SAAS,CAACsB,MAAM;EAC3B;AACF;AACA;AACA;EACEd,SAAS,EAAER,SAAS,CAACyB,IAAI;EACzB;AACF;AACA;EACEf,SAAS,EAAEV,SAAS,CAACyB,IAAI;EACzB;AACF;AACA;AACA;EACEhB,MAAM,EAAET,SAAS,CAACyB;AACpB,CAAC;AACD,MAAMC,iBAAiB,GAAGtB,QAAQ;AAElC,SAASsB,iBAAiB,IAAItB,QAAQ"},"metadata":{},"sourceType":"module","externalDependencies":[]}