{"ast":null,"code":"/**\n * Copyright IBM Corp. 2016, 2023\n *\n * This source code is licensed under the Apache-2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { extends as _extends } from '../../../_virtual/_rollupPluginBabelHelpers.js';\nimport cx from 'classnames';\nimport React__default from 'react';\nimport PropTypes from 'prop-types';\nimport { ChevronDown } from '@carbon/icons-react';\nimport { usePrefix } from '../../../internal/usePrefix.js';\nvar _ChevronDown;\nconst translationIds = {\n  'close.menu': 'close.menu',\n  'open.menu': 'open.menu'\n};\nconst defaultTranslations = {\n  [translationIds['close.menu']]: 'Close',\n  [translationIds['open.menu']]: 'Open'\n};\n\n/**\n * `ListBoxTrigger` is used to orient the icon up or down depending on the\n * state of the menu for a given `ListBox`\n */\nconst ListBoxTrigger = _ref => {\n  let {\n    isOpen,\n    translateWithId: t,\n    ...rest\n  } = _ref;\n  const prefix = usePrefix();\n  const className = cx({\n    [`${prefix}--list-box__menu-icon`]: true,\n    [`${prefix}--list-box__menu-icon--open`]: isOpen\n  });\n  const description = isOpen ? t('close.menu') : t('open.menu');\n  return /*#__PURE__*/React__default.createElement(\"button\", _extends({}, rest, {\n    \"aria-label\": description,\n    title: description,\n    className: className,\n    type: \"button\",\n    tabIndex: \"-1\"\n  }), _ChevronDown || (_ChevronDown = /*#__PURE__*/React__default.createElement(ChevronDown, null)));\n};\nListBoxTrigger.propTypes = {\n  /**\n   * Specify whether the menu is currently open, which will influence the\n   * direction of the menu icon\n   */\n  isOpen: PropTypes.bool.isRequired,\n  /**\n   * i18n hook used to provide the appropriate description for the given menu\n   * icon. This function takes in an id defined in `translationIds` and should\n   * return a string message for that given message id.\n   */\n  translateWithId: PropTypes.func.isRequired\n};\nListBoxTrigger.defaultProps = {\n  translateWithId: id => defaultTranslations[id]\n};\nvar ListBoxTrigger$1 = ListBoxTrigger;\nexport { ListBoxTrigger$1 as default, translationIds };","map":{"version":3,"names":["extends","_extends","cx","React__default","PropTypes","ChevronDown","usePrefix","_ChevronDown","translationIds","defaultTranslations","ListBoxTrigger","_ref","isOpen","translateWithId","t","rest","prefix","className","description","createElement","title","type","tabIndex","propTypes","bool","isRequired","func","defaultProps","id","ListBoxTrigger$1","default"],"sources":["/home/saymon/Backup/Portifolio/Hematology-App-with-Carbon-Design-System/frontend/node_modules/@carbon/react/es/components/ListBox/next/ListBoxTrigger.js"],"sourcesContent":["/**\n * Copyright IBM Corp. 2016, 2023\n *\n * This source code is licensed under the Apache-2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { extends as _extends } from '../../../_virtual/_rollupPluginBabelHelpers.js';\nimport cx from 'classnames';\nimport React__default from 'react';\nimport PropTypes from 'prop-types';\nimport { ChevronDown } from '@carbon/icons-react';\nimport { usePrefix } from '../../../internal/usePrefix.js';\n\nvar _ChevronDown;\nconst translationIds = {\n  'close.menu': 'close.menu',\n  'open.menu': 'open.menu'\n};\nconst defaultTranslations = {\n  [translationIds['close.menu']]: 'Close',\n  [translationIds['open.menu']]: 'Open'\n};\n\n/**\n * `ListBoxTrigger` is used to orient the icon up or down depending on the\n * state of the menu for a given `ListBox`\n */\nconst ListBoxTrigger = _ref => {\n  let {\n    isOpen,\n    translateWithId: t,\n    ...rest\n  } = _ref;\n  const prefix = usePrefix();\n  const className = cx({\n    [`${prefix}--list-box__menu-icon`]: true,\n    [`${prefix}--list-box__menu-icon--open`]: isOpen\n  });\n  const description = isOpen ? t('close.menu') : t('open.menu');\n  return /*#__PURE__*/React__default.createElement(\"button\", _extends({}, rest, {\n    \"aria-label\": description,\n    title: description,\n    className: className,\n    type: \"button\",\n    tabIndex: \"-1\"\n  }), _ChevronDown || (_ChevronDown = /*#__PURE__*/React__default.createElement(ChevronDown, null)));\n};\nListBoxTrigger.propTypes = {\n  /**\n   * Specify whether the menu is currently open, which will influence the\n   * direction of the menu icon\n   */\n  isOpen: PropTypes.bool.isRequired,\n  /**\n   * i18n hook used to provide the appropriate description for the given menu\n   * icon. This function takes in an id defined in `translationIds` and should\n   * return a string message for that given message id.\n   */\n  translateWithId: PropTypes.func.isRequired\n};\nListBoxTrigger.defaultProps = {\n  translateWithId: id => defaultTranslations[id]\n};\nvar ListBoxTrigger$1 = ListBoxTrigger;\n\nexport { ListBoxTrigger$1 as default, translationIds };\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;;AAEA,SAASA,OAAO,IAAIC,QAAQ,QAAQ,gDAAgD;AACpF,OAAOC,EAAE,MAAM,YAAY;AAC3B,OAAOC,cAAc,MAAM,OAAO;AAClC,OAAOC,SAAS,MAAM,YAAY;AAClC,SAASC,WAAW,QAAQ,qBAAqB;AACjD,SAASC,SAAS,QAAQ,gCAAgC;AAE1D,IAAIC,YAAY;AAChB,MAAMC,cAAc,GAAG;EACrB,YAAY,EAAE,YAAY;EAC1B,WAAW,EAAE;AACf,CAAC;AACD,MAAMC,mBAAmB,GAAG;EAC1B,CAACD,cAAc,CAAC,YAAY,CAAC,GAAG,OAAO;EACvC,CAACA,cAAc,CAAC,WAAW,CAAC,GAAG;AACjC,CAAC;;AAED;AACA;AACA;AACA;AACA,MAAME,cAAc,GAAGC,IAAI,IAAI;EAC7B,IAAI;IACFC,MAAM;IACNC,eAAe,EAAEC,CAAC;IAClB,GAAGC;EACL,CAAC,GAAGJ,IAAI;EACR,MAAMK,MAAM,GAAGV,SAAS,CAAC,CAAC;EAC1B,MAAMW,SAAS,GAAGf,EAAE,CAAC;IACnB,CAAE,GAAEc,MAAO,uBAAsB,GAAG,IAAI;IACxC,CAAE,GAAEA,MAAO,6BAA4B,GAAGJ;EAC5C,CAAC,CAAC;EACF,MAAMM,WAAW,GAAGN,MAAM,GAAGE,CAAC,CAAC,YAAY,CAAC,GAAGA,CAAC,CAAC,WAAW,CAAC;EAC7D,OAAO,aAAaX,cAAc,CAACgB,aAAa,CAAC,QAAQ,EAAElB,QAAQ,CAAC,CAAC,CAAC,EAAEc,IAAI,EAAE;IAC5E,YAAY,EAAEG,WAAW;IACzBE,KAAK,EAAEF,WAAW;IAClBD,SAAS,EAAEA,SAAS;IACpBI,IAAI,EAAE,QAAQ;IACdC,QAAQ,EAAE;EACZ,CAAC,CAAC,EAAEf,YAAY,KAAKA,YAAY,GAAG,aAAaJ,cAAc,CAACgB,aAAa,CAACd,WAAW,EAAE,IAAI,CAAC,CAAC,CAAC;AACpG,CAAC;AACDK,cAAc,CAACa,SAAS,GAAG;EACzB;AACF;AACA;AACA;EACEX,MAAM,EAAER,SAAS,CAACoB,IAAI,CAACC,UAAU;EACjC;AACF;AACA;AACA;AACA;EACEZ,eAAe,EAAET,SAAS,CAACsB,IAAI,CAACD;AAClC,CAAC;AACDf,cAAc,CAACiB,YAAY,GAAG;EAC5Bd,eAAe,EAAEe,EAAE,IAAInB,mBAAmB,CAACmB,EAAE;AAC/C,CAAC;AACD,IAAIC,gBAAgB,GAAGnB,cAAc;AAErC,SAASmB,gBAAgB,IAAIC,OAAO,EAAEtB,cAAc"},"metadata":{},"sourceType":"module","externalDependencies":[]}