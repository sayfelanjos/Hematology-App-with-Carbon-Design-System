{"ast":null,"code":"import _defineProperty from \"/home/saymon/Backup/Portifolio/Hematology-App-with-Carbon-Design-System/frontend/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nimport _slicedToArray from \"/home/saymon/Backup/Portifolio/Hematology-App-with-Carbon-Design-System/frontend/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport _objectWithoutProperties from \"/home/saymon/Backup/Portifolio/Hematology-App-with-Carbon-Design-System/frontend/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js\";\nvar _excluded = [\"children\", \"className\", \"expanded\", \"addFocusListeners\", \"onHeaderPanelFocus\", \"href\"];\n/**\n * Copyright IBM Corp. 2016, 2023\n *\n * This source code is licensed under the Apache-2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { extends as _extends } from '../../_virtual/_rollupPluginBabelHelpers.js';\nimport React__default, { useRef, useState } from 'react';\nimport cx from 'classnames';\nimport PropTypes from 'prop-types';\nimport { usePrefix } from '../../internal/usePrefix.js';\nimport { useWindowEvent } from '../../internal/useEvent.js';\nimport { useMergedRefs } from '../../internal/useMergedRefs.js';\nimport { match } from '../../internal/keyboard/match.js';\nimport { Escape } from '../../internal/keyboard/keys.js';\nvar noopFn = function noopFn() {};\nvar HeaderPanel = /*#__PURE__*/React__default.forwardRef(function HeaderPanel(_ref, ref) {\n  var _cx;\n  var children = _ref.children,\n    customClassName = _ref.className,\n    expanded = _ref.expanded,\n    _ref$addFocusListener = _ref.addFocusListeners,\n    addFocusListeners = _ref$addFocusListener === void 0 ? true : _ref$addFocusListener,\n    _ref$onHeaderPanelFoc = _ref.onHeaderPanelFocus,\n    onHeaderPanelFocus = _ref$onHeaderPanelFoc === void 0 ? noopFn : _ref$onHeaderPanelFoc,\n    href = _ref.href,\n    other = _objectWithoutProperties(_ref, _excluded);\n  var prefix = usePrefix();\n  var headerPanelReference = useRef(null);\n  var headerPanelRef = useMergedRefs([headerPanelReference, ref]);\n  var controlled = useRef(expanded !== undefined).current;\n  var _useState = useState(expanded),\n    _useState2 = _slicedToArray(_useState, 2),\n    expandedState = _useState2[0],\n    setExpandedState = _useState2[1];\n  var expandedProp = controlled ? expanded : expandedState;\n  var _useState3 = useState(null),\n    _useState4 = _slicedToArray(_useState3, 2),\n    lastClickedElement = _useState4[0],\n    setLastClickedElement = _useState4[1];\n  var className = cx(\"\".concat(prefix, \"--header-panel\"), (_cx = {}, _defineProperty(_cx, \"\".concat(prefix, \"--header-panel--expanded\"), expandedProp), _defineProperty(_cx, customClassName, !!customClassName), _cx));\n  var eventHandlers = {};\n  if (addFocusListeners) {\n    eventHandlers.onBlur = function (event) {\n      var _lastClickedElement$c;\n      if (!event.currentTarget.contains(event.relatedTarget) && !(lastClickedElement !== null && lastClickedElement !== void 0 && (_lastClickedElement$c = lastClickedElement.classList) !== null && _lastClickedElement$c !== void 0 && _lastClickedElement$c.contains('cds--switcher__item-link'))) {\n        setExpandedState(false);\n        setLastClickedElement(null);\n        if (expanded) {\n          onHeaderPanelFocus();\n        }\n      }\n    };\n    eventHandlers.onKeyDown = function (event) {\n      if (match(event, Escape)) {\n        setExpandedState(false);\n        onHeaderPanelFocus();\n        if (href) {\n          window.location.href = href;\n        }\n      }\n    };\n  }\n  useWindowEvent('click', function () {\n    var _children$type, _headerPanelRef$curre;\n    var focusedElement = document.activeElement;\n    setLastClickedElement(focusedElement);\n    if (((_children$type = children.type) === null || _children$type === void 0 ? void 0 : _children$type.displayName) === 'Switcher' && !(focusedElement !== null && focusedElement !== void 0 && focusedElement.closest(\".\".concat(prefix, \"--header-panel--expanded\"))) && !(focusedElement !== null && focusedElement !== void 0 && focusedElement.closest(\".\".concat(prefix, \"--header__action\"))) && !(headerPanelRef !== null && headerPanelRef !== void 0 && (_headerPanelRef$curre = headerPanelRef.current) !== null && _headerPanelRef$curre !== void 0 && _headerPanelRef$curre.classList.contains(\"\".concat(prefix, \"--switcher\"))) && expanded) {\n      setExpandedState(false);\n      onHeaderPanelFocus();\n    }\n  });\n  return /*#__PURE__*/React__default.createElement(\"div\", _extends({}, other, {\n    className: className,\n    ref: headerPanelRef\n  }, eventHandlers), children);\n});\nHeaderPanel.propTypes = {\n  /**\n   * Specify whether focus and blur listeners are added. They are by default.\n   */\n  addFocusListeners: PropTypes.bool,\n  /**\n   * The content that will render inside of the `HeaderPanel`\n   */\n  children: PropTypes.node,\n  /**\n   * Optionally provide a custom class to apply to the underlying `<li>` node\n   */\n  className: PropTypes.string,\n  /**\n   * Specify whether the panel is expanded\n   */\n  expanded: PropTypes.bool,\n  /**\n   * Provide the `href` to the id of the element on your package that could\n   * be target.\n   */\n  href: PropTypes.string,\n  /**\n   * An optional listener that is called a callback to collapse the HeaderPanel\n   */\n  onHeaderPanelFocus: PropTypes.func\n};\nHeaderPanel.displayName = 'HeaderPanel';\nvar HeaderPanel$1 = HeaderPanel;\nexport { HeaderPanel$1 as default };","map":{"version":3,"names":["extends","_extends","React__default","useRef","useState","cx","PropTypes","usePrefix","useWindowEvent","useMergedRefs","match","Escape","noopFn","HeaderPanel","forwardRef","_ref","ref","_cx","children","customClassName","className","expanded","_ref$addFocusListener","addFocusListeners","_ref$onHeaderPanelFoc","onHeaderPanelFocus","href","other","_objectWithoutProperties","_excluded","prefix","headerPanelReference","headerPanelRef","controlled","undefined","current","_useState","_useState2","_slicedToArray","expandedState","setExpandedState","expandedProp","_useState3","_useState4","lastClickedElement","setLastClickedElement","concat","_defineProperty","eventHandlers","onBlur","event","_lastClickedElement$c","currentTarget","contains","relatedTarget","classList","onKeyDown","window","location","_children$type","_headerPanelRef$curre","focusedElement","document","activeElement","type","displayName","closest","createElement","propTypes","bool","node","string","func","HeaderPanel$1","default"],"sources":["/home/saymon/Backup/Portifolio/Hematology-App-with-Carbon-Design-System/frontend/node_modules/@carbon/react/es/components/UIShell/HeaderPanel.js"],"sourcesContent":["/**\n * Copyright IBM Corp. 2016, 2023\n *\n * This source code is licensed under the Apache-2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { extends as _extends } from '../../_virtual/_rollupPluginBabelHelpers.js';\nimport React__default, { useRef, useState } from 'react';\nimport cx from 'classnames';\nimport PropTypes from 'prop-types';\nimport { usePrefix } from '../../internal/usePrefix.js';\nimport { useWindowEvent } from '../../internal/useEvent.js';\nimport { useMergedRefs } from '../../internal/useMergedRefs.js';\nimport { match } from '../../internal/keyboard/match.js';\nimport { Escape } from '../../internal/keyboard/keys.js';\n\nconst noopFn = () => {};\nconst HeaderPanel = /*#__PURE__*/React__default.forwardRef(function HeaderPanel(_ref, ref) {\n  let {\n    children,\n    className: customClassName,\n    expanded,\n    addFocusListeners = true,\n    onHeaderPanelFocus = noopFn,\n    href,\n    ...other\n  } = _ref;\n  const prefix = usePrefix();\n  const headerPanelReference = useRef(null);\n  const headerPanelRef = useMergedRefs([headerPanelReference, ref]);\n  const controlled = useRef(expanded !== undefined).current;\n  const [expandedState, setExpandedState] = useState(expanded);\n  const expandedProp = controlled ? expanded : expandedState;\n  const [lastClickedElement, setLastClickedElement] = useState(null);\n  const className = cx(`${prefix}--header-panel`, {\n    [`${prefix}--header-panel--expanded`]: expandedProp,\n    [customClassName]: !!customClassName\n  });\n  const eventHandlers = {};\n  if (addFocusListeners) {\n    eventHandlers.onBlur = event => {\n      if (!event.currentTarget.contains(event.relatedTarget) && !lastClickedElement?.classList?.contains('cds--switcher__item-link')) {\n        setExpandedState(false);\n        setLastClickedElement(null);\n        if (expanded) {\n          onHeaderPanelFocus();\n        }\n      }\n    };\n    eventHandlers.onKeyDown = event => {\n      if (match(event, Escape)) {\n        setExpandedState(false);\n        onHeaderPanelFocus();\n        if (href) {\n          window.location.href = href;\n        }\n      }\n    };\n  }\n  useWindowEvent('click', () => {\n    const focusedElement = document.activeElement;\n    setLastClickedElement(focusedElement);\n    if (children.type?.displayName === 'Switcher' && !focusedElement?.closest(`.${prefix}--header-panel--expanded`) && !focusedElement?.closest(`.${prefix}--header__action`) && !headerPanelRef?.current?.classList.contains(`${prefix}--switcher`) && expanded) {\n      setExpandedState(false);\n      onHeaderPanelFocus();\n    }\n  });\n  return /*#__PURE__*/React__default.createElement(\"div\", _extends({}, other, {\n    className: className,\n    ref: headerPanelRef\n  }, eventHandlers), children);\n});\nHeaderPanel.propTypes = {\n  /**\n   * Specify whether focus and blur listeners are added. They are by default.\n   */\n  addFocusListeners: PropTypes.bool,\n  /**\n   * The content that will render inside of the `HeaderPanel`\n   */\n  children: PropTypes.node,\n  /**\n   * Optionally provide a custom class to apply to the underlying `<li>` node\n   */\n  className: PropTypes.string,\n  /**\n   * Specify whether the panel is expanded\n   */\n  expanded: PropTypes.bool,\n  /**\n   * Provide the `href` to the id of the element on your package that could\n   * be target.\n   */\n  href: PropTypes.string,\n  /**\n   * An optional listener that is called a callback to collapse the HeaderPanel\n   */\n  onHeaderPanelFocus: PropTypes.func\n};\nHeaderPanel.displayName = 'HeaderPanel';\nvar HeaderPanel$1 = HeaderPanel;\n\nexport { HeaderPanel$1 as default };\n"],"mappings":";;;;AAAA;AACA;AACA;AACA;AACA;AACA;;AAEA,SAASA,OAAO,IAAIC,QAAQ,QAAQ,6CAA6C;AACjF,OAAOC,cAAc,IAAIC,MAAM,EAAEC,QAAQ,QAAQ,OAAO;AACxD,OAAOC,EAAE,MAAM,YAAY;AAC3B,OAAOC,SAAS,MAAM,YAAY;AAClC,SAASC,SAAS,QAAQ,6BAA6B;AACvD,SAASC,cAAc,QAAQ,4BAA4B;AAC3D,SAASC,aAAa,QAAQ,iCAAiC;AAC/D,SAASC,KAAK,QAAQ,kCAAkC;AACxD,SAASC,MAAM,QAAQ,iCAAiC;AAExD,IAAMC,MAAM,GAAG,SAATA,MAAMA,CAAA,EAAS,CAAC,CAAC;AACvB,IAAMC,WAAW,GAAG,aAAaX,cAAc,CAACY,UAAU,CAAC,SAASD,WAAWA,CAACE,IAAI,EAAEC,GAAG,EAAE;EAAA,IAAAC,GAAA;EACzF,IACEC,QAAQ,GAONH,IAAI,CAPNG,QAAQ;IACGC,eAAe,GAMxBJ,IAAI,CANNK,SAAS;IACTC,QAAQ,GAKNN,IAAI,CALNM,QAAQ;IAAAC,qBAAA,GAKNP,IAAI,CAJNQ,iBAAiB;IAAjBA,iBAAiB,GAAAD,qBAAA,cAAG,IAAI,GAAAA,qBAAA;IAAAE,qBAAA,GAItBT,IAAI,CAHNU,kBAAkB;IAAlBA,kBAAkB,GAAAD,qBAAA,cAAGZ,MAAM,GAAAY,qBAAA;IAC3BE,IAAI,GAEFX,IAAI,CAFNW,IAAI;IACDC,KAAK,GAAAC,wBAAA,CACNb,IAAI,EAAAc,SAAA;EACR,IAAMC,MAAM,GAAGvB,SAAS,CAAC,CAAC;EAC1B,IAAMwB,oBAAoB,GAAG5B,MAAM,CAAC,IAAI,CAAC;EACzC,IAAM6B,cAAc,GAAGvB,aAAa,CAAC,CAACsB,oBAAoB,EAAEf,GAAG,CAAC,CAAC;EACjE,IAAMiB,UAAU,GAAG9B,MAAM,CAACkB,QAAQ,KAAKa,SAAS,CAAC,CAACC,OAAO;EACzD,IAAAC,SAAA,GAA0ChC,QAAQ,CAACiB,QAAQ,CAAC;IAAAgB,UAAA,GAAAC,cAAA,CAAAF,SAAA;IAArDG,aAAa,GAAAF,UAAA;IAAEG,gBAAgB,GAAAH,UAAA;EACtC,IAAMI,YAAY,GAAGR,UAAU,GAAGZ,QAAQ,GAAGkB,aAAa;EAC1D,IAAAG,UAAA,GAAoDtC,QAAQ,CAAC,IAAI,CAAC;IAAAuC,UAAA,GAAAL,cAAA,CAAAI,UAAA;IAA3DE,kBAAkB,GAAAD,UAAA;IAAEE,qBAAqB,GAAAF,UAAA;EAChD,IAAMvB,SAAS,GAAGf,EAAE,IAAAyC,MAAA,CAAIhB,MAAM,sBAAAb,GAAA,OAAA8B,eAAA,CAAA9B,GAAA,KAAA6B,MAAA,CACxBhB,MAAM,+BAA6BW,YAAY,GAAAM,eAAA,CAAA9B,GAAA,EAClDE,eAAe,EAAG,CAAC,CAACA,eAAe,GAAAF,GAAA,CACrC,CAAC;EACF,IAAM+B,aAAa,GAAG,CAAC,CAAC;EACxB,IAAIzB,iBAAiB,EAAE;IACrByB,aAAa,CAACC,MAAM,GAAG,UAAAC,KAAK,EAAI;MAAA,IAAAC,qBAAA;MAC9B,IAAI,CAACD,KAAK,CAACE,aAAa,CAACC,QAAQ,CAACH,KAAK,CAACI,aAAa,CAAC,IAAI,EAACV,kBAAkB,aAAlBA,kBAAkB,gBAAAO,qBAAA,GAAlBP,kBAAkB,CAAEW,SAAS,cAAAJ,qBAAA,eAA7BA,qBAAA,CAA+BE,QAAQ,CAAC,0BAA0B,CAAC,GAAE;QAC9Hb,gBAAgB,CAAC,KAAK,CAAC;QACvBK,qBAAqB,CAAC,IAAI,CAAC;QAC3B,IAAIxB,QAAQ,EAAE;UACZI,kBAAkB,CAAC,CAAC;QACtB;MACF;IACF,CAAC;IACDuB,aAAa,CAACQ,SAAS,GAAG,UAAAN,KAAK,EAAI;MACjC,IAAIxC,KAAK,CAACwC,KAAK,EAAEvC,MAAM,CAAC,EAAE;QACxB6B,gBAAgB,CAAC,KAAK,CAAC;QACvBf,kBAAkB,CAAC,CAAC;QACpB,IAAIC,IAAI,EAAE;UACR+B,MAAM,CAACC,QAAQ,CAAChC,IAAI,GAAGA,IAAI;QAC7B;MACF;IACF,CAAC;EACH;EACAlB,cAAc,CAAC,OAAO,EAAE,YAAM;IAAA,IAAAmD,cAAA,EAAAC,qBAAA;IAC5B,IAAMC,cAAc,GAAGC,QAAQ,CAACC,aAAa;IAC7ClB,qBAAqB,CAACgB,cAAc,CAAC;IACrC,IAAI,EAAAF,cAAA,GAAAzC,QAAQ,CAAC8C,IAAI,cAAAL,cAAA,uBAAbA,cAAA,CAAeM,WAAW,MAAK,UAAU,IAAI,EAACJ,cAAc,aAAdA,cAAc,eAAdA,cAAc,CAAEK,OAAO,KAAApB,MAAA,CAAKhB,MAAM,6BAA0B,CAAC,KAAI,EAAC+B,cAAc,aAAdA,cAAc,eAAdA,cAAc,CAAEK,OAAO,KAAApB,MAAA,CAAKhB,MAAM,qBAAkB,CAAC,KAAI,EAACE,cAAc,aAAdA,cAAc,gBAAA4B,qBAAA,GAAd5B,cAAc,CAAEG,OAAO,cAAAyB,qBAAA,eAAvBA,qBAAA,CAAyBL,SAAS,CAACF,QAAQ,IAAAP,MAAA,CAAIhB,MAAM,eAAY,CAAC,KAAIT,QAAQ,EAAE;MAC5PmB,gBAAgB,CAAC,KAAK,CAAC;MACvBf,kBAAkB,CAAC,CAAC;IACtB;EACF,CAAC,CAAC;EACF,OAAO,aAAavB,cAAc,CAACiE,aAAa,CAAC,KAAK,EAAElE,QAAQ,CAAC,CAAC,CAAC,EAAE0B,KAAK,EAAE;IAC1EP,SAAS,EAAEA,SAAS;IACpBJ,GAAG,EAAEgB;EACP,CAAC,EAAEgB,aAAa,CAAC,EAAE9B,QAAQ,CAAC;AAC9B,CAAC,CAAC;AACFL,WAAW,CAACuD,SAAS,GAAG;EACtB;AACF;AACA;EACE7C,iBAAiB,EAAEjB,SAAS,CAAC+D,IAAI;EACjC;AACF;AACA;EACEnD,QAAQ,EAAEZ,SAAS,CAACgE,IAAI;EACxB;AACF;AACA;EACElD,SAAS,EAAEd,SAAS,CAACiE,MAAM;EAC3B;AACF;AACA;EACElD,QAAQ,EAAEf,SAAS,CAAC+D,IAAI;EACxB;AACF;AACA;AACA;EACE3C,IAAI,EAAEpB,SAAS,CAACiE,MAAM;EACtB;AACF;AACA;EACE9C,kBAAkB,EAAEnB,SAAS,CAACkE;AAChC,CAAC;AACD3D,WAAW,CAACoD,WAAW,GAAG,aAAa;AACvC,IAAIQ,aAAa,GAAG5D,WAAW;AAE/B,SAAS4D,aAAa,IAAIC,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}