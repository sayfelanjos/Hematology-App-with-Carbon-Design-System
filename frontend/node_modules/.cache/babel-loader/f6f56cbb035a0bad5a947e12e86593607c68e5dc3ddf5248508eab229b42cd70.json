{"ast":null,"code":"var _jsxFileName = \"/home/saymon/Backup/Portifolio/Hematology-App-with-Carbon-Design-System/frontend/src/components/login-panel/LoginPanel.jsx\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport styles from \"./LoginPanel.module.scss\";\nimport { Heading, Section, SideNav, Stack, Form } from \"@carbon/react\";\nimport EmailInputField from \"../email-input/EmailInputField\";\nimport PasswordInput from \"../password-input/PasswordInputField\";\nimport { useLoginPanelStore } from \"../../store/useLoginPanelStore\";\nimport { useToken } from \"../../hooks/useToken\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LoginPanel = () => {\n  _s();\n  const [, setToken] = useToken();\n  const navigate = useNavigate();\n  const emailValue = useLoginPanelStore(({\n    emailValue\n  }) => emailValue);\n  const passwordValue = useLoginPanelStore(({\n    passwordValue\n  }) => passwordValue);\n  const isEmailInputInvalid = useLoginPanelStore(({\n    isEmailInputInvalid\n  }) => isEmailInputInvalid);\n  const setIsPasswordFieldValid = useLoginPanelStore(({\n    setIsPasswordFieldValid\n  }) => setIsPasswordFieldValid);\n  const setWasPasswordFieldTouched = useLoginPanelStore(({\n    setWasPasswordFieldTouched\n  }) => setWasPasswordFieldTouched);\n  const handleSubmit = async event => {\n    event.preventDefault();\n    if (passwordValue) {\n      const credentials = {\n        email: emailValue,\n        password: passwordValue\n      };\n      const response = await fetch(`http://${process.env.REACT_APP_API_DOMAIN}:${process.env.REACT_APP_API_PORT}/auth/signin`, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(credentials)\n      });\n      if (!response.ok) {\n        throw \"Response isn't ok!\";\n        // TODO: need to show a feedback on LoginPanel if get an error\n      }\n\n      const {\n        access_token\n      } = await response.json();\n      setToken(access_token);\n      navigate(\"/app\");\n    } else {\n      setIsPasswordFieldValid(false);\n      setWasPasswordFieldTouched(true);\n    }\n    // TODO: need to clean user and password variables after send request\n  };\n\n  return /*#__PURE__*/_jsxDEV(SideNav, {\n    className: styles[\"side-nav\"],\n    isFixedNav: true,\n    expanded: true,\n    isChildOfHeader: true,\n    \"aria-label\": \"Side navigation\",\n    children: /*#__PURE__*/_jsxDEV(Form, {\n      className: styles[\"form-container\"],\n      method: \"post\",\n      onSubmit: handleSubmit,\n      children: /*#__PURE__*/_jsxDEV(Stack, {\n        gap: 4,\n        children: [/*#__PURE__*/_jsxDEV(Section, {\n          level: 3,\n          children: /*#__PURE__*/_jsxDEV(Heading, {\n            className: styles[\"heading-font\"],\n            children: \"Login\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this), isEmailInputInvalid && /*#__PURE__*/_jsxDEV(EmailInputField, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 35\n        }, this), !isEmailInputInvalid && /*#__PURE__*/_jsxDEV(PasswordInput, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 36\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n};\n_s(LoginPanel, \"IuIN2mGEBe08XjoM+N79F4jq+zI=\", false, function () {\n  return [useToken, useNavigate, useLoginPanelStore, useLoginPanelStore, useLoginPanelStore, useLoginPanelStore, useLoginPanelStore];\n});\n_c = LoginPanel;\nexport default LoginPanel;\nvar _c;\n$RefreshReg$(_c, \"LoginPanel\");","map":{"version":3,"names":["React","useNavigate","styles","Heading","Section","SideNav","Stack","Form","EmailInputField","PasswordInput","useLoginPanelStore","useToken","jsxDEV","_jsxDEV","LoginPanel","_s","setToken","navigate","emailValue","passwordValue","isEmailInputInvalid","setIsPasswordFieldValid","setWasPasswordFieldTouched","handleSubmit","event","preventDefault","credentials","email","password","response","fetch","process","env","REACT_APP_API_DOMAIN","REACT_APP_API_PORT","method","headers","body","JSON","stringify","ok","access_token","json","className","isFixedNav","expanded","isChildOfHeader","children","onSubmit","gap","level","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/saymon/Backup/Portifolio/Hematology-App-with-Carbon-Design-System/frontend/src/components/login-panel/LoginPanel.jsx"],"sourcesContent":["import React from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport styles from \"./LoginPanel.module.scss\";\nimport { Heading, Section, SideNav, Stack, Form } from \"@carbon/react\";\nimport EmailInputField from \"../email-input/EmailInputField\";\nimport PasswordInput from \"../password-input/PasswordInputField\";\nimport { useLoginPanelStore } from \"../../store/useLoginPanelStore\";\nimport { useToken } from \"../../hooks/useToken\";\n\nconst LoginPanel = () => {\n  const [, setToken] = useToken();\n  const navigate = useNavigate();\n  const emailValue = useLoginPanelStore(({ emailValue }) => emailValue);\n  const passwordValue = useLoginPanelStore(({ passwordValue }) => passwordValue);\n  const isEmailInputInvalid = useLoginPanelStore(({ isEmailInputInvalid }) => isEmailInputInvalid);\n  const setIsPasswordFieldValid = useLoginPanelStore(\n    ({ setIsPasswordFieldValid }) => setIsPasswordFieldValid,\n  );\n  const setWasPasswordFieldTouched = useLoginPanelStore(\n    ({ setWasPasswordFieldTouched }) => setWasPasswordFieldTouched,\n  );\n\n  const handleSubmit = async (event) => {\n    event.preventDefault();\n    if (passwordValue) {\n      const credentials = {\n        email: emailValue,\n        password: passwordValue,\n      };\n      const response = await fetch(\n        `http://${process.env.REACT_APP_API_DOMAIN}:${process.env.REACT_APP_API_PORT}/auth/signin`,\n        {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json\",\n          },\n          body: JSON.stringify(credentials),\n        },\n      );\n      if (!response.ok) {\n        throw \"Response isn't ok!\";\n        // TODO: need to show a feedback on LoginPanel if get an error\n      }\n      const { access_token } = await response.json();\n      setToken(access_token);\n      navigate(\"/app\");\n    } else {\n      setIsPasswordFieldValid(false);\n      setWasPasswordFieldTouched(true);\n    }\n    // TODO: need to clean user and password variables after send request\n  };\n\n  return (\n    <SideNav\n      className={styles[\"side-nav\"]}\n      isFixedNav\n      expanded={true}\n      isChildOfHeader={true}\n      aria-label=\"Side navigation\">\n      <Form className={styles[\"form-container\"]} method=\"post\" onSubmit={handleSubmit}>\n        <Stack gap={4}>\n          <Section level={3}>\n            <Heading className={styles[\"heading-font\"]}>Login</Heading>\n          </Section>\n          {isEmailInputInvalid && <EmailInputField />}\n          {!isEmailInputInvalid && <PasswordInput />}\n        </Stack>\n      </Form>\n    </SideNav>\n  );\n};\nexport default LoginPanel;\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,OAAOC,MAAM,MAAM,0BAA0B;AAC7C,SAASC,OAAO,EAAEC,OAAO,EAAEC,OAAO,EAAEC,KAAK,EAAEC,IAAI,QAAQ,eAAe;AACtE,OAAOC,eAAe,MAAM,gCAAgC;AAC5D,OAAOC,aAAa,MAAM,sCAAsC;AAChE,SAASC,kBAAkB,QAAQ,gCAAgC;AACnE,SAASC,QAAQ,QAAQ,sBAAsB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEhD,MAAMC,UAAU,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACvB,MAAM,GAAGC,QAAQ,CAAC,GAAGL,QAAQ,CAAC,CAAC;EAC/B,MAAMM,QAAQ,GAAGhB,WAAW,CAAC,CAAC;EAC9B,MAAMiB,UAAU,GAAGR,kBAAkB,CAAC,CAAC;IAAEQ;EAAW,CAAC,KAAKA,UAAU,CAAC;EACrE,MAAMC,aAAa,GAAGT,kBAAkB,CAAC,CAAC;IAAES;EAAc,CAAC,KAAKA,aAAa,CAAC;EAC9E,MAAMC,mBAAmB,GAAGV,kBAAkB,CAAC,CAAC;IAAEU;EAAoB,CAAC,KAAKA,mBAAmB,CAAC;EAChG,MAAMC,uBAAuB,GAAGX,kBAAkB,CAChD,CAAC;IAAEW;EAAwB,CAAC,KAAKA,uBACnC,CAAC;EACD,MAAMC,0BAA0B,GAAGZ,kBAAkB,CACnD,CAAC;IAAEY;EAA2B,CAAC,KAAKA,0BACtC,CAAC;EAED,MAAMC,YAAY,GAAG,MAAOC,KAAK,IAAK;IACpCA,KAAK,CAACC,cAAc,CAAC,CAAC;IACtB,IAAIN,aAAa,EAAE;MACjB,MAAMO,WAAW,GAAG;QAClBC,KAAK,EAAET,UAAU;QACjBU,QAAQ,EAAET;MACZ,CAAC;MACD,MAAMU,QAAQ,GAAG,MAAMC,KAAK,CACzB,UAASC,OAAO,CAACC,GAAG,CAACC,oBAAqB,IAAGF,OAAO,CAACC,GAAG,CAACE,kBAAmB,cAAa,EAC1F;QACEC,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UACP,cAAc,EAAE;QAClB,CAAC;QACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACb,WAAW;MAClC,CACF,CAAC;MACD,IAAI,CAACG,QAAQ,CAACW,EAAE,EAAE;QAChB,MAAM,oBAAoB;QAC1B;MACF;;MACA,MAAM;QAAEC;MAAa,CAAC,GAAG,MAAMZ,QAAQ,CAACa,IAAI,CAAC,CAAC;MAC9C1B,QAAQ,CAACyB,YAAY,CAAC;MACtBxB,QAAQ,CAAC,MAAM,CAAC;IAClB,CAAC,MAAM;MACLI,uBAAuB,CAAC,KAAK,CAAC;MAC9BC,0BAA0B,CAAC,IAAI,CAAC;IAClC;IACA;EACF,CAAC;;EAED,oBACET,OAAA,CAACR,OAAO;IACNsC,SAAS,EAAEzC,MAAM,CAAC,UAAU,CAAE;IAC9B0C,UAAU;IACVC,QAAQ,EAAE,IAAK;IACfC,eAAe,EAAE,IAAK;IACtB,cAAW,iBAAiB;IAAAC,QAAA,eAC5BlC,OAAA,CAACN,IAAI;MAACoC,SAAS,EAAEzC,MAAM,CAAC,gBAAgB,CAAE;MAACiC,MAAM,EAAC,MAAM;MAACa,QAAQ,EAAEzB,YAAa;MAAAwB,QAAA,eAC9ElC,OAAA,CAACP,KAAK;QAAC2C,GAAG,EAAE,CAAE;QAAAF,QAAA,gBACZlC,OAAA,CAACT,OAAO;UAAC8C,KAAK,EAAE,CAAE;UAAAH,QAAA,eAChBlC,OAAA,CAACV,OAAO;YAACwC,SAAS,EAAEzC,MAAM,CAAC,cAAc,CAAE;YAAA6C,QAAA,EAAC;UAAK;YAAAI,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAS;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACpD,CAAC,EACTlC,mBAAmB,iBAAIP,OAAA,CAACL,eAAe;UAAA2C,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,EAC1C,CAAClC,mBAAmB,iBAAIP,OAAA,CAACJ,aAAa;UAAA0C,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACrC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACJ;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACA,CAAC;AAEd,CAAC;AAACvC,EAAA,CA9DID,UAAU;EAAA,QACOH,QAAQ,EACZV,WAAW,EACTS,kBAAkB,EACfA,kBAAkB,EACZA,kBAAkB,EACdA,kBAAkB,EAGfA,kBAAkB;AAAA;AAAA6C,EAAA,GATjDzC,UAAU;AA+DhB,eAAeA,UAAU;AAAC,IAAAyC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}