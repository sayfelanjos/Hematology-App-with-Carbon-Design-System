{"ast":null,"code":"/**\n * Copyright IBM Corp. 2016, 2023\n *\n * This source code is licensed under the Apache-2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { extends as _extends } from '../../_virtual/_rollupPluginBabelHelpers.js';\nimport cx from 'classnames';\nimport PropTypes from 'prop-types';\nimport React__default from 'react';\nimport { AriaLabelPropType } from '../../prop-types/AriaPropTypes.js';\nimport { usePrefix } from '../../internal/usePrefix.js';\nconst Header = _ref => {\n  let {\n    className: customClassName,\n    children,\n    ...rest\n  } = _ref;\n  const prefix = usePrefix();\n  const className = cx(`${prefix}--header`, customClassName);\n  return /*#__PURE__*/React__default.createElement(\"header\", _extends({}, rest, {\n    className: className\n  }), children);\n};\nHeader.propTypes = {\n  /**\n   * Required props for the accessibility label of the header\n   */\n  ...AriaLabelPropType,\n  /**\n   * Optionally provide a custom class name that is applied to the underlying <header>\n   */\n  className: PropTypes.string\n};\nvar Header$1 = Header;\nexport { Header$1 as default };","map":{"version":3,"names":["extends","_extends","cx","PropTypes","React__default","AriaLabelPropType","usePrefix","Header","_ref","className","customClassName","children","rest","prefix","createElement","propTypes","string","Header$1","default"],"sources":["/home/saymon/Backup/Portifolio/Hematology-App-with-Carbon-Design-System/frontend/node_modules/@carbon/react/es/components/UIShell/Header.js"],"sourcesContent":["/**\n * Copyright IBM Corp. 2016, 2023\n *\n * This source code is licensed under the Apache-2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { extends as _extends } from '../../_virtual/_rollupPluginBabelHelpers.js';\nimport cx from 'classnames';\nimport PropTypes from 'prop-types';\nimport React__default from 'react';\nimport { AriaLabelPropType } from '../../prop-types/AriaPropTypes.js';\nimport { usePrefix } from '../../internal/usePrefix.js';\n\nconst Header = _ref => {\n  let {\n    className: customClassName,\n    children,\n    ...rest\n  } = _ref;\n  const prefix = usePrefix();\n  const className = cx(`${prefix}--header`, customClassName);\n  return /*#__PURE__*/React__default.createElement(\"header\", _extends({}, rest, {\n    className: className\n  }), children);\n};\nHeader.propTypes = {\n  /**\n   * Required props for the accessibility label of the header\n   */\n  ...AriaLabelPropType,\n  /**\n   * Optionally provide a custom class name that is applied to the underlying <header>\n   */\n  className: PropTypes.string\n};\nvar Header$1 = Header;\n\nexport { Header$1 as default };\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;;AAEA,SAASA,OAAO,IAAIC,QAAQ,QAAQ,6CAA6C;AACjF,OAAOC,EAAE,MAAM,YAAY;AAC3B,OAAOC,SAAS,MAAM,YAAY;AAClC,OAAOC,cAAc,MAAM,OAAO;AAClC,SAASC,iBAAiB,QAAQ,mCAAmC;AACrE,SAASC,SAAS,QAAQ,6BAA6B;AAEvD,MAAMC,MAAM,GAAGC,IAAI,IAAI;EACrB,IAAI;IACFC,SAAS,EAAEC,eAAe;IAC1BC,QAAQ;IACR,GAAGC;EACL,CAAC,GAAGJ,IAAI;EACR,MAAMK,MAAM,GAAGP,SAAS,CAAC,CAAC;EAC1B,MAAMG,SAAS,GAAGP,EAAE,CAAE,GAAEW,MAAO,UAAS,EAAEH,eAAe,CAAC;EAC1D,OAAO,aAAaN,cAAc,CAACU,aAAa,CAAC,QAAQ,EAAEb,QAAQ,CAAC,CAAC,CAAC,EAAEW,IAAI,EAAE;IAC5EH,SAAS,EAAEA;EACb,CAAC,CAAC,EAAEE,QAAQ,CAAC;AACf,CAAC;AACDJ,MAAM,CAACQ,SAAS,GAAG;EACjB;AACF;AACA;EACE,GAAGV,iBAAiB;EACpB;AACF;AACA;EACEI,SAAS,EAAEN,SAAS,CAACa;AACvB,CAAC;AACD,IAAIC,QAAQ,GAAGV,MAAM;AAErB,SAASU,QAAQ,IAAIC,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}