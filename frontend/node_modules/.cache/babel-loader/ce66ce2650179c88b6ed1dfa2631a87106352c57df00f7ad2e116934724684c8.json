{"ast":null,"code":"/**\n * Copyright IBM Corp. 2016, 2023\n *\n * This source code is licensed under the Apache-2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { extends as _extends } from '../../_virtual/_rollupPluginBabelHelpers.js';\nimport PropTypes from 'prop-types';\nimport React__default from 'react';\nimport cx from 'classnames';\nimport { usePrefix } from '../../internal/usePrefix.js';\nconst FormGroup = _ref => {\n  let {\n    legendId,\n    legendText,\n    invalid,\n    children,\n    className,\n    message,\n    messageText,\n    ...rest\n  } = _ref;\n  const prefix = usePrefix();\n  const classNamesFieldset = cx(`${prefix}--fieldset`, className);\n  return /*#__PURE__*/React__default.createElement(\"fieldset\", _extends({}, invalid && {\n    'data-invalid': ''\n  }, {\n    className: classNamesFieldset\n  }, rest, {\n    \"aria-labelledby\": rest['aria-labelledby'] || legendId\n  }), /*#__PURE__*/React__default.createElement(\"legend\", {\n    className: `${prefix}--label`,\n    id: legendId || rest['aria-labelledby']\n  }, legendText), children, message ? /*#__PURE__*/React__default.createElement(\"div\", {\n    className: `${prefix}--form__requirements`\n  }, messageText) : null);\n};\nFormGroup.propTypes = {\n  /**\n   * Provide the children form elements to be rendered inside of the <fieldset>\n   */\n  children: PropTypes.node,\n  /**\n   * Provide a custom className to be applied to the containing <fieldset> node\n   */\n  className: PropTypes.string,\n  /**\n   * Specify whether the <FormGroup> is invalid\n   */\n  invalid: PropTypes.bool,\n  /**\n   * Provide id for the fieldset <legend> which corresponds to the fieldset\n   * `aria-labelledby`\n   */\n  legendId: PropTypes.node,\n  /**\n   * Provide the text to be rendered inside of the fieldset <legend>\n   */\n  legendText: PropTypes.node.isRequired,\n  /**\n   * Specify whether the message should be displayed in the <FormGroup>\n   */\n  message: PropTypes.bool,\n  /**\n   * Provide the text for the message in the <FormGroup>\n   */\n  messageText: PropTypes.string\n};\nFormGroup.defaultProps = {\n  invalid: false,\n  message: false,\n  messageText: ''\n};\nexport { FormGroup as default };","map":{"version":3,"names":["extends","_extends","PropTypes","React__default","cx","usePrefix","FormGroup","_ref","legendId","legendText","invalid","children","className","message","messageText","rest","prefix","classNamesFieldset","createElement","id","propTypes","node","string","bool","isRequired","defaultProps","default"],"sources":["/home/saymon/Backup/Portifolio/Hematology-App-with-Carbon-Design-System/frontend/node_modules/@carbon/react/es/components/FormGroup/FormGroup.js"],"sourcesContent":["/**\n * Copyright IBM Corp. 2016, 2023\n *\n * This source code is licensed under the Apache-2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { extends as _extends } from '../../_virtual/_rollupPluginBabelHelpers.js';\nimport PropTypes from 'prop-types';\nimport React__default from 'react';\nimport cx from 'classnames';\nimport { usePrefix } from '../../internal/usePrefix.js';\n\nconst FormGroup = _ref => {\n  let {\n    legendId,\n    legendText,\n    invalid,\n    children,\n    className,\n    message,\n    messageText,\n    ...rest\n  } = _ref;\n  const prefix = usePrefix();\n  const classNamesFieldset = cx(`${prefix}--fieldset`, className);\n  return /*#__PURE__*/React__default.createElement(\"fieldset\", _extends({}, invalid && {\n    'data-invalid': ''\n  }, {\n    className: classNamesFieldset\n  }, rest, {\n    \"aria-labelledby\": rest['aria-labelledby'] || legendId\n  }), /*#__PURE__*/React__default.createElement(\"legend\", {\n    className: `${prefix}--label`,\n    id: legendId || rest['aria-labelledby']\n  }, legendText), children, message ? /*#__PURE__*/React__default.createElement(\"div\", {\n    className: `${prefix}--form__requirements`\n  }, messageText) : null);\n};\nFormGroup.propTypes = {\n  /**\n   * Provide the children form elements to be rendered inside of the <fieldset>\n   */\n  children: PropTypes.node,\n  /**\n   * Provide a custom className to be applied to the containing <fieldset> node\n   */\n  className: PropTypes.string,\n  /**\n   * Specify whether the <FormGroup> is invalid\n   */\n  invalid: PropTypes.bool,\n  /**\n   * Provide id for the fieldset <legend> which corresponds to the fieldset\n   * `aria-labelledby`\n   */\n  legendId: PropTypes.node,\n  /**\n   * Provide the text to be rendered inside of the fieldset <legend>\n   */\n  legendText: PropTypes.node.isRequired,\n  /**\n   * Specify whether the message should be displayed in the <FormGroup>\n   */\n  message: PropTypes.bool,\n  /**\n   * Provide the text for the message in the <FormGroup>\n   */\n  messageText: PropTypes.string\n};\nFormGroup.defaultProps = {\n  invalid: false,\n  message: false,\n  messageText: ''\n};\n\nexport { FormGroup as default };\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;;AAEA,SAASA,OAAO,IAAIC,QAAQ,QAAQ,6CAA6C;AACjF,OAAOC,SAAS,MAAM,YAAY;AAClC,OAAOC,cAAc,MAAM,OAAO;AAClC,OAAOC,EAAE,MAAM,YAAY;AAC3B,SAASC,SAAS,QAAQ,6BAA6B;AAEvD,MAAMC,SAAS,GAAGC,IAAI,IAAI;EACxB,IAAI;IACFC,QAAQ;IACRC,UAAU;IACVC,OAAO;IACPC,QAAQ;IACRC,SAAS;IACTC,OAAO;IACPC,WAAW;IACX,GAAGC;EACL,CAAC,GAAGR,IAAI;EACR,MAAMS,MAAM,GAAGX,SAAS,CAAC,CAAC;EAC1B,MAAMY,kBAAkB,GAAGb,EAAE,CAAE,GAAEY,MAAO,YAAW,EAAEJ,SAAS,CAAC;EAC/D,OAAO,aAAaT,cAAc,CAACe,aAAa,CAAC,UAAU,EAAEjB,QAAQ,CAAC,CAAC,CAAC,EAAES,OAAO,IAAI;IACnF,cAAc,EAAE;EAClB,CAAC,EAAE;IACDE,SAAS,EAAEK;EACb,CAAC,EAAEF,IAAI,EAAE;IACP,iBAAiB,EAAEA,IAAI,CAAC,iBAAiB,CAAC,IAAIP;EAChD,CAAC,CAAC,EAAE,aAAaL,cAAc,CAACe,aAAa,CAAC,QAAQ,EAAE;IACtDN,SAAS,EAAG,GAAEI,MAAO,SAAQ;IAC7BG,EAAE,EAAEX,QAAQ,IAAIO,IAAI,CAAC,iBAAiB;EACxC,CAAC,EAAEN,UAAU,CAAC,EAAEE,QAAQ,EAAEE,OAAO,GAAG,aAAaV,cAAc,CAACe,aAAa,CAAC,KAAK,EAAE;IACnFN,SAAS,EAAG,GAAEI,MAAO;EACvB,CAAC,EAAEF,WAAW,CAAC,GAAG,IAAI,CAAC;AACzB,CAAC;AACDR,SAAS,CAACc,SAAS,GAAG;EACpB;AACF;AACA;EACET,QAAQ,EAAET,SAAS,CAACmB,IAAI;EACxB;AACF;AACA;EACET,SAAS,EAAEV,SAAS,CAACoB,MAAM;EAC3B;AACF;AACA;EACEZ,OAAO,EAAER,SAAS,CAACqB,IAAI;EACvB;AACF;AACA;AACA;EACEf,QAAQ,EAAEN,SAAS,CAACmB,IAAI;EACxB;AACF;AACA;EACEZ,UAAU,EAAEP,SAAS,CAACmB,IAAI,CAACG,UAAU;EACrC;AACF;AACA;EACEX,OAAO,EAAEX,SAAS,CAACqB,IAAI;EACvB;AACF;AACA;EACET,WAAW,EAAEZ,SAAS,CAACoB;AACzB,CAAC;AACDhB,SAAS,CAACmB,YAAY,GAAG;EACvBf,OAAO,EAAE,KAAK;EACdG,OAAO,EAAE,KAAK;EACdC,WAAW,EAAE;AACf,CAAC;AAED,SAASR,SAAS,IAAIoB,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}