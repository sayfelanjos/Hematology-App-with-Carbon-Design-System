{"ast":null,"code":"/**\n * Copyright IBM Corp. 2016, 2023\n *\n * This source code is licensed under the Apache-2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { extends as _extends } from '../../_virtual/_rollupPluginBabelHelpers.js';\nimport cx from 'classnames';\nimport PropTypes from 'prop-types';\nimport React__default, { useRef, useEffect } from 'react';\nimport { Popover, PopoverContent } from '../Popover/index.js';\nimport { useDelayedState } from '../../internal/useDelayedState.js';\nimport { useId } from '../../internal/useId.js';\nimport { useNoInteractiveChildren, getInteractiveContent } from '../../internal/useNoInteractiveChildren.js';\nimport { usePrefix } from '../../internal/usePrefix.js';\nimport { match } from '../../internal/keyboard/match.js';\nimport { Escape, Enter, Space } from '../../internal/keyboard/keys.js';\nfunction Tooltip(_ref) {\n  let {\n    align = 'top',\n    className: customClassName,\n    children,\n    label,\n    description,\n    enterDelayMs = 100,\n    leaveDelayMs = 300,\n    defaultOpen = false,\n    closeOnActivation = false,\n    ...rest\n  } = _ref;\n  const containerRef = useRef(null);\n  const tooltipRef = useRef(null);\n  const [open, setOpen] = useDelayedState(defaultOpen);\n  const id = useId('tooltip');\n  const prefix = usePrefix();\n  const child = React__default.Children.only(children);\n  const triggerProps = {\n    onFocus: () => setOpen(true),\n    onBlur: () => setOpen(false),\n    onClick: () => closeOnActivation && setOpen(false),\n    // This should be placed on the trigger in case the element is disabled\n    onMouseEnter\n  };\n  function getChildEventHandlers(childProps) {\n    const eventHandlerFunctions = ['onFocus', 'onBlur', 'onClick', 'onMouseEnter'];\n    const eventHandlers = {};\n    eventHandlerFunctions.forEach(functionName => {\n      eventHandlers[functionName] = evt => {\n        triggerProps[functionName]();\n        if (childProps?.[functionName]) {\n          childProps?.[functionName](evt);\n        }\n      };\n    });\n    return eventHandlers;\n  }\n  if (label) {\n    triggerProps['aria-labelledby'] = id;\n  } else {\n    triggerProps['aria-describedby'] = id;\n  }\n  function onKeyDown(event) {\n    if (open && match(event, Escape)) {\n      event.stopPropagation();\n      setOpen(false);\n    }\n    if (open && closeOnActivation && (match(event, Enter) || match(event, Space))) {\n      setOpen(false);\n    }\n  }\n  function onMouseEnter() {\n    setOpen(true, enterDelayMs);\n  }\n  function onMouseLeave() {\n    setOpen(false, leaveDelayMs);\n  }\n  useNoInteractiveChildren(tooltipRef, 'The Tooltip component must have no interactive content rendered by the' + '`label` or `description` prop');\n  useEffect(() => {\n    if (containerRef !== null && containerRef.current) {\n      const interactiveContent = getInteractiveContent(containerRef.current);\n      if (!interactiveContent) {\n        setOpen(false);\n      }\n    }\n  });\n  return /*#__PURE__*/React__default.createElement(Popover, _extends({}, rest, {\n    align: align,\n    className: cx(`${prefix}--tooltip`, customClassName),\n    dropShadow: false,\n    highContrast: true,\n    onKeyDown: onKeyDown,\n    onMouseLeave: onMouseLeave,\n    open: open,\n    ref: containerRef\n  }), /*#__PURE__*/React__default.createElement(\"div\", {\n    className: `${prefix}--tooltip-trigger__wrapper`\n  }, child !== undefined ? /*#__PURE__*/React__default.cloneElement(child, {\n    ...triggerProps,\n    ...getChildEventHandlers(child.props)\n  }) : null), /*#__PURE__*/React__default.createElement(PopoverContent, {\n    \"aria-hidden\": open ? 'false' : 'true',\n    className: `${prefix}--tooltip-content`,\n    id: id,\n    ref: tooltipRef,\n    role: \"tooltip\"\n  }, label || description));\n}\nTooltip.propTypes = {\n  /**\n   * Specify how the trigger should align with the tooltip\n   */\n  align: PropTypes.oneOf(['top', 'top-left', 'top-right', 'bottom', 'bottom-left', 'bottom-right', 'left', 'left-bottom', 'left-top', 'right', 'right-bottom', 'right-top']),\n  /**\n   * Pass in the child to which the tooltip will be applied\n   */\n  children: PropTypes.node,\n  /**\n   * Specify an optional className to be applied to the container node\n   */\n  className: PropTypes.string,\n  /**\n   * Determines wether the tooltip should close when inner content is activated (click, Enter or Space)\n   */\n  closeOnActivation: PropTypes.bool,\n  /**\n   * Specify whether the tooltip should be open when it first renders\n   */\n  defaultOpen: PropTypes.bool,\n  /**\n   * Provide the description to be rendered inside of the Tooltip. The\n   * description will use `aria-describedby` and will describe the child node\n   * in addition to the text rendered inside of the child. This means that if you\n   * have text in the child node, that it will be announced alongside the\n   * description to the screen reader.\n   *\n   * Note: if label and description are both provided, label will be used and\n   * description will not be used\n   */\n  description: PropTypes.node,\n  /**\n   * Specify the duration in milliseconds to delay before displaying the tooltip\n   */\n  enterDelayMs: PropTypes.number,\n  /**\n   * Provide the label to be rendered inside of the Tooltip. The label will use\n   * `aria-labelledby` and will fully describe the child node that is provided.\n   * This means that if you have text in the child node, that it will not be\n   * announced to the screen reader.\n   *\n   * Note: if label and description are both provided, description will not be\n   * used\n   */\n  label: PropTypes.node,\n  /**\n   * Specify the duration in milliseconds to delay before hiding the tooltip\n   */\n  leaveDelayMs: PropTypes.number\n};\nexport { Tooltip };","map":{"version":3,"names":["extends","_extends","cx","PropTypes","React__default","useRef","useEffect","Popover","PopoverContent","useDelayedState","useId","useNoInteractiveChildren","getInteractiveContent","usePrefix","match","Escape","Enter","Space","Tooltip","_ref","align","className","customClassName","children","label","description","enterDelayMs","leaveDelayMs","defaultOpen","closeOnActivation","rest","containerRef","tooltipRef","open","setOpen","id","prefix","child","Children","only","triggerProps","onFocus","onBlur","onClick","onMouseEnter","getChildEventHandlers","childProps","eventHandlerFunctions","eventHandlers","forEach","functionName","evt","onKeyDown","event","stopPropagation","onMouseLeave","current","interactiveContent","createElement","dropShadow","highContrast","ref","undefined","cloneElement","props","role","propTypes","oneOf","node","string","bool","number"],"sources":["/home/saymon/Backup/Portifolio/Hematology-App-with-Carbon-Design-System/frontend/node_modules/@carbon/react/es/components/Tooltip/Tooltip.js"],"sourcesContent":["/**\n * Copyright IBM Corp. 2016, 2023\n *\n * This source code is licensed under the Apache-2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { extends as _extends } from '../../_virtual/_rollupPluginBabelHelpers.js';\nimport cx from 'classnames';\nimport PropTypes from 'prop-types';\nimport React__default, { useRef, useEffect } from 'react';\nimport { Popover, PopoverContent } from '../Popover/index.js';\nimport { useDelayedState } from '../../internal/useDelayedState.js';\nimport { useId } from '../../internal/useId.js';\nimport { useNoInteractiveChildren, getInteractiveContent } from '../../internal/useNoInteractiveChildren.js';\nimport { usePrefix } from '../../internal/usePrefix.js';\nimport { match } from '../../internal/keyboard/match.js';\nimport { Escape, Enter, Space } from '../../internal/keyboard/keys.js';\n\nfunction Tooltip(_ref) {\n  let {\n    align = 'top',\n    className: customClassName,\n    children,\n    label,\n    description,\n    enterDelayMs = 100,\n    leaveDelayMs = 300,\n    defaultOpen = false,\n    closeOnActivation = false,\n    ...rest\n  } = _ref;\n  const containerRef = useRef(null);\n  const tooltipRef = useRef(null);\n  const [open, setOpen] = useDelayedState(defaultOpen);\n  const id = useId('tooltip');\n  const prefix = usePrefix();\n  const child = React__default.Children.only(children);\n  const triggerProps = {\n    onFocus: () => setOpen(true),\n    onBlur: () => setOpen(false),\n    onClick: () => closeOnActivation && setOpen(false),\n    // This should be placed on the trigger in case the element is disabled\n    onMouseEnter\n  };\n  function getChildEventHandlers(childProps) {\n    const eventHandlerFunctions = ['onFocus', 'onBlur', 'onClick', 'onMouseEnter'];\n    const eventHandlers = {};\n    eventHandlerFunctions.forEach(functionName => {\n      eventHandlers[functionName] = evt => {\n        triggerProps[functionName]();\n        if (childProps?.[functionName]) {\n          childProps?.[functionName](evt);\n        }\n      };\n    });\n    return eventHandlers;\n  }\n  if (label) {\n    triggerProps['aria-labelledby'] = id;\n  } else {\n    triggerProps['aria-describedby'] = id;\n  }\n  function onKeyDown(event) {\n    if (open && match(event, Escape)) {\n      event.stopPropagation();\n      setOpen(false);\n    }\n    if (open && closeOnActivation && (match(event, Enter) || match(event, Space))) {\n      setOpen(false);\n    }\n  }\n  function onMouseEnter() {\n    setOpen(true, enterDelayMs);\n  }\n  function onMouseLeave() {\n    setOpen(false, leaveDelayMs);\n  }\n  useNoInteractiveChildren(tooltipRef, 'The Tooltip component must have no interactive content rendered by the' + '`label` or `description` prop');\n  useEffect(() => {\n    if (containerRef !== null && containerRef.current) {\n      const interactiveContent = getInteractiveContent(containerRef.current);\n      if (!interactiveContent) {\n        setOpen(false);\n      }\n    }\n  });\n  return /*#__PURE__*/React__default.createElement(Popover, _extends({}, rest, {\n    align: align,\n    className: cx(`${prefix}--tooltip`, customClassName),\n    dropShadow: false,\n    highContrast: true,\n    onKeyDown: onKeyDown,\n    onMouseLeave: onMouseLeave,\n    open: open,\n    ref: containerRef\n  }), /*#__PURE__*/React__default.createElement(\"div\", {\n    className: `${prefix}--tooltip-trigger__wrapper`\n  }, child !== undefined ? /*#__PURE__*/React__default.cloneElement(child, {\n    ...triggerProps,\n    ...getChildEventHandlers(child.props)\n  }) : null), /*#__PURE__*/React__default.createElement(PopoverContent, {\n    \"aria-hidden\": open ? 'false' : 'true',\n    className: `${prefix}--tooltip-content`,\n    id: id,\n    ref: tooltipRef,\n    role: \"tooltip\"\n  }, label || description));\n}\nTooltip.propTypes = {\n  /**\n   * Specify how the trigger should align with the tooltip\n   */\n  align: PropTypes.oneOf(['top', 'top-left', 'top-right', 'bottom', 'bottom-left', 'bottom-right', 'left', 'left-bottom', 'left-top', 'right', 'right-bottom', 'right-top']),\n  /**\n   * Pass in the child to which the tooltip will be applied\n   */\n  children: PropTypes.node,\n  /**\n   * Specify an optional className to be applied to the container node\n   */\n  className: PropTypes.string,\n  /**\n   * Determines wether the tooltip should close when inner content is activated (click, Enter or Space)\n   */\n  closeOnActivation: PropTypes.bool,\n  /**\n   * Specify whether the tooltip should be open when it first renders\n   */\n  defaultOpen: PropTypes.bool,\n  /**\n   * Provide the description to be rendered inside of the Tooltip. The\n   * description will use `aria-describedby` and will describe the child node\n   * in addition to the text rendered inside of the child. This means that if you\n   * have text in the child node, that it will be announced alongside the\n   * description to the screen reader.\n   *\n   * Note: if label and description are both provided, label will be used and\n   * description will not be used\n   */\n  description: PropTypes.node,\n  /**\n   * Specify the duration in milliseconds to delay before displaying the tooltip\n   */\n  enterDelayMs: PropTypes.number,\n  /**\n   * Provide the label to be rendered inside of the Tooltip. The label will use\n   * `aria-labelledby` and will fully describe the child node that is provided.\n   * This means that if you have text in the child node, that it will not be\n   * announced to the screen reader.\n   *\n   * Note: if label and description are both provided, description will not be\n   * used\n   */\n  label: PropTypes.node,\n  /**\n   * Specify the duration in milliseconds to delay before hiding the tooltip\n   */\n  leaveDelayMs: PropTypes.number\n};\n\nexport { Tooltip };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}