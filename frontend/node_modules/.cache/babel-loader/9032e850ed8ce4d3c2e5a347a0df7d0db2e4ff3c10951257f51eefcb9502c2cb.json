{"ast":null,"code":"/**\n * Copyright IBM Corp. 2016, 2023\n *\n * This source code is licensed under the Apache-2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { extends as _extends } from '../../_virtual/_rollupPluginBabelHelpers.js';\nimport React__default from 'react';\nimport PropTypes from 'prop-types';\nimport { usePrefix } from '../../internal/usePrefix.js';\n\n/**\n * `ListBoxField` is responsible for creating the containing node for valid\n * elements inside of a field. It also provides a11y-related attributes like\n * `role` to make sure a user can focus the given field.\n */\nfunction ListBoxField(_ref) {\n  let {\n    children,\n    disabled,\n    tabIndex,\n    ...rest\n  } = _ref;\n  const prefix = usePrefix();\n  return /*#__PURE__*/React__default.createElement(\"div\", _extends({\n    className: `${prefix}--list-box__field`,\n    tabIndex: !disabled && tabIndex || -1\n  }, rest), children);\n}\nListBoxField.propTypes = {\n  /**\n   * Typically set by `getToggleButtonProps`, this should specify whether the\n   * field has a popup.\n   */\n  'aria-haspopup': PropTypes.oneOfType([PropTypes.string, PropTypes.bool]),\n  /**\n   * Provide the contents of your ListBoxField\n   */\n  children: PropTypes.node,\n  /**\n   * Specify if the parent <ListBox> is disabled\n   */\n  disabled: PropTypes.bool,\n  /**\n   * The role for the component, should be set by `getToggleButtonProps` coming\n   * from Downshift\n   */\n  role: PropTypes.string,\n  /**\n   * Optional prop to specify the tabIndex of the <ListBox> trigger button\n   */\n  tabIndex: PropTypes.oneOfType([PropTypes.number, PropTypes.string])\n};\nexport { ListBoxField as default };","map":{"version":3,"names":["extends","_extends","React__default","PropTypes","usePrefix","ListBoxField","_ref","children","disabled","tabIndex","rest","prefix","createElement","className","propTypes","oneOfType","string","bool","node","role","number","default"],"sources":["/home/saymon/Backup/Portifolio/Hematology-App-with-Carbon-Design-System/frontend/node_modules/@carbon/react/es/components/ListBox/ListBoxField.js"],"sourcesContent":["/**\n * Copyright IBM Corp. 2016, 2023\n *\n * This source code is licensed under the Apache-2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { extends as _extends } from '../../_virtual/_rollupPluginBabelHelpers.js';\nimport React__default from 'react';\nimport PropTypes from 'prop-types';\nimport { usePrefix } from '../../internal/usePrefix.js';\n\n/**\n * `ListBoxField` is responsible for creating the containing node for valid\n * elements inside of a field. It also provides a11y-related attributes like\n * `role` to make sure a user can focus the given field.\n */\nfunction ListBoxField(_ref) {\n  let {\n    children,\n    disabled,\n    tabIndex,\n    ...rest\n  } = _ref;\n  const prefix = usePrefix();\n  return /*#__PURE__*/React__default.createElement(\"div\", _extends({\n    className: `${prefix}--list-box__field`,\n    tabIndex: !disabled && tabIndex || -1\n  }, rest), children);\n}\nListBoxField.propTypes = {\n  /**\n   * Typically set by `getToggleButtonProps`, this should specify whether the\n   * field has a popup.\n   */\n  'aria-haspopup': PropTypes.oneOfType([PropTypes.string, PropTypes.bool]),\n  /**\n   * Provide the contents of your ListBoxField\n   */\n  children: PropTypes.node,\n  /**\n   * Specify if the parent <ListBox> is disabled\n   */\n  disabled: PropTypes.bool,\n  /**\n   * The role for the component, should be set by `getToggleButtonProps` coming\n   * from Downshift\n   */\n  role: PropTypes.string,\n  /**\n   * Optional prop to specify the tabIndex of the <ListBox> trigger button\n   */\n  tabIndex: PropTypes.oneOfType([PropTypes.number, PropTypes.string])\n};\n\nexport { ListBoxField as default };\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;;AAEA,SAASA,OAAO,IAAIC,QAAQ,QAAQ,6CAA6C;AACjF,OAAOC,cAAc,MAAM,OAAO;AAClC,OAAOC,SAAS,MAAM,YAAY;AAClC,SAASC,SAAS,QAAQ,6BAA6B;;AAEvD;AACA;AACA;AACA;AACA;AACA,SAASC,YAAYA,CAACC,IAAI,EAAE;EAC1B,IAAI;IACFC,QAAQ;IACRC,QAAQ;IACRC,QAAQ;IACR,GAAGC;EACL,CAAC,GAAGJ,IAAI;EACR,MAAMK,MAAM,GAAGP,SAAS,CAAC,CAAC;EAC1B,OAAO,aAAaF,cAAc,CAACU,aAAa,CAAC,KAAK,EAAEX,QAAQ,CAAC;IAC/DY,SAAS,EAAG,GAAEF,MAAO,mBAAkB;IACvCF,QAAQ,EAAE,CAACD,QAAQ,IAAIC,QAAQ,IAAI,CAAC;EACtC,CAAC,EAAEC,IAAI,CAAC,EAAEH,QAAQ,CAAC;AACrB;AACAF,YAAY,CAACS,SAAS,GAAG;EACvB;AACF;AACA;AACA;EACE,eAAe,EAAEX,SAAS,CAACY,SAAS,CAAC,CAACZ,SAAS,CAACa,MAAM,EAAEb,SAAS,CAACc,IAAI,CAAC,CAAC;EACxE;AACF;AACA;EACEV,QAAQ,EAAEJ,SAAS,CAACe,IAAI;EACxB;AACF;AACA;EACEV,QAAQ,EAAEL,SAAS,CAACc,IAAI;EACxB;AACF;AACA;AACA;EACEE,IAAI,EAAEhB,SAAS,CAACa,MAAM;EACtB;AACF;AACA;EACEP,QAAQ,EAAEN,SAAS,CAACY,SAAS,CAAC,CAACZ,SAAS,CAACiB,MAAM,EAAEjB,SAAS,CAACa,MAAM,CAAC;AACpE,CAAC;AAED,SAASX,YAAY,IAAIgB,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}