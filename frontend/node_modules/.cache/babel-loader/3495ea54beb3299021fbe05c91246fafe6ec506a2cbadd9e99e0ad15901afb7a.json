{"ast":null,"code":"/**\n * Copyright IBM Corp. 2016, 2023\n *\n * This source code is licensed under the Apache-2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { extends as _extends } from '../../_virtual/_rollupPluginBabelHelpers.js';\nimport cx from 'classnames';\nimport PropTypes from 'prop-types';\nimport React__default from 'react';\nimport { usePrefix } from '../../internal/usePrefix.js';\nfunction Row(_ref) {\n  let {\n    as: BaseComponent = 'div',\n    condensed = false,\n    narrow = false,\n    className: containerClassName,\n    children,\n    ...rest\n  } = _ref;\n  const prefix = usePrefix();\n  const className = cx(containerClassName, {\n    [`${prefix}--row`]: true,\n    [`${prefix}--row--condensed`]: condensed,\n    [`${prefix}--row--narrow`]: narrow\n  });\n  // TypeScript type validation reports conflicts on different instances of keyof JSX.IntrinsicElements\n  const BaseComponentAsAny = BaseComponent;\n  return /*#__PURE__*/React__default.createElement(BaseComponentAsAny, _extends({\n    className: className\n  }, rest), children);\n}\nRow.propTypes = {\n  /**\n   * Provide a custom element to render instead of the default <div>\n   */\n  as: PropTypes.oneOfType([PropTypes.string, PropTypes.elementType]),\n  /**\n   * Pass in content that will be rendered within the `Row`\n   */\n  children: PropTypes.node,\n  /**\n   * Specify a custom className to be applied to the `Row`\n   */\n  className: PropTypes.string,\n  /**\n   * Specify a single row as condensed.Rows that are adjacent\n   * and are condensed will have 2px of margin between them to match gutter.\n   */\n  condensed: PropTypes.bool,\n  /**\n   * Specify a single row as narrow. The container will hang\n   * 16px into the gutter.\n   */\n  narrow: PropTypes.bool\n};\nexport { Row as default };","map":{"version":3,"names":["extends","_extends","cx","PropTypes","React__default","usePrefix","Row","_ref","as","BaseComponent","condensed","narrow","className","containerClassName","children","rest","prefix","BaseComponentAsAny","createElement","propTypes","oneOfType","string","elementType","node","bool","default"],"sources":["/home/saymon/Backup/Portifolio/Hematology-App-with-Carbon-Design-System/frontend/node_modules/@carbon/react/es/components/Grid/Row.js"],"sourcesContent":["/**\n * Copyright IBM Corp. 2016, 2023\n *\n * This source code is licensed under the Apache-2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { extends as _extends } from '../../_virtual/_rollupPluginBabelHelpers.js';\nimport cx from 'classnames';\nimport PropTypes from 'prop-types';\nimport React__default from 'react';\nimport { usePrefix } from '../../internal/usePrefix.js';\n\nfunction Row(_ref) {\n  let {\n    as: BaseComponent = 'div',\n    condensed = false,\n    narrow = false,\n    className: containerClassName,\n    children,\n    ...rest\n  } = _ref;\n  const prefix = usePrefix();\n  const className = cx(containerClassName, {\n    [`${prefix}--row`]: true,\n    [`${prefix}--row--condensed`]: condensed,\n    [`${prefix}--row--narrow`]: narrow\n  });\n  // TypeScript type validation reports conflicts on different instances of keyof JSX.IntrinsicElements\n  const BaseComponentAsAny = BaseComponent;\n  return /*#__PURE__*/React__default.createElement(BaseComponentAsAny, _extends({\n    className: className\n  }, rest), children);\n}\nRow.propTypes = {\n  /**\n   * Provide a custom element to render instead of the default <div>\n   */\n  as: PropTypes.oneOfType([PropTypes.string, PropTypes.elementType]),\n  /**\n   * Pass in content that will be rendered within the `Row`\n   */\n  children: PropTypes.node,\n  /**\n   * Specify a custom className to be applied to the `Row`\n   */\n  className: PropTypes.string,\n  /**\n   * Specify a single row as condensed.Rows that are adjacent\n   * and are condensed will have 2px of margin between them to match gutter.\n   */\n  condensed: PropTypes.bool,\n  /**\n   * Specify a single row as narrow. The container will hang\n   * 16px into the gutter.\n   */\n  narrow: PropTypes.bool\n};\n\nexport { Row as default };\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;;AAEA,SAASA,OAAO,IAAIC,QAAQ,QAAQ,6CAA6C;AACjF,OAAOC,EAAE,MAAM,YAAY;AAC3B,OAAOC,SAAS,MAAM,YAAY;AAClC,OAAOC,cAAc,MAAM,OAAO;AAClC,SAASC,SAAS,QAAQ,6BAA6B;AAEvD,SAASC,GAAGA,CAACC,IAAI,EAAE;EACjB,IAAI;IACFC,EAAE,EAAEC,aAAa,GAAG,KAAK;IACzBC,SAAS,GAAG,KAAK;IACjBC,MAAM,GAAG,KAAK;IACdC,SAAS,EAAEC,kBAAkB;IAC7BC,QAAQ;IACR,GAAGC;EACL,CAAC,GAAGR,IAAI;EACR,MAAMS,MAAM,GAAGX,SAAS,CAAC,CAAC;EAC1B,MAAMO,SAAS,GAAGV,EAAE,CAACW,kBAAkB,EAAE;IACvC,CAAE,GAAEG,MAAO,OAAM,GAAG,IAAI;IACxB,CAAE,GAAEA,MAAO,kBAAiB,GAAGN,SAAS;IACxC,CAAE,GAAEM,MAAO,eAAc,GAAGL;EAC9B,CAAC,CAAC;EACF;EACA,MAAMM,kBAAkB,GAAGR,aAAa;EACxC,OAAO,aAAaL,cAAc,CAACc,aAAa,CAACD,kBAAkB,EAAEhB,QAAQ,CAAC;IAC5EW,SAAS,EAAEA;EACb,CAAC,EAAEG,IAAI,CAAC,EAAED,QAAQ,CAAC;AACrB;AACAR,GAAG,CAACa,SAAS,GAAG;EACd;AACF;AACA;EACEX,EAAE,EAAEL,SAAS,CAACiB,SAAS,CAAC,CAACjB,SAAS,CAACkB,MAAM,EAAElB,SAAS,CAACmB,WAAW,CAAC,CAAC;EAClE;AACF;AACA;EACER,QAAQ,EAAEX,SAAS,CAACoB,IAAI;EACxB;AACF;AACA;EACEX,SAAS,EAAET,SAAS,CAACkB,MAAM;EAC3B;AACF;AACA;AACA;EACEX,SAAS,EAAEP,SAAS,CAACqB,IAAI;EACzB;AACF;AACA;AACA;EACEb,MAAM,EAAER,SAAS,CAACqB;AACpB,CAAC;AAED,SAASlB,GAAG,IAAImB,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}