{"ast":null,"code":"/**\n * Copyright IBM Corp. 2016, 2023\n *\n * This source code is licensed under the Apache-2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { extends as _extends } from '../../_virtual/_rollupPluginBabelHelpers.js';\nimport cx from 'classnames';\nimport PropTypes from 'prop-types';\nimport React__default, { useRef, useMemo, useState } from 'react';\nimport useIsomorphicEffect from '../../internal/useIsomorphicEffect.js';\nimport { useMergedRefs } from '../../internal/useMergedRefs.js';\nimport { usePrefix } from '../../internal/usePrefix.js';\nimport { useWindowEvent } from '../../internal/useEvent.js';\nconst PopoverContext = /*#__PURE__*/React__default.createContext({\n  floating: {\n    current: null\n  }\n});\nfunction PopoverRenderFunction(_ref, forwardRef) {\n  let {\n    isTabTip,\n    align = isTabTip ? 'bottom-left' : 'bottom',\n    as: BaseComponent = 'span',\n    autoAlign = false,\n    caret = isTabTip ? false : true,\n    className: customClassName,\n    children,\n    dropShadow = true,\n    highContrast = false,\n    onRequestClose,\n    open,\n    ...rest\n  } = _ref;\n  const prefix = usePrefix();\n  const floating = useRef(null);\n  const popover = useRef(null);\n\n  // If the `Popover` is the last focusable item in the tab order, it should also close when the browser window loses focus  (#12922)\n  useWindowEvent('blur', () => {\n    if (open) {\n      onRequestClose?.();\n    }\n  });\n  useWindowEvent('click', event => {\n    if (open && !popover?.current?.contains(event.target)) {\n      onRequestClose?.();\n    }\n  });\n  const value = useMemo(() => {\n    return {\n      floating\n    };\n  }, []);\n  if (isTabTip) {\n    const tabTipAlignments = ['bottom-left', 'bottom-right'];\n    if (!tabTipAlignments.includes(align)) {\n      align = 'bottom-left';\n    }\n  }\n  const ref = useMergedRefs([forwardRef, popover]);\n  const [autoAligned, setAutoAligned] = useState(false);\n  const [autoAlignment, setAutoAlignment] = useState(align);\n  const className = cx({\n    [`${prefix}--popover-container`]: true,\n    [`${prefix}--popover--caret`]: caret,\n    [`${prefix}--popover--drop-shadow`]: dropShadow,\n    [`${prefix}--popover--high-contrast`]: highContrast,\n    [`${prefix}--popover--open`]: open,\n    [`${prefix}--popover--${autoAlignment}`]: autoAligned && !isTabTip,\n    [`${prefix}--popover--${align}`]: !autoAligned,\n    [`${prefix}--popover--tab-tip`]: isTabTip\n  }, customClassName);\n  useIsomorphicEffect(() => {\n    if (!open) {\n      return;\n    }\n    if (!autoAlign || isTabTip) {\n      setAutoAligned(false);\n      return;\n    }\n    if (!floating.current) {\n      return;\n    }\n    if (autoAligned === true) {\n      return;\n    }\n    const rect = floating.current.getBoundingClientRect();\n\n    // The conditions, per side, of when the popover is not visible, excluding the popover's internal padding(16)\n    const conditions = {\n      left: rect.x < -16,\n      top: rect.y < -16,\n      right: rect.x + (rect.width - 16) > document.documentElement.clientWidth,\n      bottom: rect.y + (rect.height - 16) > document.documentElement.clientHeight\n    };\n    if (!conditions.left && !conditions.top && !conditions.right && !conditions.bottom) {\n      setAutoAligned(false);\n      return;\n    }\n    const alignments = ['top', 'top-left', 'right-bottom', 'right', 'right-top', 'bottom-left', 'bottom', 'bottom-right', 'left-top', 'left', 'left-bottom', 'top-right'];\n\n    // Creates the prioritized list of options depending on ideal alignment coming from `align`\n    const options = [align];\n    let option = alignments[(alignments.indexOf(align) + 1) % alignments.length];\n    while (option) {\n      if (options.includes(option)) {\n        break;\n      }\n      options.push(option);\n      option = alignments[(alignments.indexOf(option) + 1) % alignments.length];\n    }\n    function isVisible(alignment) {\n      if (!popover.current || !floating.current) {\n        return false;\n      }\n      popover.current.classList.add(`${prefix}--popover--${alignment}`);\n      const rect = floating.current.getBoundingClientRect();\n\n      // Check if popover is not visible to the left of the screen\n      if (rect.x < -16) {\n        popover.current.classList.remove(`${prefix}--popover--${alignment}`);\n        return false;\n      }\n\n      // Check if popover is not visible at the top of the screen\n      if (rect.y < -16) {\n        popover.current.classList.remove(`${prefix}--popover--${alignment}`);\n        return false;\n      }\n\n      // Check if popover is not visible to right of screen\n      if (rect.x + (rect.width - 16) > document.documentElement.clientWidth) {\n        popover.current.classList.remove(`${prefix}--popover--${alignment}`);\n        return false;\n      }\n\n      // Check if popover is not visible to bottom of screen\n      if (rect.y + (rect.height - 16) > document.documentElement.clientHeight) {\n        popover.current.classList.remove(`${prefix}--popover--${alignment}`);\n        return false;\n      }\n      popover.current.classList.remove(`${prefix}--popover--${alignment}`);\n      return true;\n    }\n    let alignment = null;\n    for (let i = 0; i < options.length; i++) {\n      const option = options[i];\n      if (isVisible(option)) {\n        alignment = option;\n        break;\n      }\n    }\n    if (alignment) {\n      setAutoAligned(true);\n      setAutoAlignment(alignment);\n    }\n  }, [autoAligned, align, autoAlign, prefix, open, isTabTip]);\n  const mappedChildren = React__default.Children.map(children, child => {\n    const item = child;\n    if (item?.type === 'button') {\n      const {\n        className\n      } = item.props;\n      const tabTipClasses = cx(`${prefix}--popover--tab-tip__button`, className);\n      return /*#__PURE__*/React__default.cloneElement(item, {\n        className: tabTipClasses\n      });\n    } else {\n      return item;\n    }\n  });\n  const BaseComponentAsAny = BaseComponent;\n  return /*#__PURE__*/React__default.createElement(PopoverContext.Provider, {\n    value: value\n  }, /*#__PURE__*/React__default.createElement(BaseComponentAsAny, _extends({}, rest, {\n    className: className,\n    ref: ref\n  }), isTabTip ? mappedChildren : children));\n}\nconst Popover = /*#__PURE__*/React__default.forwardRef(PopoverRenderFunction);\n\n// Note: this displayName is temporarily set so that Storybook ArgTable\n// correctly displays the name of this component\nif (process.env.NODE_ENV !== \"production\") {\n  Popover.displayName = 'Popover';\n}\nPopover.propTypes = {\n  /**\n   * Specify how the popover should align with the trigger element\n   */\n  align: PropTypes.oneOf(['top', 'top-left', 'top-right', 'bottom', 'bottom-left', 'bottom-right', 'left', 'left-bottom', 'left-top', 'right', 'right-bottom', 'right-top']),\n  /**\n   * Provide a custom element or component to render the top-level node for the\n   * component.\n   */\n  as: PropTypes.oneOfType([PropTypes.string, PropTypes.elementType]),\n  /**\n   * Will auto-align the popover on first render if it is not visible. This prop is currently experimental and is subject to future changes.\n   */\n  autoAlign: PropTypes.bool,\n  /**\n   * Specify whether a caret should be rendered\n   */\n  caret: PropTypes.bool,\n  /**\n   * Provide elements to be rendered inside of the component\n   */\n  children: PropTypes.node,\n  /**\n   * Provide a custom class name to be added to the outermost node in the\n   * component\n   */\n  className: PropTypes.string,\n  /**\n   * Specify whether a drop shadow should be rendered on the popover\n   */\n  dropShadow: PropTypes.bool,\n  /**\n   * Render the component using the high-contrast variant\n   */\n  highContrast: PropTypes.bool,\n  /**\n   * Render the component using the tab tip variant\n   */\n  isTabTip: PropTypes.bool,\n  /**\n   * Specify a handler for closing popover.\n   * The handler should take care of closing the popover, e.g. changing the `open` prop.\n   */\n  onRequestClose: PropTypes.func,\n  /**\n   * Specify whether the component is currently open or closed\n   */\n  open: PropTypes.bool.isRequired\n};\nfunction PopoverContentRenderFunction(\n// eslint-disable-next-line react/prop-types\n_ref2, forwardRef) {\n  let {\n    className,\n    children,\n    ...rest\n  } = _ref2;\n  const prefix = usePrefix();\n  const {\n    floating\n  } = React__default.useContext(PopoverContext);\n  const ref = useMergedRefs([floating, forwardRef]);\n  return /*#__PURE__*/React__default.createElement(\"span\", _extends({}, rest, {\n    className: `${prefix}--popover`\n  }), /*#__PURE__*/React__default.createElement(\"span\", {\n    className: cx(`${prefix}--popover-content`, className),\n    ref: ref\n  }, children), /*#__PURE__*/React__default.createElement(\"span\", {\n    className: `${prefix}--popover-caret`\n  }));\n}\nconst PopoverContent = /*#__PURE__*/React__default.forwardRef(PopoverContentRenderFunction);\nPopoverContent.propTypes = {\n  /**\n   * Provide elements to be rendered inside of the component\n   */\n  children: PropTypes.node,\n  /**\n   * Provide a custom class name to be added to the outermost node in the\n   * component\n   */\n  className: PropTypes.string\n};\nexport { Popover, PopoverContent };","map":{"version":3,"names":["extends","_extends","cx","PropTypes","React__default","useRef","useMemo","useState","useIsomorphicEffect","useMergedRefs","usePrefix","useWindowEvent","PopoverContext","createContext","floating","current","PopoverRenderFunction","_ref","forwardRef","isTabTip","align","as","BaseComponent","autoAlign","caret","className","customClassName","children","dropShadow","highContrast","onRequestClose","open","rest","prefix","popover","event","contains","target","value","tabTipAlignments","includes","ref","autoAligned","setAutoAligned","autoAlignment","setAutoAlignment","rect","getBoundingClientRect","conditions","left","x","top","y","right","width","document","documentElement","clientWidth","bottom","height","clientHeight","alignments","options","option","indexOf","length","push","isVisible","alignment","classList","add","remove","i","mappedChildren","Children","map","child","item","type","props","tabTipClasses","cloneElement","BaseComponentAsAny","createElement","Provider","Popover","process","env","NODE_ENV","displayName","propTypes","oneOf","oneOfType","string","elementType","bool","node","func","isRequired","PopoverContentRenderFunction","_ref2","useContext","PopoverContent"],"sources":["/home/saymon/Backup/Portifolio/Hematology-App-with-Carbon-Design-System/frontend/node_modules/@carbon/react/es/components/Popover/index.js"],"sourcesContent":["/**\n * Copyright IBM Corp. 2016, 2023\n *\n * This source code is licensed under the Apache-2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { extends as _extends } from '../../_virtual/_rollupPluginBabelHelpers.js';\nimport cx from 'classnames';\nimport PropTypes from 'prop-types';\nimport React__default, { useRef, useMemo, useState } from 'react';\nimport useIsomorphicEffect from '../../internal/useIsomorphicEffect.js';\nimport { useMergedRefs } from '../../internal/useMergedRefs.js';\nimport { usePrefix } from '../../internal/usePrefix.js';\nimport { useWindowEvent } from '../../internal/useEvent.js';\n\nconst PopoverContext = /*#__PURE__*/React__default.createContext({\n  floating: {\n    current: null\n  }\n});\nfunction PopoverRenderFunction(_ref, forwardRef) {\n  let {\n    isTabTip,\n    align = isTabTip ? 'bottom-left' : 'bottom',\n    as: BaseComponent = 'span',\n    autoAlign = false,\n    caret = isTabTip ? false : true,\n    className: customClassName,\n    children,\n    dropShadow = true,\n    highContrast = false,\n    onRequestClose,\n    open,\n    ...rest\n  } = _ref;\n  const prefix = usePrefix();\n  const floating = useRef(null);\n  const popover = useRef(null);\n\n  // If the `Popover` is the last focusable item in the tab order, it should also close when the browser window loses focus  (#12922)\n  useWindowEvent('blur', () => {\n    if (open) {\n      onRequestClose?.();\n    }\n  });\n  useWindowEvent('click', event => {\n    if (open && !popover?.current?.contains(event.target)) {\n      onRequestClose?.();\n    }\n  });\n  const value = useMemo(() => {\n    return {\n      floating\n    };\n  }, []);\n  if (isTabTip) {\n    const tabTipAlignments = ['bottom-left', 'bottom-right'];\n    if (!tabTipAlignments.includes(align)) {\n      align = 'bottom-left';\n    }\n  }\n  const ref = useMergedRefs([forwardRef, popover]);\n  const [autoAligned, setAutoAligned] = useState(false);\n  const [autoAlignment, setAutoAlignment] = useState(align);\n  const className = cx({\n    [`${prefix}--popover-container`]: true,\n    [`${prefix}--popover--caret`]: caret,\n    [`${prefix}--popover--drop-shadow`]: dropShadow,\n    [`${prefix}--popover--high-contrast`]: highContrast,\n    [`${prefix}--popover--open`]: open,\n    [`${prefix}--popover--${autoAlignment}`]: autoAligned && !isTabTip,\n    [`${prefix}--popover--${align}`]: !autoAligned,\n    [`${prefix}--popover--tab-tip`]: isTabTip\n  }, customClassName);\n  useIsomorphicEffect(() => {\n    if (!open) {\n      return;\n    }\n    if (!autoAlign || isTabTip) {\n      setAutoAligned(false);\n      return;\n    }\n    if (!floating.current) {\n      return;\n    }\n    if (autoAligned === true) {\n      return;\n    }\n    const rect = floating.current.getBoundingClientRect();\n\n    // The conditions, per side, of when the popover is not visible, excluding the popover's internal padding(16)\n    const conditions = {\n      left: rect.x < -16,\n      top: rect.y < -16,\n      right: rect.x + (rect.width - 16) > document.documentElement.clientWidth,\n      bottom: rect.y + (rect.height - 16) > document.documentElement.clientHeight\n    };\n    if (!conditions.left && !conditions.top && !conditions.right && !conditions.bottom) {\n      setAutoAligned(false);\n      return;\n    }\n    const alignments = ['top', 'top-left', 'right-bottom', 'right', 'right-top', 'bottom-left', 'bottom', 'bottom-right', 'left-top', 'left', 'left-bottom', 'top-right'];\n\n    // Creates the prioritized list of options depending on ideal alignment coming from `align`\n    const options = [align];\n    let option = alignments[(alignments.indexOf(align) + 1) % alignments.length];\n    while (option) {\n      if (options.includes(option)) {\n        break;\n      }\n      options.push(option);\n      option = alignments[(alignments.indexOf(option) + 1) % alignments.length];\n    }\n    function isVisible(alignment) {\n      if (!popover.current || !floating.current) {\n        return false;\n      }\n      popover.current.classList.add(`${prefix}--popover--${alignment}`);\n      const rect = floating.current.getBoundingClientRect();\n\n      // Check if popover is not visible to the left of the screen\n      if (rect.x < -16) {\n        popover.current.classList.remove(`${prefix}--popover--${alignment}`);\n        return false;\n      }\n\n      // Check if popover is not visible at the top of the screen\n      if (rect.y < -16) {\n        popover.current.classList.remove(`${prefix}--popover--${alignment}`);\n        return false;\n      }\n\n      // Check if popover is not visible to right of screen\n      if (rect.x + (rect.width - 16) > document.documentElement.clientWidth) {\n        popover.current.classList.remove(`${prefix}--popover--${alignment}`);\n        return false;\n      }\n\n      // Check if popover is not visible to bottom of screen\n      if (rect.y + (rect.height - 16) > document.documentElement.clientHeight) {\n        popover.current.classList.remove(`${prefix}--popover--${alignment}`);\n        return false;\n      }\n      popover.current.classList.remove(`${prefix}--popover--${alignment}`);\n      return true;\n    }\n    let alignment = null;\n    for (let i = 0; i < options.length; i++) {\n      const option = options[i];\n      if (isVisible(option)) {\n        alignment = option;\n        break;\n      }\n    }\n    if (alignment) {\n      setAutoAligned(true);\n      setAutoAlignment(alignment);\n    }\n  }, [autoAligned, align, autoAlign, prefix, open, isTabTip]);\n  const mappedChildren = React__default.Children.map(children, child => {\n    const item = child;\n    if (item?.type === 'button') {\n      const {\n        className\n      } = item.props;\n      const tabTipClasses = cx(`${prefix}--popover--tab-tip__button`, className);\n      return /*#__PURE__*/React__default.cloneElement(item, {\n        className: tabTipClasses\n      });\n    } else {\n      return item;\n    }\n  });\n  const BaseComponentAsAny = BaseComponent;\n  return /*#__PURE__*/React__default.createElement(PopoverContext.Provider, {\n    value: value\n  }, /*#__PURE__*/React__default.createElement(BaseComponentAsAny, _extends({}, rest, {\n    className: className,\n    ref: ref\n  }), isTabTip ? mappedChildren : children));\n}\nconst Popover = /*#__PURE__*/React__default.forwardRef(PopoverRenderFunction);\n\n// Note: this displayName is temporarily set so that Storybook ArgTable\n// correctly displays the name of this component\nif (process.env.NODE_ENV !== \"production\") {\n  Popover.displayName = 'Popover';\n}\nPopover.propTypes = {\n  /**\n   * Specify how the popover should align with the trigger element\n   */\n  align: PropTypes.oneOf(['top', 'top-left', 'top-right', 'bottom', 'bottom-left', 'bottom-right', 'left', 'left-bottom', 'left-top', 'right', 'right-bottom', 'right-top']),\n  /**\n   * Provide a custom element or component to render the top-level node for the\n   * component.\n   */\n  as: PropTypes.oneOfType([PropTypes.string, PropTypes.elementType]),\n  /**\n   * Will auto-align the popover on first render if it is not visible. This prop is currently experimental and is subject to future changes.\n   */\n  autoAlign: PropTypes.bool,\n  /**\n   * Specify whether a caret should be rendered\n   */\n  caret: PropTypes.bool,\n  /**\n   * Provide elements to be rendered inside of the component\n   */\n  children: PropTypes.node,\n  /**\n   * Provide a custom class name to be added to the outermost node in the\n   * component\n   */\n  className: PropTypes.string,\n  /**\n   * Specify whether a drop shadow should be rendered on the popover\n   */\n  dropShadow: PropTypes.bool,\n  /**\n   * Render the component using the high-contrast variant\n   */\n  highContrast: PropTypes.bool,\n  /**\n   * Render the component using the tab tip variant\n   */\n  isTabTip: PropTypes.bool,\n  /**\n   * Specify a handler for closing popover.\n   * The handler should take care of closing the popover, e.g. changing the `open` prop.\n   */\n  onRequestClose: PropTypes.func,\n  /**\n   * Specify whether the component is currently open or closed\n   */\n  open: PropTypes.bool.isRequired\n};\nfunction PopoverContentRenderFunction( // eslint-disable-next-line react/prop-types\n_ref2, forwardRef) {\n  let {\n    className,\n    children,\n    ...rest\n  } = _ref2;\n  const prefix = usePrefix();\n  const {\n    floating\n  } = React__default.useContext(PopoverContext);\n  const ref = useMergedRefs([floating, forwardRef]);\n  return /*#__PURE__*/React__default.createElement(\"span\", _extends({}, rest, {\n    className: `${prefix}--popover`\n  }), /*#__PURE__*/React__default.createElement(\"span\", {\n    className: cx(`${prefix}--popover-content`, className),\n    ref: ref\n  }, children), /*#__PURE__*/React__default.createElement(\"span\", {\n    className: `${prefix}--popover-caret`\n  }));\n}\nconst PopoverContent = /*#__PURE__*/React__default.forwardRef(PopoverContentRenderFunction);\nPopoverContent.propTypes = {\n  /**\n   * Provide elements to be rendered inside of the component\n   */\n  children: PropTypes.node,\n  /**\n   * Provide a custom class name to be added to the outermost node in the\n   * component\n   */\n  className: PropTypes.string\n};\n\nexport { Popover, PopoverContent };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}