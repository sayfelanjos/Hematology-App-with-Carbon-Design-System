{"ast":null,"code":"import _objectSpread from \"/home/saymon/Backup/Portifolio/Hematology-App-with-Carbon-Design-System/frontend/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _defineProperty from \"/home/saymon/Backup/Portifolio/Hematology-App-with-Carbon-Design-System/frontend/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nimport _objectWithoutProperties from \"/home/saymon/Backup/Portifolio/Hematology-App-with-Carbon-Design-System/frontend/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js\";\nvar _excluded = [\"aria-label\", \"aria-labelledby\", \"children\", \"className\", \"onClick\", \"isActive\", \"tooltipAlignment\"];\n/**\n * Copyright IBM Corp. 2016, 2023\n *\n * This source code is licensed under the Apache-2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { extends as _extends } from '../../_virtual/_rollupPluginBabelHelpers.js';\nimport cx from 'classnames';\nimport React__default from 'react';\nimport PropTypes from 'prop-types';\nimport { AriaLabelPropType } from '../../prop-types/AriaPropTypes.js';\nimport Button from '../Button/Button.js';\nimport '../Button/Button.Skeleton.js';\nimport { usePrefix } from '../../internal/usePrefix.js';\n\n/**\n * HeaderGlobalAction is used as a part of the `HeaderGlobalBar`. It is\n * essentially an Icon Button with an additional state to indicate whether it is\n * \"active\". The active state comes from when a user clicks on the global action\n * which should trigger a panel to appear.\n *\n * Note: children passed to this component should be an Icon.\n */\nvar HeaderGlobalAction = /*#__PURE__*/React__default.forwardRef(function HeaderGlobalAction(_ref, ref) {\n  var _cx;\n  var ariaLabel = _ref['aria-label'],\n    ariaLabelledBy = _ref['aria-labelledby'],\n    children = _ref.children,\n    customClassName = _ref.className,\n    onClick = _ref.onClick,\n    isActive = _ref.isActive,\n    tooltipAlignment = _ref.tooltipAlignment,\n    rest = _objectWithoutProperties(_ref, _excluded);\n  var prefix = usePrefix();\n  var className = cx((_cx = {}, _defineProperty(_cx, customClassName, !!customClassName), _defineProperty(_cx, \"\".concat(prefix, \"--header__action\"), true), _defineProperty(_cx, \"\".concat(prefix, \"--header__action--active\"), isActive), _cx));\n  var accessibilityLabel = {\n    'aria-label': ariaLabel,\n    'aria-labelledby': ariaLabelledBy\n  };\n  return /*#__PURE__*/React__default.createElement(Button, _extends({}, rest, accessibilityLabel, {\n    className: className,\n    onClick: onClick,\n    type: \"button\",\n    hasIconOnly: true,\n    iconDescription: ariaLabel,\n    tooltipPosition: \"bottom\",\n    tooltipAlignment: tooltipAlignment,\n    ref: ref\n  }), children);\n});\nHeaderGlobalAction.propTypes = _objectSpread(_objectSpread({}, AriaLabelPropType), {}, {\n  /**\n   * Provide a custom icon for this global action\n   */\n  children: PropTypes.node.isRequired,\n  /**\n   * Optionally provide a custom class name that is applied to the underlying\n   * button\n   */\n  className: PropTypes.string,\n  /**\n   * Specify whether the action is currently active\n   */\n  isActive: PropTypes.bool,\n  /**\n   * Optionally provide an onClick handler that is called when the underlying\n   * button fires it's onclick event\n   */\n  onClick: PropTypes.func,\n  /**\n   * Specify the alignment of the tooltip to the icon-only button.\n   * Can be one of: start, center, or end.\n   */\n  tooltipAlignment: PropTypes.oneOf(['start', 'center', 'end'])\n});\nHeaderGlobalAction.displayName = 'HeaderGlobalAction';\nvar HeaderGlobalAction$1 = HeaderGlobalAction;\nexport { HeaderGlobalAction$1 as default };","map":{"version":3,"names":["extends","_extends","cx","React__default","PropTypes","AriaLabelPropType","Button","usePrefix","HeaderGlobalAction","forwardRef","_ref","ref","_cx","ariaLabel","ariaLabelledBy","children","customClassName","className","onClick","isActive","tooltipAlignment","rest","_objectWithoutProperties","_excluded","prefix","_defineProperty","concat","accessibilityLabel","createElement","type","hasIconOnly","iconDescription","tooltipPosition","propTypes","_objectSpread","node","isRequired","string","bool","func","oneOf","displayName","HeaderGlobalAction$1","default"],"sources":["/home/saymon/Backup/Portifolio/Hematology-App-with-Carbon-Design-System/frontend/node_modules/@carbon/react/es/components/UIShell/HeaderGlobalAction.js"],"sourcesContent":["/**\n * Copyright IBM Corp. 2016, 2023\n *\n * This source code is licensed under the Apache-2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { extends as _extends } from '../../_virtual/_rollupPluginBabelHelpers.js';\nimport cx from 'classnames';\nimport React__default from 'react';\nimport PropTypes from 'prop-types';\nimport { AriaLabelPropType } from '../../prop-types/AriaPropTypes.js';\nimport Button from '../Button/Button.js';\nimport '../Button/Button.Skeleton.js';\nimport { usePrefix } from '../../internal/usePrefix.js';\n\n/**\n * HeaderGlobalAction is used as a part of the `HeaderGlobalBar`. It is\n * essentially an Icon Button with an additional state to indicate whether it is\n * \"active\". The active state comes from when a user clicks on the global action\n * which should trigger a panel to appear.\n *\n * Note: children passed to this component should be an Icon.\n */\nconst HeaderGlobalAction = /*#__PURE__*/React__default.forwardRef(function HeaderGlobalAction(_ref, ref) {\n  let {\n    'aria-label': ariaLabel,\n    'aria-labelledby': ariaLabelledBy,\n    children,\n    className: customClassName,\n    onClick,\n    isActive,\n    tooltipAlignment,\n    ...rest\n  } = _ref;\n  const prefix = usePrefix();\n  const className = cx({\n    [customClassName]: !!customClassName,\n    [`${prefix}--header__action`]: true,\n    [`${prefix}--header__action--active`]: isActive\n  });\n  const accessibilityLabel = {\n    'aria-label': ariaLabel,\n    'aria-labelledby': ariaLabelledBy\n  };\n  return /*#__PURE__*/React__default.createElement(Button, _extends({}, rest, accessibilityLabel, {\n    className: className,\n    onClick: onClick,\n    type: \"button\",\n    hasIconOnly: true,\n    iconDescription: ariaLabel,\n    tooltipPosition: \"bottom\",\n    tooltipAlignment: tooltipAlignment,\n    ref: ref\n  }), children);\n});\nHeaderGlobalAction.propTypes = {\n  /**\n   * Required props for the accessibility label of the button\n   */\n  ...AriaLabelPropType,\n  /**\n   * Provide a custom icon for this global action\n   */\n  children: PropTypes.node.isRequired,\n  /**\n   * Optionally provide a custom class name that is applied to the underlying\n   * button\n   */\n  className: PropTypes.string,\n  /**\n   * Specify whether the action is currently active\n   */\n  isActive: PropTypes.bool,\n  /**\n   * Optionally provide an onClick handler that is called when the underlying\n   * button fires it's onclick event\n   */\n  onClick: PropTypes.func,\n  /**\n   * Specify the alignment of the tooltip to the icon-only button.\n   * Can be one of: start, center, or end.\n   */\n  tooltipAlignment: PropTypes.oneOf(['start', 'center', 'end'])\n};\nHeaderGlobalAction.displayName = 'HeaderGlobalAction';\nvar HeaderGlobalAction$1 = HeaderGlobalAction;\n\nexport { HeaderGlobalAction$1 as default };\n"],"mappings":";;;;AAAA;AACA;AACA;AACA;AACA;AACA;;AAEA,SAASA,OAAO,IAAIC,QAAQ,QAAQ,6CAA6C;AACjF,OAAOC,EAAE,MAAM,YAAY;AAC3B,OAAOC,cAAc,MAAM,OAAO;AAClC,OAAOC,SAAS,MAAM,YAAY;AAClC,SAASC,iBAAiB,QAAQ,mCAAmC;AACrE,OAAOC,MAAM,MAAM,qBAAqB;AACxC,OAAO,8BAA8B;AACrC,SAASC,SAAS,QAAQ,6BAA6B;;AAEvD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAMC,kBAAkB,GAAG,aAAaL,cAAc,CAACM,UAAU,CAAC,SAASD,kBAAkBA,CAACE,IAAI,EAAEC,GAAG,EAAE;EAAA,IAAAC,GAAA;EACvG,IACgBC,SAAS,GAQrBH,IAAI,CARN,YAAY;IACOI,cAAc,GAO/BJ,IAAI,CAPN,iBAAiB;IACjBK,QAAQ,GAMNL,IAAI,CANNK,QAAQ;IACGC,eAAe,GAKxBN,IAAI,CALNO,SAAS;IACTC,OAAO,GAILR,IAAI,CAJNQ,OAAO;IACPC,QAAQ,GAGNT,IAAI,CAHNS,QAAQ;IACRC,gBAAgB,GAEdV,IAAI,CAFNU,gBAAgB;IACbC,IAAI,GAAAC,wBAAA,CACLZ,IAAI,EAAAa,SAAA;EACR,IAAMC,MAAM,GAAGjB,SAAS,CAAC,CAAC;EAC1B,IAAMU,SAAS,GAAGf,EAAE,EAAAU,GAAA,OAAAa,eAAA,CAAAb,GAAA,EACjBI,eAAe,EAAG,CAAC,CAACA,eAAe,GAAAS,eAAA,CAAAb,GAAA,KAAAc,MAAA,CAChCF,MAAM,uBAAqB,IAAI,GAAAC,eAAA,CAAAb,GAAA,KAAAc,MAAA,CAC/BF,MAAM,+BAA6BL,QAAQ,GAAAP,GAAA,CAChD,CAAC;EACF,IAAMe,kBAAkB,GAAG;IACzB,YAAY,EAAEd,SAAS;IACvB,iBAAiB,EAAEC;EACrB,CAAC;EACD,OAAO,aAAaX,cAAc,CAACyB,aAAa,CAACtB,MAAM,EAAEL,QAAQ,CAAC,CAAC,CAAC,EAAEoB,IAAI,EAAEM,kBAAkB,EAAE;IAC9FV,SAAS,EAAEA,SAAS;IACpBC,OAAO,EAAEA,OAAO;IAChBW,IAAI,EAAE,QAAQ;IACdC,WAAW,EAAE,IAAI;IACjBC,eAAe,EAAElB,SAAS;IAC1BmB,eAAe,EAAE,QAAQ;IACzBZ,gBAAgB,EAAEA,gBAAgB;IAClCT,GAAG,EAAEA;EACP,CAAC,CAAC,EAAEI,QAAQ,CAAC;AACf,CAAC,CAAC;AACFP,kBAAkB,CAACyB,SAAS,GAAAC,aAAA,CAAAA,aAAA,KAIvB7B,iBAAiB;EACpB;AACF;AACA;EACEU,QAAQ,EAAEX,SAAS,CAAC+B,IAAI,CAACC,UAAU;EACnC;AACF;AACA;AACA;EACEnB,SAAS,EAAEb,SAAS,CAACiC,MAAM;EAC3B;AACF;AACA;EACElB,QAAQ,EAAEf,SAAS,CAACkC,IAAI;EACxB;AACF;AACA;AACA;EACEpB,OAAO,EAAEd,SAAS,CAACmC,IAAI;EACvB;AACF;AACA;AACA;EACEnB,gBAAgB,EAAEhB,SAAS,CAACoC,KAAK,CAAC,CAAC,OAAO,EAAE,QAAQ,EAAE,KAAK,CAAC;AAAC,EAC9D;AACDhC,kBAAkB,CAACiC,WAAW,GAAG,oBAAoB;AACrD,IAAIC,oBAAoB,GAAGlC,kBAAkB;AAE7C,SAASkC,oBAAoB,IAAIC,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}