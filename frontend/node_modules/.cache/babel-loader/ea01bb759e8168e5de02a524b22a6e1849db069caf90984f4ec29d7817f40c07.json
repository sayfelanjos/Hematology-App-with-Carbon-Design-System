{"ast":null,"code":"/**\n * Copyright IBM Corp. 2016, 2023\n *\n * This source code is licensed under the Apache-2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { extends as _extends } from '../../_virtual/_rollupPluginBabelHelpers.js';\nimport React__default, { useState, useRef, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport cx from 'classnames';\nimport { CheckboxCheckedFilled, Checkbox, ChevronDown, ArrowRight, Error } from '@carbon/icons-react';\nimport Link from '../Link/Link.js';\nimport deprecate from '../../prop-types/deprecate.js';\nimport { composeEventHandlers } from '../../tools/events.js';\nimport { usePrefix } from '../../internal/usePrefix.js';\nimport useIsomorphicEffect from '../../internal/useIsomorphicEffect.js';\nimport { getInteractiveContent, getRoleContent } from '../../internal/useNoInteractiveChildren.js';\nimport { useMergedRefs } from '../../internal/useMergedRefs.js';\nimport { useFeatureFlag } from '../FeatureFlags/index.js';\nimport { useId } from '../../internal/useId.js';\nimport { matches } from '../../internal/keyboard/match.js';\nimport { Enter, Space } from '../../internal/keyboard/keys.js';\nvar _CheckboxCheckedFille, _Checkbox, _ChevronDown, _ChevronDown2;\nconst Tile = /*#__PURE__*/React__default.forwardRef(function Tile(_ref, ref) {\n  let {\n    children,\n    className,\n    light = false,\n    ...rest\n  } = _ref;\n  const prefix = usePrefix();\n  const tileClasses = cx(`${prefix}--tile`, light && `${prefix}--tile--light`, className);\n  return /*#__PURE__*/React__default.createElement(\"div\", _extends({\n    className: tileClasses,\n    ref: ref\n  }, rest), children);\n});\nTile.displayName = 'Tile';\nTile.propTypes = {\n  /**\n   * The child nodes.\n   */\n  children: PropTypes.node,\n  /**\n   * The CSS class names.\n   */\n  className: PropTypes.string,\n  /**\n   * `true` to use the light version. For use on $ui-01 backgrounds only.\n   * Don't use this to make tile background color same as container background color.\n   *\n   * @deprecated\n   */\n  light: deprecate(PropTypes.bool, 'The `light` prop for `Tile` is no longer needed and has been deprecated. It will be removed in the next major release. Use the Layer component instead.')\n};\nconst ClickableTile = /*#__PURE__*/React__default.forwardRef(function ClickableTile(_ref2, ref) {\n  let {\n    children,\n    className,\n    clicked = false,\n    disabled,\n    href,\n    light,\n    onClick = () => {},\n    onKeyDown = () => {},\n    renderIcon: Icon,\n    ...rest\n  } = _ref2;\n  const prefix = usePrefix();\n  const classes = cx(`${prefix}--tile`, `${prefix}--tile--clickable`, clicked && `${prefix}--tile--is-clicked`, light && `${prefix}--tile--light`, className);\n  const [isSelected, setIsSelected] = useState(clicked);\n  function handleOnClick(evt) {\n    evt.persist();\n    setIsSelected(!isSelected);\n    onClick(evt);\n  }\n  function handleOnKeyDown(evt) {\n    evt.persist();\n    if (matches(evt, [Enter, Space])) {\n      evt.preventDefault();\n      setIsSelected(!isSelected);\n      onKeyDown(evt);\n    }\n    onKeyDown(evt);\n  }\n  const v12DefaultIcons = useFeatureFlag('enable-v12-tile-default-icons');\n  if (v12DefaultIcons) {\n    if (!Icon) {\n      Icon = ArrowRight;\n    }\n    if (disabled) {\n      Icon = Error;\n    }\n  }\n  const iconClasses = cx({\n    [`${prefix}--tile--icon`]: !v12DefaultIcons || v12DefaultIcons && !disabled,\n    [`${prefix}--tile--disabled-icon`]: v12DefaultIcons && disabled\n  });\n  return /*#__PURE__*/React__default.createElement(Link, _extends({\n    className: classes,\n    href: href,\n    onClick: !disabled ? handleOnClick : undefined,\n    onKeyDown: handleOnKeyDown,\n    ref: ref,\n    disabled: disabled\n  }, rest), children, Icon && /*#__PURE__*/React__default.createElement(Icon, {\n    className: iconClasses,\n    \"aria-hidden\": \"true\"\n  }));\n});\nClickableTile.displayName = 'ClickableTile';\nClickableTile.propTypes = {\n  /**\n   * The child nodes.\n   */\n  children: PropTypes.node,\n  /**\n   * The CSS class names.\n   */\n  className: PropTypes.string,\n  /**\n   * Boolean for whether a tile has been clicked.\n   */\n  clicked: PropTypes.bool,\n  /**\n   * Specify whether the ClickableTile should be disabled\n   */\n  disabled: PropTypes.bool,\n  /**\n   * The href for the link.\n   */\n  href: PropTypes.string,\n  /**\n   * `true` to use the light version. For use on $ui-01 backgrounds only.\n   * Don't use this to make tile background color same as container background color.\n   */\n  light: deprecate(PropTypes.bool, 'The `light` prop for `ClickableTile` is no longer needed and has been deprecated. It will be removed in the next major release. Use the Layer component instead.'),\n  /**\n   * Specify the function to run when the ClickableTile is clicked\n   */\n  onClick: PropTypes.func,\n  /**\n   * Specify the function to run when the ClickableTile is interacted with via a keyboard\n   */\n  onKeyDown: PropTypes.func,\n  /**\n   * The rel property for the link.\n   */\n  rel: PropTypes.string,\n  /**\n   * Optional prop to allow overriding the icon rendering.\n   * Can be a React component class\n   */\n  // @ts-expect-error: Invalid derived prop type, seemingly no real solution.\n  renderIcon: PropTypes.oneOfType([PropTypes.func, PropTypes.object])\n};\nconst SelectableTile = /*#__PURE__*/React__default.forwardRef(function SelectableTile(_ref3, ref) {\n  let {\n    children,\n    className,\n    disabled,\n    id,\n    light,\n    onClick = () => {},\n    onChange = () => {},\n    onKeyDown = () => {},\n    selected = false,\n    tabIndex = 0,\n    title = 'title',\n    ...rest\n  } = _ref3;\n  const prefix = usePrefix();\n  const clickHandler = onClick;\n  const keyDownHandler = onKeyDown;\n  const [isSelected, setIsSelected] = useState(selected);\n  const [prevSelected, setPrevSelected] = useState(selected);\n  const classes = cx(`${prefix}--tile`, `${prefix}--tile--selectable`, isSelected && `${prefix}--tile--is-selected`, light && `${prefix}--tile--light`, disabled && `${prefix}--tile--disabled`, className);\n\n  // TODO: rename to handleClick when handleClick prop is deprecated\n  function handleOnClick(evt) {\n    evt.preventDefault();\n    evt.persist();\n    setIsSelected(!isSelected);\n    clickHandler(evt);\n    onChange(evt);\n  }\n\n  // TODO: rename to handleKeyDown when handleKeyDown prop is deprecated\n  function handleOnKeyDown(evt) {\n    evt.persist();\n    if (matches(evt, [Enter, Space])) {\n      evt.preventDefault();\n      setIsSelected(!isSelected);\n      onChange(evt);\n    }\n    keyDownHandler(evt);\n  }\n  function handleChange(event) {\n    setIsSelected(event.target.checked);\n    onChange(event);\n  }\n  if (selected !== prevSelected) {\n    setIsSelected(selected);\n    setPrevSelected(selected);\n  }\n  return /*#__PURE__*/(\n    // eslint-disable-next-line jsx-a11y/interactive-supports-focus\n    React__default.createElement(\"div\", _extends({\n      className: classes,\n      onClick: !disabled ? handleOnClick : undefined,\n      role: \"checkbox\",\n      \"aria-checked\": isSelected,\n      onKeyDown: !disabled ? handleOnKeyDown : undefined\n      // eslint-disable-next-line jsx-a11y/no-noninteractive-tabindex\n      ,\n\n      tabIndex: !disabled ? tabIndex : undefined,\n      ref: ref,\n      id: id,\n      onChange: !disabled ? handleChange : undefined,\n      title: title\n    }, rest), /*#__PURE__*/React__default.createElement(\"span\", {\n      className: `${prefix}--tile__checkmark ${prefix}--tile__checkmark--persistent`\n    }, isSelected ? _CheckboxCheckedFille || (_CheckboxCheckedFille = /*#__PURE__*/React__default.createElement(CheckboxCheckedFilled, null)) : _Checkbox || (_Checkbox = /*#__PURE__*/React__default.createElement(Checkbox, null))), /*#__PURE__*/React__default.createElement(\"label\", {\n      htmlFor: id,\n      className: `${prefix}--tile-content`\n    }, children))\n  );\n});\nSelectableTile.displayName = 'SelectableTile';\nSelectableTile.propTypes = {\n  children: PropTypes.node,\n  className: PropTypes.string,\n  /**\n   * Specify whether the SelectableTile should be disabled\n   */\n  disabled: PropTypes.bool,\n  /**\n   * The ID of the `<input>`.\n   */\n  id: PropTypes.string,\n  /**\n   * `true` to use the light version. For use on $ui-01 backgrounds only.\n   * Don't use this to make tile background color same as container background color.\n   */\n  light: deprecate(PropTypes.bool, 'The `light` prop for `SelectableTile` is no longer needed and has been deprecated. It will be removed in the next major release. Use the Layer component instead.'),\n  /**\n   * The `name` of the `<input>`.\n   * @deprecated\n   */\n  name: PropTypes.string,\n  /**\n   * The empty handler of the `<input>`.\n   */\n  onChange: PropTypes.func,\n  /**\n   * Specify the function to run when the SelectableTile is clicked\n   */\n  onClick: PropTypes.func,\n  /**\n   * Specify the function to run when the SelectableTile is interacted with via a keyboard\n   */\n  onKeyDown: PropTypes.func,\n  /**\n   * `true` to select this tile.\n   */\n  selected: PropTypes.bool,\n  /**\n   * Specify the tab index of the wrapper element\n   */\n  tabIndex: PropTypes.number,\n  /**\n   * The `title` of the `<input>`.\n   */\n  title: PropTypes.string,\n  /**\n   * The value of the `<input>`.\n   * @deprecated\n   */\n  value: PropTypes.oneOfType([PropTypes.string, PropTypes.number]).isRequired\n};\nconst ExpandableTile = /*#__PURE__*/React__default.forwardRef(function ExpandableTile(_ref4, forwardRef) {\n  let {\n    tabIndex = 0,\n    className,\n    children,\n    expanded = false,\n    tileMaxHeight = 0,\n    // eslint-disable-line\n    tilePadding = 0,\n    // eslint-disable-line\n    onClick,\n    onKeyUp,\n    tileCollapsedIconText = 'Interact to expand Tile',\n    tileExpandedIconText = 'Interact to collapse Tile',\n    tileCollapsedLabel,\n    tileExpandedLabel,\n    light,\n    ...rest\n  } = _ref4;\n  const [isTileMaxHeight, setIsTileMaxHeight] = useState(tileMaxHeight);\n  const [isTilePadding, setIsTilePadding] = useState(tilePadding);\n  const [prevExpanded, setPrevExpanded] = useState(expanded);\n  const [prevTileMaxHeight, setPrevTileMaxHeight] = useState(tileMaxHeight);\n  const [prevTilePadding, setPrevTilePadding] = useState(tilePadding);\n  const [isExpanded, setIsExpanded] = useState(expanded);\n  const [interactive, setInteractive] = useState(true);\n  const aboveTheFold = useRef(null);\n  const belowTheFold = useRef(null);\n  const tileContent = useRef(null);\n  const tile = useRef(null);\n  const ref = useMergedRefs([forwardRef, tile]);\n  const prefix = usePrefix();\n  if (expanded !== prevExpanded) {\n    setIsExpanded(expanded);\n    setPrevExpanded(expanded);\n    setMaxHeight();\n  }\n  if (tileMaxHeight !== prevTileMaxHeight) {\n    setIsTileMaxHeight(tileMaxHeight);\n    setPrevTileMaxHeight(tileMaxHeight);\n  }\n  if (tilePadding !== prevTilePadding) {\n    setIsTilePadding(tilePadding);\n    setPrevTilePadding(tilePadding);\n  }\n  function setMaxHeight() {\n    if (isExpanded && tileContent.current) {\n      setIsTileMaxHeight(tileContent.current.getBoundingClientRect()?.height);\n    }\n    if (aboveTheFold.current) {\n      setIsTileMaxHeight(aboveTheFold.current.getBoundingClientRect().height);\n    }\n  }\n  function handleClick(evt) {\n    evt.persist();\n    setIsExpanded(!isExpanded);\n    setMaxHeight();\n  }\n  function handleKeyUp(evt) {\n    if (evt.target !== tile.current) {\n      if (matches(evt, [Enter, Space])) {\n        evt.preventDefault();\n      }\n    }\n  }\n  function getChildren() {\n    return React__default.Children.toArray(children);\n  }\n  const classNames = cx(`${prefix}--tile`, `${prefix}--tile--expandable`, {\n    [`${prefix}--tile--is-expanded`]: isExpanded,\n    [`${prefix}--tile--light`]: light\n  }, className);\n  const interactiveClassNames = cx(`${prefix}--tile`, `${prefix}--tile--expandable`, `${prefix}--tile--expandable--interactive`, isExpanded && `${prefix}--tile--is-expanded`, light && `${prefix}--tile--light`, className);\n  const chevronInteractiveClassNames = cx(`${prefix}--tile__chevron`, `${prefix}--tile__chevron--interactive`);\n  const childrenAsArray = getChildren();\n  useIsomorphicEffect(() => {\n    if (!tile.current || !aboveTheFold.current) {\n      return;\n    }\n    const getStyle = window.getComputedStyle(tile.current, null);\n    const {\n      current: node\n    } = aboveTheFold;\n    const {\n      height\n    } = node.getBoundingClientRect();\n    const paddingTop = parseInt(getStyle.getPropertyValue('padding-top'), 10);\n    const paddingBottom = parseInt(getStyle.getPropertyValue('padding-bottom'), 10);\n    setIsTileMaxHeight(height);\n    setIsTilePadding(paddingTop + paddingBottom);\n  }, [isTileMaxHeight]);\n  useIsomorphicEffect(() => {\n    if (!aboveTheFold.current || !belowTheFold.current) {\n      return;\n    }\n\n    // Interactive elements or elements that are given a role should be treated\n    // the same because elements with a role can not be rendered inside a `button`\n    if (!getInteractiveContent(belowTheFold.current) && !getRoleContent(belowTheFold.current) && !getInteractiveContent(aboveTheFold.current) && !getRoleContent(aboveTheFold.current)) {\n      setInteractive(false);\n    }\n  }, []);\n  useIsomorphicEffect(() => {\n    if (!tile.current) {\n      return;\n    }\n    if (isExpanded) {\n      tile.current.style.maxHeight = '';\n    } else {\n      tile.current.style.maxHeight = isTileMaxHeight + isTilePadding + 'px';\n    }\n  }, [isExpanded, isTileMaxHeight, isTilePadding]);\n  useEffect(() => {\n    if (!aboveTheFold.current) {\n      return;\n    }\n    const resizeObserver = new ResizeObserver(entries => {\n      const [aboveTheFold] = entries;\n      setIsTileMaxHeight(aboveTheFold.contentRect.height);\n    });\n    resizeObserver.observe(aboveTheFold.current);\n    return () => resizeObserver.disconnect();\n  }, []);\n  const belowTheFoldId = useId('expandable-tile-interactive');\n  return interactive ? /*#__PURE__*/React__default.createElement(\"div\", _extends({\n    // @ts-expect-error: Needlesly strict & deep typing for the element type\n    ref: ref,\n    className: interactiveClassNames\n  }, rest), /*#__PURE__*/React__default.createElement(\"div\", {\n    ref: tileContent\n  }, /*#__PURE__*/React__default.createElement(\"div\", {\n    ref: aboveTheFold,\n    className: `${prefix}--tile-content`\n  }, childrenAsArray[0]), /*#__PURE__*/React__default.createElement(\"button\", {\n    type: \"button\",\n    \"aria-expanded\": isExpanded,\n    \"aria-controls\": belowTheFoldId,\n    onKeyUp: composeEventHandlers([onKeyUp, handleKeyUp]),\n    onClick: composeEventHandlers([onClick, handleClick]),\n    \"aria-label\": isExpanded ? tileExpandedIconText : tileCollapsedIconText,\n    className: chevronInteractiveClassNames\n  }, _ChevronDown || (_ChevronDown = /*#__PURE__*/React__default.createElement(ChevronDown, null))), /*#__PURE__*/React__default.createElement(\"div\", {\n    ref: belowTheFold,\n    className: `${prefix}--tile-content`,\n    id: belowTheFoldId\n  }, childrenAsArray[1]))) : /*#__PURE__*/React__default.createElement(\"button\", _extends({\n    type: \"button\"\n    // @ts-expect-error: Needlesly strict & deep typing for the element type\n    ,\n\n    ref: ref,\n    className: classNames,\n    \"aria-expanded\": isExpanded,\n    title: isExpanded ? tileExpandedIconText : tileCollapsedIconText\n  }, rest, {\n    onKeyUp: composeEventHandlers([onKeyUp, handleKeyUp]),\n    onClick: composeEventHandlers([onClick, handleClick]),\n    tabIndex: tabIndex\n  }), /*#__PURE__*/React__default.createElement(\"div\", {\n    ref: tileContent\n  }, /*#__PURE__*/React__default.createElement(\"div\", {\n    ref: aboveTheFold,\n    className: `${prefix}--tile-content`\n  }, childrenAsArray[0]), /*#__PURE__*/React__default.createElement(\"div\", {\n    className: `${prefix}--tile__chevron`\n  }, /*#__PURE__*/React__default.createElement(\"span\", null, isExpanded ? tileExpandedLabel : tileCollapsedLabel), _ChevronDown2 || (_ChevronDown2 = /*#__PURE__*/React__default.createElement(ChevronDown, null))), /*#__PURE__*/React__default.createElement(\"div\", {\n    ref: belowTheFold,\n    className: `${prefix}--tile-content`\n  }, childrenAsArray[1])));\n});\nExpandableTile.propTypes = {\n  children: PropTypes.node,\n  className: PropTypes.string,\n  /**\n   * `true` if the tile is expanded.\n   */\n  expanded: PropTypes.bool,\n  /**\n   * An ID that can be provided to aria-labelledby\n   */\n  id: PropTypes.string,\n  /**\n   * `true` to use the light version. For use on $ui-01 backgrounds only.\n   * Don't use this to make tile background color same as container background color.\n   */\n  light: deprecate(PropTypes.bool, 'The `light` prop for `ExpandableTile` is no longer needed and has been deprecated. It will be removed in the next major release. Use the Layer component instead.'),\n  /**\n   * Specify the function to run when the ExpandableTile is clicked\n   */\n  onClick: PropTypes.func,\n  /**\n   * optional handler to trigger a function when a key is pressed\n   */\n  onKeyUp: PropTypes.func,\n  /**\n   * The `tabindex` attribute.\n   */\n  tabIndex: PropTypes.number,\n  /**\n   * The description of the \"collapsed\" icon that can be read by screen readers.\n   */\n  tileCollapsedIconText: PropTypes.string,\n  /**\n   * When \"collapsed\", a label to appear next to the chevron (e.g., \"View more\").\n   */\n  tileCollapsedLabel: PropTypes.string,\n  /**\n   * The description of the \"expanded\" icon that can be read by screen readers.\n   */\n  tileExpandedIconText: PropTypes.string,\n  /**\n   * When \"expanded\", a label to appear next to the chevron (e.g., \"View less\").\n   */\n  tileExpandedLabel: PropTypes.string\n};\nExpandableTile.displayName = 'ExpandableTile';\nconst TileAboveTheFoldContent = /*#__PURE__*/React__default.forwardRef(function TilAboveTheFoldContent(_ref5, ref) {\n  let {\n    children\n  } = _ref5;\n  const prefix = usePrefix();\n  return /*#__PURE__*/React__default.createElement(\"span\", {\n    ref: ref,\n    className: `${prefix}--tile-content__above-the-fold`\n  }, children);\n});\nTileAboveTheFoldContent.propTypes = {\n  /**\n   * The child nodes.\n   */\n  children: PropTypes.node\n};\nTileAboveTheFoldContent.displayName = 'TileAboveTheFoldContent';\nconst TileBelowTheFoldContent = /*#__PURE__*/React__default.forwardRef(function TileBelowTheFoldContent(_ref6, ref) {\n  let {\n    children\n  } = _ref6;\n  const prefix = usePrefix();\n  return /*#__PURE__*/React__default.createElement(\"span\", {\n    ref: ref,\n    className: `${prefix}--tile-content__below-the-fold`\n  }, children);\n});\nTileBelowTheFoldContent.propTypes = {\n  /**\n   * The child nodes.\n   */\n  children: PropTypes.node\n};\nTileBelowTheFoldContent.displayName = 'TileBelowTheFoldContent';\nexport { ClickableTile, ExpandableTile, SelectableTile, Tile, TileAboveTheFoldContent, TileBelowTheFoldContent };","map":{"version":3,"names":["extends","_extends","React__default","useState","useRef","useEffect","PropTypes","cx","CheckboxCheckedFilled","Checkbox","ChevronDown","ArrowRight","Error","Link","deprecate","composeEventHandlers","usePrefix","useIsomorphicEffect","getInteractiveContent","getRoleContent","useMergedRefs","useFeatureFlag","useId","matches","Enter","Space","_CheckboxCheckedFille","_Checkbox","_ChevronDown","_ChevronDown2","Tile","forwardRef","_ref","ref","children","className","light","rest","prefix","tileClasses","createElement","displayName","propTypes","node","string","bool","ClickableTile","_ref2","clicked","disabled","href","onClick","onKeyDown","renderIcon","Icon","classes","isSelected","setIsSelected","handleOnClick","evt","persist","handleOnKeyDown","preventDefault","v12DefaultIcons","iconClasses","undefined","func","rel","oneOfType","object","SelectableTile","_ref3","id","onChange","selected","tabIndex","title","clickHandler","keyDownHandler","prevSelected","setPrevSelected","handleChange","event","target","checked","role","htmlFor","name","number","value","isRequired","ExpandableTile","_ref4","expanded","tileMaxHeight","tilePadding","onKeyUp","tileCollapsedIconText","tileExpandedIconText","tileCollapsedLabel","tileExpandedLabel","isTileMaxHeight","setIsTileMaxHeight","isTilePadding","setIsTilePadding","prevExpanded","setPrevExpanded","prevTileMaxHeight","setPrevTileMaxHeight","prevTilePadding","setPrevTilePadding","isExpanded","setIsExpanded","interactive","setInteractive","aboveTheFold","belowTheFold","tileContent","tile","setMaxHeight","current","getBoundingClientRect","height","handleClick","handleKeyUp","getChildren","Children","toArray","classNames","interactiveClassNames","chevronInteractiveClassNames","childrenAsArray","getStyle","window","getComputedStyle","paddingTop","parseInt","getPropertyValue","paddingBottom","style","maxHeight","resizeObserver","ResizeObserver","entries","contentRect","observe","disconnect","belowTheFoldId","type","TileAboveTheFoldContent","TilAboveTheFoldContent","_ref5","TileBelowTheFoldContent","_ref6"],"sources":["/home/saymon/Backup/Portifolio/Hematology-App-with-Carbon-Design-System/frontend/node_modules/@carbon/react/es/components/Tile/Tile.js"],"sourcesContent":["/**\n * Copyright IBM Corp. 2016, 2023\n *\n * This source code is licensed under the Apache-2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { extends as _extends } from '../../_virtual/_rollupPluginBabelHelpers.js';\nimport React__default, { useState, useRef, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport cx from 'classnames';\nimport { CheckboxCheckedFilled, Checkbox, ChevronDown, ArrowRight, Error } from '@carbon/icons-react';\nimport Link from '../Link/Link.js';\nimport deprecate from '../../prop-types/deprecate.js';\nimport { composeEventHandlers } from '../../tools/events.js';\nimport { usePrefix } from '../../internal/usePrefix.js';\nimport useIsomorphicEffect from '../../internal/useIsomorphicEffect.js';\nimport { getInteractiveContent, getRoleContent } from '../../internal/useNoInteractiveChildren.js';\nimport { useMergedRefs } from '../../internal/useMergedRefs.js';\nimport { useFeatureFlag } from '../FeatureFlags/index.js';\nimport { useId } from '../../internal/useId.js';\nimport { matches } from '../../internal/keyboard/match.js';\nimport { Enter, Space } from '../../internal/keyboard/keys.js';\n\nvar _CheckboxCheckedFille, _Checkbox, _ChevronDown, _ChevronDown2;\nconst Tile = /*#__PURE__*/React__default.forwardRef(function Tile(_ref, ref) {\n  let {\n    children,\n    className,\n    light = false,\n    ...rest\n  } = _ref;\n  const prefix = usePrefix();\n  const tileClasses = cx(`${prefix}--tile`, light && `${prefix}--tile--light`, className);\n  return /*#__PURE__*/React__default.createElement(\"div\", _extends({\n    className: tileClasses,\n    ref: ref\n  }, rest), children);\n});\nTile.displayName = 'Tile';\nTile.propTypes = {\n  /**\n   * The child nodes.\n   */\n  children: PropTypes.node,\n  /**\n   * The CSS class names.\n   */\n  className: PropTypes.string,\n  /**\n   * `true` to use the light version. For use on $ui-01 backgrounds only.\n   * Don't use this to make tile background color same as container background color.\n   *\n   * @deprecated\n   */\n  light: deprecate(PropTypes.bool, 'The `light` prop for `Tile` is no longer needed and has been deprecated. It will be removed in the next major release. Use the Layer component instead.')\n};\nconst ClickableTile = /*#__PURE__*/React__default.forwardRef(function ClickableTile(_ref2, ref) {\n  let {\n    children,\n    className,\n    clicked = false,\n    disabled,\n    href,\n    light,\n    onClick = () => {},\n    onKeyDown = () => {},\n    renderIcon: Icon,\n    ...rest\n  } = _ref2;\n  const prefix = usePrefix();\n  const classes = cx(`${prefix}--tile`, `${prefix}--tile--clickable`, clicked && `${prefix}--tile--is-clicked`, light && `${prefix}--tile--light`, className);\n  const [isSelected, setIsSelected] = useState(clicked);\n  function handleOnClick(evt) {\n    evt.persist();\n    setIsSelected(!isSelected);\n    onClick(evt);\n  }\n  function handleOnKeyDown(evt) {\n    evt.persist();\n    if (matches(evt, [Enter, Space])) {\n      evt.preventDefault();\n      setIsSelected(!isSelected);\n      onKeyDown(evt);\n    }\n    onKeyDown(evt);\n  }\n  const v12DefaultIcons = useFeatureFlag('enable-v12-tile-default-icons');\n  if (v12DefaultIcons) {\n    if (!Icon) {\n      Icon = ArrowRight;\n    }\n    if (disabled) {\n      Icon = Error;\n    }\n  }\n  const iconClasses = cx({\n    [`${prefix}--tile--icon`]: !v12DefaultIcons || v12DefaultIcons && !disabled,\n    [`${prefix}--tile--disabled-icon`]: v12DefaultIcons && disabled\n  });\n  return /*#__PURE__*/React__default.createElement(Link, _extends({\n    className: classes,\n    href: href,\n    onClick: !disabled ? handleOnClick : undefined,\n    onKeyDown: handleOnKeyDown,\n    ref: ref,\n    disabled: disabled\n  }, rest), children, Icon && /*#__PURE__*/React__default.createElement(Icon, {\n    className: iconClasses,\n    \"aria-hidden\": \"true\"\n  }));\n});\nClickableTile.displayName = 'ClickableTile';\nClickableTile.propTypes = {\n  /**\n   * The child nodes.\n   */\n  children: PropTypes.node,\n  /**\n   * The CSS class names.\n   */\n  className: PropTypes.string,\n  /**\n   * Boolean for whether a tile has been clicked.\n   */\n  clicked: PropTypes.bool,\n  /**\n   * Specify whether the ClickableTile should be disabled\n   */\n  disabled: PropTypes.bool,\n  /**\n   * The href for the link.\n   */\n  href: PropTypes.string,\n  /**\n   * `true` to use the light version. For use on $ui-01 backgrounds only.\n   * Don't use this to make tile background color same as container background color.\n   */\n  light: deprecate(PropTypes.bool, 'The `light` prop for `ClickableTile` is no longer needed and has been deprecated. It will be removed in the next major release. Use the Layer component instead.'),\n  /**\n   * Specify the function to run when the ClickableTile is clicked\n   */\n  onClick: PropTypes.func,\n  /**\n   * Specify the function to run when the ClickableTile is interacted with via a keyboard\n   */\n  onKeyDown: PropTypes.func,\n  /**\n   * The rel property for the link.\n   */\n  rel: PropTypes.string,\n  /**\n   * Optional prop to allow overriding the icon rendering.\n   * Can be a React component class\n   */\n  // @ts-expect-error: Invalid derived prop type, seemingly no real solution.\n  renderIcon: PropTypes.oneOfType([PropTypes.func, PropTypes.object])\n};\nconst SelectableTile = /*#__PURE__*/React__default.forwardRef(function SelectableTile(_ref3, ref) {\n  let {\n    children,\n    className,\n    disabled,\n    id,\n    light,\n    onClick = () => {},\n    onChange = () => {},\n    onKeyDown = () => {},\n    selected = false,\n    tabIndex = 0,\n    title = 'title',\n    ...rest\n  } = _ref3;\n  const prefix = usePrefix();\n  const clickHandler = onClick;\n  const keyDownHandler = onKeyDown;\n  const [isSelected, setIsSelected] = useState(selected);\n  const [prevSelected, setPrevSelected] = useState(selected);\n  const classes = cx(`${prefix}--tile`, `${prefix}--tile--selectable`, isSelected && `${prefix}--tile--is-selected`, light && `${prefix}--tile--light`, disabled && `${prefix}--tile--disabled`, className);\n\n  // TODO: rename to handleClick when handleClick prop is deprecated\n  function handleOnClick(evt) {\n    evt.preventDefault();\n    evt.persist();\n    setIsSelected(!isSelected);\n    clickHandler(evt);\n    onChange(evt);\n  }\n\n  // TODO: rename to handleKeyDown when handleKeyDown prop is deprecated\n  function handleOnKeyDown(evt) {\n    evt.persist();\n    if (matches(evt, [Enter, Space])) {\n      evt.preventDefault();\n      setIsSelected(!isSelected);\n      onChange(evt);\n    }\n    keyDownHandler(evt);\n  }\n  function handleChange(event) {\n    setIsSelected(event.target.checked);\n    onChange(event);\n  }\n  if (selected !== prevSelected) {\n    setIsSelected(selected);\n    setPrevSelected(selected);\n  }\n  return (\n    /*#__PURE__*/\n    // eslint-disable-next-line jsx-a11y/interactive-supports-focus\n    React__default.createElement(\"div\", _extends({\n      className: classes,\n      onClick: !disabled ? handleOnClick : undefined,\n      role: \"checkbox\",\n      \"aria-checked\": isSelected,\n      onKeyDown: !disabled ? handleOnKeyDown : undefined\n      // eslint-disable-next-line jsx-a11y/no-noninteractive-tabindex\n      ,\n      tabIndex: !disabled ? tabIndex : undefined,\n      ref: ref,\n      id: id,\n      onChange: !disabled ? handleChange : undefined,\n      title: title\n    }, rest), /*#__PURE__*/React__default.createElement(\"span\", {\n      className: `${prefix}--tile__checkmark ${prefix}--tile__checkmark--persistent`\n    }, isSelected ? _CheckboxCheckedFille || (_CheckboxCheckedFille = /*#__PURE__*/React__default.createElement(CheckboxCheckedFilled, null)) : _Checkbox || (_Checkbox = /*#__PURE__*/React__default.createElement(Checkbox, null))), /*#__PURE__*/React__default.createElement(\"label\", {\n      htmlFor: id,\n      className: `${prefix}--tile-content`\n    }, children))\n  );\n});\nSelectableTile.displayName = 'SelectableTile';\nSelectableTile.propTypes = {\n  children: PropTypes.node,\n  className: PropTypes.string,\n  /**\n   * Specify whether the SelectableTile should be disabled\n   */\n  disabled: PropTypes.bool,\n  /**\n   * The ID of the `<input>`.\n   */\n  id: PropTypes.string,\n  /**\n   * `true` to use the light version. For use on $ui-01 backgrounds only.\n   * Don't use this to make tile background color same as container background color.\n   */\n  light: deprecate(PropTypes.bool, 'The `light` prop for `SelectableTile` is no longer needed and has been deprecated. It will be removed in the next major release. Use the Layer component instead.'),\n  /**\n   * The `name` of the `<input>`.\n   * @deprecated\n   */\n  name: PropTypes.string,\n  /**\n   * The empty handler of the `<input>`.\n   */\n  onChange: PropTypes.func,\n  /**\n   * Specify the function to run when the SelectableTile is clicked\n   */\n  onClick: PropTypes.func,\n  /**\n   * Specify the function to run when the SelectableTile is interacted with via a keyboard\n   */\n  onKeyDown: PropTypes.func,\n  /**\n   * `true` to select this tile.\n   */\n  selected: PropTypes.bool,\n  /**\n   * Specify the tab index of the wrapper element\n   */\n  tabIndex: PropTypes.number,\n  /**\n   * The `title` of the `<input>`.\n   */\n  title: PropTypes.string,\n  /**\n   * The value of the `<input>`.\n   * @deprecated\n   */\n  value: PropTypes.oneOfType([PropTypes.string, PropTypes.number]).isRequired\n};\nconst ExpandableTile = /*#__PURE__*/React__default.forwardRef(function ExpandableTile(_ref4, forwardRef) {\n  let {\n    tabIndex = 0,\n    className,\n    children,\n    expanded = false,\n    tileMaxHeight = 0,\n    // eslint-disable-line\n    tilePadding = 0,\n    // eslint-disable-line\n    onClick,\n    onKeyUp,\n    tileCollapsedIconText = 'Interact to expand Tile',\n    tileExpandedIconText = 'Interact to collapse Tile',\n    tileCollapsedLabel,\n    tileExpandedLabel,\n    light,\n    ...rest\n  } = _ref4;\n  const [isTileMaxHeight, setIsTileMaxHeight] = useState(tileMaxHeight);\n  const [isTilePadding, setIsTilePadding] = useState(tilePadding);\n  const [prevExpanded, setPrevExpanded] = useState(expanded);\n  const [prevTileMaxHeight, setPrevTileMaxHeight] = useState(tileMaxHeight);\n  const [prevTilePadding, setPrevTilePadding] = useState(tilePadding);\n  const [isExpanded, setIsExpanded] = useState(expanded);\n  const [interactive, setInteractive] = useState(true);\n  const aboveTheFold = useRef(null);\n  const belowTheFold = useRef(null);\n  const tileContent = useRef(null);\n  const tile = useRef(null);\n  const ref = useMergedRefs([forwardRef, tile]);\n  const prefix = usePrefix();\n  if (expanded !== prevExpanded) {\n    setIsExpanded(expanded);\n    setPrevExpanded(expanded);\n    setMaxHeight();\n  }\n  if (tileMaxHeight !== prevTileMaxHeight) {\n    setIsTileMaxHeight(tileMaxHeight);\n    setPrevTileMaxHeight(tileMaxHeight);\n  }\n  if (tilePadding !== prevTilePadding) {\n    setIsTilePadding(tilePadding);\n    setPrevTilePadding(tilePadding);\n  }\n  function setMaxHeight() {\n    if (isExpanded && tileContent.current) {\n      setIsTileMaxHeight(tileContent.current.getBoundingClientRect()?.height);\n    }\n    if (aboveTheFold.current) {\n      setIsTileMaxHeight(aboveTheFold.current.getBoundingClientRect().height);\n    }\n  }\n  function handleClick(evt) {\n    evt.persist();\n    setIsExpanded(!isExpanded);\n    setMaxHeight();\n  }\n  function handleKeyUp(evt) {\n    if (evt.target !== tile.current) {\n      if (matches(evt, [Enter, Space])) {\n        evt.preventDefault();\n      }\n    }\n  }\n  function getChildren() {\n    return React__default.Children.toArray(children);\n  }\n  const classNames = cx(`${prefix}--tile`, `${prefix}--tile--expandable`, {\n    [`${prefix}--tile--is-expanded`]: isExpanded,\n    [`${prefix}--tile--light`]: light\n  }, className);\n  const interactiveClassNames = cx(`${prefix}--tile`, `${prefix}--tile--expandable`, `${prefix}--tile--expandable--interactive`, isExpanded && `${prefix}--tile--is-expanded`, light && `${prefix}--tile--light`, className);\n  const chevronInteractiveClassNames = cx(`${prefix}--tile__chevron`, `${prefix}--tile__chevron--interactive`);\n  const childrenAsArray = getChildren();\n  useIsomorphicEffect(() => {\n    if (!tile.current || !aboveTheFold.current) {\n      return;\n    }\n    const getStyle = window.getComputedStyle(tile.current, null);\n    const {\n      current: node\n    } = aboveTheFold;\n    const {\n      height\n    } = node.getBoundingClientRect();\n    const paddingTop = parseInt(getStyle.getPropertyValue('padding-top'), 10);\n    const paddingBottom = parseInt(getStyle.getPropertyValue('padding-bottom'), 10);\n    setIsTileMaxHeight(height);\n    setIsTilePadding(paddingTop + paddingBottom);\n  }, [isTileMaxHeight]);\n  useIsomorphicEffect(() => {\n    if (!aboveTheFold.current || !belowTheFold.current) {\n      return;\n    }\n\n    // Interactive elements or elements that are given a role should be treated\n    // the same because elements with a role can not be rendered inside a `button`\n    if (!getInteractiveContent(belowTheFold.current) && !getRoleContent(belowTheFold.current) && !getInteractiveContent(aboveTheFold.current) && !getRoleContent(aboveTheFold.current)) {\n      setInteractive(false);\n    }\n  }, []);\n  useIsomorphicEffect(() => {\n    if (!tile.current) {\n      return;\n    }\n    if (isExpanded) {\n      tile.current.style.maxHeight = '';\n    } else {\n      tile.current.style.maxHeight = isTileMaxHeight + isTilePadding + 'px';\n    }\n  }, [isExpanded, isTileMaxHeight, isTilePadding]);\n  useEffect(() => {\n    if (!aboveTheFold.current) {\n      return;\n    }\n    const resizeObserver = new ResizeObserver(entries => {\n      const [aboveTheFold] = entries;\n      setIsTileMaxHeight(aboveTheFold.contentRect.height);\n    });\n    resizeObserver.observe(aboveTheFold.current);\n    return () => resizeObserver.disconnect();\n  }, []);\n  const belowTheFoldId = useId('expandable-tile-interactive');\n  return interactive ? /*#__PURE__*/React__default.createElement(\"div\", _extends({\n    // @ts-expect-error: Needlesly strict & deep typing for the element type\n    ref: ref,\n    className: interactiveClassNames\n  }, rest), /*#__PURE__*/React__default.createElement(\"div\", {\n    ref: tileContent\n  }, /*#__PURE__*/React__default.createElement(\"div\", {\n    ref: aboveTheFold,\n    className: `${prefix}--tile-content`\n  }, childrenAsArray[0]), /*#__PURE__*/React__default.createElement(\"button\", {\n    type: \"button\",\n    \"aria-expanded\": isExpanded,\n    \"aria-controls\": belowTheFoldId,\n    onKeyUp: composeEventHandlers([onKeyUp, handleKeyUp]),\n    onClick: composeEventHandlers([onClick, handleClick]),\n    \"aria-label\": isExpanded ? tileExpandedIconText : tileCollapsedIconText,\n    className: chevronInteractiveClassNames\n  }, _ChevronDown || (_ChevronDown = /*#__PURE__*/React__default.createElement(ChevronDown, null))), /*#__PURE__*/React__default.createElement(\"div\", {\n    ref: belowTheFold,\n    className: `${prefix}--tile-content`,\n    id: belowTheFoldId\n  }, childrenAsArray[1]))) : /*#__PURE__*/React__default.createElement(\"button\", _extends({\n    type: \"button\"\n    // @ts-expect-error: Needlesly strict & deep typing for the element type\n    ,\n    ref: ref,\n    className: classNames,\n    \"aria-expanded\": isExpanded,\n    title: isExpanded ? tileExpandedIconText : tileCollapsedIconText\n  }, rest, {\n    onKeyUp: composeEventHandlers([onKeyUp, handleKeyUp]),\n    onClick: composeEventHandlers([onClick, handleClick]),\n    tabIndex: tabIndex\n  }), /*#__PURE__*/React__default.createElement(\"div\", {\n    ref: tileContent\n  }, /*#__PURE__*/React__default.createElement(\"div\", {\n    ref: aboveTheFold,\n    className: `${prefix}--tile-content`\n  }, childrenAsArray[0]), /*#__PURE__*/React__default.createElement(\"div\", {\n    className: `${prefix}--tile__chevron`\n  }, /*#__PURE__*/React__default.createElement(\"span\", null, isExpanded ? tileExpandedLabel : tileCollapsedLabel), _ChevronDown2 || (_ChevronDown2 = /*#__PURE__*/React__default.createElement(ChevronDown, null))), /*#__PURE__*/React__default.createElement(\"div\", {\n    ref: belowTheFold,\n    className: `${prefix}--tile-content`\n  }, childrenAsArray[1])));\n});\nExpandableTile.propTypes = {\n  children: PropTypes.node,\n  className: PropTypes.string,\n  /**\n   * `true` if the tile is expanded.\n   */\n  expanded: PropTypes.bool,\n  /**\n   * An ID that can be provided to aria-labelledby\n   */\n  id: PropTypes.string,\n  /**\n   * `true` to use the light version. For use on $ui-01 backgrounds only.\n   * Don't use this to make tile background color same as container background color.\n   */\n  light: deprecate(PropTypes.bool, 'The `light` prop for `ExpandableTile` is no longer needed and has been deprecated. It will be removed in the next major release. Use the Layer component instead.'),\n  /**\n   * Specify the function to run when the ExpandableTile is clicked\n   */\n  onClick: PropTypes.func,\n  /**\n   * optional handler to trigger a function when a key is pressed\n   */\n  onKeyUp: PropTypes.func,\n  /**\n   * The `tabindex` attribute.\n   */\n  tabIndex: PropTypes.number,\n  /**\n   * The description of the \"collapsed\" icon that can be read by screen readers.\n   */\n  tileCollapsedIconText: PropTypes.string,\n  /**\n   * When \"collapsed\", a label to appear next to the chevron (e.g., \"View more\").\n   */\n  tileCollapsedLabel: PropTypes.string,\n  /**\n   * The description of the \"expanded\" icon that can be read by screen readers.\n   */\n  tileExpandedIconText: PropTypes.string,\n  /**\n   * When \"expanded\", a label to appear next to the chevron (e.g., \"View less\").\n   */\n  tileExpandedLabel: PropTypes.string\n};\nExpandableTile.displayName = 'ExpandableTile';\nconst TileAboveTheFoldContent = /*#__PURE__*/React__default.forwardRef(function TilAboveTheFoldContent(_ref5, ref) {\n  let {\n    children\n  } = _ref5;\n  const prefix = usePrefix();\n  return /*#__PURE__*/React__default.createElement(\"span\", {\n    ref: ref,\n    className: `${prefix}--tile-content__above-the-fold`\n  }, children);\n});\nTileAboveTheFoldContent.propTypes = {\n  /**\n   * The child nodes.\n   */\n  children: PropTypes.node\n};\nTileAboveTheFoldContent.displayName = 'TileAboveTheFoldContent';\nconst TileBelowTheFoldContent = /*#__PURE__*/React__default.forwardRef(function TileBelowTheFoldContent(_ref6, ref) {\n  let {\n    children\n  } = _ref6;\n  const prefix = usePrefix();\n  return /*#__PURE__*/React__default.createElement(\"span\", {\n    ref: ref,\n    className: `${prefix}--tile-content__below-the-fold`\n  }, children);\n});\nTileBelowTheFoldContent.propTypes = {\n  /**\n   * The child nodes.\n   */\n  children: PropTypes.node\n};\nTileBelowTheFoldContent.displayName = 'TileBelowTheFoldContent';\n\nexport { ClickableTile, ExpandableTile, SelectableTile, Tile, TileAboveTheFoldContent, TileBelowTheFoldContent };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}