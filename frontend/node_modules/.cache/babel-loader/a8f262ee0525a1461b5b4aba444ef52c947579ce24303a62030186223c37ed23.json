{"ast":null,"code":"/**\n * Copyright IBM Corp. 2016, 2023\n *\n * This source code is licensed under the Apache-2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { extends as _extends } from '../../_virtual/_rollupPluginBabelHelpers.js';\nimport { Settings } from '@carbon/icons-react';\nimport cx from 'classnames';\nimport PropTypes from 'prop-types';\nimport React__default from 'react';\nimport { usePrefix } from '../../internal/usePrefix.js';\nimport OverflowMenu from '../OverflowMenu/index.js';\nconst defaultIconDescription = 'Settings';\nconst TableToolbarMenu = _ref => {\n  let {\n    className,\n    renderIcon,\n    iconDescription = defaultIconDescription,\n    children,\n    ...rest\n  } = _ref;\n  const prefix = usePrefix();\n  const toolbarActionClasses = cx(className, `${prefix}--toolbar-action ${prefix}--overflow-menu`);\n  return /*#__PURE__*/React__default.createElement(OverflowMenu, _extends({\n    \"aria-label\": iconDescription,\n    renderIcon: renderIcon,\n    className: toolbarActionClasses,\n    title: iconDescription,\n    iconDescription: iconDescription,\n    flipped: true\n  }, rest), children);\n};\nTableToolbarMenu.defaultProps = {\n  renderIcon: Settings,\n  iconDescription: defaultIconDescription\n};\nTableToolbarMenu.propTypes = {\n  children: PropTypes.node.isRequired,\n  /**\n   * Provide an optional class name for the toolbar menu\n   */\n  className: PropTypes.string,\n  /**\n   * The description of the menu icon.\n   */\n  iconDescription: PropTypes.string.isRequired,\n  /**\n   * Optional prop to allow overriding the default menu icon\n   */\n  renderIcon: PropTypes.oneOfType([PropTypes.func, PropTypes.object])\n};\nexport { TableToolbarMenu as default };","map":{"version":3,"names":["extends","_extends","Settings","cx","PropTypes","React__default","usePrefix","OverflowMenu","defaultIconDescription","TableToolbarMenu","_ref","className","renderIcon","iconDescription","children","rest","prefix","toolbarActionClasses","createElement","title","flipped","defaultProps","propTypes","node","isRequired","string","oneOfType","func","object","default"],"sources":["/home/saymon/Backup/Portifolio/Hematology-App-with-Carbon-Design-System/frontend/node_modules/@carbon/react/es/components/DataTable/TableToolbarMenu.js"],"sourcesContent":["/**\n * Copyright IBM Corp. 2016, 2023\n *\n * This source code is licensed under the Apache-2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { extends as _extends } from '../../_virtual/_rollupPluginBabelHelpers.js';\nimport { Settings } from '@carbon/icons-react';\nimport cx from 'classnames';\nimport PropTypes from 'prop-types';\nimport React__default from 'react';\nimport { usePrefix } from '../../internal/usePrefix.js';\nimport OverflowMenu from '../OverflowMenu/index.js';\n\nconst defaultIconDescription = 'Settings';\nconst TableToolbarMenu = _ref => {\n  let {\n    className,\n    renderIcon,\n    iconDescription = defaultIconDescription,\n    children,\n    ...rest\n  } = _ref;\n  const prefix = usePrefix();\n  const toolbarActionClasses = cx(className, `${prefix}--toolbar-action ${prefix}--overflow-menu`);\n  return /*#__PURE__*/React__default.createElement(OverflowMenu, _extends({\n    \"aria-label\": iconDescription,\n    renderIcon: renderIcon,\n    className: toolbarActionClasses,\n    title: iconDescription,\n    iconDescription: iconDescription,\n    flipped: true\n  }, rest), children);\n};\nTableToolbarMenu.defaultProps = {\n  renderIcon: Settings,\n  iconDescription: defaultIconDescription\n};\nTableToolbarMenu.propTypes = {\n  children: PropTypes.node.isRequired,\n  /**\n   * Provide an optional class name for the toolbar menu\n   */\n  className: PropTypes.string,\n  /**\n   * The description of the menu icon.\n   */\n  iconDescription: PropTypes.string.isRequired,\n  /**\n   * Optional prop to allow overriding the default menu icon\n   */\n  renderIcon: PropTypes.oneOfType([PropTypes.func, PropTypes.object])\n};\n\nexport { TableToolbarMenu as default };\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;;AAEA,SAASA,OAAO,IAAIC,QAAQ,QAAQ,6CAA6C;AACjF,SAASC,QAAQ,QAAQ,qBAAqB;AAC9C,OAAOC,EAAE,MAAM,YAAY;AAC3B,OAAOC,SAAS,MAAM,YAAY;AAClC,OAAOC,cAAc,MAAM,OAAO;AAClC,SAASC,SAAS,QAAQ,6BAA6B;AACvD,OAAOC,YAAY,MAAM,0BAA0B;AAEnD,MAAMC,sBAAsB,GAAG,UAAU;AACzC,MAAMC,gBAAgB,GAAGC,IAAI,IAAI;EAC/B,IAAI;IACFC,SAAS;IACTC,UAAU;IACVC,eAAe,GAAGL,sBAAsB;IACxCM,QAAQ;IACR,GAAGC;EACL,CAAC,GAAGL,IAAI;EACR,MAAMM,MAAM,GAAGV,SAAS,CAAC,CAAC;EAC1B,MAAMW,oBAAoB,GAAGd,EAAE,CAACQ,SAAS,EAAG,GAAEK,MAAO,oBAAmBA,MAAO,iBAAgB,CAAC;EAChG,OAAO,aAAaX,cAAc,CAACa,aAAa,CAACX,YAAY,EAAEN,QAAQ,CAAC;IACtE,YAAY,EAAEY,eAAe;IAC7BD,UAAU,EAAEA,UAAU;IACtBD,SAAS,EAAEM,oBAAoB;IAC/BE,KAAK,EAAEN,eAAe;IACtBA,eAAe,EAAEA,eAAe;IAChCO,OAAO,EAAE;EACX,CAAC,EAAEL,IAAI,CAAC,EAAED,QAAQ,CAAC;AACrB,CAAC;AACDL,gBAAgB,CAACY,YAAY,GAAG;EAC9BT,UAAU,EAAEV,QAAQ;EACpBW,eAAe,EAAEL;AACnB,CAAC;AACDC,gBAAgB,CAACa,SAAS,GAAG;EAC3BR,QAAQ,EAAEV,SAAS,CAACmB,IAAI,CAACC,UAAU;EACnC;AACF;AACA;EACEb,SAAS,EAAEP,SAAS,CAACqB,MAAM;EAC3B;AACF;AACA;EACEZ,eAAe,EAAET,SAAS,CAACqB,MAAM,CAACD,UAAU;EAC5C;AACF;AACA;EACEZ,UAAU,EAAER,SAAS,CAACsB,SAAS,CAAC,CAACtB,SAAS,CAACuB,IAAI,EAAEvB,SAAS,CAACwB,MAAM,CAAC;AACpE,CAAC;AAED,SAASnB,gBAAgB,IAAIoB,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}